var __extends = this && this.__extends || function() {
    var extendStatics = Object.setPrototypeOf || {
        __proto__: []
    } instanceof Array && function(d, b) {
        d.__proto__ = b;
    } || function(d, b) {
        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    };
    return function(d, b) {
        extendStatics(d, b);
        function __() {
            this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
}();

(function() {
    function r(e, n, t) {
        function o(i, f) {
            if (!n[i]) {
                if (!e[i]) {
                    var c = "function" == typeof require && require;
                    if (!f && c) return c(i, !0);
                    if (u) return u(i, !0);
                    var a = new Error("Cannot find module '" + i + "'");
                    throw a.code = "MODULE_NOT_FOUND", a;
                }
                var p = n[i] = {
                    exports: {}
                };
                e[i][0].call(p.exports, function(r) {
                    var n = e[i][1][r];
                    return o(n || r);
                }, p, p.exports, r, e, n, t);
            }
            return n[i].exports;
        }
        for (var u = "function" == typeof require && require, i = 0; i < t.length; i++) o(t[i]);
        return o;
    }
    return r;
})()({
    1: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var ButtonAni_1 = require("./script/ButtonAni");
        var GameConfig = function() {
            function GameConfig() {}
            GameConfig.init = function() {
                var reg = Laya.ClassUtils.regClass;
                reg("script/ButtonAni.ts", ButtonAni_1.default);
            };
            GameConfig.width = 1630;
            GameConfig.height = 750;
            GameConfig.scaleMode = "fixedheight";
            GameConfig.screenMode = "none";
            GameConfig.alignV = "top";
            GameConfig.alignH = "left";
            GameConfig.startScene = "login/LoadingSceneBtnsDialog.scene";
            GameConfig.sceneRoot = "";
            GameConfig.debug = false;
            GameConfig.stat = true;
            GameConfig.physicsDebug = true;
            GameConfig.exportSceneToJson = true;
            return GameConfig;
        }();
        exports.default = GameConfig;
        GameConfig.init();
    }, {
        "./script/ButtonAni": 137
    } ],
    2: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalVar_1 = require("./globalConst/GlobalVar");
        var ConfigerHelper_1 = require("./globalConst/ConfigerHelper");
        var GlobalFunc_1 = require("./globalConst/GlobalFunc");
        var MainFunc_1 = require("./login/MainFunc");
        var EventDis_1 = require("./globalConst/EventDis");
        var WxFuncs_1 = require("./globalConst/WxFuncs");
        var globalConst_1 = require("./globalConst/globalConst");
        var GameData_1 = require("./datas/hallData/GameData");
        var SceneM_1 = require("./common/SceneM");
        var PlayerData_1 = require("./datas/hallData/PlayerData");
        var GlobalUI_1 = require("./globalConst/GlobalUI");
        var BattleData_1 = require("./datas/roomData/BattleData");
        var WxLoginManager_1 = require("./netWork/WxLoginManager");
        var NoticeDlg_1 = require("./common/NoticeDlg");
        var NetManager_1 = require("./netWork/NetManager");
        var WaitManager_1 = require("./common/WaitManager");
        var PcMain_1 = require("./PcMain");
        var GameConfig_1 = require("./GameConfig");
        var Main = function() {
            function Main() {
                this.totalDownLoadTime = 0;
                GlobalFunc_1.default.log("进入laya");
                GlobalFunc_1.default.sendAld("test11");
                GlobalVar_1.default.isWx = typeof wx != "undefined" ? true : false;
                Laya.init(1630, 750, Laya["WebGL"]);
                Laya.stage.scaleMode = "fixedheight";
                Laya.stage.screenMode = "none";
                Laya.URL.exportSceneToJson = true;
                Laya.alertGlobalError = true;
                Laya.stage.alignH = Laya.Stage.ALIGN_CENTER;
                Laya.stage.alignV = Laya.Stage.ALIGN_MIDDLE;
                GameConfig_1.default.init();
                if (GlobalVar_1.default.isWx) {
                    this.wxLogic();
                    Laya.loader.load(MainFunc_1.default.getLoadPath0(), new Laya.Handler(this, this.checkLogin));
                } else PcMain_1.default.pcLogic();
            }
            Main.prototype.wxLogic = function() {
                GlobalVar_1.default.isWxMode = wx.env.USER_DATA_PATH.indexOf("http") >= 0;
                var path = wx.env.USER_DATA_PATH;
                GlobalVar_1.default.fswx = wx.getFileSystemManager();
                GlobalVar_1.default.reUrl = path + "/cache/res/";
                GlobalVar_1.default.localZipPaths = [];
                GlobalVar_1.default.localZipPaths[1] = GlobalVar_1.default.reUrl + globalConst_1.default.zipName + "_" + globalConst_1.default.clientVer + "_1.zip";
                GlobalVar_1.default.localZipPaths[2] = GlobalVar_1.default.reUrl + globalConst_1.default.zipName + "_" + globalConst_1.default.clientVer + "_2.zip";
                GlobalVar_1.default.unZipPath = path + "/cache/res/";
                GlobalVar_1.default.localPre = path + "/cache/";
                GlobalVar_1.default.zip1Path = path + "/cache/res/atlas1";
                GlobalVar_1.default.zip2Path = path + "/cache/res/atlas2";
                GlobalVar_1.default.updateOver = true;
                GlobalVar_1.default.zip1Ok = false;
                GlobalVar_1.default.zip2Ok = false;
                WxLoginManager_1.default.init();
                SceneM_1.default.init();
                ConfigerHelper_1.default.init();
                NetManager_1.default.init();
                WaitManager_1.default.init();
            };
            Main.prototype.checkLogin = function() {
                var _this = this;
                PlayerData_1.default.init();
                BattleData_1.default.init();
                GlobalFunc_1.default.sendAld("test12");
                GlobalFunc_1.default.sendAld("_1 白屏结束，加载完成");
                setTimeout(function() {
                    GlobalFunc_1.default.getStageBounds();
                    GlobalFunc_1.default.log("加载等待层wxloadingScene");
                    GlobalUI_1.default.WxLoadingScene = SceneM_1.default.replaceScene("WxLoadingScene");
                    _this.initBase();
                    setTimeout(function() {
                        _this.setDefaultValues();
                    }, 1500);
                }, 100);
            };
            Main.prototype.initBase = function() {
                GlobalFunc_1.default.getPhoneBrand();
                var time = Laya.Browser.now();
                wx.getNetworkType({
                    success: function(res) {
                        var networkType = res.networkType;
                        GameData_1.default.userDotType = GlobalVar_1.default.phoneBrand + "_" + time + "_" + networkType;
                    },
                    fail: function(res) {
                        GameData_1.default.userDotType = GlobalVar_1.default.phoneBrand + "_" + time + "_" + "fail";
                    }
                });
                wx.onShow(function(res) {
                    GlobalFunc_1.default.log("发送wx.onshow事件");
                    GameData_1.default.isWxOnshow = true;
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.WX_ONSHOW, res);
                });
                wx.onHide(function(res) {
                    GlobalFunc_1.default.log("发送wx.onhide事件");
                    GameData_1.default.isWxOnshow = false;
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.WX_ONHIDE, res);
                });
                Laya.loader.load([ {
                    url: GlobalVar_1.default.reUrl + "versionJudge.json",
                    type: Laya.Loader.JSON
                } ], new Laya.Handler(this, function() {
                    var json = GlobalFunc_1.default.layaGetRes("versionJudge.json");
                    if (json) GlobalVar_1.default.bagVersion = json.versionZip;
                }));
                var qaVer = globalConst_1.default.mainEntryUrForm + GlobalFunc_1.default.getRandom(0, 1e4);
                Laya.loader.load(qaVer, new Laya.Handler(this, function() {
                    var json = Laya.Loader.getRes(qaVer);
                    GlobalVar_1.default.isQA = false;
                    if (json) GlobalVar_1.default.entryJson = json;
                }), null, Laya.Loader.JSON);
                NoticeDlg_1.default.initNotice();
            };
            Main.prototype.setDefaultValues = function() {
                var _this = this;
                GlobalFunc_1.default.log("开始登陆流程g_WxLoginManager");
                GlobalFunc_1.default.remoteLog("2 入口配置下载完成");
                MainFunc_1.default.setDefault();
                WxLoginManager_1.default.begin();
                EventDis_1.default.addEvntListener("reEnterGame", this, this.reEnterGame);
                EventDis_1.default.addEvntListener("downOneFileOver", this, MainFunc_1.default.downResConfigOver);
                EventDis_1.default.addEvntListener("downOneZipOk", this, this.downOneZipOk);
                EventDis_1.default.addEvntListener("unZipOneOk", this, this.unZipFiles);
                GlobalVar_1.default.enterState = this.checkZipDown();
                this.totalDownLoadTime = 0;
                GlobalFunc_1.default.remoteLog("3 资源包检查完成");
                GlobalVar_1.default.isNewUserWx = GlobalVar_1.default.enterState == 1;
                if (GlobalVar_1.default.enterState == 1) {
                    GlobalFunc_1.default.log("下载zip1");
                    GlobalVar_1.default.zip1Ok = false;
                    GlobalVar_1.default.zip2Ok = false;
                    Laya.timer.loop(1e3, this, this.downTimeOutCheck);
                    GlobalVar_1.default.zipNum = 1;
                    GlobalVar_1.default.zipStatus = [];
                    Laya.timer.loop(1e3, this, this.checkZipStatus);
                    MainFunc_1.default.clearDownloads();
                    EventDis_1.default.dispatchEvent("switchSteps", [ 4 ]);
                    GlobalVar_1.default.isNewZipUser = true;
                    GlobalFunc_1.default.remoteLog("3.1 包1启动下载");
                    GlobalFunc_1.default.sendAldNewuser("_2.1 包1启动下载");
                    GlobalVar_1.default.lastZip1 = GlobalFunc_1.default.getClientTime();
                    setTimeout(function() {
                        for (var i = 1; i <= GlobalVar_1.default.zipNum; i++) _this.startBigUpdate(i);
                    }, 1e3);
                } else if (GlobalVar_1.default.enterState == 2) {
                    GlobalFunc_1.default.log("下载zip2");
                    GlobalVar_1.default.zip1Ok = true;
                    GlobalVar_1.default.zip2Ok = false;
                    GlobalFunc_1.default.remoteLog("3.2 包2启动下载");
                    this.startZip2();
                    this.beginLoadGame(1);
                } else if (GlobalVar_1.default.enterState == 3) {
                    GlobalVar_1.default.zip2Ok = true;
                    GlobalVar_1.default.zip1Ok = true;
                    GlobalFunc_1.default.remoteLog("3.3 不需要下载直接加载资源");
                    this.beginLoadGame(2);
                }
            };
            Main.prototype.beginLoadGame = function(index) {
                var _this = this;
                GlobalFunc_1.default.log("加载资源包： ", index);
                GlobalFunc_1.default.remoteLog("4 包下载或加载完成");
                if (index == 1) {
                    GlobalFunc_1.default.log("包1下载结束");
                    Laya.loader.load(MainFunc_1.default.getLoadPath1(), new Laya.Handler(this, this.loadGameOver, [ 1 ]));
                } else if (index == 2) Laya.loader.load(MainFunc_1.default.getLoadPath1(), new Laya.Handler(this, function() {
                    Laya.loader.load(MainFunc_1.default.getLoadPath2(), new Laya.Handler(_this, _this.loadGameOver, [ 2 ]));
                }));
            };
            Main.prototype.loadGameOver = function(index) {
                EventDis_1.default.dispatchEvent("switchSteps", [ 2 ]);
                Laya.timer.clear(this, this.downTimeOutCheck);
                GlobalFunc_1.default.log("资源加载完成....", index);
                GameData_1.default.resLoadStep = 1;
                if (GlobalVar_1.default.zip2Ok) Laya.loader.load(MainFunc_1.default.getLoadPath2(), Laya.Handler.create(this, function() {
                    GameData_1.default.resLoadStep = 2;
                }));
                MainFunc_1.default.initGlobalStaticInstance();
                MainFunc_1.default.initGlobalEvents();
                MainFunc_1.default.loadText();
            };
            Main.prototype.checkZipDown = function() {
                GlobalFunc_1.default.log("---------------------------检查zip下载情况");
                if (WxFuncs_1.default.isDirExistSyn(GlobalVar_1.default.zip1Path)) {
                    var versionCode = globalConst_1.default.clientVer;
                    GlobalFunc_1.default.log("代码：资源", versionCode, GlobalVar_1.default.bagVersion);
                    if (GlobalVar_1.default.bagVersion != versionCode) {
                        GlobalFunc_1.default.log("代码和资源不匹配，下载资源包");
                        return 1;
                    } else if (WxFuncs_1.default.isDirExistSyn(GlobalVar_1.default.zip2Path)) {
                        GlobalFunc_1.default.log("资源和代码版本匹配，zip1存在,zip2存在，直接进入游戏");
                        return 3;
                    } else {
                        GlobalFunc_1.default.log("资源和代码版本匹配，zip1存在，zip2不存在,下载zip2");
                        return 2;
                    }
                } else {
                    GlobalFunc_1.default.log("zip1不存在，创建目录开始下载zip1");
                    WxFuncs_1.default.mkdirSync(wx.env.USER_DATA_PATH + "/cache");
                    WxFuncs_1.default.mkdirSync(wx.env.USER_DATA_PATH + "/cache/res");
                    return 1;
                }
            };
            Main.prototype.downOneZipOk = function(param) {
                var _this = this;
                var index = param.index;
                var isSuc = param.isSuc;
                if (isSuc) GlobalVar_1.default.zipStatus[index] = true; else setTimeout(function() {
                    _this.startBigUpdate(index);
                }, 5e3);
            };
            Main.prototype.reEnterGame = function() {
                Laya.timer.clearAll(this);
                if (GlobalVar_1.default.isWx) ;
            };
            Main.prototype.startBigUpdate = function(index) {
                this.totalDownLoadTime++;
                GlobalFunc_1.default.log("重新下载", index, "第几次下载:", this.totalDownLoadTime);
                if (this.totalDownLoadTime > 10) {
                    GlobalFunc_1.default.remoteLog("下载over");
                    EventDis_1.default.dispatchEvent("reEnterGame");
                    return;
                }
                if (GlobalVar_1.default.zipStatus[index]) return;
                GlobalFunc_1.default.log("包下载", index);
                WxFuncs_1.default.downFile(index);
            };
            Main.prototype.startZip2 = function() {
                var _this = this;
                GlobalFunc_1.default.log("已经有zip1了，直接加载游戏进新手房，zip2后台下载");
                this.totalDownLoadTime = 0;
                Laya.timer.loop(500, this, this.downTimeOutCheck);
                GlobalVar_1.default.zipNum = 2;
                GlobalVar_1.default.zipStatus = [];
                GlobalVar_1.default.zipStatus[1] = true;
                Laya.timer.loop(500, this, this.checkZipStatus);
                setTimeout(function() {
                    for (var i = 1; i <= GlobalVar_1.default.zipNum; i++) _this.startBigUpdate(i);
                }, 1e3);
            };
            Main.prototype.checkZipStatus = function() {
                for (var i = 1; i <= GlobalVar_1.default.zipNum; i++) if (!GlobalVar_1.default.zipStatus[i]) return;
                GlobalVar_1.default.zipStatus = [];
                Laya.timer.clear(this, this.checkZipStatus);
                this.downZipOver();
            };
            Main.prototype.downZipOver = function() {
                GlobalFunc_1.default.log("下载zip完成，重连次数：", this.totalDownLoadTime);
                this.totalDownLoadTime = 0;
                if (GlobalVar_1.default.enterState == 1) GlobalVar_1.default.unZips = [ GlobalVar_1.default.localZipPaths[1] ]; else if (GlobalVar_1.default.enterState == 2) GlobalVar_1.default.unZips = [ GlobalVar_1.default.localZipPaths[2] ];
                GlobalVar_1.default.unzipNum = 0;
                Laya.timer.once(200, this, this.unZipFiles);
            };
            Main.prototype.unZipFiles = function(param) {
                if (param && param.isSuc && GlobalVar_1.default.unZips[param.index]) {
                    GlobalVar_1.default.fswx.unlinkSync(GlobalVar_1.default.unZips[param.index]);
                    GlobalVar_1.default.unZips[param.index] = null;
                    GlobalFunc_1.default.log("解压单个成功：", param.index);
                }
                GlobalFunc_1.default.log("解压文件组", GlobalVar_1.default.unZips);
                var localZipPath;
                var index = 0;
                for (var i = 0; i < GlobalVar_1.default.unZips.length; i++) {
                    localZipPath = GlobalVar_1.default.unZips[i];
                    if (localZipPath) {
                        index = i;
                        break;
                    }
                }
                if (!localZipPath) {
                    this.upZipFilesOver();
                    return;
                } else {
                    if (GlobalVar_1.default.unzipNum > 100) return;
                    GlobalFunc_1.default.log("解压单文件", localZipPath);
                    WxFuncs_1.default.unzipOneFile(index, localZipPath, GlobalVar_1.default.unZipPath);
                }
            };
            Main.prototype.upZipFilesOver = function() {
                GlobalFunc_1.default.log("全部解压成功");
                if (GlobalVar_1.default.enterState == 1) {
                    GlobalFunc_1.default.log("zip1下载结束,下载zip2");
                    GlobalFunc_1.default.log("-------------------------------加载资源包1");
                    GlobalVar_1.default.zip1Ok = true;
                    GlobalVar_1.default.zip2Ok = false;
                    GlobalFunc_1.default.sendAldNewuser("_2.2 包1下载和解压结束");
                    this.startZip2();
                    GlobalVar_1.default.enterState = 2;
                    this.beginLoadGame(1);
                    GlobalFunc_1.default.remoteLog("4.1 包1下载和解压结束", GlobalFunc_1.default.getClientTime() - GlobalVar_1.default.lastZip1);
                } else if (GlobalVar_1.default.enterState == 2) {
                    GlobalFunc_1.default.log("zip2下载结束");
                    GlobalVar_1.default.zip2Ok = true;
                    Laya.loader.load(MainFunc_1.default.getLoadPath2(), Laya.Handler.create(this, function() {
                        GlobalFunc_1.default.log("加载zip2资源....", GlobalVar_1.default.reUrl);
                        if (PlayerData_1.default.guideStep == 0 && BattleData_1.default.room_type == 0) GlobalFunc_1.default.switchRoom(1);
                        GlobalFunc_1.default.remoteLog("4.2 包2下载和解压结束");
                        GameData_1.default.resLoadStep = 2;
                    }));
                }
            };
            Main.prototype.downTimeOutCheck = function() {
                if (this.totalDownLoadTime > 20) {
                    Laya.timer.clear(this, this.downTimeOutCheck);
                    GlobalFunc_1.default.log("下载超时退出");
                    EventDis_1.default.dispatchEvent("reEnterGame");
                }
            };
            Main.prototype.onMouseDown = function() {};
            Main.prototype.onMouseUp = function() {
                Laya.timer.clear(this, this.cancelLog);
            };
            Main.prototype.cancelLog = function() {
                GlobalFunc_1.default.log("当前状态：", ConfigerHelper_1.default.testStr);
            };
            return Main;
        }();
        new Main();
    }, {
        "./GameConfig": 1,
        "./PcMain": 3,
        "./common/NoticeDlg": 17,
        "./common/SceneM": 19,
        "./common/WaitManager": 24,
        "./datas/hallData/GameData": 26,
        "./datas/hallData/PlayerData": 27,
        "./datas/roomData/BattleData": 29,
        "./globalConst/ConfigerHelper": 84,
        "./globalConst/EventDis": 85,
        "./globalConst/GlobalFunc": 87,
        "./globalConst/GlobalUI": 89,
        "./globalConst/GlobalVar": 90,
        "./globalConst/WxFuncs": 96,
        "./globalConst/globalConst": 97,
        "./login/MainFunc": 99,
        "./netWork/NetManager": 101,
        "./netWork/WxLoginManager": 102
    } ],
    3: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalVar_1 = require("./globalConst/GlobalVar");
        var MainFunc_1 = require("./login/MainFunc");
        var EventDis_1 = require("./globalConst/EventDis");
        var GlobalFunc_1 = require("./globalConst/GlobalFunc");
        var SceneM_1 = require("./common/SceneM");
        var GameData_1 = require("./datas/hallData/GameData");
        var SoundM_1 = require("./common/SoundM");
        var NoticeDlg_1 = require("./common/NoticeDlg");
        var TimeLineManager_1 = require("./globalConst/TimeLineManager");
        var FishData_1 = require("./datas/roomData/FishData");
        var MarqueeManager_1 = require("./globalConst/MarqueeManager");
        var PlayerData_1 = require("./datas/hallData/PlayerData");
        var ConfigData_1 = require("./globalConst/ConfigData");
        var BattleData_1 = require("./datas/roomData/BattleData");
        var WaitManager_1 = require("./common/WaitManager");
        var NetManager_1 = require("./netWork/NetManager");
        var PcMain;
        (function(PcMain) {
            function pcLogic() {
                var _this = this;
                GlobalVar_1.default.reUrl = "res/";
                GlobalVar_1.default.reUrl = "res/";
                GlobalVar_1.default.zip1Ok = true;
                GlobalVar_1.default.zip2Ok = true;
                Laya.loader.load(MainFunc_1.default.getLoadPath1(), new Laya.Handler(this, function() {
                    Laya.loader.load(MainFunc_1.default.getLoadPath2(), new Laya.Handler(_this, loadGameOver));
                }));
            }
            PcMain.pcLogic = pcLogic;
            function loadGameOver(index) {
                EventDis_1.default.dispatchEvent("switchSteps", [ 2 ]);
                GlobalFunc_1.default.log("pc开始初始化游戏变量");
                GlobalFunc_1.default.getStageBounds();
                ConfigData_1.default.init();
                PlayerData_1.default.init();
                BattleData_1.default.init();
                SceneM_1.default.init();
                WaitManager_1.default.init();
                NetManager_1.default.init();
                GameData_1.default.init();
                SoundM_1.default.init();
                NoticeDlg_1.default.initNotice();
                TimeLineManager_1.default.init();
                FishData_1.default.initFishData();
                MarqueeManager_1.default.init();
                MainFunc_1.default.initGlobalEvents();
                MainFunc_1.default.loadText();
                GlobalFunc_1.default.log("网页平台进入游戏,添加等待层");
                SceneM_1.default.replaceScene("PcLoadingScene");
            }
            PcMain.loadGameOver = loadGameOver;
        })(PcMain || (PcMain = {}));
        exports.default = PcMain;
    }, {
        "./common/NoticeDlg": 17,
        "./common/SceneM": 19,
        "./common/SoundM": 21,
        "./common/WaitManager": 24,
        "./datas/hallData/GameData": 26,
        "./datas/hallData/PlayerData": 27,
        "./datas/roomData/BattleData": 29,
        "./datas/roomData/FishData": 30,
        "./globalConst/ConfigData": 83,
        "./globalConst/EventDis": 85,
        "./globalConst/GlobalFunc": 87,
        "./globalConst/GlobalVar": 90,
        "./globalConst/MarqueeManager": 91,
        "./globalConst/TimeLineManager": 95,
        "./login/MainFunc": 99,
        "./netWork/NetManager": 101
    } ],
    4: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var EventDis_1 = require("../globalConst/EventDis");
        var FishData_1 = require("../datas/roomData/FishData");
        var NetManager_1 = require("../netWork/NetManager");
        var SoundM_1 = require("./SoundM");
        var globalConst_1 = require("../globalConst/globalConst");
        var BombView = function(_super) {
            __extends(BombView, _super);
            function BombView(count) {
                if (count === void 0) count = 1;
                var _this = _super.call(this) || this;
                _this.name = "bomb";
                _this.scale(2.5, 2.5);
                _this.lockFish.play(0, true);
                Laya.timer.once(500, _this, function() {
                    SoundM_1.default.playSound(globalConst_1.default.Sud_cannon_bomb, 1);
                    NetManager_1.default.reqDaoDanHit({
                        fishId: "0",
                        itemId: FishData_1.default.bombId,
                        item_count: count
                    });
                });
                EventDis_1.default.addEvntListener("bombReceive", _this, function() {
                    _this.aniFire.play(0, true);
                    _this.imgBullet.visible = true;
                    Laya.timer.once(1e3, _this, function() {
                        _this.aniBomb.play(0, false);
                        Laya.timer.once(500, _this, function() {
                            _this.imgBullet.visible = false;
                        });
                    });
                });
                return _this;
            }
            BombView.prototype.destroy = function() {
                _super.prototype.destroy.call(this);
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return BombView;
        }(layaMaxUI_1.ui.common.BombViewUI);
        exports.BombView = BombView;
    }, {
        "../datas/roomData/FishData": 30,
        "../globalConst/EventDis": 85,
        "../globalConst/globalConst": 97,
        "../netWork/NetManager": 101,
        "../ui/layaMaxUI": 151,
        "./SoundM": 21
    } ],
    5: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var globalConst_1 = require("../globalConst/globalConst");
        var BubbleView = function(_super) {
            __extends(BubbleView, _super);
            function BubbleView(index, data) {
                var _this = _super.call(this) || this;
                _this.index = index;
                var posX = Math.min(index, 5) * 120;
                var posY = 20;
                if (index <= 5) posY = index % 2 == 1 ? 20 : 0;
                _this.updateContent(data);
                _this.flag = posY != 0;
                _this.x = 250;
                _this.y = 250;
                _this.scale(.2, .2);
                Laya.Tween.to(_this, {
                    scaleX: 1,
                    scaleY: 1,
                    x: posX,
                    y: posY
                }, 400, null, Laya.Handler.create(_this, function() {
                    var item = PlayerData_1.default.items[data.itemId];
                    _this.imgIcon.skin = item && data.itemId != globalConst_1.default.GoldCoinID ? "iconAndSkin/icon_" + item.skin : "iconAndSkin/skin_goldCoin3.png";
                    _this.lblCount.text = data.count + "";
                    _this.doFloat();
                }));
                return _this;
            }
            BubbleView.prototype.updateContent = function(data) {
                var item = PlayerData_1.default.items[data.itemId];
                this.imgIcon.skin = item && data.itemId != globalConst_1.default.GoldCoinID ? "iconAndSkin/icon_" + item.skin : "iconAndSkin/skin_goldCoin3.png";
                this.lblCount.text = data.count + "";
            };
            BubbleView.prototype.updateView = function(data) {
                var _this = this;
                Laya.Tween.to(this, {
                    alpha: 0
                }, 600, Laya.Ease.quadInOut, Laya.Handler.create(this, function() {
                    _this.updateContent(data);
                }));
                Laya.Tween.to(this, {
                    alpha: 1
                }, 600, Laya.Ease.quadInOut, null, 600);
            };
            BubbleView.prototype.doFloat = function() {
                var _this = this;
                this.doFloatAni();
                Laya.timer.loop(600, this, function() {
                    _this.doFloatAni();
                });
            };
            BubbleView.prototype.doFloatAni = function() {
                this.flag = !this.flag;
                Laya.Tween.to(this, {
                    y: this.flag ? 20 : 0
                }, 600);
            };
            BubbleView.prototype.doTween = function() {
                Laya.Tween.to(this, {
                    x: this.x - 1050
                }, 4500);
            };
            BubbleView.prototype.destroy = function() {
                this.removeSelf();
                Laya.timer.clearAll(this);
                Laya.Tween.clearAll(this);
            };
            return BubbleView;
        }(layaMaxUI_1.ui.common.BubbleIconViewUI);
        exports.BubbleView = BubbleView;
    }, {
        "../datas/hallData/PlayerData": 27,
        "../globalConst/globalConst": 97,
        "../ui/layaMaxUI": 151
    } ],
    6: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var CircularMaskProgressBar = function(_super) {
            __extends(CircularMaskProgressBar, _super);
            function CircularMaskProgressBar(isReverse) {
                if (isReverse === void 0) isReverse = true;
                var _this = _super.call(this) || this;
                _this._percent = 0;
                _this._totalTime = 1e3;
                _this.sa = -89;
                _this.ea = 269;
                _this._isReverse = true;
                _this._isReverse = isReverse;
                return _this;
            }
            Object.defineProperty(CircularMaskProgressBar.prototype, "totalTime", {
                get: function() {
                    return this._totalTime;
                },
                set: function(value) {
                    if (this._totalTime == value) return;
                    this._totalTime = value;
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(CircularMaskProgressBar.prototype, "isReverse", {
                get: function() {
                    return this._isReverse;
                },
                set: function(value) {
                    if (this._isReverse == value) return;
                    this._isReverse = value;
                },
                enumerable: true,
                configurable: true
            });
            CircularMaskProgressBar.prototype.bindTarget = function(target, mx, my, rad, label) {
                if (this.target) this.target.off(Laya.Event.UNDISPLAY, this, this.dispose);
                if (target) target.off(Laya.Event.UNDISPLAY, this, this.dispose);
                this.target = target;
                target.once(Laya.Event.UNDISPLAY, this, this.dispose);
                this.mx = mx;
                this.my = my;
                this.rad = rad || target.width / 2;
                label && (this.label = label);
                this.updateValue();
            };
            Object.defineProperty(CircularMaskProgressBar.prototype, "percent", {
                get: function() {
                    return this._percent;
                },
                set: function(value) {
                    if (this._percent == value) return;
                    this._percent = value;
                    this.updateValue();
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(CircularMaskProgressBar.prototype, "currentAngle", {
                get: function() {
                    var angle = this._percent * this.totalAngle;
                    return this._isReverse ? this.ea - angle : this.sa + angle;
                },
                enumerable: true,
                configurable: true
            });
            CircularMaskProgressBar.prototype.updateValue = function() {
                if (!this.mask) this.mask = new Laya.Sprite();
                var g = this.mask.graphics;
                g.clear();
                var angle = this._percent * this.totalAngle;
                if (this._percent < 1) if (!this._isReverse) g.drawPie(this.mx, this.my, this.rad, this.sa, this.sa + angle, "#ff0000"); else g.drawPie(this.mx, this.my, this.rad, this.ea - angle, this.ea, "#ff0000"); else g.drawCircle(this.mx, this.my, this.rad, "#ff0000");
                this.target && (this.target.mask = this.mask);
                this.label && (this.label.text = Math.floor(this._percent * 100) + "%");
                this.update && this.update.run();
                this.event(Laya.Event.CHANGED);
            };
            CircularMaskProgressBar.prototype.tweenValue = function(value, duration, complete) {
                var _this = this;
                this.clearTween();
                duration = duration || (value - this._percent) * this._totalTime;
                this.tween = Laya.Tween.to(this, {
                    percent: value
                }, duration, Laya.Ease.linearIn, Laya.Handler.create(this, function() {
                    complete && complete.run();
                    _this.tween = null;
                }));
            };
            CircularMaskProgressBar.prototype.clearTween = function() {
                if (this.tween) {
                    this.tween.clear();
                    this.tween = null;
                }
            };
            Object.defineProperty(CircularMaskProgressBar.prototype, "startAngle", {
                set: function(value) {
                    this.sa = value;
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(CircularMaskProgressBar.prototype, "endAngle", {
                set: function(value) {
                    this.ea = value;
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(CircularMaskProgressBar.prototype, "totalAngle", {
                get: function() {
                    return this.ea - this.sa;
                },
                enumerable: true,
                configurable: true
            });
            CircularMaskProgressBar.prototype.dispose = function() {
                this.clearTween();
                if (this.target) this.target.off(Laya.Event.UNDISPLAY, this, this.dispose);
                this.target && (this.target.mask = null);
                this.target = null;
                this.mask && this.mask.destroy(true);
                this.mask = null;
                this.label && this.label.destroy(true);
                this.label = null;
                this.update = undefined;
            };
            return CircularMaskProgressBar;
        }(Laya.EventDispatcher);
        exports.CircularMaskProgressBar = CircularMaskProgressBar;
    }, {} ],
    7: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("./../ui/layaMaxUI");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var GlobalUI_1 = require("../globalConst/GlobalUI");
        var EventDis_1 = require("../globalConst/EventDis");
        var CommonDialog = function(_super) {
            __extends(CommonDialog, _super);
            function CommonDialog(type, strArr, strArr2, okTxt, topTxt, isHideCancel, callBack, boxY) {
                if (strArr2 === void 0) strArr2 = undefined;
                if (okTxt === void 0) okTxt = "确定";
                if (topTxt === void 0) topTxt = "提示";
                if (isHideCancel === void 0) isHideCancel = false;
                if (callBack === void 0) callBack = undefined;
                if (boxY === void 0) boxY = 0;
                var _this = _super.call(this) || this;
                _this._isHideCancel = false;
                EventDis_1.default.dispatchEvent("disCommonEvent");
                EventDis_1.default.addEvntListener("disCommonEvent", _this, _this.destroy);
                GlobalFunc_1.default.openDialog(_this);
                _this._strArr = strArr;
                _this._strArr2 = strArr2;
                _this._type = type;
                _this._isHideCancel = isHideCancel;
                _this._okTxt = okTxt;
                _this._topTxt = topTxt;
                _this._callBack = callBack;
                _this.box_help.y += boxY;
                if (_this._type == 1) _this.setNoticeUI(); else _this.setHelpUI();
                _this.eventON();
                GlobalUI_1.default.isCommonDialogShow = true;
                return _this;
            }
            CommonDialog.prototype.destroy = function() {
                GlobalUI_1.default.isCommonDialogShow = false;
            };
            CommonDialog.prototype.eventON = function() {
                this.img_back.on(Laya.Event.CLICK, this, this.doClose);
                this.btn_cancle.on(Laya.Event.CLICK, this, this.doClose);
                this.btn_ok.on(Laya.Event.CLICK, this, this.okBtnOn);
            };
            CommonDialog.prototype.okBtnOn = function() {
                if (this._callBack) this._callBack.run();
                this.doClose();
            };
            CommonDialog.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            CommonDialog.prototype.setNoticeUI = function() {
                this.box_help.visible = false;
                this.img_back.visible = this.btn_cancle.visible = !this._isHideCancel;
                if (this._isHideCancel) this.btn_ok.right = 226;
                this.label_top.text = this._topTxt;
                this.btn_ok.label = this._okTxt;
                this.setNoticeLabel(this.box_text1, this._strArr);
                if (this._strArr2) {
                    this.setNoticeLabel(this.box_text2, this._strArr2);
                    this.box_text1.y = 145;
                    this.box_text2.y = 220;
                } else {
                    this.box_text2.visible = false;
                    this.box_text1.y = 170;
                }
            };
            CommonDialog.prototype.setHelpUI = function() {
                this.box_notice.visible = false;
                this.label_top.text = this._topTxt;
                this.setHelpLabel(this.box_help, this._strArr);
            };
            CommonDialog.prototype.setNoticeLabel = function(box, strArr) {
                for (var i = 0; i < strArr.length; ++i) {
                    strArr[i].x = box.displayWidth + 3;
                    box.addChild(strArr[i]);
                }
            };
            CommonDialog.prototype.setHelpLabel = function(box, strArr) {
                for (var i = 0; i < strArr.length; ++i) {
                    strArr[i].y = box.displayHeight + 8;
                    box.addChild(strArr[i]);
                }
            };
            return CommonDialog;
        }(layaMaxUI_1.ui.common.CommonDialogUI);
        exports.default = CommonDialog;
    }, {
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/GlobalUI": 89,
        "./../ui/layaMaxUI": 151
    } ],
    8: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var EventDis_1 = require("../globalConst/EventDis");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var CountView = function(_super) {
            __extends(CountView, _super);
            function CountView() {
                var _this = _super.call(this) || this;
                _this._step = 1;
                _this._value = 0;
                _this.btnPlus.on(Laya.Event.MOUSE_DOWN, _this, _this.plus);
                _this.btnPlus.on(Laya.Event.MOUSE_UP, _this, _this.clearTick);
                _this.btnPlus.on(Laya.Event.MOUSE_OUT, _this, _this.clearTick);
                _this.btnMinus.on(Laya.Event.MOUSE_DOWN, _this, _this.minus);
                _this.btnMinus.on(Laya.Event.MOUSE_UP, _this, _this.clearTick);
                _this.btnMinus.on(Laya.Event.MOUSE_OUT, _this, _this.clearTick);
                return _this;
            }
            Object.defineProperty(CountView.prototype, "step", {
                get: function() {
                    return this._step;
                },
                set: function(step) {
                    this._step = step;
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(CountView.prototype, "value", {
                get: function() {
                    return this._value;
                },
                set: function(value) {
                    this._value = value;
                },
                enumerable: true,
                configurable: true
            });
            CountView.prototype.setIndex = function(index) {
                this.order = index;
            };
            CountView.prototype.setData = function(min, max, init) {
                if (init === void 0) init = 0;
                this.min = min;
                this.max = max;
                this.txtInput.text = init + "";
                this.value = init;
                this.updateView();
            };
            CountView.prototype.updateView = function(isDis) {
                if (isDis === void 0) isDis = false;
                var isMax = this._value == this.max;
                var isMin = this._value == this.min;
                this.btnMinus.mouseEnabled = !isMin;
                this.btnPlus.mouseEnabled = !isMax;
                this.btnMinus.skin = isMin || this.value == 0 ? "common/btn_-_1.png" : "common/btn_-_0.png";
                this.btnPlus.skin = isMax || this.max == 0 ? "common/btn_+_1.png" : "common/btn_+_0.png";
                isDis && EventDis_1.default.dispatchEvent(GlobalVar_1.default.COUNT_VIEW_CHANGE, [ this.order, this.value ]);
            };
            CountView.prototype.minus = function() {
                this._value -= this._step;
                if (this._value <= this.min) this.value = this.min;
                this.txtInput.text = this._value + "";
                this.updateView(true);
            };
            CountView.prototype.clearTick = function() {
                Laya.timer.clearAll(this);
            };
            CountView.prototype.plus = function() {
                this._value += this._step;
                if (this._value >= this.max) this.value = this.max;
                this.txtInput.text = this._value + "";
                this.updateView(true);
            };
            CountView.prototype.destroy = function() {
                Laya.timer.clearAll(this);
            };
            return CountView;
        }(layaMaxUI_1.ui.hallScene.CCountViewUI);
        exports.CountView = CountView;
    }, {
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalVar": 90,
        "../ui/layaMaxUI": 151
    } ],
    9: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var globalConst_1 = require("../globalConst/globalConst");
        var ShopDialog_1 = require("../dialog/hallDlg/ShopDialog");
        var PackageDialog_1 = require("../dialog/hallDlg/PackageDialog");
        var VipDlg_1 = require("../dialog/hallDlg/VipDlg");
        var ExChangeDlg_1 = require("../dialog/hallDlg/ExChangeDlg");
        var MailDialog_1 = require("../dialog/hallDlg/MailDialog");
        var SceneM_1 = require("./SceneM");
        var PlayerInfoDlg_1 = require("../dialog/hallDlg/PlayerInfoDlg");
        var ServiceDlg_1 = require("./ServiceDlg");
        var NoticeDlg_1 = require("./NoticeDlg");
        var RankingListDlg_1 = require("../dialog/hallDlg/RankingListDlg");
        var RankingWarDlg_1 = require("../dialog/hallDlg/RankingWarDlg");
        var ActivityLuckDlg_1 = require("../dialog/hallDlg/ActivityLuckDlg");
        var ActivityRebateDlg_1 = require("../dialog/hallDlg/ActivityRebateDlg");
        var GiftScDlg_1 = require("../gift/GiftScDlg");
        var GiftKyDlg_1 = require("../gift/GiftKyDlg");
        var ActivityDialog_1 = require("../dialog/hallDlg/ActivityDialog");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var FishMapDlg_1 = require("../dialog/roomDlg/FishMapDlg");
        var RouletteDialog_1 = require("../dialog/hallDlg/RouletteDialog");
        var SetDialog_1 = require("../dialog/hallDlg/SetDialog");
        var MonthCardDlg_1 = require("../dialog/hallDlg/MonthCardDlg");
        var ComposeDialog_1 = require("../dialog/hallDlg/ComposeDialog");
        var DialogManager = function() {
            function DialogManager() {
                this.isDoDel = false;
                this.dlgQueue = [];
                this.DialogStackArr = [];
            }
            DialogManager.prototype.getDialogByName = function(dialogName, param, isStack) {
                var _this_1 = this;
                if (param === void 0) param = undefined;
                if (isStack === void 0) isStack = false;
                if (this.openingDialog) {
                    this.DialogStackArr.push(this.openingDialog);
                    this.openingDialog.removeSelf();
                }
                this.openingDialog = undefined;
                switch (dialogName) {
                  case globalConst_1.default.DIA_SHOP:
                    this.openingDialog = new ShopDialog_1.default(param);
                    break;

                  case globalConst_1.default.DIA_PACKAGE:
                    this.openingDialog = new PackageDialog_1.default();
                    break;

                  case globalConst_1.default.DIA_ACTIVITY:
                    this.openingDialog = new ActivityDialog_1.ActivityDlg();
                    break;

                  case globalConst_1.default.DIA_VIPCHARGE:
                    this.openingDialog = new VipDlg_1.VipDlg();
                    break;

                  case globalConst_1.default.DIA_EXCHANGEDLG:
                    this.openingDialog = new ExChangeDlg_1.ExChangeDlg();
                    break;

                  case globalConst_1.default.DIA_MAIL:
                    this.openingDialog = new MailDialog_1.MailDlg();
                    break;

                  case globalConst_1.default.DIA_PLAYERINFO:
                    this.openingDialog = new PlayerInfoDlg_1.PlayerInfoDlg();
                    break;

                  case globalConst_1.default.DIA_SERVICE:
                    this.openingDialog = new ServiceDlg_1.ServiceDlg();
                    break;

                  case globalConst_1.default.DIA_NOTICE:
                    this.openingDialog = new NoticeDlg_1.NoticeDlg();
                    break;

                  case globalConst_1.default.DIA_RANKLIST:
                    this.openingDialog = new RankingListDlg_1.RankingListDlg();
                    break;

                  case globalConst_1.default.DIA_RANKINGWAR:
                    this.openingDialog = new RankingWarDlg_1.RankingWarDlg();
                    break;

                  case globalConst_1.default.DIA_FIRSTPAY:
                    this.openingDialog = new GiftScDlg_1.GiftScDlg();
                    break;

                  case globalConst_1.default.DIA_PREFERENTIAL:
                    this.openingDialog = new GiftKyDlg_1.GiftKyDlg();
                    break;

                  case globalConst_1.default.DIA_SECONDDAY:
                    break;

                  case globalConst_1.default.DIA_GIFTSHAKE:
                    break;

                  case globalConst_1.default.DIA_LUCKYDRAW:
                    this.openingDialog = new ActivityLuckDlg_1.default();
                    break;

                  case globalConst_1.default.DIA_REBATE:
                    this.openingDialog = new ActivityRebateDlg_1.default();
                    break;

                  case globalConst_1.default.DIA_FISHMAP:
                    this.openingDialog = new FishMapDlg_1.FishMapDlg();
                    break;

                  case globalConst_1.default.DIA_ROULETTE:
                    this.openingDialog = new RouletteDialog_1.default();
                    break;

                  case globalConst_1.default.DIA_SET:
                    this.openingDialog = new SetDialog_1.default();
                    break;

                  case globalConst_1.default.DIA_PREFERENTIAL:
                    break;

                  case globalConst_1.default.DIA_MONTHCARD:
                    this.openingDialog = new MonthCardDlg_1.MonthCardDlg();
                    break;

                  case globalConst_1.default.DIA_COMPOSE:
                    this.openingDialog = new ComposeDialog_1.default();
                    break;

                  default:
                    break;
                }
                if (this.openingDialog) {
                    SceneM_1.default.addToMiddLayer(this.openingDialog, globalConst_1.default.dialogLayer);
                    if (isStack) this.openingDialog.onClosed = function() {
                        var dialog = _this_1.DialogStackArr.splice(_this_1.DialogStackArr.length - 1, 1)[0];
                        SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
                        GlobalFunc_1.default.openDialog(dialog);
                        _this_1.openingDialog = dialog;
                    };
                    return this.openingDialog;
                } else {
                    GlobalFunc_1.default.log("未找到名为:" + dialogName + " 的界面");
                    return undefined;
                }
            };
            DialogManager.prototype.doCloseDlg = function() {
                if (this.openingDialog && !this.openingDialog.destroyed) this.openingDialog.doClose && this.openingDialog.doClose();
            };
            DialogManager.prototype.addDlg = function(dlg, isDoDel) {
                if (isDoDel === void 0) isDoDel = false;
                this.dlgQueue.push(dlg);
                var _this = this;
                this.isDoDel = isDoDel;
                dlg.onClosed = function() {
                    _this.delDlg();
                };
            };
            DialogManager.prototype.delDlg = function() {
                if (!this.isDoDel) return;
                this.dlgQueue.pop();
                this.dlgQueue.length > 0 && this.doShow();
                this.dlgQueue.length == 0 && (this.isDoDel = false);
            };
            DialogManager.prototype.doShow = function() {
                var len = this.dlgQueue.length;
                if (len > 0) {
                    var dialog = this.dlgQueue[len - 1];
                    SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
                }
            };
            DialogManager.Instance = new DialogManager();
            return DialogManager;
        }();
        var g_DialogManager;
        g_DialogManager = DialogManager.Instance;
        exports.default = g_DialogManager;
    }, {
        "../dialog/hallDlg/ActivityDialog": 32,
        "../dialog/hallDlg/ActivityLuckDlg": 35,
        "../dialog/hallDlg/ActivityRebateDlg": 36,
        "../dialog/hallDlg/ComposeDialog": 41,
        "../dialog/hallDlg/ExChangeDlg": 46,
        "../dialog/hallDlg/MailDialog": 53,
        "../dialog/hallDlg/MonthCardDlg": 54,
        "../dialog/hallDlg/PackageDialog": 55,
        "../dialog/hallDlg/PlayerInfoDlg": 56,
        "../dialog/hallDlg/RankingListDlg": 58,
        "../dialog/hallDlg/RankingWarDlg": 59,
        "../dialog/hallDlg/RouletteDialog": 61,
        "../dialog/hallDlg/SetDialog": 62,
        "../dialog/hallDlg/ShopDialog": 63,
        "../dialog/hallDlg/VipDlg": 65,
        "../dialog/roomDlg/FishMapDlg": 72,
        "../gift/GiftKyDlg": 77,
        "../gift/GiftScDlg": 79,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/globalConst": 97,
        "./NoticeDlg": 17,
        "./SceneM": 19,
        "./ServiceDlg": 20
    } ],
    10: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var DragonGuideView = function(_super) {
            __extends(DragonGuideView, _super);
            function DragonGuideView() {
                var _this = _super.call(this) || this;
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.destroy);
                _this.btnShare.on(Laya.Event.CLICK, _this, _this.doShare);
                _this.ani1.play(0, false);
                return _this;
            }
            DragonGuideView.prototype.doShare = function() {
                if (GlobalVar_1.default.isWx) ; else ;
                this.destroy();
            };
            DragonGuideView.prototype.destroy = function() {
                this.removeSelf();
                this.ani1.destroy();
            };
            return DragonGuideView;
        }(layaMaxUI_1.ui.common.DragonGuideViewUI);
        exports.DragonGuideView = DragonGuideView;
    }, {
        "../globalConst/GlobalVar": 90,
        "../ui/layaMaxUI": 151
    } ],
    11: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var SoundM_1 = require("./SoundM");
        var globalConst_1 = require("../globalConst/globalConst");
        var FishData_1 = require("../datas/roomData/FishData");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var FishTray = function(_super) {
            __extends(FishTray, _super);
            function FishTray(seatIndex) {
                var _this = _super.call(this) || this;
                _this.seatIndex = 0;
                _this.seatIndex = seatIndex;
                var pos = GlobalFunc_1.default.getBigFishPos()[seatIndex];
                _this.pos(pos.x, pos.y);
                _this.ani_0.on(Laya.Event.COMPLETE, _this, _this.aniCallBack);
                _this.visible = false;
                return _this;
            }
            FishTray.prototype.aniCallBack = function() {
                this.visible = false;
            };
            FishTray.prototype.init = function(seatIndex) {
                var pos = GlobalFunc_1.default.getBigFishPos()[seatIndex];
                this.pos(pos.x, pos.y);
            };
            FishTray.prototype.startPlayAni = function(fishData) {
                if (fishData.tray == 0) return;
                if (this.seatIndex == FishData_1.default.mySeatIndex) SoundM_1.default.playSound(globalConst_1.default.Sud_CaiJinSound, 1);
                this.ani_3.gotoAndStop(0);
                this.ani_0.gotoAndStop(0);
                this.ani_1.gotoAndStop(0);
                this.ani_2.gotoAndStop(0);
                this.img_fishIcon.rotation = 0;
                this.visible = true;
                var fishID = fishData.fishID;
                var fishInfo = fishData.fishInfo;
                this.img_fishIcon.rotation = 0;
                this.text_goldNum.text = fishData.goldNum;
                var iconPath = PlayerData_1.default.guideStep == 0 ? "fishIcon" : "firstPic";
                var namePath = PlayerData_1.default.guideStep == 0 ? "battle" : "firstPic";
                if (fishData.tray == 1) {
                    this.img_fishName.skin = namePath + "/text_" + fishInfo.Icon + ".png";
                    this.ani_0.play(0, false);
                } else if (fishData.tray == 2) {
                    this.img_fishIcon.skin = iconPath + "/img_sp" + fishData.fish_type + ".png";
                    this.text_specialName.skin = namePath + "/text_sp" + fishData.fish_type + ".png";
                    this.ani_1.play(0, false);
                } else if (fishData.tray == 3) {
                    this.img_fishIcon.skin = iconPath + "/" + fishInfo.Icon + ".png";
                    this.text_specialName.skin = namePath + "/text_" + fishInfo.Icon + ".png";
                    this.ani_2.play(0, false);
                } else if (fishData.tray == 4) {
                    this.img_fishIcon.visible = true;
                    this.img_fishIcon.skin = "bullets/img_zid_" + fishInfo.Icon + ".png";
                    this.ani_3.play(0, false);
                }
            };
            return FishTray;
        }(layaMaxUI_1.ui.roomScene.FishTrayUI);
        exports.default = FishTray;
    }, {
        "../datas/hallData/PlayerData": 27,
        "../datas/roomData/FishData": 30,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/globalConst": 97,
        "../ui/layaMaxUI": 151,
        "./SoundM": 21
    } ],
    12: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var GuideFinger = function(_super) {
            __extends(GuideFinger, _super);
            function GuideFinger() {
                var _this = _super.call(this) || this;
                _this.updateView();
                return _this;
            }
            GuideFinger.prototype.updateView = function() {
                this.ani_alpha.play(0, true);
                this.ani_img1.play(0, true);
                this.ani_img2.play(0, true);
                this.ani_img3.play(0, true);
            };
            return GuideFinger;
        }(layaMaxUI_1.ui.common.GuideFingerViewUI);
        exports.GuideFinger = GuideFinger;
    }, {
        "../ui/layaMaxUI": 151
    } ],
    13: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GuideFinger_1 = require("./GuideFinger");
        var GuideTipView_1 = require("./GuideTipView");
        var EventDis_1 = require("../globalConst/EventDis");
        var FishData_1 = require("../datas/roomData/FishData");
        var DragonGuideView_1 = require("./DragonGuideView");
        var SceneM_1 = require("./SceneM");
        var globalConst_1 = require("../globalConst/globalConst");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var NetManager_1 = require("../netWork/NetManager");
        var SoundM_1 = require("./SoundM");
        var GuideInfo = function() {
            function GuideInfo() {}
            return GuideInfo;
        }();
        exports.GuideInfo = GuideInfo;
        var GuideManager = function() {
            function GuideManager() {
                this.enable = true;
                this.componets = [];
                this.guideStep = 0;
                this.isForce = true;
                this.guideState = {};
                this.isDisLock = false;
                this.isDisFreeze = false;
                this.enable = true;
            }
            GuideManager.prototype.initGuide = function(type, componets, isForce) {
                if (isForce === void 0) isForce = true;
                this.type = type;
                this.isForce = isForce;
                this.componets = componets;
                this.gameContainer = new Laya.Sprite();
                this.gameContainer.width = Laya.stage.width;
                this.gameContainer.height = Laya.stage.height;
                Laya.stage.addChild(this.gameContainer);
                this.gameContainer.on(Laya.Event.CLICK, this, this.doGuide);
                Laya.stage.removeChild(this.viewFinger);
                Laya.stage.removeChild(this.viewTip);
                this.viewTip = new GuideTipView_1.GuideTipView(componets[this.guideStep].desc);
                this.viewFinger = new GuideFinger_1.GuideFinger();
                this.viewFinger.x -= 100;
                this.viewTip.x = FishData_1.default.mySeatNode.x;
                this.viewTip.bottom = 150;
                this.hitArea = new Laya.HitArea();
                this.hitArea.hit.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000");
                this.interactionArea = new Laya.Sprite();
                this.interactionArea.blendMode = "destination-out";
                var maskArea = new Laya.Sprite();
                this.guideContainer = new Laya.Sprite();
                this.guideContainer.cacheAs = "bitmap";
                maskArea.alpha = .5;
                maskArea.graphics.drawRect(0, 0, Laya.stage.width, Laya.stage.height, "#000000");
                if (isForce) {
                    Laya.stage.addChild(this.guideContainer);
                    this.guideContainer.addChild(maskArea);
                }
                this.guideContainer.mouseEnabled = true;
                this.guideContainer.hitArea = this.hitArea;
                this.guideContainer.addChild(this.interactionArea);
                Laya.stage.addChild(this.viewTip);
                Laya.stage.addChild(this.viewFinger);
                this.doGuide();
            };
            GuideManager.prototype.doGuide = function() {
                var _this = this;
                if (PlayerData_1.default.guideStep == 2) Laya.timer.once(1e4, this, function() {
                    PlayerData_1.default.guideStep != 0 && (PlayerData_1.default.guideStep = 3);
                    NetManager_1.default.reqSetGuideStep();
                    Laya.timer.once(5e3, _this, function() {
                        EventDis_1.default.dispatchEvent("bei_guide");
                    });
                    _this.close();
                    return;
                });
                if (PlayerData_1.default.guideStep == 3) Laya.timer.once(3e3, this, function() {
                    PlayerData_1.default.guideStep != 0 && (PlayerData_1.default.guideStep = 4);
                    NetManager_1.default.reqSetGuideStep();
                    var seat = FishData_1.default.mySeatNode.numPanel;
                    seat && seat.changePaoBei(1);
                    NetManager_1.default.reqSetGuideStep();
                    Laya.timer.once(5e3, _this, function() {
                        EventDis_1.default.dispatchEvent("bullet_guide");
                    });
                    _this.close();
                    return;
                });
                if (PlayerData_1.default.guideStep == 4) Laya.timer.once(3e3, this, function() {
                    PlayerData_1.default.guideStep = 0;
                    NetManager_1.default.reqSetGuideStep();
                    _this.close();
                    return;
                });
                if (PlayerData_1.default.guideStep == 5) Laya.timer.once(3e3, this, function() {
                    if (PlayerData_1.default.guideStep == 5) {
                        PlayerData_1.default.guideStep = 5;
                        _this.close();
                        return;
                    }
                });
                if (PlayerData_1.default.guideStep == 6) Laya.timer.once(3e3, this, function() {
                    if (PlayerData_1.default.guideStep == 6) {
                        PlayerData_1.default.guideStep = 6;
                        Laya.timer.once(FishData_1.default.skillCd[1], _this, function() {
                            EventDis_1.default.dispatchEvent("guide_dragon");
                        });
                        _this.close();
                        return;
                    }
                });
                if (this.guideStep == this.componets.length) {
                    PlayerData_1.default.guideStep != 0 && (PlayerData_1.default.guideStep = this.componets[this.guideStep - 1].type);
                    EventDis_1.default.delAllEvnt(this);
                    Laya.timer.clearAll(this);
                    Laya.stage.removeChild(this.guideContainer);
                    Laya.stage.removeChild(this.gameContainer);
                    Laya.stage.removeChild(this.viewFinger);
                    Laya.stage.removeChild(this.viewTip);
                    this.componets[this.guideStep - 1].handle.run();
                    this.guideStep = 0;
                    if (PlayerData_1.default.guideStep == 5) Laya.timer.once(FishData_1.default.skillCd[1], this, function() {
                        EventDis_1.default.dispatchEvent("guide_dragon");
                    }); else if (PlayerData_1.default.guideStep == 6) EventDis_1.default.dispatchEvent("guide_bullet");
                } else {
                    this.updatePos();
                    if (this.isForce) {
                        this.hitArea.unHit.clear();
                        var x = this.viewFinger.x + this.viewFinger.width / 2;
                        var y = this.viewFinger.y + this.viewFinger.height / 2;
                        this.interactionArea.graphics.clear();
                        this.interactionArea.graphics.drawCircle(x, y, 60, "#000000");
                        this.hitArea.unHit.drawCircle(x, y, 60, "#000000");
                    }
                    this.guideStep++;
                }
            };
            GuideManager.prototype.updatePos = function() {
                var target = this.componets[this.guideStep];
                if (target.isMiddle) {
                    this.viewFinger.centerX = 50;
                    this.viewFinger.centerY = 0;
                    return;
                }
                this.viewFinger.x = target.pos.x - this.viewFinger.width / 2 + target.width / 2;
                this.viewFinger.y = target.pos.y - this.viewFinger.height / 2 + target.height / 2;
            };
            GuideManager.prototype.onGuideOff = function() {};
            GuideManager.prototype.onGuideResume = function() {};
            GuideManager.prototype.getGuideData = function(type) {
                return this.guideDatas[type];
            };
            GuideManager.prototype.changeState = function(type) {
                this.guideState[type] = true;
            };
            GuideManager.prototype.showDragon = function() {
                var view = new DragonGuideView_1.DragonGuideView();
                SceneM_1.default.addToMiddLayer(view, globalConst_1.default.dialogLayer);
            };
            GuideManager.prototype.close = function() {
                this.guideStep = 0;
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                Laya.stage.removeChild(this.guideContainer);
                Laya.stage.removeChild(this.gameContainer);
                Laya.stage.removeChild(this.viewFinger);
                Laya.stage.removeChild(this.viewTip);
            };
            GuideManager.prototype.doScreenGuide = function() {
                var _this = this;
                SoundM_1.default.playSound(globalConst_1.default.Sud_NPC_OS_02, 1);
                var guideInfo = new GuideInfo();
                guideInfo.type = 2;
                guideInfo.isMiddle = true;
                guideInfo.desc = "欢迎来到捕鱼侠3D!\n点击屏幕,向鱼儿开炮吧!";
                guideInfo.handle = new Laya.Handler(this, function() {
                    NetManager_1.default.reqSetGuideStep();
                    Laya.timer.once(5e3, _this, function() {
                        EventDis_1.default.dispatchEvent("bei_guide");
                    });
                });
                guideManager.initGuide(guideInfo.type, [ guideInfo ], false);
            };
            GuideManager.prototype.doBeiGuide = function() {
                var _this = this;
                var guideInfo = new GuideInfo();
                guideInfo.type = 3;
                guideInfo.isMiddle = true;
                guideInfo.desc = "所有炮倍均可自由切换，免费畅玩";
                guideInfo.isMiddle = false;
                var seat = FishData_1.default.mySeatNode.numPanel;
                guideInfo.width = seat.btn_plus.width;
                guideInfo.height = seat.btn_plus.height;
                guideInfo.pos = FishData_1.default.mySeatNode.localToGlobal(new Laya.Point(seat.btn_plus.x, seat.btn_plus.y + seat.height / 2));
                guideInfo.handle = new Laya.Handler(this, function() {
                    NetManager_1.default.reqSetGuideStep();
                    seat && seat.changePaoBei(1);
                    Laya.timer.once(5e3, _this, function() {
                        EventDis_1.default.dispatchEvent("bullet_guide");
                    });
                });
                guideManager.initGuide(guideInfo.type, [ guideInfo ]);
            };
            GuideManager.prototype.doBulletGuide = function() {
                var guideInfo = new GuideInfo();
                guideInfo.type = 4;
                guideInfo.isMiddle = true;
                guideInfo.desc = "挑战全新BOSS，即可获得弹头哦~";
                guideInfo.handle = new Laya.Handler(this, function() {
                    NetManager_1.default.reqSetGuideStep();
                });
                guideManager.initGuide(guideInfo.type, [ guideInfo ]);
            };
            GuideManager.instance = new GuideManager();
            return GuideManager;
        }();
        exports.GuideManager = GuideManager;
        var guideManager;
        guideManager = GuideManager.instance;
        exports.default = guideManager;
    }, {
        "../datas/hallData/PlayerData": 27,
        "../datas/roomData/FishData": 30,
        "../globalConst/EventDis": 85,
        "../globalConst/globalConst": 97,
        "../netWork/NetManager": 101,
        "./DragonGuideView": 10,
        "./GuideFinger": 12,
        "./GuideTipView": 14,
        "./SceneM": 19,
        "./SoundM": 21
    } ],
    14: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var GuideTipView = function(_super) {
            __extends(GuideTipView, _super);
            function GuideTipView(desc) {
                var _this = _super.call(this) || this;
                _this.lblDesc.text = desc;
                _this.anchorX = _this.anchorY = .5;
                return _this;
            }
            GuideTipView.prototype.destroy = function() {
                _super.prototype.destroy.call(this);
            };
            return GuideTipView;
        }(layaMaxUI_1.ui.common.GuideTipViewUI);
        exports.GuideTipView = GuideTipView;
    }, {
        "../ui/layaMaxUI": 151
    } ],
    15: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var EventDis_1 = require("../globalConst/EventDis");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var NetManager_1 = require("../netWork/NetManager");
        var SoundM_1 = require("./SoundM");
        var globalConst_1 = require("../globalConst/globalConst");
        var RewardDialog_1 = require("../dialog/hallDlg/RewardDialog");
        var SceneM_1 = require("./SceneM");
        var NewGuideView = function(_super) {
            __extends(NewGuideView, _super);
            function NewGuideView() {
                var _this = _super.call(this) || this;
                _this.boxGroup = [];
                _this.btnGet.on(Laya.Event.CLICK, _this, _this.onBtnGetClick);
                var data = GlobalFunc_1.default.layaGetRes("config/player_init.json").item[0];
                _this.lblMoney.font = globalConst_1.default.fontNum1;
                _this.lblMoney.text = "+" + data.Item_count;
                Laya.timer.once(1e4, _this, function() {
                    _this.showMoney();
                    _this.visible = false;
                    NetManager_1.default.reqSetGuideStep();
                    Laya.timer.once(2e3, _this, function() {
                        _this.destroy();
                    });
                });
                SoundM_1.default.playSound(globalConst_1.default.Sud_NPC_OS_01, 1);
                _this.updateView();
                return _this;
            }
            NewGuideView.prototype.updateView = function() {
                var _this = this;
                if (GlobalFunc_1.default.isIos()) this.imgType.skin = "firstPic/title_dj.png";
                this.aniSport.play(0, false);
                this.aniLabel.play(0, true);
                Laya.timer.once(800, this, function() {
                    Laya.timer.once(400, _this, function() {
                        _this.aniScale.play(0, false);
                    });
                    _this.boxBoard.visible = true;
                    _this.doBubble(_this.boxBubble_1, 350);
                    _this.doBubble(_this.boxBubble_2, 700);
                });
            };
            NewGuideView.prototype.doBubble = function(box, ticker) {
                var _this = this;
                Laya.timer.loop(ticker, this, function() {
                    var img = new Laya.Image();
                    img.skin = "firstPic/img_bubble.png";
                    var scale = 1.5 * (.5 * Math.random() + .5);
                    img.alpha = 1 - .5 * Math.random();
                    img.anchorX = img.anchorY = .5;
                    img.scale(scale, scale);
                    img.y = 0;
                    img.x = _this.boxBubble_1.width * Math.random();
                    box.addChild(img);
                    Laya.Tween.to(img, {
                        y: -1e3
                    }, 3500 * (1 - .6 * Math.random()));
                    Laya.timer.once(2e3, _this, function() {
                        img.destroy();
                    });
                });
            };
            NewGuideView.prototype.onBtnGetClick = function(e) {
                var _this = this;
                if (PlayerData_1.default.newUserGiftlock == 0) PlayerData_1.default.newUserGiftlock = 1;
                this.showMoney();
                NetManager_1.default.reqSetGuideStep();
                this.visible = false;
                Laya.timer.once(2e3, this, function() {
                    _this.destroy();
                });
            };
            NewGuideView.prototype.showMoney = function() {
                var dlg = new RewardDialog_1.default([ {
                    item_id: globalConst_1.default.gold,
                    item_count: 1
                } ]);
                dlg.init(null, null, "", "", true);
                SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
            };
            NewGuideView.prototype.destroy = function() {
                _super.prototype.destroy.call(this);
                PlayerData_1.default.guideStep != 0 && (PlayerData_1.default.guideStep = 2);
                EventDis_1.default.dispatchEvent("screen_guide");
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                Laya.Tween.clearAll(this);
            };
            return NewGuideView;
        }(layaMaxUI_1.ui.common.NewGuideViewUI);
        exports.NewGuideView = NewGuideView;
    }, {
        "../datas/hallData/PlayerData": 27,
        "../dialog/hallDlg/RewardDialog": 60,
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/globalConst": 97,
        "../netWork/NetManager": 101,
        "../ui/layaMaxUI": 151,
        "./SceneM": 19,
        "./SoundM": 21
    } ],
    16: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var SceneM_1 = require("./SceneM");
        var EventDis_1 = require("../globalConst/EventDis");
        var NetManager_1 = require("../netWork/NetManager");
        var spineNode_1 = require("../rolesNodes/otherNodes/spineNode");
        var FishData_1 = require("../datas/roomData/FishData");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var BattleData_1 = require("../datas/roomData/BattleData");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var NewRoomChangeDlg = function(_super) {
            __extends(NewRoomChangeDlg, _super);
            function NewRoomChangeDlg() {
                var _this = _super.call(this) || this;
                _this.time = 15;
                _this.isSwitch = false;
                FishData_1.default.isAutoButtonOn && EventDis_1.default.dispatchEvent(GlobalVar_1.default.CHANGE_AUTO_PAO_STATE);
                FishData_1.default.isTouching = FishData_1.default.isFiring = false;
                _this.roomid = BattleData_1.default.room_type == 0 ? 1 : 2;
                _this.btnBack.visible = BattleData_1.default.room_type != 0;
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                GlobalFunc_1.default.openDialog(_this);
                FishData_1.default.isFiring = false;
                FishData_1.default.isTouching = false;
                _this.btnGo.on(Laya.Event.CLICK, _this, _this.switchRoom);
                _this.updateView();
                if (_this.roomid == 1) Laya.timer.loop(1e3, _this, function() {
                    _this.time--;
                    _this.time > 0 && (_this.lblTime.text = _this.time + "秒后，跳转新渔场");
                    _this.time <= 0 && _this.switchRoom();
                });
                return _this;
            }
            NewRoomChangeDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.selfDestroy();
                    _this.close();
                }));
            };
            NewRoomChangeDlg.prototype.updateView = function() {
                var spine = new spineNode_1.default();
                spine.layer = this.boxSpine;
                spine.fileName = "erjirukou" + +this.roomid;
                spine.loadSpine();
                spine.x = 250;
                spine.y = 500;
                this.imgSkin.skin = "selectRoom/img_roomName_" + (this.roomid - 1) + ".png";
                +this.roomid == 2 && (this.lblTime.text = "最大1万炮倍,更强boss,更多话费");
            };
            NewRoomChangeDlg.prototype.switchRoom = function() {
                this.isSwitch = true;
                this.selfDestroy();
                SceneM_1.default.replaceScene("jumpLoadScene");
            };
            NewRoomChangeDlg.prototype.selfDestroy = function() {
                this.roomid == 2 && this.isSwitch && (BattleData_1.default.isNeedEnterRoom2 = true);
                this.roomid == 1 && NetManager_1.default.reqSetGuideStep();
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
            };
            return NewRoomChangeDlg;
        }(layaMaxUI_1.ui.hallScene.NewRoomChangeDlgUI);
        exports.NewRoomChangeDlg = NewRoomChangeDlg;
    }, {
        "../datas/roomData/BattleData": 29,
        "../datas/roomData/FishData": 30,
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/GlobalVar": 90,
        "../netWork/NetManager": 101,
        "../rolesNodes/otherNodes/spineNode": 129,
        "../ui/layaMaxUI": 151,
        "./SceneM": 19
    } ],
    17: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var EventDis_1 = require("../globalConst/EventDis");
        var HttpManager_1 = require("../netWork/HttpManager");
        var globalConst_1 = require("../globalConst/globalConst");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var GameData_1 = require("../datas/hallData/GameData");
        var text_dzbq = "http://sq.ccm.gov.cn/ccnt/sczr/service/business/emark/gameNetTag/4028c08b5d838410015d870debba0d44";
        var NoticeItem = function() {
            function NoticeItem() {
                this.status = 0;
                this.atype = 0;
            }
            return NoticeItem;
        }();
        exports.NoticeItem = NoticeItem;
        var NoticeData = function() {
            function NoticeData() {
                this.showFlag = 0;
            }
            NoticeData.prototype.initNotice = function() {
                EventDis_1.default.addEvntListener("new_notice_coming", this, this.newNoticeCome);
                this.constAnnouncement();
            };
            NoticeData.prototype.constAnnouncement = function() {
                this.notices = [];
                var announcements_json = GlobalFunc_1.default.layaGetWxRes("constAnnouncement.json");
                var announcements = announcements_json.announcement;
                for (var i = 0; i < announcements.length; ++i) {
                    var announcement = announcements[i];
                    this.notices.push(announcement);
                }
            };
            NoticeData.prototype.reqNotice = function() {
                GlobalFunc_1.default.remoteLog("7 所有用户请求公告");
                EventDis_1.default.dispatchEvent("switchSteps", [ 8 ]);
                if (GlobalVar_1.default.isNewUserWx) GlobalFunc_1.default.remoteLog("7.1 新用户请求公告"); else GlobalFunc_1.default.remoteLog("7.2 其他用户请求公告");
                var that = this;
                var url = globalConst_1.default.noticeUrl151;
                if (GlobalVar_1.default.isWx) url = GlobalVar_1.default.noticeUrl;
                HttpManager_1.default.connect(url, function(data) {
                    GameData_1.default.white_user = data.white_user;
                    that.notices = that.notices.concat(data.announcements);
                    if (!that.notices) return;
                    var closeNotice = null;
                    for (var i = that.notices.length - 1; i >= 0; --i) {
                        var notice = that.notices[i];
                        if (!notice.atype || notice.atype == 0) {
                            closeNotice = notice;
                            that.notices.splice(i, 1);
                        }
                    }
                    if (GlobalVar_1.default.isNewUserWx) GlobalFunc_1.default.remoteLog("7.11 新用户请求公告成功"); else GlobalFunc_1.default.remoteLog("7.21 其他用户请求公告成功");
                    EventDis_1.default.dispatchEvent("server_notice", closeNotice);
                });
            };
            NoticeData.prototype.checkNotice = function() {
                for (var i = this.notices.length - 1; i >= 0; --i) {
                    var notice = this.notices[i];
                    if (notice.write_time * 1e3 > GameData_1.default.serverTimeStamp || notice.status == 1) this.notices.splice(i, 1);
                }
                this.notices.sort(function(a, b) {
                    return a.level - b.level;
                });
            };
            NoticeData.prototype.newNoticeCome = function(data) {
                var notice = data.item;
                if (notice.atype == 0) return;
                if (notice.level == 1) this.showFlag = 1;
                this.notices = this.notices.concat(notice);
            };
            NoticeData.prototype.isShowNotice = function() {
                return this.showFlag == 1;
            };
            NoticeData.prototype.resetShowFlag = function() {
                this.showFlag = 0;
            };
            NoticeData.Instance = new NoticeData();
            return NoticeData;
        }();
        var g_noticeData;
        g_noticeData = NoticeData.Instance;
        exports.default = g_noticeData;
        var NoticeDlg = function(_super) {
            __extends(NoticeDlg, _super);
            function NoticeDlg() {
                var _this = _super.call(this) || this;
                _this.prevX = 0;
                _this.prevY = 0;
                _this.lblDesc.on(Laya.Event.MOUSE_DOWN, _this, _this.startScrollText);
                g_noticeData.checkNotice();
                GlobalFunc_1.default.openDialog(_this);
                _this.lstNotice.vScrollBarSkin = "";
                _this.btnClose.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.lstNotice.selectedIndex = 0;
                _this.lstNotice.renderHandler = new Laya.Handler(_this, _this.onLstNoticeRender);
                _this.lstNotice.mouseHandler = new Laya.Handler(_this, _this.onLstNoticeClick);
                _this.updateView();
                return _this;
            }
            NoticeDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            NoticeDlg.prototype.updateView = function() {
                this.lstNotice.dataSource = this.getNoticeData();
                this.updateContent();
            };
            NoticeDlg.prototype.getNoticeData = function() {
                var notices = [];
                if (g_noticeData.notices) for (var index in g_noticeData.notices) {
                    var notice = g_noticeData.notices[index];
                    notices.push(notice);
                }
                return notices;
            };
            NoticeDlg.prototype.updateContent = function() {
                var data = this.lstNotice.selectedItem;
                if (!data) return;
                if (data.id == 1e6) {
                    this.label_bqtext.text = text_dzbq;
                    this.box_dzbq.visible = true;
                    this.panelText.visible = false;
                    return;
                } else {
                    this.box_dzbq.visible = false;
                    this.panelText.visible = true;
                }
                this.lblDesc.text = data.text;
                this.lblTItle.text = data.title;
                var time = GlobalFunc_1.default.getTime(data.end_time * 1e3);
                this.lblTime.text = time.years + "/" + time.months + "/" + time.days + " " + time.hours + ":" + time.minutes;
            };
            NoticeDlg.prototype.onLstNoticeClick = function(e, index) {
                if (e.type == "click" && e.target instanceof Laya.Button) {
                    this.lstNotice.selectedIndex = index;
                    this.lstNotice.refresh();
                    this.updateContent();
                }
            };
            NoticeDlg.prototype.onLstNoticeRender = function(cell, index) {
                var data = this.lstNotice.getItem(index);
                var red = cell.getChildByName("imgPoint");
                var btn = cell.getChildByName("btnTitle");
                var isSelected = index == this.lstNotice.selectedIndex;
                btn.label = data.label;
                red.visible = false;
                btn.strokeColors = isSelected ? "#70200b" : "#0b3170";
                btn.width = isSelected ? 210 : 195;
                btn.skin = isSelected ? "common/btn_0.png" : "noZip/btn_1.png";
            };
            NoticeDlg.prototype.onClosed = function() {
                this.destroy();
            };
            NoticeDlg.prototype.startScrollText = function(e) {
                this.prevX = this.lblDesc.mouseX;
                this.prevY = this.lblDesc.mouseY;
                Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.scrollText);
                Laya.stage.on(Laya.Event.MOUSE_UP, this, this.finishScrollText);
            };
            NoticeDlg.prototype.finishScrollText = function(e) {
                Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.scrollText);
                Laya.stage.off(Laya.Event.MOUSE_UP, this, this.finishScrollText);
            };
            NoticeDlg.prototype.scrollText = function(e) {
                var nowX = this.lblDesc.mouseX;
                var nowY = this.lblDesc.mouseY;
                this.lblDesc.scrollX += this.prevX - nowX;
                this.lblDesc.scrollY += this.prevY - nowY;
                this.prevX = nowX;
                this.prevY = nowY;
            };
            NoticeDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            return NoticeDlg;
        }(layaMaxUI_1.ui.hallScene.NoticeDialogUI);
        exports.NoticeDlg = NoticeDlg;
        var OutNoticeDlg = function(_super) {
            __extends(OutNoticeDlg, _super);
            function OutNoticeDlg() {
                var _this = _super.call(this) || this;
                _this.prevX = 0;
                _this.prevY = 0;
                GlobalFunc_1.default.openDialog(_this);
                _this.btn_ok.on(Laya.Event.CLICK, _this, _this.kickoutGame);
                _this.text_body.on(Laya.Event.MOUSE_DOWN, _this, _this.startScrollText);
                return _this;
            }
            OutNoticeDlg.prototype.initOutNotice = function(notice) {
                this.text_body.text = notice.text;
            };
            OutNoticeDlg.prototype.kickoutGame = function() {
                var _this = this;
                if (GlobalVar_1.default.isWx) wx.exitMiniProgram(); else GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            OutNoticeDlg.prototype.startScrollText = function(e) {
                this.prevX = this.text_body.mouseX;
                this.prevY = this.text_body.mouseY;
                Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.scrollText);
                Laya.stage.on(Laya.Event.MOUSE_UP, this, this.finishScrollText);
            };
            OutNoticeDlg.prototype.finishScrollText = function(e) {
                Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.scrollText);
                Laya.stage.off(Laya.Event.MOUSE_UP, this, this.finishScrollText);
            };
            OutNoticeDlg.prototype.scrollText = function(e) {
                var nowX = this.text_body.mouseX;
                var nowY = this.text_body.mouseY;
                this.text_body.scrollX += this.prevX - nowX;
                this.text_body.scrollY += this.prevY - nowY;
                this.prevX = nowX;
                this.prevY = nowY;
            };
            OutNoticeDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            return OutNoticeDlg;
        }(layaMaxUI_1.ui.hallScene.OutNoticeDlgUI);
        exports.OutNoticeDlg = OutNoticeDlg;
    }, {
        "../datas/hallData/GameData": 26,
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/GlobalVar": 90,
        "../globalConst/globalConst": 97,
        "../netWork/HttpManager": 100,
        "../ui/layaMaxUI": 151
    } ],
    18: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var SceneM_1 = require("./SceneM");
        var globalConst_1 = require("../globalConst/globalConst");
        var SoundM_1 = require("./SoundM");
        var PopRewardView = function(_super) {
            __extends(PopRewardView, _super);
            function PopRewardView(count, handle, posY) {
                if (posY === void 0) posY = 0;
                var _this = _super.call(this) || this;
                SceneM_1.default.addToMiddLayer(_this, globalConst_1.default.dialogLayer);
                _this.y += posY;
                var label = _this.boxReward.getChildByName("lblCount");
                label.text = count + "";
                SoundM_1.default.playSound(globalConst_1.default.Sud_result_MiniWin, 1);
                Laya.Tween.to(_this.boxReward, {
                    scaleX: 1,
                    scaleY: 1
                }, 500, Laya.Ease.backOut, Laya.Handler.create(_this, function() {
                    Laya.timer.once(1e3, _this, function() {
                        _this.close();
                        if (handle) handle.run();
                    });
                }));
                return _this;
            }
            PopRewardView.prototype.destroy = function() {
                this.removeSelf();
                Laya.timer.clearAll(this);
                Laya.Tween.clearAll(this);
            };
            return PopRewardView;
        }(layaMaxUI_1.ui.roomScene.PopRewardViewUI);
        exports.PopRewardView = PopRewardView;
    }, {
        "../globalConst/globalConst": 97,
        "../ui/layaMaxUI": 151,
        "./SceneM": 19,
        "./SoundM": 21
    } ],
    19: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var globalConst_1 = require("../globalConst/globalConst");
        var EditerScene_1 = require("../secens/roomScenes/EditerScene");
        var SelectRoomScene_1 = require("../secens/selRoomScenes/SelectRoomScene");
        var FishScene_1 = require("../secens/roomScenes/FishScene");
        var FirstHallScene_1 = require("../secens/hallScenes/FirstHallScene");
        var VipDlg_1 = require("../dialog/hallDlg/VipDlg");
        var CutFishScene_1 = require("../secens/roomScenes/CutFishScene");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var FishLoadScene_1 = require("../secens/loadingScenes/FishLoadScene");
        var PcLoadingScene_1 = require("../secens/loadingScenes/PcLoadingScene");
        var EventDis_1 = require("../globalConst/EventDis");
        var WxLoadingScene_1 = require("../secens/loadingScenes/WxLoadingScene");
        var NewRoomChangeDlg_1 = require("./NewRoomChangeDlg");
        var TimeLineManager_1 = require("../globalConst/TimeLineManager");
        var jumpLoadScene_1 = require("../secens/loadingScenes/jumpLoadScene");
        var SManager = function() {
            function SManager() {
                this.curSceneName = "";
            }
            SManager.prototype.init = function() {
                this._layers = new Object();
                this._rootLayer = new Laya.Sprite();
                this.curSceneName = "";
                Laya.stage.addChild(this._rootLayer);
                this.initLayers();
            };
            SManager.prototype.initLayers = function() {
                var bgLayer = new Laya.Sprite();
                var hallBtnLayer = new Laya.Sprite();
                var uiLayer = new Laya.Sprite();
                var roLayer = new Laya.Sprite();
                var bulletLayer = new Laya.Sprite();
                var btnsLayer = new Laya.Sprite();
                var cannonLayer = new Laya.Sprite();
                var dialogLayer = new Laya.Sprite();
                var effectLayer = new Laya.Sprite();
                var effectTopLayer = new Laya.Sprite();
                var effectBottomLayer = new Laya.Sprite();
                var testLayer = new Laya.Sprite();
                var maskLayer = new Laya.Sprite();
                var broadCastlayer = new Laya.Sprite();
                var freezeLayer = new Laya.Sprite();
                var frontDialogLayer = new Laya.Sprite();
                this._layers = new Object();
                this._layers[globalConst_1.default.bgLayer] = bgLayer;
                this._layers[globalConst_1.default.hallBtnLayer] = hallBtnLayer;
                this._layers[globalConst_1.default.uiLayer] = uiLayer;
                this._layers[globalConst_1.default.roLayer] = roLayer;
                this._layers[globalConst_1.default.freezeLayer] = freezeLayer;
                this._layers[globalConst_1.default.bulletLayer] = bulletLayer;
                this._layers[globalConst_1.default.effectBottomLayer] = effectBottomLayer;
                this._layers[globalConst_1.default.btnsLayer] = btnsLayer;
                this._layers[globalConst_1.default.cannonLayer] = cannonLayer;
                this._layers[globalConst_1.default.effectLayer] = effectLayer;
                this._layers[globalConst_1.default.effectTopLayer] = effectTopLayer;
                this._layers[globalConst_1.default.maskLayer] = maskLayer;
                this._layers[globalConst_1.default.broadCastLayer] = broadCastlayer;
                this._layers[globalConst_1.default.dialogLayer] = dialogLayer;
                this._layers[globalConst_1.default.frontDialogLayer] = frontDialogLayer;
                this._rootLayer.addChild(bgLayer);
                this._rootLayer.addChild(hallBtnLayer);
                this._rootLayer.addChild(uiLayer);
                this._rootLayer.addChild(roLayer);
                this._rootLayer.addChild(freezeLayer);
                this._rootLayer.addChild(bulletLayer);
                this._rootLayer.addChild(effectBottomLayer);
                this._rootLayer.addChild(cannonLayer);
                this._rootLayer.addChild(btnsLayer);
                this._rootLayer.addChild(effectLayer);
                this._rootLayer.addChild(effectTopLayer);
                this._rootLayer.addChild(maskLayer);
                this._rootLayer.addChild(broadCastlayer);
                this._rootLayer.addChild(dialogLayer);
                this._rootLayer.addChild(frontDialogLayer);
                bgLayer.zOrder = 1e3;
                hallBtnLayer.zOrder = 2e3;
                uiLayer.zOrder = 3e3;
                freezeLayer.zOrder = 4e3;
                roLayer.zOrder = 5e3;
                bulletLayer.zOrder = 6e3;
                effectBottomLayer.zOrder = 6500;
                cannonLayer.zOrder = 7e3;
                effectLayer.zOrder = 7500;
                btnsLayer.zOrder = 8e3;
                effectTopLayer.zOrder = 8500;
                broadCastlayer.zOrder = 9e3;
                maskLayer.zOrder = 9500;
                dialogLayer.zOrder = 1e4;
                frontDialogLayer.zOrder = 10500;
            };
            SManager.prototype.getLayerByName = function(layerName) {
                return this._layers[layerName];
            };
            SManager.prototype.addToLayer = function(layer, layerName, posX, posY) {
                if (posX === void 0) posX = undefined;
                if (posY === void 0) posY = undefined;
                if (layerName == globalConst_1.default.testLayer) {
                    Laya.stage.addChild(layer);
                    layer.zOrder = 1e3;
                    return;
                }
                var baseLayer = this._layers[layerName];
                if (baseLayer) {
                    baseLayer.addChild(layer);
                    if (posX && posY) {
                        layer.anchorX = .5;
                        layer.anchorY = .5;
                        layer.pos(posX, posY);
                    }
                } else GlobalFunc_1.default.log("layer not found");
            };
            SManager.prototype.addToMiddLayer = function(layer, layerName) {
                var baseLayer = this._layers[layerName];
                if (baseLayer) {
                    baseLayer.addChild(layer);
                    layer.anchorX = .5;
                    layer.anchorY = .5;
                    layer.pos(Laya.stage.width / 2, Laya.stage.height / 2);
                    if (layer.box_dialog) layer.box_dialog.width = Laya.stage.width > 1630 ? 1630 : Laya.stage.width;
                } else GlobalFunc_1.default.log("mid layer not found");
            };
            SManager.prototype.clearLayer = function(layerName) {
                var baseLayer = this._layers[layerName];
                if (baseLayer) {
                    baseLayer.removeSelf();
                    baseLayer.destroyChildren();
                } else GlobalFunc_1.default.log("layer not found");
            };
            SManager.prototype.pushMaskScene = function(scene) {
                EventDis_1.default.dispatchEvent("replace_scene");
                TimeLineManager_1.default.clearTimeLines();
                if (this._rootLayer != null) {
                    this._rootLayer.destroyChildren();
                    this._rootLayer.removeSelf();
                    this._rootLayer.destroy();
                    this._rootLayer = null;
                }
                this.init();
                var sceneLayer = this.getSceneByName(scene);
                if (sceneLayer) {
                    Laya.stage.addChild(sceneLayer);
                    sceneLayer.anchorX = .5;
                    sceneLayer.anchorY = .5;
                    sceneLayer.pos(Laya.stage.width / 2, Laya.stage.height / 2);
                    sceneLayer.zOrder = 100;
                }
            };
            SManager.prototype.replaceScene = function(scene, args, delayTime) {
                if (args === void 0) args = null;
                if (delayTime === void 0) delayTime = 0;
                if (scene == this.curSceneName) return;
                EventDis_1.default.dispatchEvent("replace_scene");
                TimeLineManager_1.default.clearTimeLines();
                if (this._rootLayer != null) {
                    this._rootLayer.destroyChildren();
                    this._rootLayer.removeSelf();
                    this._rootLayer.destroy();
                    this._rootLayer = null;
                }
                this.init();
                var sceneLayer = this.getSceneByName(scene);
                if (sceneLayer) this.addToMiddLayer(sceneLayer, globalConst_1.default.uiLayer);
                this.curSceneName = scene;
                return sceneLayer;
            };
            SManager.prototype.getSceneByName = function(scene) {
                var sceneLayer = undefined;
                if (scene == "EditorScene") sceneLayer = new EditerScene_1.default(); else if (scene == "SelectRoomScene") sceneLayer = new SelectRoomScene_1.SelectRoomScene(); else if (scene == "CutFishScene") sceneLayer = new CutFishScene_1.default(); else if (scene == "FishScene") sceneLayer = new FishScene_1.FishScene(); else if (scene == "FirstHallScene") sceneLayer = new FirstHallScene_1.default(); else if (scene == "FishLoadingScene") sceneLayer = new FishLoadScene_1.FishLoadingScene(); else if (scene == "jumpLoadScene") sceneLayer = new jumpLoadScene_1.jumpLoadScene(); else if (scene == "VipDlg") sceneLayer = new VipDlg_1.VipDlg(); else if (scene == "PcLoadingScene") sceneLayer = new PcLoadingScene_1.default(); else if (scene == "WxLoadingScene") sceneLayer = new WxLoadingScene_1.WxLoadingScene(); else if (scene == "NewRoomChangeDlg") sceneLayer = new NewRoomChangeDlg_1.NewRoomChangeDlg();
                return sceneLayer;
            };
            SManager.prototype.clearScene = function() {
                this.curSceneName = "";
                this._rootLayer.destroyChildren();
                this.initLayers();
            };
            SManager.Instance = new SManager();
            return SManager;
        }();
        var g_SceneManager;
        g_SceneManager = SManager.Instance;
        exports.default = g_SceneManager;
    }, {
        "../dialog/hallDlg/VipDlg": 65,
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/TimeLineManager": 95,
        "../globalConst/globalConst": 97,
        "../secens/hallScenes/FirstHallScene": 138,
        "../secens/loadingScenes/FishLoadScene": 139,
        "../secens/loadingScenes/PcLoadingScene": 140,
        "../secens/loadingScenes/WxLoadingScene": 141,
        "../secens/loadingScenes/jumpLoadScene": 142,
        "../secens/roomScenes/CutFishScene": 144,
        "../secens/roomScenes/EditerScene": 145,
        "../secens/roomScenes/FishScene": 148,
        "../secens/selRoomScenes/SelectRoomScene": 150,
        "./NewRoomChangeDlg": 16
    } ],
    20: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var globalConst_1 = require("../globalConst/globalConst");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var EventDis_1 = require("../globalConst/EventDis");
        var ServiceDlg = function(_super) {
            __extends(ServiceDlg, _super);
            function ServiceDlg() {
                var _this = _super.call(this) || this;
                GlobalFunc_1.default.openDialog(_this);
                _this.btnClose.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.btnConfirm.on(Laya.Event.CLICK, _this, _this.doCopy);
                _this.updateView();
                return _this;
            }
            ServiceDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ServiceDlg.prototype.updateView = function() {
                this.lblVerson.text = "版本：" + globalConst_1.default.clientVer;
            };
            ServiceDlg.prototype.doCopy = function() {
                var text = "779455964";
                if (GlobalVar_1.default.isWx) wx.setClipboardData({
                    data: text
                });
            };
            ServiceDlg.prototype.onClosed = function() {
                this.destroy();
            };
            ServiceDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            return ServiceDlg;
        }(layaMaxUI_1.ui.hallScene.ServiceTipsDialogUI);
        exports.ServiceDlg = ServiceDlg;
    }, {
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/GlobalVar": 90,
        "../globalConst/globalConst": 97,
        "../ui/layaMaxUI": 151
    } ],
    21: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var SoundNode_1 = require("../rolesNodes/otherNodes/SoundNode");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var wxSoundNode_1 = require("../rolesNodes/otherNodes/wxSoundNode");
        var SoundM = function() {
            function SoundM() {
                this.allSoundNum = 5;
                this.soundEnabled = true;
                this.musicEnabled = true;
                this.soundValue = 1;
                this.fireIndex = 0;
                this.soundArray = new Array();
                this.fireNode = new Array();
            }
            SoundM.prototype.setSoundNum = function(number) {
                this.allSoundNum = number;
            };
            SoundM.prototype.init = function() {
                var soundData;
                if (GlobalVar_1.default.isWx) soundData = wx.getStorageSync("GameSoundData"); else soundData = Laya.LocalStorage.getItem("GameSoundData");
                if (!soundData) soundData = "1_1_1";
                soundData = soundData.split("_");
                this.setsoundValue(Number(soundData[0]));
                this.setSoundEnabled(soundData[1] == "1" ? true : false, soundData[2] == "1" ? true : false);
                if (GlobalVar_1.default.isWx) this.musicNode = new wxSoundNode_1.default(true); else this.musicNode = new SoundNode_1.default();
            };
            SoundM.prototype.savesoundValue = function() {
                var saveValue = this.soundValue + "_" + (this.soundEnabled == true ? "1" : "0") + "_" + (this.musicEnabled == true ? "1" : "0");
                if (GlobalVar_1.default.isWx) wx.setStorage({
                    key: "GameSoundData",
                    data: saveValue
                }); else Laya.LocalStorage.setItem("GameSoundData", saveValue);
            };
            SoundM.prototype.setSoundEnabled = function(isOpenSound, isOpenMusic) {
                if (this.soundEnabled != isOpenSound) {
                    this.soundEnabled = isOpenSound;
                    if (!isOpenSound) this.stopAllSound();
                }
                if (this.musicEnabled != isOpenMusic) {
                    this.musicEnabled = isOpenMusic;
                    if (!isOpenMusic && this.musicNode) this.musicNode.stopMusic(); else if (!!this.musicNode) this.musicNode.keepPlayMusic();
                }
                this.savesoundValue();
            };
            SoundM.prototype.setsoundValue = function(value) {
                this.soundValue = value;
                Laya.SoundManager.setSoundVolume(value);
                Laya.SoundManager.setMusicVolume(value);
                this.savesoundValue();
            };
            SoundM.prototype.playSound = function(param1, param2, type, handler, data, check) {
                if (type === void 0) type = 10;
                if (handler === void 0) handler = undefined;
                if (data === void 0) data = undefined;
                if (check === void 0) check = false;
                if (!this.soundEnabled) return;
                var soundNode = undefined;
                if (!this.soundEnabled && this.soundValue != 0) return;
                if (!param1) ;
                for (var index = 0; index < this.soundArray.length; index++) {
                    var sound = this.soundArray[index];
                    if (param1 == sound.fileName && (sound.getIsFinish() || check)) {
                        sound.replay();
                        return;
                    }
                }
                for (var index = 0; index < this.soundArray.length; index++) {
                    var sound = this.soundArray[index];
                    if (sound && sound.getIsFinish()) {
                        soundNode = sound;
                        break;
                    }
                }
                if (!soundNode && this.soundArray.length < this.allSoundNum - 1) {
                    if (GlobalVar_1.default.isWx) {
                        soundNode = new wxSoundNode_1.default(false);
                        soundNode.name = "sound_" + this.soundArray.length;
                    } else soundNode = new SoundNode_1.default();
                    this.soundArray.push(soundNode);
                }
                if (soundNode) {
                    soundNode.sound = GlobalVar_1.default.reUrl + param1 + GlobalVar_1.default.soundType;
                    soundNode.playTimes = param2;
                    soundNode.fileName = param1;
                    soundNode.playSound();
                }
            };
            SoundM.prototype.playFireSound = function(param1) {
                if (!this.soundEnabled) return;
                var node;
                if (!this.fireNode[this.fireIndex]) this.fireNode[this.fireIndex] = GlobalVar_1.default.isWx ? new wxSoundNode_1.default(false) : new SoundNode_1.default();
                node = this.fireNode[this.fireIndex];
                this.fireIndex++;
                this.fireIndex > 3 && (this.fireIndex = 0);
                if (node) if (node.fileName == param1) node.replay(); else {
                    node.playTimes = 1;
                    node.fileName = param1;
                    node.playSound();
                } else this.playSound(param1, 1, 1, undefined, undefined);
            };
            SoundM.prototype.stopSound = function(param1) {
                for (var index = 0; index < this.soundArray.length; index++) {
                    var node = this.soundArray[index];
                    if (node.fileName == param1) node.stopSound();
                }
            };
            SoundM.prototype.playMusic = function(param) {
                if (!this.musicEnabled) return;
                if (!this.musicNode) {
                    this.musicNode = undefined;
                    if (GlobalVar_1.default.isWx) this.musicNode = new wxSoundNode_1.default(true); else this.musicNode = new SoundNode_1.default();
                }
                if (param == this.musicNode.fileName) {
                    if (GlobalVar_1.default.isWx) this.musicNode.onlyPlay(); else this.musicNode.isFinished && this.musicNode.playMusic();
                    return;
                }
                this.musicNode.fileName = param;
                this.musicNode.playTimes = 0;
                this.musicNode.sound = GlobalVar_1.default.reUrl + param + GlobalVar_1.default.soundType;
                this.musicNode.playMusic();
            };
            SoundM.prototype.stopAllSound = function(isDeleteFire) {
                if (isDeleteFire === void 0) isDeleteFire = true;
                for (var index = 0; index < this.soundArray.length; index++) {
                    var node = this.soundArray[index];
                    node.stopSound();
                }
                if (isDeleteFire) for (var index = 0; index < this.fireNode.length; index++) {
                    var node = this.fireNode[index];
                    node.stopSound();
                }
            };
            SoundM.Instance = new SoundM();
            return SoundM;
        }();
        var g_SoundManager;
        g_SoundManager = SoundM.Instance;
        exports.default = g_SoundManager;
    }, {
        "../globalConst/GlobalVar": 90,
        "../rolesNodes/otherNodes/SoundNode": 128,
        "../rolesNodes/otherNodes/wxSoundNode": 130
    } ],
    22: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var EventDis_1 = require("../globalConst/EventDis");
        var SpecialView = function(_super) {
            __extends(SpecialView, _super);
            function SpecialView(type, seat) {
                var _this = _super.call(this) || this;
                _this.seat = seat;
                _this.updateView(type);
                EventDis_1.default.addEvntListener("player_leave_room", _this, _this.checkPlayer);
                EventDis_1.default.addEvntListener("delSpView", _this, _this.checkFinish);
                _this.scale(.9, .9);
                return _this;
            }
            SpecialView.prototype.updateView = function(type) {
                this.aniScale.play(0, true);
                this.aniAlpha.play(0, false);
                this.imgType.skin = "fishIcon/img_sp" + type + ".png";
                this.imgLabel.skin = "battle/text_sp" + type + ".png";
            };
            SpecialView.prototype.checkPlayer = function(player) {
                if (player.room_pos + 1 == this.seat) this.destroy();
            };
            SpecialView.prototype.checkFinish = function(seatIndex) {
                if (seatIndex == this.seat) this.destroy();
            };
            SpecialView.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                this.removeSelf();
                _super.prototype.destroy.call(this);
            };
            return SpecialView;
        }(layaMaxUI_1.ui.battle.SpecialViewUI);
        exports.SpecialView = SpecialView;
    }, {
        "../globalConst/EventDis": 85,
        "../ui/layaMaxUI": 151
    } ],
    23: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var globalConst_1 = require("../globalConst/globalConst");
        var EventDis_1 = require("../globalConst/EventDis");
        var TicketView = function(_super) {
            __extends(TicketView, _super);
            function TicketView() {
                var _this = _super.call(this) || this;
                var flag = true;
                EventDis_1.default.addEvntListener("kill_ticket", _this, _this.destroy);
                _this.visible = false;
                _this.anchorX = _this.anchorY = .5;
                _this.scale(.5, .5);
                Laya.timer.loop(250, _this, function() {
                    for (var i = 0; i < 20; i++) {
                        var img = _this["img" + i];
                        Laya.Tween.to(img, {
                            alpha: 1
                        }, 400);
                        var scale = flag ? .5 : 1;
                        if (i % 2 == 0) img.scale(scale, scale); else {
                            if (scale == .5) scale = 1; else scale = .5;
                            img.scale(scale, scale);
                        }
                    }
                    flag = !flag;
                });
                Laya.timer.once(500, _this, function() {
                    _this.visible = true;
                    Laya.Tween.to(_this, {
                        scaleX: 1.2,
                        scaleY: 1.2
                    }, 100);
                    Laya.Tween.to(_this, {
                        scaleX: .8,
                        scaleY: .8
                    }, 100, null, null, 100);
                    Laya.Tween.to(_this, {
                        scaleX: 1,
                        scaleY: 1
                    }, 100, null, null, 200);
                });
                Laya.timer.once(4500, _this, _this.destroy);
                return _this;
            }
            TicketView.prototype.destroy = function() {
                _super.prototype.destroy.call(this);
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            TicketView.prototype.setData = function(ticket) {
                if (this.destroyed) return;
                this.lblTicket.text = ticket + "";
                this.lblTicket.font = globalConst_1.default.fontNum1;
                this.lblRight.x += (ticket + "").length * 16;
            };
            return TicketView;
        }(layaMaxUI_1.ui.common.TicketTipUI);
        exports.TicketView = TicketView;
    }, {
        "../globalConst/EventDis": 85,
        "../globalConst/globalConst": 97,
        "../ui/layaMaxUI": 151
    } ],
    24: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var globalConst_1 = require("../globalConst/globalConst");
        var EventDis_1 = require("../globalConst/EventDis");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var WaitManager = function() {
            function WaitManager() {
                this.overTimeStr = 0;
                this.init = function() {
                    var _this = this;
                    this.maxWaitTime = 5;
                    this.waitEvent = "";
                    this.waitTimeCount = 0;
                    this.waitState = 0;
                    this.loadingLayer = new layaMaxUI_1.ui.common.commonWaitingNodeUI();
                    this.loadingLayer.ani1.play(0, true);
                    this.loadingLayer.mouseThrough = false;
                    this.loadingLayer.mouseEnabled = true;
                    Laya.stage.addChild(this.loadingLayer);
                    this.loadingLayer.zOrder = 6e3;
                    this.loadingLayer.visible = false;
                    this.ShowMaskLayer(this.loadingLayer, undefined, new Laya.Handler(this, function() {
                        _this.loadingLayer.visible = false;
                    }));
                    this.maskNode = this.loadingLayer.getChildByName("mask");
                    this.loadingLayer.box1.visible = false;
                    this.loadingLayer.box2.visible = false;
                    this.loadingLayer.box3.visible = true;
                };
                this.HideWaitingImageForce = function() {
                    Laya.stage.timer.clear(this, this.checkWaitState);
                    this.waitEvent = "";
                    this.maxWaitTime = 0;
                    this.waitTimeCount = 0;
                    this.loadingLayer && (this.loadingLayer.visible = false);
                    this.waitState = 0;
                    this.overTimeStr = 0;
                };
                this.hideWaitLayer = function(waitName) {
                    if (waitName != this.waitEvent) return;
                    this.HideWaitingImageForce();
                };
                this.FshowWaitMaskLayer = function(waitName, maxTime) {
                    if (maxTime === void 0) maxTime = 5;
                    this.loadingLayer.visible = true;
                    this.maxWaitTime = maxTime;
                    this.waitEvent = waitName;
                    this.waitState = 0;
                    this.waitTimeCount = 0;
                    this.maskNode.visible = true;
                    Laya.stage.timer.loop(1e3, this, this.checkWaitState);
                };
                this.showWaitLayer = function(waitName, maxTime, overTimeStr) {
                    if (maxTime === void 0) maxTime = 60;
                    this.loadingLayer.visible = true;
                    this.maxWaitTime = maxTime;
                    this.overTimeStr = overTimeStr;
                    this.waitEvent = waitName;
                    this.waitState = 0;
                    this.waitTimeCount = 0;
                    this.maskNode.visible = false;
                    Laya.stage.timer.loop(1e3, this, this.checkWaitState);
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.NET_OVER);
                };
                this.checkWaitState = function() {
                    this.waitTimeCount++;
                    if (this.waitTimeCount >= this.maxWaitTime) {
                        this.HideWaitingImageForce();
                        EventDis_1.default.dispatchEvent("wait_overTime", this.overTimeStr);
                    }
                };
                this.ShowMaskLayer = function(node, isMask, clickHandler) {
                    if (isMask === void 0) isMask = true;
                    if (clickHandler === void 0) clickHandler = null;
                    var spr = new Laya.Sprite();
                    spr.zOrder = -1;
                    node.addChild(spr);
                    spr.alpha = .65;
                    var graphics = new laya.display.Graphics();
                    graphics.drawRect(0, 0, globalConst_1.default.stageW, globalConst_1.default.stageH, "#000000");
                    spr.graphics = graphics;
                    spr.size(globalConst_1.default.stageW, globalConst_1.default.stageH);
                    var hitArea = new laya.utils.HitArea();
                    hitArea.hit = graphics;
                    spr.hitArea = hitArea;
                    spr.name = "mask";
                    if (!isMask) spr.on(Laya.Event.CLICK, null, function() {
                        spr.removeSelf();
                        if (clickHandler) clickHandler.run();
                    });
                };
            }
            WaitManager.Instance = new WaitManager();
            return WaitManager;
        }();
        var g_WaitManager;
        g_WaitManager = WaitManager.Instance;
        exports.default = g_WaitManager;
    }, {
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalVar": 90,
        "../globalConst/globalConst": 97,
        "../ui/layaMaxUI": 151
    } ],
    25: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var globalConst_1 = require("../globalConst/globalConst");
        var WarningMessage = function(_super) {
            __extends(WarningMessage, _super);
            function WarningMessage(message, isPlayAnim, layer, color) {
                if (isPlayAnim === void 0) isPlayAnim = true;
                if (layer === void 0) layer = globalConst_1.default.effectTopLayer;
                if (color === void 0) color = "#c2e7ff";
                var _this = _super.call(this) || this;
                var showWarningMsg = localStorage.getItem("showWarningMsg");
                if (showWarningMsg == "0") localStorage.setItem("showWarningMsg", "1"); else if (showWarningMsg == "1") {
                    _this.destroy();
                    return _this;
                }
                _this.init(message, isPlayAnim, layer, color);
                return _this;
            }
            WarningMessage.prototype.init = function(message, isPlayAnim, layer, color) {
                if (layer === void 0) layer = globalConst_1.default.broadCastLayer;
                this.message.text = message;
                this.message.color = color;
                this.centerX = this.centerY = 0;
                Laya.stage.addChild(this);
                this.zOrder = 1e4;
                if (isPlayAnim) {
                    this.shortMessage.play(0, false);
                    Laya.timer.once(2e3, this, this.onClose);
                } else this.ani2.play(0, false);
            };
            WarningMessage.prototype.onClose = function() {
                this.removeSelf();
                this.destroy();
                localStorage.setItem("showWarningMsg", "0");
            };
            WarningMessage.prototype.destroy = function() {
                _super.prototype.destroy.call(this);
            };
            return WarningMessage;
        }(layaMaxUI_1.ui.common.warningMessageUI);
        exports.WarningMessage = WarningMessage;
    }, {
        "../globalConst/globalConst": 97,
        "../ui/layaMaxUI": 151
    } ],
    26: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var PlayerData_1 = require("./PlayerData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var EventDis_1 = require("../../globalConst/EventDis");
        var globalConst_1 = require("../../globalConst/globalConst");
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var GameData = function() {
            function GameData() {
                this.effectNumber = 0;
                this.jumpToScene = "FirstHallScene";
                this.serverTimeStamp = 0;
                this.skillChecked = [];
                this.musicValue = 1;
                this.soundEffectValue = 1;
                this.bgMusicIsHall = false;
                this.isFirstLogin = true;
                this.musicUrl = "";
                this.goingUrl = "";
                this.fireSound = {
                    0: undefined,
                    1: undefined,
                    2: undefined,
                    3: undefined
                };
                this.fireSoundUseIndex = 0;
                this.headImg = "common/img_toux.png";
                this.musicIsReplay = true;
                this.env = {};
                this.scene = 0;
                this.userDotType = "neiwang";
                this.resLoadStep = 0;
                this.isRebate = true;
                this.rebateDate = 0;
                this.rebateNum = 0;
                this.isHelping = false;
                this.shopOrder = 0;
                this.isFirstRecharge = false;
                this.isPaing = false;
                this.wx_session_key = "";
                this.tomrrowState = 0;
                this.shakeTimes = 0;
                this.isShaked = false;
                this.tehuiState1 = 0;
                this.tehuiState2 = 0;
                this.monthEndTime = 0;
                this.monthEndDay = 0;
                this.isMonthToday = true;
                this.isShopOn = false;
                this.tomrrowGold = 0;
                this.tomrrowFlag = false;
                this.tomrrowData = null;
                this.shakeNum = 0;
                this.shakeFish = 0;
                this.isWxOnshow = true;
                this.isShowMonth = true;
                this.inviteAwards = [];
                this.inviteNum = 0;
                this.inviteData = null;
                this.queryId = 0;
                this.white_user = false;
                this.isGameStart = false;
                this.roomguide = false;
                this.numberState = false;
                this.changeDate = [];
            }
            GameData.prototype.initGameData = function() {
                this.clientSess = "111111";
                this.delayedTimeCmd = new Object();
                this.soundArray = new Object();
                this.otherSound = [ {}, {}, {}, {}, {} ];
                this.resourceLoadOK = false;
                EventDis_1.default.addEvntListener(GlobalVar_1.default.GATE_LOGIN_SUC_NOTICE, this, this.setSocketLoginInfo);
            };
            GameData.prototype.setChangeDate = function() {
                var _this = this;
                Laya.timer.loop(1e3, this, function() {
                    var ser = g_GameData.serverTimeStamp;
                    var day = new Date(ser).getDay();
                    if (_this.changeDate.length < 2) _this.changeDate.push(day); else {
                        _this.changeDate.shift();
                        _this.changeDate.push(day);
                        if (_this.changeDate[0] != _this.changeDate[1]) {
                            if (g_GameData.tomrrowState == 1) g_GameData.tomrrowState = 2;
                            g_GameData.shakeTimes = 5;
                            g_GameData.isShaked = false;
                            EventDis_1.default.dispatchEvent(GlobalVar_1.default.CHANGEDAY);
                        }
                    }
                });
            };
            GameData.prototype.setSocketLoginInfo = function(data) {
                PlayerData_1.default.guideStep = data.guide_step ? data.guide_step : 0;
            };
            GameData.prototype.init = function() {
                this.initGameData();
                var data = GlobalFunc_1.default.layaGetRes("config/global_define.json");
                this.tomrrowGold = +data["tomorrow_gift_gold"];
                this.timeStr = GlobalFunc_1.default.getClientTime();
                if (GlobalVar_1.default.isWx) {
                    this.setScreenOn();
                    EventDis_1.default.addEvntListener(GlobalVar_1.default.WX_ONHIDE, this, function() {
                        GlobalFunc_1.default.log("接收onhide事件1，gamedata停止播放音效");
                        g_GameData.musicIsReplay = false;
                    });
                    EventDis_1.default.addEvntListener(GlobalVar_1.default.WX_ONSHOW, this, function() {
                        GlobalFunc_1.default.log("接收onshow事件1，gamedata设置音效");
                        g_GameData.setScreenOn();
                    });
                    wx.onAudioInterruptionBegin(function() {
                        g_GameData.musicIsReplay = false;
                    });
                    wx.onAudioInterruptionEnd(function() {});
                }
                globalConst_1.default.bitFlyTime1 = Number(ConfigerHelper_1.default.getCachedValueByKey("global_define", [ "zuantou_fly_sec" ])) * 1e3;
                globalConst_1.default.bitFlyTime2 = Number(ConfigerHelper_1.default.getCachedValueByKey("global_define", [ "zuantou_bomb_sec" ])) * 1e3;
                globalConst_1.default.bitFlySpeed1 = Number(ConfigerHelper_1.default.getCachedValueByKey("global_define", [ "zuantou_fly1_speed" ]));
                globalConst_1.default.bitFlySpeed2 = Number(ConfigerHelper_1.default.getCachedValueByKey("global_define", [ "zuantou_fly2_speed" ]));
                globalConst_1.default.bitCountDownSec = Number(ConfigerHelper_1.default.getCachedValueByKey("global_define", [ "zuantou_countdown_sec" ]));
                globalConst_1.default.bitBoomRadius = Number(ConfigerHelper_1.default.getCachedValueByKey("global_define", [ "zuantou_bomb_radius" ]));
                globalConst_1.default.haiWangJiange = Number(ConfigerHelper_1.default.getCachedValueByKey("global_define", [ "haiwangbaozangjiange" ]));
                globalConst_1.default.haiWangTime = Number(ConfigerHelper_1.default.getCachedValueByKey("global_define", [ "haiwangbaozangtime" ])) * 1e3;
                globalConst_1.default.specialFishStartTime = Number(ConfigerHelper_1.default.getCachedValueByKey("global_define", [ "common_teseyu_start" ]));
                globalConst_1.default.specialFishEndTime = Number(ConfigerHelper_1.default.getCachedValueByKey("global_define", [ "common_teseyu_end" ]));
                globalConst_1.default.firstShareTime = Number(ConfigerHelper_1.default.getCachedValueByKey("Globalvar", [ "firstShareTime" ]));
                globalConst_1.default.secondShareTime = Number(ConfigerHelper_1.default.getCachedValueByKey("Globalvar", [ "secondShareTime" ]));
                globalConst_1.default.thirdShareTime = Number(ConfigerHelper_1.default.getCachedValueByKey("Globalvar", [ "thirdShareTime" ]));
                globalConst_1.default.isRedPacket = Number(ConfigerHelper_1.default.getCachedValueByKey("Globalvar", [ "isRedPacket" ])) == 1;
                globalConst_1.default.hbRatio = globalConst_1.default.isRedPacket ? 100 : 1;
                globalConst_1.default.olduid = Number(ConfigerHelper_1.default.getCachedValueByKey("Globalvar", [ "newBieuid" ]));
                if (!globalConst_1.default.firstShareTime) globalConst_1.default.firstShareTime = 2500;
                if (!globalConst_1.default.secondShareTime) globalConst_1.default.secondShareTime = 2e3;
                if (!globalConst_1.default.thirdShareTime) globalConst_1.default.thirdShareTime = 0;
                PlayerData_1.default.resGetTimes = Number(ConfigerHelper_1.default.getCachedValueByKey("Globalvar", [ "signMultiple" ])) + 1;
                if (GlobalVar_1.default.isWx) EventDis_1.default.addEvntListener(GlobalVar_1.default.WX_ONHIDE, this, this.DotOutGame);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.HEART_BEAT, this, this.updateServerTimeStampByServer);
            };
            GameData.prototype.DotOutGame = function() {};
            GameData.prototype.setScreenOn = function() {
                wx.setKeepScreenOn({
                    keepScreenOn: true,
                    success: function(res) {},
                    fail: function(res) {}
                });
            };
            GameData.prototype.updateServerTimeStampByClient = function() {
                this.serverTimeStamp += 1e3;
            };
            GameData.prototype.updateServerTimeStampByServer = function(timeStamp) {
                this.serverTimeStamp = timeStamp;
                Laya.timer.loop(1e3, this, this.updateServerTimeStampByClient);
            };
            GameData.prototype.SetAddressAndPort = function(_address) {
                this.gateIp = _address;
            };
            GameData.prototype.SetRoomAddressAndPort = function(_address) {
                if (_address.indexOf("wss") != -1) {
                    this.roomIP = _address;
                    this.roomPort = "";
                } else {
                    var str = _address.split(":");
                    var address = str[0];
                    var port = str[1];
                    this.roomIP = address;
                    this.roomPort = port;
                }
            };
            GameData.prototype.SetSoundEffectValue = function(value) {
                this.soundEffectValue = value;
                if (GlobalVar_1.default.isWx) {
                    for (var key in this.soundArray) if (this.soundArray.hasOwnProperty(key)) {
                        var element = this.soundArray[key];
                        if (element) element.volume = this.soundEffectValue;
                    }
                    wx.setStorage({
                        key: "GameSoundVolume",
                        data: value.toString()
                    });
                } else {
                    if (this.soundEffectValue == 1) laya.media.SoundManager.soundMuted = false; else laya.media.SoundManager.soundMuted = true;
                    Laya.LocalStorage.setItem("GameSoundVolume", value.toString());
                }
                laya.media.SoundManager.setSoundVolume(this.soundEffectValue);
            };
            GameData.prototype.setLoginInfo = function(data) {
                this.account = data.account;
                this.accountType = data.accountType;
                this.nickName = data.nick;
                this.SetAddressAndPort(data.gateAddr);
                this.token = data.token;
                this.headImg = data.headurl;
                this.uid = data.uid;
                this.serverTimeStamp = data.server_time * 1e3;
                g_GameData.wx_session_key = data.wx_sessionkey;
                this.updateServerTimeStampByServer(this.serverTimeStamp);
                GlobalFunc_1.default.setStorage("isSwitch", "false");
                this.setChangeDate();
            };
            GameData.Instance = new GameData();
            return GameData;
        }();
        var g_GameData;
        g_GameData = GameData.Instance;
        exports.default = g_GameData;
    }, {
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "./PlayerData": 27
    } ],
    27: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var ActivityView_1 = require("../../dialog/hallDlg/ActivityView");
        var ItemNode_1 = require("../../rolesNodes/otherNodes/ItemNode");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GuideManager_1 = require("../../common/GuideManager");
        var FishData_1 = require("../roomData/FishData");
        var BattleData_1 = require("../roomData/BattleData");
        var GameData_1 = require("./GameData");
        var OnOffManager_1 = require("../../globalConst/OnOffManager");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var DialogManager_1 = require("../../common/DialogManager");
        var SceneM_1 = require("../../common/SceneM");
        var PlayerData = function() {
            function PlayerData() {
                this.shouchong = 0;
                this.newUserGiftlock = 0;
                this.vip_level = 0;
                this.vipExp = 0;
                this.vipMax = 0;
                this.cur_pao = 10;
                this.equipCannon = 101;
                this.items = {};
                this.composeItems = {};
                this.itemNums = {};
                this.commoditysInfo = [];
                this.commodityIsBuy = {};
                this.serverTimeMinSecond = 0;
                this.timeOpen = false;
                this.reliven = 0;
                this.yuekaaward = 0;
                this.isServerNewUser = true;
                this.lastlogintime = 0;
                this.mailNum = 0;
                this.mailStatus = 0;
                this.vipInfo = [];
                this.loginDays = 0;
                this.leftLoginRoulette = 0;
                this.guideStep = 1;
                this.onlineTime = 0;
                this.isBindWx = false;
                this.itemFlyEndP = [];
                this.left_count = 0;
            }
            PlayerData.prototype.init = function() {
                EventDis_1.default.addEvntListener(GlobalVar_1.default.VIP_EXP_UP, this, this.upDateVipExp);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.DATA_VIP_INFO, this, this.updateVipInfo);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ITEM_INFO_INIT, this, this.initItemNum);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.CONFIG_INFO_NOTICE, this, this.initItemOnOff);
                this.initItemInfo();
                this.initCommodityInfo();
                this.initFreeGoldInfo();
                this.initGuide();
            };
            PlayerData.prototype.initGuide = function() {
                var json = GlobalFunc_1.default.layaGetWxRes("guide.json");
                if (json) GuideManager_1.default.guideDatas = json.guide;
            };
            PlayerData.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            PlayerData.prototype.getVipConfig = function() {
                var vipInfo = [];
                var json = GlobalFunc_1.default.layaGetWxRes("Vip.json");
                if (json) {
                    var data = json.vip;
                    for (var i = 0; i < data.length; i++) {
                        var vip = data[i];
                        vipInfo.push(vip);
                    }
                }
                this.vipInfo = vipInfo;
            };
            PlayerData.prototype.initFreeGoldInfo = function() {
                this.freeGoldInfo = new ActivityView_1.FreeGoldInfo();
                this.freeGoldInfo.luckyDrawInfo = new ActivityView_1.LuckyDrawInfo();
                this.freeGoldInfo.luckyDrawInfo.drawNum = 5;
                this.freeGoldInfo.luckyDrawInfo.lastTime = Math.floor(GlobalFunc_1.default.getClientTime() / 1e3);
            };
            PlayerData.prototype.initItemInfo = function() {
                var json = GlobalFunc_1.default.layaGetWxRes("Item.json");
                if (json && json.Items) for (var index = 0; index < json.Items.length; index++) {
                    var item = json.Items[index];
                    var itemNode = new ItemNode_1.ItemNode();
                    var itemID = Number(item.itemID);
                    if (itemID >= 31 && itemID <= 33) continue;
                    itemNode.describe = item.describe;
                    itemNode.itemID = itemID;
                    itemNode.itemName = item.name;
                    itemNode.skin = item.skin;
                    itemNode.isShow = item.noShow && item.noShow == 1 ? false : true;
                    if (itemID > 6 && itemID <= 300) {
                        itemNode.speed = Number(item.speed);
                        itemNode.needDiamond = Number(item.needDiamond);
                        itemNode.hit = Number(item.hit);
                        itemNode.cycleTime = item.cycleTime;
                        itemNode.buyVip = Number(item.buyVip);
                        itemNode.sortId = Number(item.sortID);
                        if (itemID <= 100) {
                            itemNode.giveVip = Number(item.zengSongVip);
                            itemNode.giveMinLimit = Number(item.zengSongMin);
                            itemNode.isGive = Number(item.zengSong);
                            itemNode.useGold = Number(item.useGold);
                            itemNode.qiWang = Number(item.qiWang);
                            itemNode.effectTime = item.effectTime;
                        }
                    } else itemNode.sortId = Number(item.sortID);
                    this.items[itemID.toString()] = itemNode;
                    this.itemNums[itemID.toString()] = 0;
                    if (item.composeNum) this.composeItems[item.itemID] = item;
                }
            };
            PlayerData.prototype.initItemNum = function(data) {
                if (!data) return;
                var items = data.items || [];
                for (var index = 0; index < items.length; index++) {
                    var item = items[index];
                    if (item.item_id != globalConst_1.default.ItemMonthCardID) this.itemNums[item.item_id.toString()] = item.count; else this.itemNums[item.item_id.toString()] = item.count.toString();
                }
            };
            PlayerData.prototype.getItemNum = function(itemID) {
                if (this.itemNums[itemID] != undefined) return this.itemNums[itemID]; else GlobalFunc_1.default.log("未能获取ID:" + itemID + " 的物品数量");
            };
            PlayerData.prototype.setItemNum = function(itemID, itemNum) {
                this.itemNums[itemID] = itemNum;
                if (itemID == "1" || itemID == "4") EventDis_1.default.dispatchEvent(GlobalVar_1.default.MY_RES);
            };
            PlayerData.prototype.updateItemsNum = function(data) {
                for (var index = 0; index < data.items.length; index++) {
                    var item = data.items[index];
                    this.setItemNum(item.item_id, item.count);
                    if (BattleData_1.default.isInRoom) EventDis_1.default.dispatchEvent(GlobalVar_1.default.UPDATE_ITEMS_NUM_FROM_PLAYERDATA);
                }
            };
            PlayerData.prototype.tipsLongPaoMax = function(itemID) {
                var itemName = this.getItemData(+itemID).itemName;
                var str = GlobalFunc_1.default.getColorText("您的" + itemName + "超出上限,请及时使用!", 24, "#ffffff", "#0b3170");
                var commonDialog = new CommonDialog_1.default(1, [ str ], undefined, "贵族特权", "温馨提示", false, Laya.Handler.create(this, function() {
                    DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_VIPCHARGE);
                }));
                SceneM_1.default.addToMiddLayer(commonDialog, globalConst_1.default.dialogLayer);
            };
            PlayerData.prototype.getItemData = function(itemId) {
                var id = itemId.toString();
                var item = this.items[id];
                if (item) return item; else {
                    if (itemId >= 1 && itemId <= 4 || itemId >= 7 && itemId <= 9 || itemId >= 11 && itemId <= 14 || itemId == 100 || (itemId >= 101 && itemId <= 104 || itemId == 151) || itemId >= 201 && itemId <= 205 || itemId >= 301 && itemId <= 307 || itemId >= 351 && itemId <= 356 || itemId >= 401 && itemId <= 403) GlobalFunc_1.default.log("道具目录错误ID:" + itemId); else GlobalFunc_1.default.log("道具ID错误ID:" + itemId);
                    item = this.items["1"];
                    return null;
                }
            };
            PlayerData.prototype.setItemsNum = function(items) {
                var flag = false;
                var data = GlobalFunc_1.default.transGoldItem(items);
                for (var index = 0; index < data.length; index++) {
                    var item = data[index];
                    var itemId = item.item_id.toString();
                    var itemNum = item.count || item.item_count;
                    if (itemNum.toString().length >= 10) this.itemNums[itemId] = itemNum.toString(); else this.itemNums[itemId] = itemNum;
                    if (itemId == "1" || itemId == "4") flag = true;
                }
                flag && EventDis_1.default.dispatchEvent(GlobalVar_1.default.MY_RES);
            };
            PlayerData.prototype.addItemNum = function(itemID, itemNum, isShow, isself) {
                if (isShow === void 0) isShow = false;
                if (isself === void 0) isself = false;
                this.itemNums[itemID] += itemNum;
                if (itemID == "1" || itemID == "4") {
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.MY_RES);
                    isShow && EventDis_1.default.dispatchEvent("updateSeat", isself);
                }
            };
            PlayerData.prototype.addItemsNum = function(data, isAdd, isShow, isself) {
                if (isAdd === void 0) isAdd = false;
                if (isShow === void 0) isShow = true;
                if (isself === void 0) isself = false;
                var items = GlobalFunc_1.default.transGoldItem(data);
                var flag = false;
                var gold = 0;
                for (var i = 0; i < items.length; ++i) {
                    var item = items[i];
                    var itemId = item.item_id;
                    var itemNum = item.count || item.item_count;
                    this.itemNums[itemId] += itemNum;
                    itemId == "1" && (gold = itemNum);
                }
                if (isAdd) BattleData_1.default.roomPlayerData[FishData_1.default.mySeatIndex].gold += gold;
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.MY_RES);
                isShow && EventDis_1.default.dispatchEvent("updateSeat", isself);
            };
            PlayerData.prototype.initCommodityInfo = function() {
                var data = GlobalFunc_1.default.layaGetWxRes("shop.json");
                this.commoditysInfo = data;
            };
            PlayerData.prototype.initCommodityIsBuy = function(data) {
                for (var commID in data) if (data.hasOwnProperty(commID)) {
                    var commNum = data[commID];
                    if (commID == "buyrmb") continue;
                    if (commID == "moncard_expire") this.itemNums[globalConst_1.default.ItemMonthCardID] = commNum.toString(); else this.commodityIsBuy[commID] = commNum;
                }
            };
            PlayerData.prototype.getCommodityIsBuy = function(commID) {
                if (this.commodityIsBuy[commID] && this.commodityIsBuy[commID] != 0) return true; else return false;
            };
            PlayerData.prototype.setCommodityIsBuy = function(commID, isBuy) {
                this.commodityIsBuy[commID] = isBuy;
            };
            PlayerData.prototype.updateVipInfo = function(data) {
                this.vip_level = data.vip ? data.vip : 0;
                this.setVipInfo();
            };
            PlayerData.prototype.setVipInfo = function() {
                var expMax;
                var json = GlobalFunc_1.default.layaGetWxRes("Vip.json");
                if (json) expMax = +json.vip[Math.min(this.vip_level + 1, json.vip.length - 1)].charge;
                this.vipMax = expMax;
            };
            PlayerData.prototype.upDateVipExp = function(exp) {
                this.vipExp = exp ? exp : 0;
            };
            PlayerData.prototype.vipSkillAssign = function() {};
            PlayerData.prototype.setShareVideoInfo = function(data) {
                if (data.video || data.video == 0) this.restVedio = Number(data.video);
                if (data.signvideo || data.signvideo == 0) this.restsignVideo = Number(data.signvideo);
                if (data.dmdshare || data.dmdshare == 0) this.restDmdShare = Number(data.dmdshare);
                if (data.reliveshare || data.reliveshare == 0) this.restReliveShare = Number(data.reliveshare);
                if (data.autopaoshare || data.autopaoshare == 0) this.restAutoPaoShare = Number(data.autopaoshare);
                if (data.autopaotime || data.autopaotime == 0) this.restAutoPaoTime = Number(data.autopaotime);
                if (data.freevideo || data.freevideo == 0) this.restFreeDmdVedio = Number(data.freevideo);
            };
            PlayerData.prototype.shakeTickerStart = function() {
                if (FishData_1.default.shakeTime <= 0) {
                    FishData_1.default.shakeTime = 0;
                    Laya.timer.clear(this, this.doCount);
                    EventDis_1.default.dispatchEvent("shakeTimeOut");
                    return;
                }
                Laya.timer.loop(1e3, this, this.doCount);
            };
            PlayerData.prototype.doCount = function() {
                FishData_1.default.shakeTime--;
                if (FishData_1.default.shakeTime <= 0) {
                    FishData_1.default.shakeTime = 0;
                    Laya.timer.clear(this, this.doCount);
                }
            };
            PlayerData.prototype.setLoginRouletteInfo = function(data) {
                this.loginDays = data.total_login_days;
                this.leftLoginRoulette = data.rest_round_plate_times;
            };
            PlayerData.prototype.changeCannon = function(cannonID) {
                this.equipCannon = cannonID;
            };
            PlayerData.prototype.setHallFlyPos = function(pos, index) {
                this.itemFlyEndP[index] = pos;
            };
            PlayerData.prototype.setRoomFlyPos = function(pos, index, seatIndex) {
                if (!!!this.itemFlyEndP[index]) this.itemFlyEndP[index] = new Array();
                this.itemFlyEndP[index][seatIndex - 1] = pos;
            };
            PlayerData.prototype.getItemFlyPos = function(index, seatIndex) {
                if (seatIndex === void 0) seatIndex = -1;
                var pos = new Laya.Point(0, 0);
                if (seatIndex != -1) {
                    var isExist = this.itemFlyEndP[index] && this.itemFlyEndP[index][seatIndex - 1];
                    isExist && (pos = this.itemFlyEndP[index][seatIndex - 1]);
                } else this.itemFlyEndP[index] && (pos = this.itemFlyEndP[index]);
                return pos;
            };
            PlayerData.prototype.checkSpGift = function() {
                return (GameData_1.default.tehuiState1 == 1 || GameData_1.default.tehuiState2 == 1) && OnOffManager_1.default.isGIftSp && !GlobalFunc_1.default.isIos();
            };
            PlayerData.prototype.checkTGift = function() {
                return (GameData_1.default.tomrrowState == 2 || GameData_1.default.tomrrowState == 1) && OnOffManager_1.default.isTomorrom;
            };
            PlayerData.prototype.checkMatchDate = function(time) {
                var matchDate = new Date(time * 1e3);
                var todayDate = new Date(GameData_1.default.serverTimeStamp);
                return matchDate.getMonth() < todayDate.getMonth() || matchDate.getMonth() == todayDate.getMonth() && matchDate.getDate() <= todayDate.getDate();
            };
            PlayerData.prototype.checkShake = function() {
                return !GameData_1.default.isShaked && GameData_1.default.shakeTimes > 0 && FishData_1.default.shakeTime == 0;
            };
            PlayerData.prototype.checkInvite = function() {
                var isRed = false;
                var invites = GameData_1.default.inviteData;
                if (!invites) GameData_1.default.inviteData = invites = GlobalFunc_1.default.layaGetWxRes("invitationAward.json").invite;
                var invitenum = GameData_1.default.inviteNum;
                invites.forEach(function(invite) {
                    var num = +invite.inviteNum;
                    num <= invitenum && GameData_1.default.inviteAwards.indexOf(num) == -1 && (isRed = true);
                });
                return isRed && OnOffManager_1.default.isInvite;
            };
            PlayerData.prototype.initItemOnOff = function(data) {
                if (!data || !data.shop_items) return;
                var shop_items = data.shop_items;
                if (!shop_items) return;
                for (var i = 0; i < shop_items.length; ++i) {
                    var item = shop_items[i];
                    if (item.product_id == 3010) OnOffManager_1.default.isMonthCardOn = !!item.open; else if (item.product_id == 3020) OnOffManager_1.default.isShake = !!item.open; else if (item.product_id == 2010) OnOffManager_1.default.isGiftOn = !!item.open; else if (item.product_id == 4010) OnOffManager_1.default.isGIftSp = !!item.open; else if (item.product_id == 2040) OnOffManager_1.default.isTomorrom = !!item.open;
                }
            };
            PlayerData.Instance = new PlayerData();
            return PlayerData;
        }();
        var g_playerData;
        g_playerData = PlayerData.Instance;
        exports.default = g_playerData;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/DialogManager": 9,
        "../../common/GuideManager": 13,
        "../../common/SceneM": 19,
        "../../dialog/hallDlg/ActivityView": 38,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/OnOffManager": 93,
        "../../globalConst/globalConst": 97,
        "../../rolesNodes/otherNodes/ItemNode": 123,
        "../roomData/BattleData": 29,
        "../roomData/FishData": 30,
        "./GameData": 26
    } ],
    28: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var globalConst_1 = require("../../globalConst/globalConst");
        var SceneM_1 = require("../../common/SceneM");
        var HallData = function() {
            function HallData() {
                this.ShareList = [];
                this.composeList = [];
            }
            HallData.prototype.openRewardDialog = function() {
                SceneM_1.default.addToMiddLayer(null, globalConst_1.default.dialogLayer);
            };
            HallData.prototype.initComposeList = function(data) {
                this.composeList = data;
            };
            HallData.prototype.addComposeRecord = function(data) {
                this.composeList.push(data);
                this.composeRecordSort();
            };
            HallData.prototype.composeRecordSort = function() {
                this.composeList.sort(function(a, b) {
                    if (a.time > b.time) return -1; else return 1;
                });
            };
            HallData.Instance = new HallData();
            return HallData;
        }();
        var g_hallData;
        g_hallData = HallData.Instance;
        exports.default = g_hallData;
    }, {
        "../../common/SceneM": 19,
        "../../globalConst/globalConst": 97
    } ],
    29: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var GameData_1 = require("../hallData/GameData");
        var FishData_1 = require("./FishData");
        var RoomPlayerInfoNode_1 = require("../../rolesNodes/seatNodes/RoomPlayerInfoNode");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var PlayerData_1 = require("../hallData/PlayerData");
        var ConfigData_1 = require("../../globalConst/ConfigData");
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var globalConst_1 = require("../../globalConst/globalConst");
        var NetManager_1 = require("../../netWork/NetManager");
        var RoomDataInfo = function() {
            function RoomDataInfo() {}
            return RoomDataInfo;
        }();
        exports.RoomDataInfo = RoomDataInfo;
        var DragonCannonInfo = function() {
            function DragonCannonInfo() {}
            return DragonCannonInfo;
        }();
        exports.DragonCannonInfo = DragonCannonInfo;
        var BattleData = function() {
            function BattleData() {
                this.cur_scene_id = 0;
                this.FishSceneTime = 0;
                this.lastClientTime = 0;
                this.room_type = 1;
                this.roomPlayerData = [];
                this.paoBeiInfo = {};
                this.roomPaobei = undefined;
                this.roomData = [];
                this.roomNum = 0;
                this.jackpotNum = [ {
                    num: 0
                }, {
                    num: 0
                }, {
                    num: 0
                } ];
                this.jackpotPercent = [ 0, 0, 0 ];
                this.cachedFish = {};
                this.fishData = {};
                this.isInRoom = false;
                this.maxRoom = 0;
                this.dragonCannonInfo = {};
                this.isNeedEnterRoom2 = false;
            }
            BattleData.prototype.init = function() {
                this.initBattleInfos();
                this.loadRoomJson();
                this.loadFishData();
                this.loadDragonCannonJson();
                EventDis_1.default.addEvntListener("switchSceneId", this, function(data) {
                    this.startUpdateTime(data.time_msec_offset);
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_FREEZE_SHOOT_NOTICE, this, this.clearUpdateTime);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_FREEZE_STOP_NOTICE, this, this.startUpdateTime);
                EventDis_1.default.addEvntListener("leave_room", this, this.clearUpdateTime);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_USE_ITEM_NOTICE, this, this.roomUseItem);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.LEAVE_ROOM_SUCCESS, this, this.enterRoomListener);
            };
            BattleData.prototype.enterRoomListener = function() {
                if (this.room_type == 0) NetManager_1.default.reqEnterRoom({
                    room_type: 1,
                    enter: true
                }); else if (this.isNeedEnterRoom2) {
                    NetManager_1.default.reqEnterRoom({
                        room_type: 2,
                        enter: true
                    });
                    this.isNeedEnterRoom2 = false;
                }
            };
            BattleData.prototype.initBattleInfos = function() {
                this.fishLineData = new Object();
                this.roomsInfo = new Array();
                this.isFlip = false;
                this.skillInfo = {};
                this.initRoomPaobeiInfo();
            };
            BattleData.prototype.startUpdateTime = function(newServerTime) {
                GlobalFunc_1.default.log("startUpdateTime:", newServerTime);
                this.FishSceneTime = newServerTime || 0;
                this.lastClientTime = GlobalFunc_1.default.getClientTime();
                Laya.timer.loop(50, this, this.loopUpdateTime);
            };
            BattleData.prototype.clearUpdateTime = function() {
                Laya.timer.clear(this, this.loopUpdateTime);
            };
            BattleData.prototype.loopUpdateTime = function(data) {
                var nowTime = GlobalFunc_1.default.getClientTime();
                var interval = nowTime - this.lastClientTime;
                this.FishSceneTime += interval;
                this.lastClientTime = nowTime;
            };
            BattleData.prototype.updateSitInfoBySkill = function(skillData) {};
            BattleData.prototype.updateSitInfoByHit = function(hitData) {
                if (!hitData) return;
                var seatIndex = hitData.seat;
                var gold = hitData.nowgold;
                this.roomPlayerData[seatIndex].gold = gold;
            };
            BattleData.prototype.setSitPlayerInfoByObj = function(seatIndex, obj, addMod) {
                var playerInfo = this.roomPlayerData[seatIndex];
                if (!playerInfo) return;
                playerInfo.setPlayerInfo(obj, addMod);
            };
            BattleData.prototype.updateSitInfoForMoney = function() {};
            BattleData.prototype.initFishLineData = function() {
                this.fishLineData = new Object();
            };
            BattleData.prototype.setFishLineData = function(data) {};
            BattleData.prototype.loadRoomJson = function() {
                this.roomNum = 0;
                this.roomData = undefined;
                this.jackpot = undefined;
                var json = GlobalFunc_1.default.layaGetWxRes("room.json");
                if (json) {
                    if (json.ROOMCONFIG) {
                        this.roomData = json.ROOMCONFIG;
                        this.roomNum = json.ROOMCONFIG.length;
                    }
                    if (json.ADDSCORE) this.jackpot = json.ADDSCORE;
                }
            };
            BattleData.prototype.loadDragonCannonJson = function() {
                this.dragonCannonInfo = {};
                var json = GlobalFunc_1.default.layaGetWxRes("longpao.json");
                if (json) if (json.Longpao) for (var key in json.Longpao) {
                    var data = json.Longpao[key];
                    this.dragonCannonInfo[data.id] = data;
                }
            };
            BattleData.prototype.initRoomPaobeiInfo = function() {
                this.paoBeiInfo = new Object();
                if (this.roomPaobei) this.roomPaobei = null;
                this.roomPaobei = new Array();
                for (var index = 0; index < this.roomNum; index++) this.roomPaobei[index] = new Array();
                var roomData = ConfigData_1.default.getRoomDataByKey(this.room_type);
                this.roomPaobei = !!!this.roomPaobei ? [] : this.roomPaobei;
                this.roomPaobei[this.room_type] = [];
                for (var i = 0; i < roomData.Guns.length; i++) {
                    var v = roomData.Guns[i];
                    this.roomPaobei[this.room_type].push(v);
                }
            };
            BattleData.prototype.getSitInfo = function(seatIndex) {
                if (!this.roomPlayerData[seatIndex]) {
                    GlobalFunc_1.default.log("房间内玩家信息异常", seatIndex);
                    return new RoomPlayerInfoNode_1.default();
                }
                return this.roomPlayerData[seatIndex];
            };
            BattleData.prototype.getUserSeatByUid = function(uid) {
                for (var i in this.roomPlayerData) {
                    var player = this.roomPlayerData[i];
                    if (!player) return 0;
                    if (!player.isInRoom) continue;
                    if (uid == player.uid) return player.room_pos;
                }
                return 0;
            };
            BattleData.prototype.loadFishData = function() {
                var json = GlobalFunc_1.default.layaGetWxRes("fish.json");
                if (json && json.fish) for (var index = 0; index < json.fish.length; index++) {
                    var fishInfo = json.fish[index];
                    this.fishData[fishInfo.FishTypeID] = fishInfo;
                }
            };
            BattleData.prototype.setSitInfo = function(data) {
                if (data) for (var index = 1; index <= 4; index++) {
                    var sitData = data[index];
                    if (!sitData) return;
                    this.initTimes[sitData.seat] = sitData.pao;
                    this.seatInfos[sitData.seat] = sitData;
                    if (sitData.uid == GameData_1.default.uid) {
                        FishData_1.default.mySeatIndex = sitData.seat;
                        this.isFlip = FishData_1.default.mySeatIndex == 3 || FishData_1.default.mySeatIndex == 4;
                    }
                } else this.seatInfos = {};
            };
            BattleData.prototype.addRewardPool = function(index) {
                var data = this.roomData[index + 1];
                if (data.isPool == "0") return;
                var currectNum = this.jackpotNum[index].num;
                var initialNum = Number(data.initialPool);
                var percent = currectNum / initialNum * 100;
                for (var key in this.jackpot) {
                    var jackpotFun = Number(key);
                    var changeNum = Math.round(currectNum + Number(this.jackpot[key]) * 60);
                    if (jackpotFun) if (percent < jackpotFun) {
                        var targetNum = initialNum * jackpotFun;
                        var useTime = (targetNum - currectNum) / Number(this.jackpot[key]);
                        if (useTime > 7e4) {
                            this.jackpotPercent[index] = Number(key);
                            Laya.Tween.to(this.jackpotNum[index], {
                                num: changeNum
                            }, 60 * 1e3, undefined, new Laya.Handler(this, this.addRewardPool, [ index ]));
                            return;
                        } else {
                            Laya.Tween.to(this.jackpotNum[index], {
                                num: targetNum
                            }, Math.floor(useTime) * 1e3, undefined, new Laya.Handler(this, this.addRewardPool, [ index ]));
                            this.jackpotPercent[index] = Number(key);
                            return;
                        }
                    } else continue; else {
                        this.jackpotPercent[index] = Number(key);
                        Laya.Tween.to(this.jackpotNum[index], {
                            num: changeNum
                        }, 60 * 1e3, undefined, new Laya.Handler(this, this.addRewardPool, [ index ]));
                        return;
                    }
                }
            };
            BattleData.prototype.startAddRewardPool = function() {
                for (var index = 0; index < this.roomNum - 1; index++) this.addRewardPool(index);
            };
            BattleData.prototype.stopAddRewardPool = function() {
                for (var index = 1; index < this.roomNum; index++) Laya.Tween.clearAll(this.jackpotNum[index]);
            };
            BattleData.prototype.setRoomInfo = function(data) {
                if (!data) return;
                this.room_type = data.room_type;
                g_battleData.initBattleInfos();
                this.cur_scene_id = data.cur_scene_id;
                this.last_scene_id = data.last_scene_id;
                var sceneInfo = ConfigerHelper_1.default.getCachedValueFirst("allfishScript", "SceneID", this.cur_scene_id, this.room_type);
                if (!sceneInfo) {
                    GlobalFunc_1.default.log("无法从allfishscript中找到对应的sceneid信息", this.cur_scene_id, this.room_type);
                    return;
                }
                this.scene_type = Number(sceneInfo.type);
                this.scene_end_time = sceneInfo.endtime * 1e3;
                this.startUpdateTime(data.time_msec_offset);
                this.die_fish_ids = data.die_fish_ids;
                this.reborn_fishs = data.reborn_fishs;
                this.use_items = data.use_items;
                this.initSeatNode(data.room_players);
                this.skillInfo = {};
                var freezeData = {};
                freezeData.freezeEndTime = data.freezeEndTime;
                freezeData.freezeMillis = data.freezeMillis;
                freezeData.seat = data.freezeSeat || data.seat;
                this.skillInfo.freezeData = freezeData;
            };
            BattleData.prototype.initSeatNode = function(players) {
                if (!players) return;
                for (var index = 0; index < players.length; index++) {
                    var playerInfo = players[index];
                    var seat = playerInfo.room_pos + 1;
                    if (playerInfo.uid == GameData_1.default.uid) {
                        FishData_1.default.mySeatIndex = seat;
                        this.isFlip = FishData_1.default.mySeatIndex == 3 || FishData_1.default.mySeatIndex == 4;
                    }
                    var playerData = new RoomPlayerInfoNode_1.default();
                    playerData.initPlayerInfo(playerInfo);
                    this.roomPlayerData[seat] = playerData;
                }
            };
            BattleData.prototype.updateSeatInfo = function(serverData) {
                var seat = serverData.room_pos + 1;
                var playerData = new RoomPlayerInfoNode_1.default();
                playerData.initPlayerInfo(serverData);
                this.roomPlayerData[seat] = playerData;
            };
            BattleData.prototype.updateSitInfoByLeave = function(data) {
                this.roomPlayerData[data.room_pos + 1].isInRoom = false;
            };
            BattleData.prototype.updateSelfInfoByLeave = function() {
                for (var i = 0; i < this.roomPlayerData.length; ++i) {
                    if (!this.roomPlayerData[i]) continue;
                    this.roomPlayerData[i].isInRoom = false;
                }
            };
            BattleData.prototype.setPlayerSpecialState = function(isPlay, seatIndex, name) {
                this.roomPlayerData[seatIndex][name] = isPlay;
            };
            BattleData.prototype.roomUseItem = function(data) {
                if (!!!data.item_info) return;
                var inData = data.item_info;
                if (inData.item_id > 10 && inData.item_id <= 18) {
                    this.resDaoDanFire(data);
                    GameData_1.default.uid == inData.uid && EventDis_1.default.dispatchEvent(GlobalVar_1.default.ROOM_USE_DAO_DAN_NOTICE, data);
                } else ;
            };
            BattleData.prototype.resDaoDanFire = function(data) {
                var inData = data.item_info;
                var fishNode = FishData_1.default.fishNodesObj[inData.fish_id];
                var callBack = new Laya.Handler(this, this.fishHit, [ inData ]);
                var daoDanData = {
                    item_id: inData.item_id,
                    seatIndex: g_battleData.getUserSeatByUid(inData.uid),
                    fish_id: inData.fish_id,
                    fishNode: fishNode,
                    callBack: callBack
                };
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.DAO_DAN_BOMB, daoDanData);
            };
            BattleData.prototype.fishHit = function(data) {
                var goldAddNum = GlobalFunc_1.default.getItemNumFromArr(data.drops.items, +globalConst_1.default.goldKey);
                var diamondAddNum = GlobalFunc_1.default.getItemNumFromArr(data.drops.items, +globalConst_1.default.goldKey);
                var param = {
                    uid: data.uid,
                    fish_id: data.fish_id,
                    drops: data.drops,
                    gold: PlayerData_1.default.getItemNum(globalConst_1.default.goldKey) + goldAddNum,
                    diamond: PlayerData_1.default.getItemNum(globalConst_1.default.diamondKey) + diamondAddNum
                };
                EventDis_1.default.dispatchEvent("killFish_broad", param);
            };
            BattleData.Instance = new BattleData();
            return BattleData;
        }();
        var g_battleData;
        g_battleData = BattleData.Instance;
        exports.default = g_battleData;
    }, {
        "../../globalConst/ConfigData": 83,
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../rolesNodes/seatNodes/RoomPlayerInfoNode": 132,
        "../hallData/GameData": 26,
        "../hallData/PlayerData": 27,
        "./FishData": 30
    } ],
    30: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var FishData = function() {
            function FishData() {}
            FishData.initFishData = function() {
                FishData.isTouching = false;
                FishData.isInDaoDan = false;
                FishData.isSelfBitTime = false;
                FishData.isSelfDragonTime = false;
                FishData.isDragonCannonOn = false;
            };
            FishData.mySeatIndex = 1;
            FishData.isSelfBitTime = false;
            FishData.isSelfHyTime = false;
            FishData.isSelfDragonTime = false;
            FishData.isDragonCannonOn = false;
            FishData.hyCanFire = false;
            FishData.skillCd = [];
            FishData.isTouching = false;
            FishData.isAutoButtonOn = false;
            FishData.isInEditer = false;
            FishData.shakeTime = 0;
            FishData.inDaodan = false;
            FishData.popindex = 0;
            return FishData;
        }();
        exports.default = FishData;
    }, {} ],
    31: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var FishLineData = function() {
            function FishLineData() {
                this.isFishLineLoaded = false;
                this.isFirstFishLineLoaded = false;
                this.fishLineObj = new Object();
                this.newUserFishLines = [];
            }
            FishLineData.prototype.getFishLines = function() {
                if (this.isFishLineLoaded) {
                    EventDis_1.default.dispatchEvent("load_fish_path_over");
                    return;
                }
                this.isFishLineLoaded = true;
                var json = ConfigerHelper_1.default.getFileData("config/fishPathList.json");
                var fishPaths = json.fishPaths;
                var fishPathArr = [];
                for (var i = 0; i < fishPaths.length; ++i) {
                    var onePath = {
                        url: GlobalVar_1.default.reUrl + "config2/fishPaths/" + fishPaths[i],
                        type: Laya.Loader.JSON
                    };
                    fishPathArr.push(onePath);
                }
                Laya.loader.load(fishPathArr, new Laya.Handler(this, function() {
                    EventDis_1.default.dispatchEvent("load_fish_path_over");
                }));
                this.getNewUserFishLines();
            };
            FishLineData.prototype.getNewUserFishLines = function() {
                if (this.isFirstFishLineLoaded) return;
                this.isFirstFishLineLoaded = true;
                var json = ConfigerHelper_1.default.getFileData("config/fishPathList.json");
                this.newUserFishLines = json.newUserFishPaths;
                var fishPathArr = [];
                for (var i = 0; i < this.newUserFishLines.length; ++i) {
                    var onePath = {
                        url: GlobalVar_1.default.reUrl + "config/fishPaths/" + this.newUserFishLines[i],
                        type: Laya.Loader.JSON
                    };
                    fishPathArr.push(onePath);
                }
                Laya.loader.load(fishPathArr);
            };
            FishLineData.Instance = new FishLineData();
            return FishLineData;
        }();
        var g_fishLineData;
        g_fishLineData = FishLineData.Instance;
        exports.default = g_fishLineData;
    }, {
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalVar": 90
    } ],
    32: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalObj_1 = require("../../globalConst/GlobalObj");
        var BillExchangeView_1 = require("./BillExchangeView");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var DailyActivityView_1 = require("./DailyActivityView");
        var GoldPagDialog_1 = require("./GoldPagDialog");
        var FocusGongZhongHao_1 = require("./FocusGongZhongHao");
        var VipConfirm_1 = require("./VipConfirm");
        var OnOffManager_1 = require("../../globalConst/OnOffManager");
        var ActivityType;
        (function(ActivityType) {
            ActivityType["PHONEBILL"] = "兑换话费";
            ActivityType["DATEACTIVE"] = "每日活动";
            ActivityType["GLODPAG"] = "金猪送礼";
            ActivityType["GONGZHONGHAO"] = "关注有礼";
            ActivityType["VIPCONFIRM"] = "VIP认证";
        })(ActivityType = exports.ActivityType || (exports.ActivityType = {}));
        var ActivityDlg = function(_super) {
            __extends(ActivityDlg, _super);
            function ActivityDlg() {
                var _this = _super.call(this) || this;
                _this.activityData = [ {
                    name: ActivityType.PHONEBILL,
                    isOn: OnOffManager_1.default.isPhoneBillOn,
                    activityID: 2,
                    viewID: 0,
                    data: {
                        state: 0,
                        finalTime: 1566182184
                    }
                }, {
                    name: ActivityType.DATEACTIVE,
                    isOn: OnOffManager_1.default.isDateActivelOn,
                    activityID: 1,
                    viewID: 0
                }, {
                    name: ActivityType.GLODPAG,
                    isOn: OnOffManager_1.default.isGoldPagOn,
                    activityID: 3,
                    viewID: 0,
                    data: {
                        state: 0,
                        pagGrade: 4,
                        pagExp: 123,
                        saveGold: 5e6,
                        finalTime: 1559232e3
                    }
                }, {
                    name: ActivityType.GONGZHONGHAO,
                    isOn: OnOffManager_1.default.isGongZhongHaoOn,
                    activityID: 4,
                    viewID: 0
                }, {
                    name: ActivityType.VIPCONFIRM,
                    isOn: OnOffManager_1.default.isVipConfirmOn,
                    activityID: 5,
                    viewID: 0
                } ];
                _this.activityList = [];
                _this.currectIndex = -1;
                _this.activityViews = {};
                GlobalFunc_1.default.openDialog(_this);
                _this.initActivity();
                _this.initTabs();
                _this.list_tabs.array = _this.activityList;
                _this.choiceTabs(0);
                _this.list_tabs.scrollBar.visible = false;
                _this.list_tabs.mouseHandler = new Laya.Handler(_this, _this.listOnMouse);
                _this.returnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.DELETE_ACTIVITY_TAB, _this, _this.deleteActivity);
                return _this;
            }
            ActivityDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    EventDis_1.default.delAllEvnt(_this);
                    _this.destroy();
                    _this.close();
                }));
            };
            ActivityDlg.prototype.initTabs = function() {
                for (var index = 0; index < this.activityData.length; index++) {
                    var data = this.activityData[index];
                    if (!data.isOn) continue;
                    var object = GlobalObj_1.default.createActivityTabsObj(data);
                    this.activityList.push(object);
                }
            };
            ActivityDlg.prototype.initActivity = function() {
                for (var index = 0, i = 0; index < this.activityData.length; index++) {
                    var data = this.activityData[index];
                    if (!data.isOn) continue;
                    data.viewID = i;
                    i++;
                    var box = new Laya.Box();
                    box.name = "item" + index;
                    var view = this.getActivityView(data);
                    if (view && view != -1) box.addChild(view); else if (view == -1) this.activityData.splice(index, 1);
                    this.stack_activity.addItem(box);
                    this.activityViews[index.toString()] = view;
                }
                this.stack_activity.initItems();
            };
            ActivityDlg.prototype.getActivityView = function(data) {
                var view;
                switch (data.name) {
                  case ActivityType.DATEACTIVE:
                    view = new DailyActivityView_1.DailyActivityView();
                    break;

                  case ActivityType.PHONEBILL:
                    view = new BillExchangeView_1.default();
                    if (view.initUI && !view.initUI(data)) return -1;
                    break;

                  case ActivityType.GLODPAG:
                    view = new GoldPagDialog_1.default();
                    if (view.initUI && !view.initUI(data)) return -1;
                    break;

                  case ActivityType.GONGZHONGHAO:
                    view = new FocusGongZhongHao_1.default();
                    break;

                  case ActivityType.VIPCONFIRM:
                    view = new VipConfirm_1.default();
                    break;

                  default:
                    break;
                }
                return view;
            };
            ActivityDlg.prototype.choiceTabs = function(nextIndex) {
                if (nextIndex == this.currectIndex) return;
                if (this.currectIndex >= 0) if (this.activityList[this.currectIndex]) {
                    var data = this.activityList[this.currectIndex].btn_tabs;
                    data.width = 202;
                    data.centerX = 0;
                    data.skin = "noZip/btn_1.png";
                    data.labelStrokeColor = "#0b3170";
                }
                var nextData = this.activityList[nextIndex].btn_tabs;
                nextData.width = 211;
                nextData.centerX = 5;
                nextData.skin = "common/btn_0.png";
                nextData.labelStrokeColor = "#70200b";
                this.currectIndex = nextIndex;
                this.list_tabs.refresh();
                var viewID = this.activityList[nextIndex].viewID;
                this.stack_activity.selectedIndex = viewID;
                var view = this.activityViews[viewID.toString()];
                if (view) view.playOpenAni && view.playOpenAni();
            };
            ActivityDlg.prototype.listOnMouse = function(event, index) {
                if (event.type == Laya.Event.CLICK && event.target instanceof Laya.Button) this.choiceTabs(index);
            };
            ActivityDlg.prototype.deleteActivity = function(viewID) {
                var index = 0;
                for (index = 0; index < this.activityList.length; index++) {
                    var data = this.activityList[index];
                    if (data.viewID == viewID) break;
                }
                this.activityList.splice(index, 1);
                if (index < this.currectIndex) this.currectIndex--; else if (index == this.currectIndex) this.currectIndex = -1;
                this.list_tabs.refresh();
                this.choiceTabs(0);
            };
            ActivityDlg.prototype.destroy = function() {
                this.destroyChildren();
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return ActivityDlg;
        }(layaMaxUI_1.ui.hallScene.ActivityDialogUI);
        exports.ActivityDlg = ActivityDlg;
    }, {
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalObj": 88,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/OnOffManager": 93,
        "../../ui/layaMaxUI": 151,
        "./BillExchangeView": 39,
        "./DailyActivityView": 43,
        "./FocusGongZhongHao": 49,
        "./GoldPagDialog": 50,
        "./VipConfirm": 64
    } ],
    33: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GameData_1 = require("../../datas/hallData/GameData");
        var WarningMessage_1 = require("../../common/WarningMessage");
        var NetManager_1 = require("../../netWork/NetManager");
        var RewardDialog_1 = require("./RewardDialog");
        var globalConst_1 = require("../../globalConst/globalConst");
        var SceneM_1 = require("../../common/SceneM");
        var ActivityIntegerDlg = function(_super) {
            __extends(ActivityIntegerDlg, _super);
            function ActivityIntegerDlg(data) {
                var _this = _super.call(this) || this;
                _this.integerArr = [ 0, 9, 12, 15, 18, 21, 24 ];
                _this.status = [];
                _this.scrollIndex = 0;
                GlobalFunc_1.default.openDialog(_this);
                _this.status = data;
                _this.width = Laya.stage.displayWidth;
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.onCloseDlg);
                _this.listMain.scrollBar.showButtons = false;
                _this.listMain.renderHandler = new Laya.Handler(_this, _this.onLstMainRender);
                _this.listMain.mouseHandler = new Laya.Handler(_this, _this.onLstMainClick);
                _this.rewards = GlobalFunc_1.default.layaGetRes("config/wholepoint.json");
                _this.tickTime = GlobalFunc_1.default.getTime(GameData_1.default.serverTimeStamp).hours;
                _this.updateView();
                EventDis_1.default.addEvntListener("wholeLoad", _this, function(data) {
                    _this.status = data.info;
                    _this.updateView();
                });
                EventDis_1.default.addEvntListener("getWholeReward", _this, function(data) {
                    _this.status[data.list_id - 1].status = 2;
                    var rewardDlg = new RewardDialog_1.default([ {
                        item_id: data.item_id,
                        item_count: data.item_count
                    } ]);
                    rewardDlg.init(null, null);
                    SceneM_1.default.addToMiddLayer(rewardDlg, globalConst_1.default.dialogLayer);
                    _this.updateView();
                });
                return _this;
            }
            ActivityIntegerDlg.prototype.onCloseDlg = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ActivityIntegerDlg.prototype.updateView = function() {
                if (this.rewards) this.listMain.dataSource = this.rewards.rewards;
            };
            ActivityIntegerDlg.prototype.onLstMainRender = function(cell, index) {
                var data = this.listMain.getItem(index);
                var lblText = cell.getChildByName("lblText");
                var btnGet = cell.getChildByName("btnGet");
                btnGet.labelStrokeColor = data == 1 ? "#0b3170" : "#70200b";
                data != 1 ? GlobalFunc_1.default.changeButtonToOrange(btnGet) : GlobalFunc_1.default.changeButtonToGray(btnGet);
                var interval = [ this.integerArr[index], this.integerArr[index + 1] ];
                btnGet.visible = this.tickTime >= interval[0];
                btnGet.label = "领 取";
                var state = this.status[index];
                if (state && state.status == 3) {
                    btnGet.label = "已过期";
                    GlobalFunc_1.default.changeButtonToGray(btnGet);
                    btnGet.strokeColors = "#0b3170";
                } else if (state && state.status == 2) {
                    GlobalFunc_1.default.changeButtonToGray(btnGet);
                    btnGet.label = "已领取";
                    btnGet.strokeColors = "#0b3170";
                } else if (state && state.status == 1 && btnGet.visible) this.scrollIndex = index;
                if (this.rewards && this.rewards.rewards && index == this.rewards.rewards.length - 1) this.listMain.scrollTo(this.scrollIndex);
                btnGet.mouseEnabled = true;
                var lstItem = cell.getChildByName("lstItem");
                lstItem.renderHandler = new Laya.Handler(this, this.onLstItemRender);
                lstItem.dataSource = data.items;
                var starTime = data.starTime.split(":");
                var endTime = data.endTime.split(":");
                lblText.text = starTime[0] + ":" + starTime[1] + " - " + endTime[0] + ":" + endTime[1];
            };
            ActivityIntegerDlg.prototype.onLstMainClick = function(e, index) {
                if (e.type == "click" && e.target.name == "btnGet") {
                    var data = this.status[index];
                    if (data && data.status == 1) NetManager_1.default.reqWholeReward(index + 1); else if (data && data.status == 2) ; else new WarningMessage_1.WarningMessage("领取失败,已过期");
                }
            };
            ActivityIntegerDlg.prototype.onLstItemRender = function(cell, index) {
                var data = cell.dataSource;
                var item = PlayerData_1.default.items[data.itemId];
                var label = cell.getChildByName("lblCount");
                var img = cell.getChildByName("imgItem");
                label.text = data.count;
                img.skin = "iconAndSkin/" + item.skin;
            };
            ActivityIntegerDlg.prototype.destroy = function() {
                _super.prototype.destroy.call(this);
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
            };
            return ActivityIntegerDlg;
        }(layaMaxUI_1.ui.hallScene.ActivityIntegerDlgUI);
        exports.ActivityIntegerDlg = ActivityIntegerDlg;
    }, {
        "../../common/SceneM": 19,
        "../../common/WarningMessage": 25,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "./RewardDialog": 60
    } ],
    34: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GameData_1 = require("../../datas/hallData/GameData");
        var WarningMessage_1 = require("../../common/WarningMessage");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var RewardDialog_1 = require("./RewardDialog");
        var NetManager_1 = require("../../netWork/NetManager");
        var ActicityInviteDlg = function(_super) {
            __extends(ActicityInviteDlg, _super);
            function ActicityInviteDlg() {
                var _this = _super.call(this) || this;
                _this.isShare = false;
                EventDis_1.default.addEvntListener(GlobalVar_1.default.WX_ONSHOW, _this, function() {
                    _this.lstInvite.mouseEnabled = true;
                });
                GlobalFunc_1.default.openDialog(_this);
                _this.width = Laya.stage.displayWidth;
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.onCloseDlg);
                _this.lstInvite.scrollBar.showButtons = false;
                _this.lstInvite.renderHandler = new Laya.Handler(_this, _this.onLstInviteRender);
                _this.lstInvite.mouseHandler = new Laya.Handler(_this, _this.onLstInviteClick);
                _this.updateView();
                EventDis_1.default.addEvntListener(GlobalVar_1.default.SHARE_REWARD, _this, function(data) {
                    if (data.length > 0) {
                        var rewardDlg = new RewardDialog_1.default(data);
                        rewardDlg.init(null, null);
                        SceneM_1.default.addToMiddLayer(rewardDlg, globalConst_1.default.dialogLayer);
                    }
                    _this.lstInvite.refresh();
                    _this.mouseEnabled = true;
                });
                _this.btnInvite.visible = true;
                _this.btnInvite.on(Laya.Event.CLICK, _this, _this.inviteFriend);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.SHARE_ADD, _this, function() {
                    _this.lbInvite.text = GameData_1.default.inviteNum + "";
                    _this.lstInvite.refresh();
                });
                EventDis_1.default.addEvntListener("reset_list_invite", _this, function() {
                    this.lstInvite.mouseEnabled = true;
                });
                return _this;
            }
            ActicityInviteDlg.prototype.onCloseDlg = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ActicityInviteDlg.prototype.updateView = function() {
                var invite = GameData_1.default.inviteData;
                if (!invite) GameData_1.default.inviteData = invite = GlobalFunc_1.default.layaGetRes("config/invitationAward.json").invite;
                if (!invite) return;
                this.lstInvite.dataSource = invite;
                this.lbInvite.text = GameData_1.default.inviteNum + "";
                this.lstInvite.scrollTo(this.getScrollIndex());
            };
            ActicityInviteDlg.prototype.onLstInviteRender = function(cell, index) {
                var data = this.lstInvite.getItem(index);
                var lblText = cell.getChildByName("lblText");
                var btnGet = cell.getChildByName("btnGet");
                var num = +data.inviteNum;
                var i = GameData_1.default.inviteAwards.indexOf(num);
                var inviteNum = GameData_1.default.inviteNum;
                btnGet.labelStrokeColor = i < 0 && inviteNum >= num ? "#70200b" : "#0b3170";
                if (i < 0) {
                    if (inviteNum < num) btnGet.skin = "noZip/btn_gray.png"; else btnGet.skin = "basePic/btn_yellow.png";
                    btnGet.label = "领 取";
                } else {
                    btnGet.label = "已领取";
                    btnGet.skin = "noZip/btn_gray.png";
                }
                lblText.text = "邀请" + num + "人";
                var lstItem = cell.getChildByName("lstItem");
                lstItem.renderHandler = new Laya.Handler(this, this.onLstItemRender);
                lstItem.dataSource = data.items;
            };
            ActicityInviteDlg.prototype.getScrollIndex = function() {
                var index = 0;
                for (var i = 0; i < this.lstInvite.dataSource.length - 1; i++) {
                    var data = this.lstInvite.dataSource[i];
                    var num = +data.inviteNum;
                    var inviteNum = GameData_1.default.inviteNum;
                    var target = GameData_1.default.inviteAwards.indexOf(num);
                    if (target < 0 && inviteNum >= num) index = i;
                }
                return index;
            };
            ActicityInviteDlg.prototype.onLstItemRender = function(cell, index) {
                var data = cell.dataSource;
                var item = PlayerData_1.default.items[data.itemId];
                var label = cell.getChildByName("lblCount");
                var img = cell.getChildByName("imgItem");
                label.text = data.count;
                img.skin = "iconAndSkin/" + (data.itemId == 1 || data.itemId == 5 ? "" : "icon_") + item.skin;
            };
            ActicityInviteDlg.prototype.onLstInviteClick = function(e, index) {
                if (e.type == "click" && e.target.name == "btnGet") {
                    var data = this.lstInvite.getItem(index);
                    var num = +data.inviteNum;
                    var i = GameData_1.default.inviteAwards.indexOf(num);
                    if (i < 0) {
                        var inviteNum = GameData_1.default.inviteNum;
                        if (inviteNum < num) new WarningMessage_1.WarningMessage("邀请好友人数不足"); else {
                            this.lstInvite.mouseEnabled = false;
                            NetManager_1.default.reqShareAward(num);
                        }
                    } else new WarningMessage_1.WarningMessage("奖励已领取");
                }
            };
            ActicityInviteDlg.prototype.inviteFriend = function() {
                this.isShare = true;
                var data = GlobalFunc_1.default.layaGetRes("config/sharecard.json");
                if (GlobalVar_1.default.isWx) {
                    var url = "";
                    var desc = "";
                    if (data.image) {
                        var arr1 = data.image.split(";");
                        var len = arr1.length;
                        url = arr1[Math.floor(len * Math.random())];
                    }
                    if (data.desc) {
                        var arr2 = data.desc.split(";");
                        var len = arr2.length;
                        desc = arr2[Math.floor(len * Math.random())];
                    }
                    wx.shareAppMessage({
                        title: desc,
                        imageUrl: url,
                        query: "uid=" + GameData_1.default.uid
                    });
                }
            };
            ActicityInviteDlg.prototype.onClosed = function() {};
            ActicityInviteDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            return ActicityInviteDlg;
        }(layaMaxUI_1.ui.hallScene.ActivityInviteDlgUI);
        exports.ActicityInviteDlg = ActicityInviteDlg;
    }, {
        "../../common/SceneM": 19,
        "../../common/WarningMessage": 25,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "./RewardDialog": 60
    } ],
    35: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var WarningMessage_1 = require("../../common/WarningMessage");
        var BubbleView_1 = require("../../common/BubbleView");
        var ActivityLuckDlg = function(_super) {
            __extends(ActivityLuckDlg, _super);
            function ActivityLuckDlg() {
                var _this = _super.call(this) || this;
                _this.cdTimes = [];
                _this.randoms = [];
                GlobalFunc_1.default.openDialog(_this);
                _this.width = Laya.stage.displayWidth;
                _this.initData();
                _this.btn_buy.on(Laya.Event.CLICK, _this, _this.onBtn_buyCLICK);
                _this.returnBack.on(Laya.Event.CLICK, _this, _this.onCloseDlg);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.NEWUSERPACK_BUY, _this, function() {
                    _this.onCloseDlg();
                });
                return _this;
            }
            Object.defineProperty(ActivityLuckDlg.prototype, "lastTime", {
                get: function() {
                    return PlayerData_1.default.freeGoldInfo.luckyDrawInfo.lastTime;
                },
                set: function(num) {
                    PlayerData_1.default.freeGoldInfo.luckyDrawInfo.lastTime = num;
                },
                enumerable: true,
                configurable: true
            });
            Object.defineProperty(ActivityLuckDlg.prototype, "drawNum", {
                get: function() {
                    return PlayerData_1.default.freeGoldInfo.luckyDrawInfo.drawNum;
                },
                set: function(num) {
                    PlayerData_1.default.freeGoldInfo.luckyDrawInfo.drawNum = num;
                },
                enumerable: true,
                configurable: true
            });
            ActivityLuckDlg.prototype.onBtn_buyCLICK = function() {
                var dialog = undefined;
                if (this.type == 0) {
                    dialog = new WarningMessage_1.WarningMessage("抽奖成功");
                    if (this.drawNum > 0) {
                        this.drawNum--;
                        this.lastTime = Math.floor(GlobalFunc_1.default.getClientTime() / 1e3);
                    }
                    this.checkPageType();
                } else if (this.type == 1) dialog = new WarningMessage_1.WarningMessage("等待抽奖冷却时间"); else if (this.type == 2) dialog = new WarningMessage_1.WarningMessage("今日已达抽奖上限");
            };
            ActivityLuckDlg.prototype.onCloseDlg = function() {
                var _this = this;
                Laya.timer.clearAll(this);
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ActivityLuckDlg.prototype.destroy = function() {
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
            };
            ActivityLuckDlg.prototype.setTipType = function(index) {
                Laya.timer.clear(this, this.updateTime);
                switch (index) {
                  case 0:
                    this.lbTip.text = "观看15秒广告即可免费抽奖";
                    this.lbTip.color = "#16d4e5";
                    this.imgRedPoint.visible = true;
                    break;

                  case 1:
                    this.lbTip.color = "#21e818";
                    this.updateTime();
                    Laya.timer.loop(1e3, this, this.updateTime);
                    this.imgRedPoint.visible = false;
                    break;

                  case 2:
                    this.lbTip.text = "今日已达抽奖上限";
                    this.lbTip.color = "#b3dcf3";
                    this.imgRedPoint.visible = false;
                    break;
                }
            };
            ActivityLuckDlg.prototype.setBtnType = function(index) {
                this.btn_buy.skin = index == 0 ? "basePic/btn_yellow.png" : "noZip/btn_gray.png";
                switch (index) {
                  case 0:
                    this.btn_buy.gray = false;
                    break;

                  case 1:
                    this.btn_buy.gray = true;
                    break;

                  case 2:
                    this.btn_buy.gray = true;
                    break;
                }
            };
            ActivityLuckDlg.prototype.checkPageType = function() {
                if (this.drawNum > 0) {
                    this.currTime = this.lastTime + this.cdTime - Math.floor(GlobalFunc_1.default.getClientTime() / 1e3);
                    if (this.drawNum == this.drawNumMax || this.currTime <= 0) this.type = 0; else this.type = 1;
                } else this.type = 2;
                this.setBtnType(this.type);
                this.setTipType(this.type);
            };
            ActivityLuckDlg.prototype.updateTime = function() {
                var text = "剩余时间：" + GlobalFunc_1.default.SecsToMinStr(this.currTime);
                this.lbTip.changeText(text);
                if (this.currTime <= 0) {
                    Laya.timer.clear(this, this.updateTime);
                    this.checkPageType();
                } else this.currTime--;
            };
            ActivityLuckDlg.prototype.initData = function() {
                this.htmlText.style.wordWrap = false;
                this.htmlText.style.width = 400;
                this.htmlText.style.align = "center";
                this.htmlText.innerHTML = "<span color='#ffffff' style='font:24px'>有几率直接抽取大量</span>" + "<span color='#ffff00' style='font:24px'>奖券</span>" + "<span color='#ffffff' style='font:24px'>或</span>" + "<span color='#ffff00' style='font:24px' >弹头</span>" + "<span color='#ffffff' style='font:24px' >哦!</span>";
                this.updateBox();
                this.drawNum = PlayerData_1.default.freeGoldInfo.luckyDrawInfo.drawNum;
                this.lastTime = PlayerData_1.default.freeGoldInfo.luckyDrawInfo.lastTime;
                this.drawNumMax = 5;
                this.type = 0;
                this.currTime = 0;
                this.cdTime = 20;
                this.checkPageType();
            };
            ActivityLuckDlg.prototype.updateBox = function() {
                var _this = this;
                var data = GlobalFunc_1.default.layaGetRes("config/luckyDraw.json");
                if (data.items) {
                    var i_1 = 0;
                    var len_1 = data.items.length;
                    var bubbles_1 = [];
                    while (i_1 < 5) {
                        var bubble = new BubbleView_1.BubbleView(i_1, data.items[i_1]);
                        i_1++;
                        bubbles_1.push(bubble);
                        this.boxBubble.addChild(bubble);
                    }
                    Laya.timer.loop(1200, this, function() {
                        var random0 = Math.floor(Math.random() * 5);
                        var random1 = Math.floor(Math.random() * 5);
                        if (random0 != _this.randoms[0] && random0 != _this.randoms[1]) _this.randoms[0] = random0; else {
                            while (random0 == _this.randoms[0] || random0 == _this.randoms[1]) random0 = Math.floor(Math.random() * 5);
                            _this.randoms[0] = random0;
                        }
                        if (random1 != _this.randoms[0] && random1 != _this.randoms[1]) _this.randoms[1] = random1; else {
                            while (random1 == _this.randoms[0] || random1 == _this.randoms[1]) random1 = Math.floor(Math.random() * 5);
                            _this.randoms[1] = random1;
                        }
                        bubbles_1[_this.randoms[0]].updateView(data.items[i_1 % len_1]);
                        Laya.timer.once(300, _this, function() {
                            bubbles_1[_this.randoms[1]].updateView(data.items[i_1 % len_1]);
                        });
                    });
                    this.cdTimes = data.times;
                }
            };
            ActivityLuckDlg.prototype.shareStart = function() {
                GlobalFunc_1.default.log("进入加载视频,");
                if (1) if (1) {
                    var that = this;
                    var _adUnitId = "adunit-f58a58061441f022";
                    var videoAd = wx.createRewardedVideoAd({
                        adUnitId: _adUnitId
                    });
                    GlobalFunc_1.default.log("准备加载视频," + "," + _adUnitId);
                    videoAd.load().then(function() {
                        videoAd.show();
                        GlobalFunc_1.default.log("视频加载成功");
                        videoAd.onClose(function(status) {
                            if (status && status.isEnded || status === undefined) GlobalFunc_1.default.log("视频正常播放结束"); else GlobalFunc_1.default.log("玩家中途退出，不发放奖励");
                            videoAd.offClose();
                        });
                    }).catch(function(err) {
                        GlobalFunc_1.default.log("视频加载错误," + err.errMsg + "_" + err.errCode);
                    });
                } else ; else if (1) wx.aldShareAppMessage({
                    title: "",
                    imageUrl: "",
                    query: "uid=",
                    success: function(res) {},
                    fail: function(res) {}
                }); else ;
            };
            return ActivityLuckDlg;
        }(layaMaxUI_1.ui.hallScene.ActivityLuckDlgUI);
        exports.default = ActivityLuckDlg;
    }, {
        "../../common/BubbleView": 5,
        "../../common/WarningMessage": 25,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../ui/layaMaxUI": 151
    } ],
    36: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var DialogManager_1 = require("../../common/DialogManager");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var VipRebateDlg_1 = require("./VipRebateDlg");
        var SceneM_1 = require("../../common/SceneM");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var NetManager_1 = require("../../netWork/NetManager");
        var GameData_1 = require("../../datas/hallData/GameData");
        var WarningMessage_1 = require("../../common/WarningMessage");
        var RewardDialog_1 = require("./RewardDialog");
        var ActivityRebateDlg = function(_super) {
            __extends(ActivityRebateDlg, _super);
            function ActivityRebateDlg() {
                var _this = _super.call(this) || this;
                _this.helpInfo = {};
                _this.lottery_count = 0;
                _this.initBtnEvent();
                _this.initUI();
                _this.getHelpInfo();
                EventDis_1.default.addEvntListener(GlobalVar_1.default.DATA_VIP_INFO, _this, _this.updateBtn);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.NOTICE_YESTERDAY_GOLD, _this, _this.setGold);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.NOTICE_YESTERDAY_DONE, _this, function() {
                    var rewardDlg = new RewardDialog_1.default([ {
                        item_id: globalConst_1.default.ticket,
                        item_count: _this.lottery_count
                    } ]);
                    rewardDlg.init(null, null);
                    SceneM_1.default.addToMiddLayer(rewardDlg, globalConst_1.default.dialogLayer);
                    _this.updateBtn();
                });
                GlobalFunc_1.default.openDialog(_this);
                return _this;
            }
            ActivityRebateDlg.prototype.initBtnEvent = function() {
                this.returnBack.on(Laya.Event.CLICK, this, this.onCloseDlg);
                this.btn_vipHelp.on(Laya.Event.CLICK, this, this.openVipRebate);
                this.btn_getTicket.on(Laya.Event.CLICK, this, this.sendReceiveRebate);
            };
            ActivityRebateDlg.prototype.setGold = function(data) {
                this.lottery_count = data.lottery_count;
                this.text_lastGetGold.text = data.gold_count.toLocaleString();
                this.text_nowGetGold.text = data.today_gold_count.toLocaleString();
                this.text_ticketNum.text = "x" + data.lottery_count.toLocaleString();
                this.updateBtn();
            };
            ActivityRebateDlg.prototype.initUI = function() {
                this.width = Laya.stage.displayWidth;
                this.text_vipGrade.text = PlayerData_1.default.vip_level.toString();
            };
            ActivityRebateDlg.prototype.openVipRebate = function() {
                var dialog = new VipRebateDlg_1.default(this.helpInfo);
                SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
            };
            ActivityRebateDlg.prototype.sendReceiveRebate = function() {
                if (!(!GameData_1.default.isRebate && this.lottery_count > 0)) return;
                if (PlayerData_1.default.vip_level > 0) {
                    if (GameData_1.default.rebateDate != new Date(GameData_1.default.serverTimeStamp).getDate()) {
                        new WarningMessage_1.WarningMessage("当前奖励已过期");
                        this.close();
                        return;
                    }
                    NetManager_1.default.reqYesterDayReward();
                } else {
                    var str = GlobalFunc_1.default.getColorText("成为贵族可永久享受返奖券福利哦！", 24, "#ffffff", "#0b3170");
                    var commonDialog = new CommonDialog_1.default(1, [ str ], undefined, "成为贵族", "温馨提示", false, Laya.Handler.create(this, function() {
                        DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_VIPCHARGE);
                    }));
                    SceneM_1.default.addToMiddLayer(commonDialog, globalConst_1.default.dialogLayer);
                }
            };
            ActivityRebateDlg.prototype.updateBtn = function() {
                this.btn_getTicket.labelStrokeColor = GameData_1.default.isRebate || this.lottery_count == 0 ? "#0b3170" : "#70200b";
                this.btn_getTicket.skin = GameData_1.default.isRebate || this.lottery_count == 0 ? "noZip/btn_gray.png" : "basePic/btn_yellow.png";
                this.btn_getTicket.label = GameData_1.default.isRebate && this.lottery_count > 0 ? "已领取" : "领取";
            };
            ActivityRebateDlg.prototype.onCloseDlg = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ActivityRebateDlg.prototype.getHelpInfo = function() {
                var data = ConfigerHelper_1.default.getFileData("config/freeTicket.json");
                if (data && data.FreeTicket) {
                    var freeTicket = data.FreeTicket;
                    var number = 1;
                    for (var key in freeTicket) this.helpInfo[key] = "贵族" + number++ + " : " + freeTicket[key];
                }
            };
            ActivityRebateDlg.prototype.destroy = function() {
                _super.prototype.destroy.call(this);
                EventDis_1.default.delAllEvnt(this);
            };
            return ActivityRebateDlg;
        }(layaMaxUI_1.ui.hallScene.ActivityRebateDlgUI);
        exports.default = ActivityRebateDlg;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/DialogManager": 9,
        "../../common/SceneM": 19,
        "../../common/WarningMessage": 25,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "./RewardDialog": 60,
        "./VipRebateDlg": 66
    } ],
    37: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var ActivitySaveAppletDlg = function(_super) {
            __extends(ActivitySaveAppletDlg, _super);
            function ActivitySaveAppletDlg() {
                var _this = _super.call(this) || this;
                GlobalFunc_1.default.openDialog(_this);
                _this.width = Laya.stage.displayWidth;
                _this.btnGet.on(Laya.Event.CLICK, _this, _this.getReward);
                _this.lstItem.renderHandler = new Laya.Handler(_this, _this.onLstItemRender);
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.onCloseDlg);
                var data = GlobalFunc_1.default.layaGetRes("config/collection.json");
                if (data.items) _this.lstItem.dataSource = data.items;
                return _this;
            }
            ActivitySaveAppletDlg.prototype.getReward = function() {
                this.onCloseDlg();
            };
            ActivitySaveAppletDlg.prototype.onLstItemRender = function(cell, index) {
                var data = this.lstItem.getItem(index);
                var item = PlayerData_1.default.items[data.itemId];
                var label = cell.getChildByName("lblCount");
                var img = cell.getChildByName("imgItem");
                label.text = data.count;
                if (data.itemId == 7) {
                    img.skin = "vipCharge/vip_sd.png";
                    img.anchorX = img.anchorY = .5;
                    img.centerX = img.centerY = 0;
                    img.scale(.5, .5);
                } else if (data.itemId == 1) {
                    img.skin = "iconAndSkin/skin_goldCoin3.png";
                    img.anchorX = img.anchorY = .5;
                    img.centerX = img.centerY = 0;
                    img.scale(.65, .65);
                } else {
                    img.width = img.height = 62;
                    img.skin = "iconAndSkin/icon_" + item.skin;
                }
            };
            ActivitySaveAppletDlg.prototype.onCloseDlg = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ActivitySaveAppletDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            ActivitySaveAppletDlg.prototype.onClosed = function() {};
            return ActivitySaveAppletDlg;
        }(layaMaxUI_1.ui.hallScene.ActivitySaveAppletDlgUI);
        exports.ActivitySaveAppletDlg = ActivitySaveAppletDlg;
    }, {
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../ui/layaMaxUI": 151
    } ],
    38: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var ActivityInviteDlg_1 = require("./ActivityInviteDlg");
        var ActivityLuckDlg_1 = require("./ActivityLuckDlg");
        var ActivitySaveAppletDlg_1 = require("./ActivitySaveAppletDlg");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var globalConst_1 = require("../../globalConst/globalConst");
        var SceneM_1 = require("../../common/SceneM");
        var WarningMessage_1 = require("../../common/WarningMessage");
        var EventDis_1 = require("../../globalConst/EventDis");
        var ActivityIntegerDlg_1 = require("./ActivityIntegerDlg");
        var FreeFunc_1 = require("../../globalConst/FreeFunc");
        var NetManager_1 = require("../../netWork/NetManager");
        var OnOffManager_1 = require("../../globalConst/OnOffManager");
        var GameData_1 = require("../../datas/hallData/GameData");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var ActivityRebateDlg_1 = require("./ActivityRebateDlg");
        var FreeGoldInfo = function() {
            function FreeGoldInfo() {}
            return FreeGoldInfo;
        }();
        exports.FreeGoldInfo = FreeGoldInfo;
        var LuckyDrawInfo = function() {
            function LuckyDrawInfo() {}
            return LuckyDrawInfo;
        }();
        exports.LuckyDrawInfo = LuckyDrawInfo;
        var ActicityView = function(_super) {
            __extends(ActicityView, _super);
            function ActicityView(point, img, wholeData, left) {
                var _this = _super.call(this) || this;
                _this.endPoint = new Laya.Point(img.x, img.y);
                _this.whole = wholeData;
                _this.x = point.x;
                _this.y = point.y;
                _this.btnHelp.visible = OnOffManager_1.default.isHelp;
                _this.btnInteger.visible = OnOffManager_1.default.isWhole;
                _this.btnRebate.visible = OnOffManager_1.default.isRebate;
                _this.btnInvite.visible = OnOffManager_1.default.isInvite;
                _this.btnLuck.visible = OnOffManager_1.default.isLuck;
                _this.btnHelp.on(Laya.Event.CLICK, _this, _this.showHelp);
                _this.btnInteger.on(Laya.Event.CLICK, _this, _this.showInteger);
                _this.btnLuck.on(Laya.Event.CLICK, _this, _this.showLuck);
                _this.btnSave.on(Laya.Event.CLICK, _this, _this.showSave);
                _this.btnInvite.on(Laya.Event.CLICK, _this, _this.showInvite);
                _this.btnRebate.on(Laya.Event.CLICK, _this, _this.showRebate);
                _this.updateView();
                EventDis_1.default.addEvntListener("wholeLoad", _this, function(data) {
                    _this.whole = data.info;
                    _this.updateWhole();
                });
                EventDis_1.default.addEvntListener("wholeReward", _this, function(data) {
                    _this.whole[data.list_id - 1].status = 2;
                });
                EventDis_1.default.addEvntListener("helpReward", _this, function(data) {
                    _this.btnHelp.mouseEnabled = true;
                    _this.updateHelp();
                });
                EventDis_1.default.addEvntListener("paySuccess", _this, _this.updateHelp);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.NOTICE_YESTERDAY_DONE, _this, _this.updateRebate);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.SHARE_ADD, _this, _this.updateInvite);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.SHARE_REWARD, _this, _this.updateInvite);
                _this.checkRed();
                return _this;
            }
            ActicityView.prototype.checkRed = function() {
                this.updateLuck();
                this.updateHelp();
                this.updateWhole();
                this.updateRebate();
                this.updateInvite();
            };
            ActicityView.prototype.updateInvite = function() {
                this.imgTipInvite.visible = PlayerData_1.default.checkInvite();
            };
            ActicityView.prototype.updateView = function() {
                this.updateLuck();
                Laya.timer.loop(1e3, this, this.updateLuck);
            };
            ActicityView.prototype.updateLuck = function() {
                return;
                var drawNumMax = 5;
                var cdTime = 20;
                var drawNum = PlayerData_1.default.freeGoldInfo.luckyDrawInfo.drawNum;
                var drawTime = PlayerData_1.default.freeGoldInfo.luckyDrawInfo.lastTime + cdTime - Math.floor(GlobalFunc_1.default.getClientTime() / 1e3);
                this.imgTipLuck.visible = drawNum == drawNumMax || drawNum > 0 && drawTime <= 0;
            };
            ActicityView.prototype.updateHelp = function() {
                var gold = PlayerData_1.default.getItemNum(globalConst_1.default.gold + "");
                this.imgTipHelp.visible = PlayerData_1.default.left_count > 0 && gold < 1e3;
            };
            ActicityView.prototype.updateWhole = function() {
                this.imgTipInteger.visible = FreeFunc_1.default.checkWholeRed(this.whole);
            };
            ActicityView.prototype.updateRebate = function() {
                this.imgTipRebate.visible = !GameData_1.default.isRebate && GameData_1.default.rebateNum > 0;
            };
            ActicityView.prototype.showRebate = function() {
                if (!OnOffManager_1.default.isRebate) {
                    GlobalFunc_1.default.globalTip("救济金暂未开启");
                    return;
                }
                this.onClose();
                NetManager_1.default.reqYesterDayGold();
                var dlg = new ActivityRebateDlg_1.default();
                SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
            };
            ActicityView.prototype.showHelp = function() {
                if (!OnOffManager_1.default.isHelp) {
                    GlobalFunc_1.default.globalTip("救济金暂未开启");
                    return;
                }
                this.checkHelp();
                this.onClose();
            };
            ActicityView.prototype.checkHelp = function() {
                var gold = PlayerData_1.default.getItemNum(globalConst_1.default.gold + "");
                if (PlayerData_1.default.left_count <= 0) {
                    new WarningMessage_1.WarningMessage("您的救济金次数已用完,请前往充值");
                    return;
                }
                if (gold > 1e3) {
                    new WarningMessage_1.WarningMessage("金币小于1000可领取");
                    return;
                }
                var param = {
                    characterType: 2,
                    startPoint: new Laya.Point(this.x, this.y),
                    endPoint: this.endPoint,
                    aniName: "goldCoinAni",
                    seat: null,
                    isCommon: true
                };
                GlobalFunc_1.default.doItemFlyAni(param);
                NetManager_1.default.reqGetHelp();
                this.btnHelp.mouseEnabled = false;
            };
            ActicityView.prototype.showInvite = function() {
                if (!OnOffManager_1.default.isInvite) {
                    GlobalFunc_1.default.globalTip("邀请有礼暂未开启");
                    return;
                }
                this.onClose();
                var dialog = new ActivityInviteDlg_1.ActicityInviteDlg();
                SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
            };
            ActicityView.prototype.showSave = function() {
                if (!OnOffManager_1.default.isReserve) {
                    GlobalFunc_1.default.globalTip("收藏小程序暂未开启");
                    return;
                }
                this.onClose();
                var dialog = new ActivitySaveAppletDlg_1.ActivitySaveAppletDlg();
                SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
            };
            ActicityView.prototype.showLuck = function() {
                if (!OnOffManager_1.default.isLuck) {
                    GlobalFunc_1.default.globalTip("幸运抽奖暂未开启");
                    return;
                }
                this.onClose();
                var dialog = new ActivityLuckDlg_1.default();
                SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
            };
            ActicityView.prototype.showInteger = function() {
                if (!OnOffManager_1.default.isWhole) {
                    GlobalFunc_1.default.globalTip("整点奖励暂未开启");
                    return;
                }
                this.onClose();
                var dlg = new ActivityIntegerDlg_1.ActivityIntegerDlg(this.whole);
                SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
                NetManager_1.default.reqWholeRewardLoad();
            };
            ActicityView.prototype.onClose = function() {
                this.close();
                this.destroy();
            };
            ActicityView.prototype.destroy = function() {
                _super.prototype.destroy.call(this);
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
            };
            return ActicityView;
        }(layaMaxUI_1.ui.hallScene.ActivityViewUI);
        exports.ActicityView = ActicityView;
    }, {
        "../../common/SceneM": 19,
        "../../common/WarningMessage": 25,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/FreeFunc": 86,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/OnOffManager": 93,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "./ActivityIntegerDlg": 33,
        "./ActivityInviteDlg": 34,
        "./ActivityLuckDlg": 35,
        "./ActivityRebateDlg": 36,
        "./ActivitySaveAppletDlg": 37
    } ],
    39: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var GameData_1 = require("../../datas/hallData/GameData");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var DialogManager_1 = require("../../common/DialogManager");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var ExChangeAddressDlg_1 = require("./ExChangeAddressDlg");
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var BillExchangeView = function(_super) {
            __extends(BillExchangeView, _super);
            function BillExchangeView() {
                var _this = _super.call(this) || this;
                _this.ticketNum = 0;
                _this.viewID = 0;
                _this._step = 1;
                EventDis_1.default.addEvntListener("exchange_update_view", _this, _this.closeActivity);
                return _this;
            }
            BillExchangeView.prototype.initUI = function(data) {
                this.activityFinalTime = data.data.finalTime;
                this.viewID = data.viewID;
                this.setTime();
                Laya.timer.loop(1e3 * 60, this, this.setTime);
                var state = data.data.state;
                if (state == 0) this.stack_state.selectedIndex = 0; else if (state == 1) this.stack_state.selectedIndex = 1; else return false;
                var info = GameData_1.default.activityData;
                this.exchangeInfo = ConfigerHelper_1.default.getCachedValue("exchange", "itemID", "301", "lottery");
                this.text_originalCost.text = "原价 " + this.exchangeInfo.needLottery;
                this.text_needTicket.text = this.exchangeInfo.needLottery * .6 + "";
                this.ticketNum = PlayerData_1.default.getItemNum(globalConst_1.default.TicketID);
                this.num_ticket.text = this.ticketNum.toString();
                if (this._step == 0) this.playOpenAni(); else if (this._step == 1) this.getZheKou();
                this.btn_goExchange.on(Laya.Event.CLICK, this, this.checkToExchange);
                this.btn_getTicket.on(Laya.Event.CLICK, this, this.getZheKou);
                return true;
            };
            BillExchangeView.prototype.setTime = function() {
                var serTime = Number(GameData_1.default.serverTimeStamp) || parseInt(GlobalFunc_1.default.getClientTime().toString());
                this.remainingTime = GlobalFunc_1.default.getRestTime(serTime, this.activityFinalTime * 1e3);
                Laya.timer.loop(1e3, this, this.updateRemainingTime);
                this.updateRemainingTime();
            };
            BillExchangeView.prototype.playOpenAni = function() {
                var node = this.stack_state.selection;
                node.scaleX = node.scaleY = 0;
                this.ticketMove.stop();
                this.titleMove.stop();
                this.reSetUI();
                Laya.Tween.to(node, {
                    scaleX: 1,
                    scaleY: 1
                }, 1e3, Laya.Ease.elasticOut, Laya.Handler.create(this, this.playLoopAni), 300);
            };
            BillExchangeView.prototype.playLoopAni = function() {
                if (this.stack_state.selectedIndex == 0) this.ticketMove.play(0, true); else {
                    this.titleMove.play(0, true);
                    this.box_state1.mouseEnabled = true;
                    Laya.Tween.to(this.box_state1, {
                        alpha: 1
                    }, 300);
                }
            };
            BillExchangeView.prototype.updateRemainingTime = function() {
                var isFinish = false;
                this.remainingTime.seconds -= 1;
                if (!this.checkTime()) {
                    Laya.timer.clear(this, this.updateRemainingTime);
                    this.text_remainingTime.text = "活动已结束";
                }
                if (this.remainingTime.seconds == -1) {
                    this.remainingTime.minutes -= 1;
                    this.remainingTime.seconds = 59;
                }
                if (this.remainingTime.minutes == -1) {
                    this.remainingTime.minutes = 59;
                    this.remainingTime.hours -= 1;
                }
                if (this.remainingTime.hours == -1) {
                    this.remainingTime.hours = 23;
                    this.remainingTime.days -= 1;
                }
                this.text_remainingTime.text = this.remainingTime.days + ":" + this.remainingTime.hours + ":" + this.remainingTime.minutes + ":" + this.remainingTime.seconds;
            };
            BillExchangeView.prototype.checkTime = function() {
                for (var key in this.remainingTime) if (this.remainingTime[key] > 0) return true;
                return false;
            };
            BillExchangeView.prototype.reSetUI = function() {
                this.btn_getTicket.scale(1, 1);
                this.img_title.scale(1, 1);
                this.img_phoneBill.y = 120.5;
            };
            BillExchangeView.prototype.getZheKou = function() {
                this.stack_state.selectedIndex = 1;
                this.playOpenAni();
            };
            BillExchangeView.prototype.checkToExchange = function() {
                if (this.ticketNum >= 1800) {
                    var data = this.exchangeInfo;
                    var count = 1;
                    var item = PlayerData_1.default.items[data.itemID];
                    var dlg = new ExChangeAddressDlg_1.ExChangeAddressDlg(false, data, count, "30元话费", .6 * count * +data.needLottery, +data.exchangeID, item);
                    SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
                } else {
                    var needNum = 1800 - this.ticketNum;
                    var handler = new Laya.Handler(this, this.openShopDialog);
                    var str = GlobalFunc_1.default.getColorText("距离目标奖券还差" + needNum + "，成为贵族或者击杀", 28);
                    var str1 = GlobalFunc_1.default.getColorText("奖券鱼，可获得大量奖券哦！", 28);
                    var alert_1 = new CommonDialog_1.default(1, [ str ], [ str1 ], "成为贵族", "温馨提示", false, handler);
                    SceneM_1.default.addToMiddLayer(alert_1, globalConst_1.default.dialogLayer);
                }
            };
            BillExchangeView.prototype.openShopDialog = function() {
                DialogManager_1.default.doCloseDlg();
                DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_SHOP, undefined);
                this.destroy();
            };
            BillExchangeView.prototype.closeActivity = function() {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.DELETE_ACTIVITY_TAB, [ this.viewID ]);
            };
            BillExchangeView.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return BillExchangeView;
        }(layaMaxUI_1.ui.hallScene.BillExchangeViewUI);
        exports.default = BillExchangeView;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/DialogManager": 9,
        "../../common/SceneM": 19,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151,
        "./ExChangeAddressDlg": 45
    } ],
    40: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var NetManager_1 = require("../../netWork/NetManager");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var hallData_1 = require("../../datas/hallData/hallData");
        var RewardDialog_1 = require("./RewardDialog");
        var globalConst_1 = require("../../globalConst/globalConst");
        var SceneM_1 = require("../../common/SceneM");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var CheckComposeDialog = function(_super) {
            __extends(CheckComposeDialog, _super);
            function CheckComposeDialog(itemData) {
                var _this = _super.call(this) || this;
                _this.itemId = "";
                _this.itemNum = 0;
                GlobalFunc_1.default.openDialog(_this);
                _this.initUI(itemData);
                _this.btn_sure.on(Laya.Event.CLICK, _this, _this.sendComposeItem);
                _this.btn_cancel.on(Laya.Event.CLICK, _this, _this.doClose);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.HALL_DEBRISE_COMPOSE, _this, _this.resCompose);
                return _this;
            }
            CheckComposeDialog.prototype.initUI = function(itemData) {
                this.itemId = itemData.itemData.itemID;
                this.itemNum = itemData.itemNum;
                this.text_itemMsg.text = itemData.itemData.name + "*" + itemData.itemNum;
                this.text_used.text = itemData.itemNum * itemData.itemData.composeNum + "碎片";
            };
            CheckComposeDialog.prototype.sendComposeItem = function() {
                NetManager_1.default.reqDebrisCompose(this.itemId, this.itemNum);
            };
            CheckComposeDialog.prototype.resCompose = function(data) {
                var item = data.item;
                var debrisID = globalConst_1.default.DebrisID;
                var debrisCurrectNum = PlayerData_1.default.getItemNum(debrisID) - item.debris_count;
                hallData_1.default.addComposeRecord(item);
                PlayerData_1.default.setItemNum(debrisID, debrisCurrectNum);
                PlayerData_1.default.addItemNum(item.dst_item_id + "", item.dst_item_count);
                var reward = new RewardDialog_1.default([ {
                    item_id: item.dst_item_id,
                    item_count: item.dst_item_count
                } ]);
                reward.img_titleText.skin = "common/img_huod_2.png";
                reward.init();
                SceneM_1.default.addToMiddLayer(reward, globalConst_1.default.dialogLayer);
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.REFRESH_COMPOSE);
                this.doClose();
            };
            CheckComposeDialog.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    EventDis_1.default.delAllEvnt(_this);
                    Laya.timer.clearAll(_this);
                    _this.destroy();
                    _this.close();
                }));
            };
            return CheckComposeDialog;
        }(layaMaxUI_1.ui.hallScene.CheckComposeDialogUI);
        exports.default = CheckComposeDialog;
    }, {
        "../../common/SceneM": 19,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/hallData/hallData": 28,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "./RewardDialog": 60
    } ],
    41: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalObj_1 = require("../../globalConst/GlobalObj");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var globalConst_1 = require("../../globalConst/globalConst");
        var ComposeRecordDialog_1 = require("./ComposeRecordDialog");
        var SceneM_1 = require("../../common/SceneM");
        var CheckComposeDialog_1 = require("./CheckComposeDialog");
        var hallData_1 = require("../../datas/hallData/hallData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var ComposeDialog = function(_super) {
            __extends(ComposeDialog, _super);
            function ComposeDialog() {
                var _this = _super.call(this) || this;
                _this.composeArr = [];
                _this.debrisNum = 0;
                _this.maxComposeNum = [];
                GlobalFunc_1.default.openDialog(_this);
                _this.debrisNum = PlayerData_1.default.getItemNum(globalConst_1.default.DebrisID);
                _this.initComposeItem();
                _this.text_allNum.text = _this.debrisNum + "";
                _this.list_compose.mouseHandler = new Laya.Handler(_this, _this.btnOnMouse);
                _this.returnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.btn_record.on(Laya.Event.CLICK, _this, _this.openRecord);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.REFRESH_COMPOSE, _this, _this.refreshUI);
                return _this;
            }
            ComposeDialog.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    EventDis_1.default.delAllEvnt(_this);
                    _this.destroy();
                    _this.close();
                }));
            };
            ComposeDialog.prototype.openRecord = function() {
                var dialog = new ComposeRecordDialog_1.default(hallData_1.default.composeList);
                SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
            };
            ComposeDialog.prototype.initComposeItem = function() {
                var items = PlayerData_1.default.composeItems;
                for (var key in items) {
                    var item = items[key];
                    var obj = GlobalObj_1.default.createComposeItemObj(item);
                    this.checkInputNum(item, 1);
                    this.checkNeedNum(item, obj.box_needNum.text_needNum, 1);
                    this.changeBtn(obj.btn_reduce, obj.btn_plus, obj.btn_compose, this.getItemState(item, 1));
                    this.composeArr.push(obj);
                    this.checkBtnCompose(obj, this.composeArr.length - 1);
                }
                this.list_compose.array = this.composeArr;
            };
            ComposeDialog.prototype.btnOnMouse = function(e, index) {
                if (e.type == Laya.Event.CLICK && e.target instanceof Laya.Button) {
                    var target = e.target;
                    var dataSource = this.composeArr[index];
                    var item = dataSource.itemData;
                    var currectNum = +dataSource.itemNum.text;
                    var nextNum = 0;
                    var isChangeNum = false;
                    if (target.name == "btn_reduce") {
                        isChangeNum = true;
                        nextNum = +currectNum - 1;
                    } else if (target.name == "btn_plus") {
                        isChangeNum = true;
                        nextNum = +currectNum + 1;
                    } else if (target.name == "btn_compose") {
                        var dialog = new CheckComposeDialog_1.default({
                            itemData: item,
                            itemNum: currectNum
                        });
                        SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
                    }
                    if (isChangeNum) {
                        nextNum = +this.checkInputNum(item, nextNum);
                        dataSource.itemNum.text = nextNum + "";
                        this.checkNeedNum(item, dataSource.box_needNum.text_needNum, nextNum);
                        this.changeBtn(dataSource.btn_reduce, dataSource.btn_plus, dataSource.btn_compose, this.getItemState(item, nextNum));
                        this.list_compose.refresh();
                    }
                }
            };
            ComposeDialog.prototype.getItemState = function(item, inputNum) {
                var maxNum = Math.floor(this.debrisNum / +item.composeNum);
                var minNum = 1;
                if (maxNum == minNum || maxNum < minNum) return 0; else if (inputNum == minNum) return 1; else if (inputNum > minNum && inputNum < maxNum) return 2; else return 3;
            };
            ComposeDialog.prototype.checkInputNum = function(item, inputNum) {
                if (inputNum * +item.composeNum <= this.debrisNum && inputNum >= 1) return inputNum; else if (inputNum * +item.composeNum > this.debrisNum) return Math.floor(this.debrisNum / +item.composeNum); else if (inputNum < 1) return 1; else return inputNum;
            };
            ComposeDialog.prototype.checkNeedNum = function(item, text, inputNum) {
                text.text = +item.composeNum * inputNum + "";
                if (+item.composeNum > this.debrisNum) {
                    text.color = "#ff5551";
                    text.strokeColor = "#5a0000";
                } else {
                    text.color = "#68ff3f";
                    text.strokeColor = "#004719";
                }
            };
            ComposeDialog.prototype.changeBtn = function(reduce, plus, compose, state) {
                if (state == 1 || state == 2) setBtnState(plus, true, "common/btn_+_"); else setBtnState(plus, false, "common/btn_+_");
                if (state == 2 || state == 3) setBtnState(reduce, true, "common/btn_-_"); else setBtnState(reduce, false, "common/btn_-_");
                function setBtnState(btn, isOn, skin) {
                    if (isOn) {
                        btn.skin = skin + "0.png";
                        btn.mouseEnabled = true;
                    } else {
                        btn.skin = skin + "1.png";
                        btn.mouseEnabled = false;
                    }
                }
            };
            ComposeDialog.prototype.checkBtnCompose = function(dataSource, index) {
                var item = dataSource.itemData;
                var num = this.maxComposeNum[index] = Math.floor(this.debrisNum / +item.composeNum);
                var btn_compose = dataSource.btn_compose;
                if (num == 0) {
                    btn_compose.skin = "noZip/btn_gray.png";
                    btn_compose.labelStrokeColor = "#0b3170";
                    btn_compose.mouseEnabled = false;
                } else {
                    btn_compose.skin = "basePic/btn_yellow.png";
                    btn_compose.labelStrokeColor = "#70200b";
                    btn_compose.mouseEnabled = true;
                }
            };
            ComposeDialog.prototype.refreshUI = function() {
                this.debrisNum = PlayerData_1.default.getItemNum(globalConst_1.default.DebrisID);
                this.text_allNum.text = this.debrisNum + "";
                for (var index = 0; index < this.composeArr.length; index++) {
                    var data = this.composeArr[index];
                    var item = data.itemData;
                    data.itemNum.text = "1";
                    this.checkInputNum(item, 1);
                    this.checkNeedNum(item, data.box_needNum.text_needNum, 1);
                    this.changeBtn(data.btn_reduce, data.btn_plus, data.btn_compose, this.getItemState(item, 1));
                    this.checkBtnCompose(data, this.composeArr.length - 1);
                }
                this.list_compose.refresh();
            };
            return ComposeDialog;
        }(layaMaxUI_1.ui.hallScene.ComposeDialogUI);
        exports.default = ComposeDialog;
    }, {
        "../../common/SceneM": 19,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/hallData/hallData": 28,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalObj": 88,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151,
        "./CheckComposeDialog": 40,
        "./ComposeRecordDialog": 42
    } ],
    42: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalObj_1 = require("../../globalConst/GlobalObj");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var ComposeRecordDialog = function(_super) {
            __extends(ComposeRecordDialog, _super);
            function ComposeRecordDialog(recordData) {
                var _this = _super.call(this) || this;
                _this.listArr = [];
                GlobalFunc_1.default.openDialog(_this);
                _this.recordData = recordData;
                _this.initRecord();
                _this.list_record.scrollBar.visible = false;
                _this.returnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                return _this;
            }
            ComposeRecordDialog.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ComposeRecordDialog.prototype.initRecord = function() {
                for (var index = 0; index < this.recordData.length; index++) {
                    var data = this.recordData[index];
                    this.listArr.push(GlobalObj_1.default.createComposeRecordObj(data));
                }
                if (this.listArr.length == 0) {
                    this.list_record.visible = false;
                    this.text_noRecord.visible = true;
                } else {
                    this.list_record.visible = true;
                    this.text_noRecord.visible = false;
                    this.list_record.array = this.listArr;
                }
            };
            return ComposeRecordDialog;
        }(layaMaxUI_1.ui.hallScene.ComposeRecordDialogUI);
        exports.default = ComposeRecordDialog;
    }, {
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalObj": 88,
        "../../ui/layaMaxUI": 151
    } ],
    43: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var DailyBoxView_1 = require("./DailyBoxView");
        var EventDis_1 = require("../../globalConst/EventDis");
        var DailyActivityView = function(_super) {
            __extends(DailyActivityView, _super);
            function DailyActivityView() {
                var _this = _super.call(this) || this;
                _this.skins = [ "fishIcon/fish_006_Icon.png", "iconAndSkin/skin_goldCoin3.png", "activitys/img_type_1.png", "activitys/img_type_2.png", "activitys/img_type_3.png" ];
                _this.initEvent();
                _this.lstTask.scrollBar.showButtons = false;
                _this.lstTask.dataSource = _this.sortData([]);
                _this.lstTask.scrollBar.scaleY = .9;
                _this.lstTask.scrollBar.centerY = 0;
                _this.lstTask.renderHandler = new Laya.Handler(_this, _this.onLstTaskRender);
                _this.lstTask.mouseHandler = new Laya.Handler(_this, _this.onLstTaskClick);
                var target = [ 30, 60, 90, 120 ];
                for (var i = 0; i < 4; i++) {
                    var view = new DailyBoxView_1.DailyBoxView(i, target[i]);
                    view.x = 170 + i * (view.width + 50);
                    view.centerY = -15;
                    _this.boxTop.addChild(view);
                }
                _this.updateTop();
                return _this;
            }
            DailyActivityView.prototype.initEvent = function() {
                EventDis_1.default.addEvntListener("DAILY_BOX_GET", this, this.updateTop);
            };
            DailyActivityView.prototype.updateTop = function() {
                var point = 30;
                this.lblActivity.text = point + "/120";
                this.pbrTop.value = point / 120;
            };
            DailyActivityView.prototype.sortData = function(data) {
                return [ 1, 1, 1, 1, 1 ];
            };
            DailyActivityView.prototype.onLstTaskRender = function(cell, index) {
                var data = this.lstTask.getItem(index);
                var lblDesc = cell.getChildByName("lblDesc");
                var pbr = cell.getChildByName("pbr");
                var lblProgress = cell.getChildByName("lblProgress");
                var lblCoin = cell.getChildByName("lblCoin");
                var lblStar = cell.getChildByName("lblStar");
                var btn = cell.getChildByName("btnDeal");
                var imgItem = cell.getChildByName("imgItem");
                imgItem.skin = this.skins[index];
                lblDesc.text = "你打球像cxk";
                var progess = 2;
                var target = 20;
                pbr.value = progess / target;
                lblCoin.text = "x" + progess;
                lblStar.text = "x" + target;
                lblProgress.text = progess + "/" + target;
                lblProgress.color = lblDesc.color = "#ffffff";
                if (0) {
                    btn.label = "去完成";
                    btn.skin = "common/btn_blue.png";
                    btn.labelStrokeColor = "##004b6e";
                } else if (1) {
                    btn.label = "领取";
                    btn.skin = "basePic/btn_yellow.png";
                    btn.labelStrokeColor = "#70200b";
                    lblProgress.color = lblDesc.color = "#68ff3f";
                } else {
                    btn.label = "已领取";
                    btn.skin = "noZip/btn_gray.png";
                    btn.labelStrokeColor = "##004b6e";
                    btn.strokeColors = "#0b3170";
                }
            };
            DailyActivityView.prototype.onLstTaskClick = function(e, index) {
                var cell = this.lstTask.getCell(index);
                if (e.type == Laya.Event.CLICK && e.target.name == "btn") {
                    var btn = cell.getChildByName("btn");
                    if (btn.label == "去完成") ; else if (btn.label == "领取") this.lstTask.dataSource = this.sortData([]);
                }
            };
            DailyActivityView.prototype.destroy = function() {
                this.destroyChildren();
                EventDis_1.default.delAllEvnt(this);
            };
            return DailyActivityView;
        }(layaMaxUI_1.ui.hallScene.DailyActivityViewUI);
        exports.DailyActivityView = DailyActivityView;
    }, {
        "../../globalConst/EventDis": 85,
        "../../ui/layaMaxUI": 151,
        "./DailyBoxView": 44
    } ],
    44: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var DailyBoxView = function(_super) {
            __extends(DailyBoxView, _super);
            function DailyBoxView(index, num, state) {
                if (state === void 0) state = 0;
                var _this = _super.call(this) || this;
                _this.tips = [ "可获得少量金币奖励", "可获得大量金币奖励", "可获得钻石奖励", "可获得黄金单头奖励" ];
                _this.isShowTip = false;
                _this.gotList = [];
                EventDis_1.default.addEvntListener("daily_box_got", _this, _this.updateView);
                EventDis_1.default.addEvntListener("daily_box_click", _this, _this.checkTip);
                _this.gotList = [ 1, 1, 0, 0 ];
                _this.point = 30;
                _this.num = num;
                _this.index = index;
                _this.lblNum.text = num + "";
                _this.imgBox.on(Laya.Event.CLICK, _this, _this.showTip);
                _this.imgBox.skin = "activitys/img_" + (_this.gotList[index] == 1 ? "open" : "close") + "_" + (index + 1) + ".png";
                _this.updateView();
                return _this;
            }
            DailyBoxView.prototype.updateView = function() {
                var isEnough = this.point >= this.num;
                var isGot = this.gotList[this.index] == 1;
                if (isGot) this.ani1.stop(); else isEnough && this.ani1.play(0, true);
                this.imgLight.visible = !isGot && isEnough;
                this.imgBox.mouseEnabled = !isGot;
                this.lblDesc.text = this.tips[this.index];
            };
            DailyBoxView.prototype.showTip = function() {
                EventDis_1.default.dispatchEvent("daily_box_click", [ this.index ]);
                this.isShowTip = !this.isShowTip;
                this.boxTip.visible = this.isShowTip;
                if (!this.isShowTip) Laya.timer.clearAll(this);
                if (this.isShowTip) Laya.timer.once(3e3, this, this.closeTip);
            };
            DailyBoxView.prototype.checkTip = function(data) {
                if (data[0] != this.index) this.closeTip();
            };
            DailyBoxView.prototype.closeTip = function() {
                this.isShowTip = this.boxTip.visible = false;
                Laya.timer.clearAll(this);
            };
            DailyBoxView.prototype.destroy = function() {
                this.ani1.stop();
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
                this.ani1.destroy();
            };
            return DailyBoxView;
        }(layaMaxUI_1.ui.hallScene.DailyBoxViewUI);
        exports.DailyBoxView = DailyBoxView;
    }, {
        "../../globalConst/EventDis": 85,
        "../../ui/layaMaxUI": 151
    } ],
    45: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var ExChangeSuccessDlg_1 = require("./ExChangeSuccessDlg");
        var SceneM_1 = require("../../common/SceneM");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var NetManager_1 = require("../../netWork/NetManager");
        var AddGood = function() {
            function AddGood() {}
            return AddGood;
        }();
        var PlayerInfo = function() {
            function PlayerInfo() {
                this.name = "";
                this.sex = 0;
                this.address = "";
                this.phone = "";
            }
            return PlayerInfo;
        }();
        exports.PlayerInfo = PlayerInfo;
        var ExChangeAddressDlg = function(_super) {
            __extends(ExChangeAddressDlg, _super);
            function ExChangeAddressDlg(isAddress, data, count, name, cost, itemId, item) {
                if (isAddress === void 0) isAddress = false;
                var _this = _super.call(this) || this;
                _this.isAddress = false;
                _this.isImportant = false;
                _this.isChanged = false;
                GlobalFunc_1.default.openDialog(_this);
                _this.itemData = item;
                _this.itemId = itemId;
                _this.type = !!data ? +data.itemType : null;
                _this.count = count;
                _this.itemName = name;
                _this.cost = cost;
                _this.isAddress = isAddress;
                _this.isImportant = _this.type != 1;
                var btnCancel = _this.boxConfirm.getChildByName("btnCancel");
                var btnConfirm = _this.boxConfirm.getChildByName("btnConfirm");
                _this.txtAddress.on(Laya.Event.BLUR, _this, _this.checkChange);
                _this.radioGroup.on(Laya.Event.CHANGE, _this, _this.checkChange);
                _this.txtName.on(Laya.Event.BLUR, _this, _this.checkChange);
                _this.txtPhone.on(Laya.Event.BLUR, _this, _this.checkChange);
                _this.btnClick.on(Laya.Event.CLICK, _this, _this.commitInfo);
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                btnCancel.on(Laya.Event.CLICK, _this, _this.doClose);
                btnConfirm.on(Laya.Event.CLICK, _this, _this.doExChange);
                (isAddress || _this.isImportant) && _this.reqPlayerInfo();
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ADDRESS_SET_SUCCESS, _this, _this.updatePlayerInfo);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.REQ_ADDRESS_SUCCESS, _this, _this.updateView);
                _this.init();
                EventDis_1.default.addEvntListener("commit_address_success", _this, _this.resSaveUserInfo);
                EventDis_1.default.addEvntListener("pull_address_success", _this, _this.resPlayerInfo);
                EventDis_1.default.addEvntListener("exchange_success", _this, _this.doExchangeBack);
                _this.btnClick.strokeColors = _this.btnClick.skin == "basePic/btn_yellow.png" ? "#70200b" : "004b6e";
                return _this;
            }
            ExChangeAddressDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ExChangeAddressDlg.prototype.doExChange = function() {
                var item = new AddGood();
                item.exchange_id = this.itemId;
                item.address = this.playData;
                item.count = this.count;
                NetManager_1.default.reqExchangeItem(item);
            };
            ExChangeAddressDlg.prototype.doExchangeBack = function(data) {
                EventDis_1.default.dispatchEvent("exchange_update_view");
                var skin = !!this.itemData ? "iconAndSkin/icon_" + this.itemData.skin : "";
                if (this.itemData.itemID == 1 || this.itemData.itemID == 5) skin = "iconAndSkin/skin_goldCoin3.png"; else if (this.itemData.itemID == 2 || this.itemData.itemID == 6) skin = "iconAndSkin/skin_diamond.png";
                var dlg = new ExChangeSuccessDlg_1.ExChangeSuccessDlg(data, skin, this.isImportant);
                SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
                this.doClose();
            };
            ExChangeAddressDlg.prototype.init = function() {
                if (this.isAddress) this.updateAddress(); else if (this.isImportant) this.updateAddress(); else this.updateConfirm();
            };
            ExChangeAddressDlg.prototype.updatePlayerInfo = function() {
                if (this.isAddress) this.doClose(); else this.updateConfirm();
            };
            ExChangeAddressDlg.prototype.updateView = function() {
                this.lblTop.text = "管理收货信息";
                this.updateAddress();
            };
            ExChangeAddressDlg.prototype.updateAddress = function() {
                this.boxInfo.visible = true;
                this.boxConfirm.visible = false;
                if (!!this.playData) {
                    this.txtName.text = this.playData.name;
                    this.radioGroup.selectedIndex = this.playData.sex == 0 ? 0 : 1;
                    this.txtPhone.text = this.playData.phone == "0" ? "" : this.playData.phone + "";
                    this.txtAddress.text = this.playData.address;
                }
            };
            ExChangeAddressDlg.prototype.updateConfirm = function() {
                var boxInfoDesc = this.boxExChange.getChildByName("boxInfoDesc");
                var boxInfo = this.boxExChange.getChildByName("boxInfo");
                this.lblTop.text = "兑换确认";
                this.boxInfo.visible = false;
                this.boxConfirm.visible = true;
                this.boxExChange.visible = this.isImportant;
                this.boxExChange2.visible = !this.isImportant;
                if (this.isImportant) {
                    this.lblItem.text = this.itemName + "*" + this.count;
                    this.lblCost.text = this.cost + "奖券";
                    this.lblPhone.text = this.playData.phone;
                    var lblAddressDesc = boxInfoDesc.getChildByName("lblAddressDesc");
                    var lblAddress = boxInfo.getChildByName("lblAddress");
                    lblAddress.visible = lblAddressDesc.visible = this.isImportant;
                    if (!this.isImportant) return;
                    lblAddress.text = this.playData.address;
                } else {
                    this.lblItem2.text = this.itemName + "*" + this.count;
                    this.lblCost2.text = this.cost + "奖券";
                }
            };
            ExChangeAddressDlg.prototype.commitInfo = function() {
                if (this.checkInfo(true)) this.reqSaveUserInfo();
            };
            ExChangeAddressDlg.prototype.reqSaveUserInfo = function() {
                if (this.isChanged) {
                    var address = this.playData;
                    NetManager_1.default.reqCommitExchangeAddress(address);
                } else if (!this.playData) this.checkInfo(true); else EventDis_1.default.dispatchEvent(GlobalVar_1.default.ADDRESS_SET_SUCCESS);
            };
            ExChangeAddressDlg.prototype.resSaveUserInfo = function() {
                var str = GlobalFunc_1.default.getColorText("更改信息成功");
                var alert = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                SceneM_1.default.addToMiddLayer(alert, globalConst_1.default.dialogLayer);
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ADDRESS_SET_SUCCESS);
            };
            ExChangeAddressDlg.prototype.reqPlayerInfo = function() {
                NetManager_1.default.reqPullExchangeAddress();
            };
            ExChangeAddressDlg.prototype.resPlayerInfo = function(data) {
                var playerMessage = new PlayerInfo();
                if (!!data.address) playerMessage = data.address;
                this.playData = playerMessage;
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.REQ_ADDRESS_SUCCESS);
            };
            ExChangeAddressDlg.prototype.checkInfo = function(isTip) {
                if (isTip === void 0) isTip = false;
                var isChecked = true;
                var str;
                if (this.txtName.text == "") {
                    isChecked = false;
                    str = GlobalFunc_1.default.getColorText("请填写接收人名称");
                } else if (this.txtAddress.text == "") {
                    isChecked = false;
                    str = GlobalFunc_1.default.getColorText("请填写收货地址");
                } else if (this.txtPhone.text == "") {
                    isChecked = false;
                    str = GlobalFunc_1.default.getColorText("请填写接收人手机号码");
                } else if (this.txtPhone.text.length != 11) {
                    isChecked = false;
                    str = GlobalFunc_1.default.getColorText("请填写正确的11位手机号码");
                }
                if (isTip && !isChecked) {
                    var alert_1 = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                    SceneM_1.default.addToMiddLayer(alert_1, globalConst_1.default.dialogLayer);
                }
                return isChecked;
            };
            ExChangeAddressDlg.prototype.checkChange = function() {
                if (!this.playData) this.playData = new PlayerInfo();
                if (!this.playData || this.txtName.text && this.playData.name != this.txtName.text) {
                    this.playData.name = this.txtName.text;
                    this.isChanged = true;
                }
                if (!this.playData || this.playData.sex != this.radioGroup.selectedIndex) {
                    this.playData.sex = this.radioGroup.selectedIndex;
                    this.isChanged = true;
                }
                if (!this.playData || this.txtAddress.text && this.playData.address != this.txtAddress.text) {
                    this.playData.address = this.txtAddress.text;
                    this.isChanged = true;
                }
                if (!this.playData || +this.txtPhone.text && this.playData.phone != this.txtPhone.text) {
                    this.playData.phone = this.txtPhone.text;
                    this.isChanged = true;
                }
                this.btnClick.skin = this.isChanged && this.checkInfo() ? "basePic/btn_yellow.png" : "common/btn_blue.png";
                this.btnClick.strokeColors = this.btnClick.skin == "basePic/btn_yellow.png" ? "#70200b" : "004b6e";
                return this.isChanged;
            };
            ExChangeAddressDlg.prototype.onClosed = function() {
                this.destroy();
            };
            ExChangeAddressDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            return ExChangeAddressDlg;
        }(layaMaxUI_1.ui.hallScene.ExChangeAddressDlgUI);
        exports.ExChangeAddressDlg = ExChangeAddressDlg;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/SceneM": 19,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "./ExChangeSuccessDlg": 48
    } ],
    46: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var SceneM_1 = require("../../common/SceneM");
        var ExChangeAddressDlg_1 = require("./ExChangeAddressDlg");
        var CountView_1 = require("../../common/CountView");
        var ExChangeRecordDlg_1 = require("./ExChangeRecordDlg");
        var NetManager_1 = require("../../netWork/NetManager");
        var ExChangeInfo = function() {
            function ExChangeInfo() {}
            return ExChangeInfo;
        }();
        exports.ExChangeInfo = ExChangeInfo;
        var ExChangeDlg = function(_super) {
            __extends(ExChangeDlg, _super);
            function ExChangeDlg() {
                var _this = _super.call(this) || this;
                _this.exChangeConfig = [];
                _this.count = [ 0, 0, 0, 0, 0, 0, 0, 0 ];
                GlobalFunc_1.default.openDialog(_this);
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.btnRecord.on(Laya.Event.CLICK, _this, _this.showRecord);
                _this.btnAddress.on(Laya.Event.CLICK, _this, _this.showAddress);
                _this.exChangeConfig = _this.getExChangeConfig();
                _this.lstExChange.hScrollBarSkin = "";
                _this.lstExChange.renderHandler = new Laya.Handler(_this, _this.onLstExChangeRender);
                _this.updateView();
                _this.lstExChange.dataSource = _this.exChangeConfig;
                _this.lstExChange.mouseHandler = new Laya.Handler(_this, _this.onLstExChangeClick);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.COUNT_VIEW_CHANGE, _this, _this.updateCount);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.MY_RES, _this, _this.init);
                EventDis_1.default.addEvntListener("pull_record_success", _this, _this.resExChangeRecord);
                EventDis_1.default.addEvntListener("exchange_update_view", _this, _this.reSet);
                return _this;
            }
            ExChangeDlg.prototype.updateCount = function(data) {
                this.count[data[0]] = data[1];
                this.lstExChange.changeItem(data[0], this.lstExChange.dataSource[data[0]]);
            };
            ExChangeDlg.prototype.init = function() {
                this.lstExChange.refresh();
                this.updateView();
            };
            ExChangeDlg.prototype.reSet = function() {
                this.count = [ 0, 0, 0, 0, 0, 0, 0, 0 ];
                this.lstExChange.refresh();
                this.updateView();
            };
            ExChangeDlg.prototype.updateView = function() {
                this.ticket = PlayerData_1.default.getItemNum(globalConst_1.default.ticket + "");
                var lblHasCount = this.boxBottom.getChildByName("lblHasCount");
                if (globalConst_1.default.isRedPacket) lblHasCount.text = this.ticket / globalConst_1.default.hbRatio + "元"; else lblHasCount.text = this.ticket + "";
            };
            ExChangeDlg.prototype.onLstExChangeClick = function(e, index) {
                var cell = this.lstExChange.getCell(index);
                if (e.type == "click" && e.target instanceof Laya.Button) {
                    var data = cell.dataSource;
                    if (e.target.name == "btnExChange") {
                        var count = this.count[index];
                        var item = PlayerData_1.default.items[data.itemID];
                        if (count == 0 || e.target.skin == "noZip/btn_gray.png") {
                            var str = GlobalFunc_1.default.getColorText("亲，您还未选择兑换数量哦！");
                            var alert_1 = new CommonDialog_1.default(1, [ str ], null, "确认", "温馨提示", true);
                            SceneM_1.default.addToMiddLayer(alert_1, globalConst_1.default.dialogLayer);
                        } else {
                            var type = cell.dataSource;
                            var dlg = new ExChangeAddressDlg_1.ExChangeAddressDlg(false, type, count, data.describe, count * +data.needLottery, +data.exchangeID, item);
                            SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
                        }
                    }
                }
                if (e.target instanceof Laya.Button && (e.target.name == "btnMinus" || e.target.name == "btnPlus")) {
                    var btnExChange = cell.getChildByName("btnExChange");
                    btnExChange.skin = this.count[index] > 0 ? "basePic/btn_yellow.png" : "noZip/btn_gray.png";
                    btnExChange.strokeColors = this.count[index] > 0 ? "#70200b" : "#0b3170";
                }
            };
            ExChangeDlg.prototype.onLstExChangeRender = function(cell, index) {
                var data = cell.dataSource;
                var lblItemName = cell.getChildByName("lblItemName");
                var box = cell.getChildByName("boxLabel");
                var lblNeed = box.getChildByName("lblNeed");
                var lblNeed2 = box.getChildByName("lblNeed2");
                var btnExChange = cell.getChildByName("btnExChange");
                lblItemName.text = data.describe;
                var item = PlayerData_1.default.items[data.itemID];
                var count = Math.floor(this.ticket / +data.needLottery);
                var view = cell.getChildByName("viewCount");
                var viewCount = this.count[index];
                var value = Math.max(+data.needLottery, viewCount * +data.needLottery);
                if (!!view) if (view.order != index) {
                    cell.removeChildByName("viewCount");
                    var countView = new CountView_1.CountView();
                    countView.setIndex(index);
                    countView.name = "viewCount";
                    countView.centerX = countView.centerY = 0;
                    cell.addChild(countView);
                    view = countView;
                    countView.setData(0, count, viewCount);
                } else view.setData(0, count, viewCount); else {
                    var countView = new CountView_1.CountView();
                    countView.setIndex(index);
                    countView.name = "viewCount";
                    countView.setData(0, count, viewCount);
                    countView.centerX = countView.centerY = 0;
                    cell.addChild(countView);
                    view = countView;
                }
                lblNeed2.text = lblNeed.text = "需要 " + value;
                lblNeed.visible = this.ticket < value;
                lblNeed2.visible = !lblNeed.visible;
                btnExChange.skin = viewCount > 0 ? "basePic/btn_yellow.png" : "noZip/btn_gray.png";
                btnExChange.strokeColors = viewCount > 0 ? "#70200b" : "#0b3170";
                if (!item || item.length == 0) return;
                var imgItemIcon = cell.getChildByName("imgRewardIcon");
                if (item.itemID == 1 || item.itemID == 5) imgItemIcon.skin = "iconAndSkin/skin_goldCoin3.png"; else if (item.itemID == 2 || item.itemID == 6) imgItemIcon.skin = "iconAndSkin/skin_diamond.png"; else imgItemIcon.skin = "iconAndSkin/icon_" + item.skin;
            };
            ExChangeDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ExChangeDlg.prototype.onClosed = function() {
                this.destroy();
            };
            ExChangeDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            ExChangeDlg.prototype.showAddress = function() {
                var _this = this;
                this.btnAddress.mouseEnabled = false;
                Laya.timer.once(250, this, function() {
                    _this.btnAddress.mouseEnabled = true;
                });
                var dlg = new ExChangeAddressDlg_1.ExChangeAddressDlg(true);
                SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
            };
            ExChangeDlg.prototype.showRecord = function() {
                var _this = this;
                this.btnRecord.mouseEnabled = false;
                Laya.timer.once(250, this, function() {
                    _this.btnRecord.mouseEnabled = true;
                });
                this.reqExChangeRecord();
            };
            ExChangeDlg.prototype.reqExChangeRecord = function() {
                NetManager_1.default.reqpullExchangeRecord();
            };
            ExChangeDlg.prototype.resExChangeRecord = function(data) {
                var info = data.record;
                var dlg = new ExChangeRecordDlg_1.ExChangeRecordDlg(info);
                SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
            };
            ExChangeDlg.prototype.getExChangeConfig = function() {
                var exChangeInfo = [];
                var json = GlobalFunc_1.default.layaGetRes("config/exchange.json");
                if (json) {
                    var data = json.lottery;
                    for (var i = 0; i < data.length; i++) {
                        var vip = data[i];
                        !!+vip["isShow"] && exChangeInfo.push(vip);
                    }
                }
                return exChangeInfo;
            };
            ExChangeDlg.prototype.checkItemType = function(itemId) {
                if (itemId >= globalConst_1.default.gameItemIDStart && itemId <= globalConst_1.default.gameItemIDEnd) return globalConst_1.default.GAMEITEM;
                if (itemId >= globalConst_1.default.netItemIDStart && itemId <= globalConst_1.default.netItemIDEnd) return globalConst_1.default.NETITEM;
                if (itemId >= globalConst_1.default.entityIDStart && itemId <= globalConst_1.default.entityIDEnd) return globalConst_1.default.ENTITY;
            };
            return ExChangeDlg;
        }(layaMaxUI_1.ui.hallScene.ExChangeDlgUI);
        exports.ExChangeDlg = ExChangeDlg;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/CountView": 8,
        "../../common/SceneM": 19,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "./ExChangeAddressDlg": 45,
        "./ExChangeRecordDlg": 47
    } ],
    47: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var RecordInfo = function() {
            function RecordInfo() {}
            return RecordInfo;
        }();
        exports.RecordInfo = RecordInfo;
        var ExChangeRecordDlg = function(_super) {
            __extends(ExChangeRecordDlg, _super);
            function ExChangeRecordDlg(records) {
                if (records === void 0) records = [];
                var _this = _super.call(this) || this;
                _this.records = [];
                _this.exChangeInfo = [];
                GlobalFunc_1.default.openDialog(_this);
                _this.records = records;
                _this.exChangeInfo = _this.getExChangeConfig();
                _this.lstRecord.vScrollBarSkin = "";
                _this.lstRecord.renderHandler = new Laya.Handler(_this, _this.onLstRecordRender);
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.updateView();
                return _this;
            }
            ExChangeRecordDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ExChangeRecordDlg.prototype.updateView = function() {
                this.lstRecord.dataSource = this.records;
                this.label_noRecord.visible = !this.records || this.records.length == 0;
            };
            ExChangeRecordDlg.prototype.onLstRecordRender = function(cell, index) {
                var data = cell.dataSource;
                var lblTime = cell.getChildByName("lblTime");
                var lblItem = cell.getChildByName("lblItem");
                var lblCost = cell.getChildByName("lblCost");
                var itemInfo = this.exChangeInfo.filter(function(info) {
                    return info.exchangeID == data.exchange_id;
                });
                if (itemInfo.length == 0) return;
                var time = this.getTime(data.create_timestamp * 1e3);
                var hours = time.hours < 10 ? "0" + time.hours : time.hours;
                var minutes = time.minutes < 10 ? "0" + time.minutes : time.minutes;
                lblTime.text = time.years + "/" + time.months + "/" + time.days + " " + hours + ":" + minutes;
                lblItem.text = "兑换" + itemInfo[0].describe + "*" + data.quantity;
                lblCost.text = "扣除" + data.need_lottery * data.quantity + "奖券";
            };
            ExChangeRecordDlg.prototype.onClosed = function() {
                this.destroy();
            };
            ExChangeRecordDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            ExChangeRecordDlg.prototype.getExChangeConfig = function() {
                var exChangeInfo = [];
                var json = GlobalFunc_1.default.layaGetRes("config/exchange.json");
                if (json) {
                    var data = json.lottery;
                    for (var i = 0; i < data.length; i++) {
                        var ex = data[i];
                        exChangeInfo.push(ex);
                    }
                }
                return exChangeInfo;
            };
            ExChangeRecordDlg.prototype.getTime = function(timestamp) {
                var date = new Date(timestamp);
                var Y = date.getFullYear();
                var M = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var D = date.getDate();
                var h = date.getHours();
                var m = date.getMinutes();
                var time = {
                    years: Y,
                    months: M,
                    days: D,
                    hours: h,
                    minutes: m
                };
                return time;
            };
            return ExChangeRecordDlg;
        }(layaMaxUI_1.ui.hallScene.ExChangeRecordDlgUI);
        exports.ExChangeRecordDlg = ExChangeRecordDlg;
    }, {
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../ui/layaMaxUI": 151
    } ],
    48: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var ExChangeSuccessDlg = function(_super) {
            __extends(ExChangeSuccessDlg, _super);
            function ExChangeSuccessDlg(data, skin, isEn) {
                var _this = _super.call(this) || this;
                GlobalFunc_1.default.openDialog(_this);
                _this.btnClick.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.updateView(data, skin, isEn);
                return _this;
            }
            ExChangeSuccessDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ExChangeSuccessDlg.prototype.updateView = function(data, skin, isEn) {
                this.ani1.play();
                this.lblCount.text = data.describe + "x" + data.quantity;
                this.imgItem.skin = skin;
                this.lblInfo.text = isEn ? "恭喜兑换成功,我们将在1个工作日与您联系！" : "恭喜兑换成功,道具将发送至您的背包！";
            };
            ExChangeSuccessDlg.prototype.onClose = function() {
                this.destroy();
            };
            ExChangeSuccessDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            return ExChangeSuccessDlg;
        }(layaMaxUI_1.ui.hallScene.ExChangeSuccessDlgUI);
        exports.ExChangeSuccessDlg = ExChangeSuccessDlg;
    }, {
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../ui/layaMaxUI": 151
    } ],
    49: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var FocusGongZhongHao = function(_super) {
            __extends(FocusGongZhongHao, _super);
            function FocusGongZhongHao() {
                var _this = _super.call(this) || this;
                _this.isRecieved = true;
                _this.initUI();
                return _this;
            }
            FocusGongZhongHao.prototype.initUI = function() {
                this.btn_copy.on(Laya.Event.CLICK, this, this.doCopy);
                var publicnumberreward = ConfigerHelper_1.default.getCachedValueByKey("global_define", [ "publicnumberreward" ]);
                if (!publicnumberreward) return;
                this.list_item.dataSource = GlobalFunc_1.default.transGoldItem(publicnumberreward);
                this.list_item.renderHandler = new Laya.Handler(this, this.listItemRender);
                this.btn_recieve.gray = this.isRecieved;
                this.btn_recieve.label = this.isRecieved ? "已领取" : "领取奖励";
                this.btn_recieve.on(Laya.Event.CLICK, this, this.recieveOn);
            };
            FocusGongZhongHao.prototype.listItemRender = function(cell, index) {
                var itemInfo = this.list_item.dataSource[index];
                var imgItem = cell.getChildByName("imgItem");
                var lblCount = cell.getChildByName("lblCount");
                var item = PlayerData_1.default.items[itemInfo.itemID];
                lblCount.text = "x" + itemInfo.itemNum;
                imgItem.skin = "iconAndSkin/" + (itemInfo.itemID == globalConst_1.default.diamond || itemInfo.itemID == globalConst_1.default.gold ? "" : "icon_") + item.skin;
            };
            FocusGongZhongHao.prototype.recieveOn = function() {
                if (this.isRecieved) return;
            };
            FocusGongZhongHao.prototype.doCopy = function() {
                var text = "buyuxia3D";
                if (GlobalVar_1.default.isWx) wx.setClipboardData({
                    data: text
                });
            };
            return FocusGongZhongHao;
        }(layaMaxUI_1.ui.hallScene.FocusGongZhongHaoUI);
        exports.default = FocusGongZhongHao;
    }, {
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    50: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GameData_1 = require("../../datas/hallData/GameData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var DialogManager_1 = require("../../common/DialogManager");
        var globalConst_1 = require("../../globalConst/globalConst");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var SceneM_1 = require("../../common/SceneM");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var TimeLineManager_1 = require("../../globalConst/TimeLineManager");
        var SoundM_1 = require("../../common/SoundM");
        var GoldPagDialog = function(_super) {
            __extends(GoldPagDialog, _super);
            function GoldPagDialog() {
                var _this = _super.call(this) || this;
                _this.isPlayUpAni = true;
                _this.isPlayNumAni = false;
                _this.getCoinNum = 1e4;
                _this.coinAniNum = 0;
                _this.textAniNum = 10;
                _this.currectData = {
                    grade: 1,
                    scale: .6,
                    exp: 5,
                    maxExp: 18,
                    saveGold: 1e4,
                    nextGold: 1e5
                };
                _this.lastInfo = {
                    grade: 1,
                    savegold: 9e3
                };
                return _this;
            }
            GoldPagDialog.prototype.initUI = function(data) {
                var inData = data.data;
                this.activityFinalTime = inData.finalTime;
                var json = GlobalFunc_1.default.layaGetRes("config/activity.json");
                if (json) this.gradeData = json.GOLDPAG;
                if (inData == 1) {
                    this.btn_getGold.skin = "noZip/btn_gray.png";
                    this.btn_getGold.label = "已提取";
                    this.btn_getGold.mouseEnabled = false;
                    this.img_jinz_1.visible = true;
                    this.img_jinz_0.visible = false;
                }
                this.currectData.grade = inData.pagGrade;
                this.currectData.exp = inData.pagExp;
                var scale = (5 + inData.pagGrade) / 10;
                this.currectData.scale = scale;
                this.img_jinz_0.scale(scale, scale);
                this.img_jinz_1.scale(scale, scale);
                this.currectData.saveGold = 0;
                this.saveGoldNum = inData.saveGold;
                if (this.gradeData[inData.pagGrade]) this.currectData.nextGold = Number(this.gradeData[inData.pagGrade].saveGold);
                this.coinAniCallBack = new Laya.Handler(this, this.coinCallBack);
                Laya.timer.frameLoop(1, this, this.updateProgress);
                this.updateProgress();
                this.setTime();
                this.setTips(inData.pagGrade, 0);
                this.btn_upGrade.on(Laya.Event.CLICK, this, this.goUpdatePag);
                this.btn_getGold.on(Laya.Event.CLICK, this, this.sendGetGold);
                this.btn_help.on(Laya.Event.CLICK, this, this.openHelpDialog);
                this.ani_pagShake.on(Laya.Event.LABEL, this, this.readyPlayCoinAni);
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.GET_HALL_COIN_POS);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.SEND_HALL_COIN_POS, this, this.getHallCoinPos);
                return true;
            };
            GoldPagDialog.prototype.getHallCoinPos = function(pos) {
                this.coinEndPos = pos;
            };
            GoldPagDialog.prototype.updateProgress = function() {
                this.text_saveGold.text = Math.floor(this.currectData.saveGold) + "/" + Math.floor(this.currectData.nextGold);
                this.progress_jinz.value = Number(this.currectData.saveGold) / Math.floor(Number(this.currectData.nextGold));
            };
            GoldPagDialog.prototype.setTips = function(grade, setType) {
                var nextGradeData;
                if (this.gradeData[grade + 1]) nextGradeData = this.gradeData[grade + 1];
                if (setType == 0 || setType == 2) if (nextGradeData) this.text_tips.text = "再充 " + (nextGradeData.maxExp - this.currectData.exp) + " 元\n可存 " + nextGradeData.saveGold / 1e4 + " 万金币"; else this.text_tips.text = "";
                if (setType == 1 || setType == 2) {
                    this.currectData.maxExp = nextGradeData.maxExp;
                    this.currectData.nextGold = Number(nextGradeData.saveGold);
                }
                return nextGradeData;
            };
            GoldPagDialog.prototype.updateRemainingTime = function() {
                var isFinish = false;
                this.remainingTime.seconds -= 1;
                if (!this.checkTime()) {
                    Laya.timer.clear(this, this.updateRemainingTime);
                    this.text_remainingTime.text = "活动已结束";
                }
                if (this.remainingTime.seconds == -1) {
                    this.remainingTime.minutes -= 1;
                    this.remainingTime.seconds = 59;
                }
                if (this.remainingTime.minutes == -1) {
                    this.remainingTime.minutes = 59;
                    this.remainingTime.hours -= 1;
                }
                if (this.remainingTime.hours == -1) {
                    this.remainingTime.hours = 23;
                    this.remainingTime.days -= 1;
                }
                this.text_remainingTime.text = this.remainingTime.days + ":" + this.remainingTime.hours + ":" + this.remainingTime.minutes + ":" + this.remainingTime.seconds;
            };
            GoldPagDialog.prototype.setTime = function() {
                var serTime = Number(GameData_1.default.serverTimeStamp) || parseInt((GlobalFunc_1.default.getClientTime() / 1e3).toString());
                this.remainingTime = GlobalFunc_1.default.getRestTime(this.activityFinalTime * 1e3, serTime * 1e3);
                Laya.timer.loop(1e3, this, this.updateRemainingTime);
                this.updateRemainingTime();
            };
            GoldPagDialog.prototype.checkTime = function() {
                for (var key in this.remainingTime) if (this.remainingTime[key] > 0) return true;
                return false;
            };
            GoldPagDialog.prototype.goUpdatePag = function() {
                DialogManager_1.default.doCloseDlg();
                DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_SHOP, undefined);
                this.destroy();
            };
            GoldPagDialog.prototype.sendGetGold = function() {
                this.getGold();
            };
            GoldPagDialog.prototype.getGold = function() {
                this.btn_getGold.visible = false;
                this.ani_pagShake.play(0, false);
            };
            GoldPagDialog.prototype.readyPlayCoinAni = function(label) {
                if (label == "flyCoin") {
                    var startPos = this.box_goldCoin.localToGlobal(new Laya.Point(0, 0));
                    Laya.timer.loop(50, this, this.playCoinFly, [ startPos ]);
                }
            };
            GoldPagDialog.prototype.playCoinFly = function(startPos) {
                if (this.coinAniNum++ < 10) {
                    var randomX = (Math.random() - .5) * Math.floor(240 * this.currectData.scale);
                    var randomY = (Math.random() - .5) * Math.floor(80 * this.currectData.scale);
                    var newPos = new Laya.Point(startPos.x + randomX, startPos.y + randomY - 100);
                    var endPos = this.coinEndPos ? this.coinEndPos : new Laya.Point(300, 50);
                    var coin = GlobalFunc_1.default.goldCoinAni(newPos, endPos, this.coinAniCallBack, 0, 30, "goldCoinAni", true);
                    coin.scale(.6, .6);
                    SceneM_1.default.addToLayer(coin, globalConst_1.default.frontDialogLayer);
                } else Laya.timer.clear(this, this.playCoinFly);
            };
            GoldPagDialog.prototype.coinCallBack = function() {
                if (!this.isPlayNumAni) {
                    this.isPlayNumAni = true;
                    var pos = this.box_goldCoin.localToGlobal(new Laya.Point(0, -150));
                    var text = GlobalFunc_1.default.numberTextFly(pos, undefined, this, this.getCoinNum, .5);
                    SceneM_1.default.addToLayer(text, globalConst_1.default.frontDialogLayer);
                    SoundM_1.default.playSound(globalConst_1.default.Sud_getGold, 1, 10, undefined, undefined, true);
                }
            };
            GoldPagDialog.prototype.playOpenAni = function() {
                var _this = this;
                var scale_0 = (this.currectData.grade + 5) / 10;
                var scale_1 = (this.currectData.grade + 4) / 10;
                if (!this.isPlayUpAni) {
                    this.img_jinz_0.scale(scale_0, scale_0);
                    this.text_tips.visible = true;
                    this.setTips(this.currectData.grade, 1);
                    this.updateProgress();
                    Laya.timer.clear(this, this.updateProgress);
                    this.setGrade(this.currectData.grade);
                } else {
                    this.btn_getGold.visible = false;
                    this.setGrade(this.currectData.grade - 1);
                    this.img_jinz_0.scale(scale_1, scale_1);
                    this.text_tips.visible = false;
                    var timeLine = TimeLineManager_1.default.creatTimeLine();
                    timeLine.addLabel("ani_0", 0).to(this.img_jinz_0, {
                        scaleX: scale_1 - .08,
                        scaleY: scale_1 - .08
                    }, 120, Laya.Ease.quadInOut).addLabel("ani_1", 0).to(this.img_jinz_0, {
                        scaleX: scale_1,
                        scaleY: scale_1
                    }, 120, Laya.Ease.quadInOut).addLabel("ani_2", 0).to(this.img_jinz_0, {
                        scaleX: scale_1 - .08,
                        scaleY: scale_1 - .08
                    }, 120, Laya.Ease.quadInOut).addLabel("ani_5", 0).to(this.img_jinz_0, {
                        scaleX: scale_0,
                        scaleY: scale_0
                    }, 600, Laya.Ease.elasticOut);
                    this.setTips(this.currectData.grade - 1, 1);
                    var handler = new Laya.Handler(this, function() {
                        _this.updateProgress();
                        Laya.timer.clear(_this, _this.updateProgress);
                        _this.ani_gradeUp.play(0, false);
                        _this.btn_getGold.visible = true;
                        _this.text_tips.visible = true;
                    });
                    timeLine.play(0, false);
                    timeLine.on(Laya.Event.COMPLETE, this, function() {
                        _this.setGrade(_this.currectData.grade);
                        _this.ani_pagGrade.play(0, false);
                    });
                    Laya.Tween.to(this.currectData, {
                        saveGold: this.saveGoldNum
                    }, 700, Laya.Ease.quadOut, handler, 800);
                }
            };
            GoldPagDialog.prototype.setGrade = function(grade) {
                this.img_gradeNum_0.skin = "activitys/img_num2_" + grade + ".png";
                this.img_gradeNum_1.skin = "activitys/img_num1_" + grade + ".png";
                this.img_gradeNum_2.skin = "activitys/img_num2_" + grade + ".png";
            };
            GoldPagDialog.prototype.openHelpDialog = function() {
                var str = GlobalFunc_1.default.getColorText("1.活动期间，捕鱼后可累积部分金币到金猪内\n" + "2.若已激活金猪储存达到上限，可提取金猪内奖励\n" + "3.活动结束后，可提取已激活金猪内存储的金币\n" + "4.金猪提取后需充值激活下一级金猪才可继续累积金币\n" + "5.累积充值各档次对应金猪容量：\n" + "  累积0元--1万\n" + "  累积18元--10万\n" + "  累积108元--100万\n" + "  累积688元--600万\n" + "  累积1588元--5000万\n", 24);
                str.leading = 13;
                var alert = new CommonDialog_1.default(2, [ str ], null, "确认", "帮助", true, undefined, -20);
                SceneM_1.default.addToMiddLayer(alert, globalConst_1.default.dialogLayer);
            };
            GoldPagDialog.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return GoldPagDialog;
        }(layaMaxUI_1.ui.hallScene.GoldPagViewUI);
        exports.default = GoldPagDialog;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/DialogManager": 9,
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/hallData/GameData": 26,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/TimeLineManager": 95,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    51: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var NetManager_1 = require("../../netWork/NetManager");
        var ItemBuyDialog = function(_super) {
            __extends(ItemBuyDialog, _super);
            function ItemBuyDialog(itemID) {
                var _this = _super.call(this) || this;
                GlobalFunc_1.default.openDialog(_this);
                var diamond = PlayerData_1.default.getItemNum("2");
                _this.itemNode = PlayerData_1.default.items[itemID.toString()];
                _this.needDiamond = _this.itemNode.needDiamond;
                _this.maxBuyNum = _this.buyNum = Math.floor(diamond / _this.needDiamond);
                _this.checkitemNum();
                _this.plus.on(Laya.Event.MOUSE_DOWN, _this, _this.startChangeNum, [ 1 ]);
                _this.reduce.on(Laya.Event.MOUSE_DOWN, _this, _this.startChangeNum, [ -1 ]);
                _this.plus.on(Laya.Event.MOUSE_UP, _this, _this.stopChangeNum);
                _this.reduce.on(Laya.Event.MOUSE_UP, _this, _this.stopChangeNum);
                _this.plus.on(Laya.Event.MOUSE_OUT, _this, _this.stopChangeNum);
                _this.reduce.on(Laya.Event.MOUSE_OUT, _this, _this.stopChangeNum);
                _this.sure.on(Laya.Event.CLICK, _this, _this.sendBuyItem);
                _this.cancel.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.returnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.itemNum.on(Laya.Event.INPUT, _this, _this.inputNum);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ITEM_BUY_NOTICE, _this, _this.doClose);
                return _this;
            }
            ItemBuyDialog.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ItemBuyDialog.prototype.changeNeedDiamond = function() {
                this.text_needNum.text = (this.itemNode.needDiamond * this.buyNum).toString();
                this.box_text.width = 185 + 70 + this.text_needNum.displayWidth;
            };
            ItemBuyDialog.prototype.startChangeNum = function(dir) {
                var _this = this;
                this.changeDir = dir;
                this.changeNum = 1;
                this.changeBuyNum();
                Laya.timer.once(200, this, function() {
                    Laya.timer.loop(500, _this, function() {
                        _this.changeNum *= 2;
                    });
                    Laya.timer.loop(50, _this, _this.changeBuyNum);
                });
            };
            ItemBuyDialog.prototype.stopChangeNum = function() {
                Laya.timer.clearAll(this);
                this.changeDir = 0;
                this.changeNum = 1;
            };
            ItemBuyDialog.prototype.inputNum = function() {
                this.buyNum = Number(this.itemNum.text);
                this.checkitemNum();
            };
            ItemBuyDialog.prototype.changeBuyNum = function() {
                this.buyNum += this.changeDir * this.changeNum;
                this.checkitemNum();
            };
            ItemBuyDialog.prototype.checkitemNum = function() {
                this.checkBuyNum();
                this.itemNum.text = this.buyNum.toString();
                this.changeNeedDiamond();
                this.checkBtnState();
            };
            ItemBuyDialog.prototype.checkBtnState = function() {
                if (this.buyNum == 1) {
                    this.reduce.skin = "common/btn_-_1.png";
                    this.reduce.mouseEnabled = false;
                } else {
                    this.reduce.skin = "common/btn_-_0.png";
                    this.reduce.mouseEnabled = true;
                }
                if (this.buyNum == this.maxBuyNum) {
                    this.plus.skin = "common/btn_+_1.png";
                    this.plus.mouseEnabled = false;
                } else {
                    this.plus.skin = "common/btn_+_0.png";
                    this.plus.mouseEnabled = true;
                }
            };
            ItemBuyDialog.prototype.checkBuyNum = function() {
                if (this.buyNum > this.maxBuyNum) this.buyNum = this.maxBuyNum; else if (this.buyNum < 1) this.buyNum = 1;
            };
            ItemBuyDialog.prototype.sendBuyItem = function() {
                var data = {
                    itemId: this.itemNode.itemID,
                    itemNum: this.buyNum
                };
                NetManager_1.default.reqPackageBuy(data);
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ITEM_BUY_NUM, this.buyNum);
            };
            return ItemBuyDialog;
        }(layaMaxUI_1.ui.hallScene.ItemBuyDialogUI);
        exports.default = ItemBuyDialog;
    }, {
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151
    } ],
    52: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var WarningMessage_1 = require("../../common/WarningMessage");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var NetManager_1 = require("../../netWork/NetManager");
        var GameData_1 = require("../../datas/hallData/GameData");
        var ItemGiveDialog = function(_super) {
            __extends(ItemGiveDialog, _super);
            function ItemGiveDialog(itemID) {
                var _this = _super.call(this) || this;
                _this.giveNum = 1;
                _this.minGiveNum = 1;
                _this.allItemNum = 0;
                _this.selectIndex = 0;
                GlobalFunc_1.default.openDialog(_this);
                _this.initGiveInfo(itemID);
                _this.playerID.on(Laya.Event.INPUT, _this, _this.checkInput, [ false ]);
                _this.itemNum.on(Laya.Event.INPUT, _this, _this.checkInput, [ true ]);
                _this.select_view.selectedIndex = 0;
                _this.sure.on(Laya.Event.CLICK, _this, _this.onButtonClick);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.PLATER_INFO_NOTICE, _this, _this.s2c_getPlayerInfo);
                _this.playerID.text = "";
                _this.itemNum.text = "1";
                _this.returnBack.on(Laya.Event.CLICK, _this, function() {
                    _this.doClose();
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ITEM_ZENG_SONG_NOTICE, _this, function() {
                    _this.doClose();
                });
                return _this;
            }
            ItemGiveDialog.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            ItemGiveDialog.prototype.onClosed = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            ItemGiveDialog.prototype.initGiveInfo = function(itemID) {
                this.itemNode = PlayerData_1.default.items[itemID.toString()];
                this.allItemNum = PlayerData_1.default.getItemNum(itemID.toString());
                this.minGiveNum = this.itemNode.giveMinLimit;
                this.image_itemIcon.skin = "iconAndSkin/icon_" + this.itemNode.skin;
                this.text_itemName.text = this.itemNode.itemName;
                this.text_haveNum.text = "拥有" + this.allItemNum + "个";
                this.itemNum.text = this.minGiveNum.toString();
            };
            ItemGiveDialog.prototype.checkInput = function(isNum) {
                if (isNum === void 0) isNum = false;
                var num = this.itemNum.text.replace(/[^0-9]/gi, "");
                if (isNum) {
                    if (!num) {
                        this.itemNum.text = "";
                        return;
                    }
                    if (Number(num) > this.allItemNum) {
                        this.itemNum.text = this.allItemNum.toString();
                        var dialog = new WarningMessage_1.WarningMessage("您当前只有" + this.allItemNum + "个" + this.itemNode.itemName, true, "#ff5551");
                    } else this.itemNum.text = num;
                }
            };
            ItemGiveDialog.prototype.onButtonClick = function() {
                if (this.selectIndex == 0) {
                    this.giveNum = Number(this.itemNum.text);
                    this.givePlayerID = Number(this.playerID.text);
                    var str = void 0;
                    if (this.givePlayerID == +GameData_1.default.uid) str = GlobalFunc_1.default.getColorText("不可以赠送自己", 32, "#ffffff", "#0b3170");
                    if (this.giveNum < this.minGiveNum) str = GlobalFunc_1.default.getColorText("亲,最少需要赠送" + this.minGiveNum + "个" + this.itemNode.itemName, 35, "#ffffff", "#0b3170");
                    if (str) {
                        var dialog = new CommonDialog_1.default(1, [ str ], undefined, "确认", "提示", false, undefined);
                        SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
                        return;
                    }
                    NetManager_1.default.reqGetPlayerInfo(Number(this.playerID.text));
                } else {
                    var data = {
                        uid: Number(this.givePlayerID),
                        itemId: Number(this.itemNode.itemID),
                        itemNum: this.giveNum
                    };
                    NetManager_1.default.reqPackageZengSong(data);
                }
            };
            ItemGiveDialog.prototype.s2c_getPlayerInfo = function(data) {
                if (!!data.ret.err_code) {
                    var str = GlobalFunc_1.default.getColorText("亲,赠送的玩家ID不对哦!", 35, "#ffffff", "#0b3170");
                    var dialog = new CommonDialog_1.default(1, [ str ], undefined, "确认", "提示", false, undefined);
                    SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
                } else {
                    var playInfo = data.info;
                    if (playInfo.uid == this.givePlayerID) {
                        this.check_playerName.text = playInfo.nick_name;
                        this.check_ID.text = playInfo.uid;
                        this.check_itemInfo.text = this.giveNum + "个" + this.itemNode.itemName;
                        this.selectIndex = this.select_view.selectedIndex = 1;
                    } else GlobalFunc_1.default.log("返回的玩家ID与实际不符合");
                }
            };
            return ItemGiveDialog;
        }(layaMaxUI_1.ui.hallScene.ItemGiveDialogUI);
        exports.default = ItemGiveDialog;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/SceneM": 19,
        "../../common/WarningMessage": 25,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151
    } ],
    53: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var WarningMessage_1 = require("../../common/WarningMessage");
        var RewardDialog_1 = require("./RewardDialog");
        var NetManager_1 = require("../../netWork/NetManager");
        var MailDlg = function(_super) {
            __extends(MailDlg, _super);
            function MailDlg() {
                var _this = _super.call(this) || this;
                _this._isInGetting = false;
                _this.prevX = 0;
                _this.prevY = 0;
                _this.mailSort(g_mailsData.mailsData);
                GlobalFunc_1.default.openDialog(_this);
                _this.lstMail.vScrollBarSkin = "";
                _this.lstItem.hScrollBarSkin = "";
                _this.lstItem.renderHandler = new Laya.Handler(_this, _this.onLstItemRender);
                _this.lstMail.renderHandler = new Laya.Handler(_this, _this.onLstMailRender);
                _this.lstMail.mouseHandler = new Laya.Handler(_this, _this.onLstMailClick);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.UPDATA_MAIL_NUM, _this, _this.updateCell);
                EventDis_1.default.addEvntListener("attach_mail", _this, _this.getMailBack);
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.btnCellDel.on(Laya.Event.CLICK, _this, _this.delMail, [ false ]);
                _this.btnCellReceive.on(Laya.Event.CLICK, _this, _this.getMail, [ false ]);
                _this.btnDel.on(Laya.Event.CLICK, _this, _this.delMail, [ true ]);
                _this.btnReceive.on(Laya.Event.CLICK, _this, _this.getMail, [ true ]);
                _this.lblDesc.on(Laya.Event.MOUSE_DOWN, _this, _this.startScrollText);
                _this.updateView();
                return _this;
            }
            MailDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            MailDlg.prototype.onClosed = function() {
                this.destroy();
            };
            MailDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            MailDlg.prototype.updateView = function(selectedIndex) {
                if (selectedIndex === void 0) selectedIndex = 0;
                this.img_nomail.visible = g_mailsData.mailsData.length == 0;
                this.img_mail.visible = !this.img_nomail.visible;
                this.lstMail.dataSource = g_mailsData.mailsData;
                if (this.lstMail.dataSource.length == 0) return;
                this.lstMail.selectedIndex = selectedIndex;
                this.updateContent();
            };
            MailDlg.prototype.updateCell = function() {
                var index = this.lstMail.selectedIndex;
                this.lstMail.changeItem(index, g_mailsData.mailsData[index]);
                this.updateContent();
            };
            MailDlg.prototype.updateContent = function() {
                var mail = this.lstMail.selectedItem;
                if (!mail) return;
                this.lstItem.dataSource = mail.attachs;
                var isGm = mail.sender_id == 0;
                this.lblTitle.color = isGm ? "#ffec4c" : "#8ae93c";
                this.lblTitle.strokeColor = isGm ? "#70200b" : "#0b3170";
                this.lblTitle.text = mail.title;
                this.lblDesc.text = mail.content;
                this.lblTime.text = "（剩余" + Math.ceil((mail.expired_time - GlobalFunc_1.default.getClientTime() / 1e3) / (60 * 60 * 24)) + " 天）";
                this.lblGm.visible = this.imgGm.visible = isGm;
                this.lblSender.visible = !isGm;
                this.lblSender.text = mail.sender_name;
                this.lblHasItem.visible = this.checkMialAttach(mail);
                this.btnCellReceive.visible = this.lblHasItem.visible && mail.state != 2;
                this.btnCellDel.visible = !this.btnCellReceive.visible;
            };
            MailDlg.prototype.onLstMailClick = function(e, index) {
                if (e.type == Laya.Event.CLICK) {
                    this.lstMail.selectedIndex = index;
                    var sltMail = this.lstMail.getItem(index);
                    !this.checkIsRead(sltMail.state) && this.readMail(sltMail.id);
                    this.updateContent();
                }
            };
            MailDlg.prototype.onLstItemRender = function(cell, index) {
                var attachs = this.lstItem.getItem(index);
                var imgGot = cell.getChildByName("imgGot");
                var imgItem = cell.getChildByName("imgItem");
                var lblCount = cell.getChildByName("lblCount");
                var item = PlayerData_1.default.items[attachs.item_id];
                lblCount.text = "x" + attachs.count;
                imgItem.skin = "iconAndSkin/" + (attachs.item_id == globalConst_1.default.diamond || attachs.item_id == globalConst_1.default.gold ? "" : "icon_") + item.skin;
                if (attachs.item_id == 41) imgItem.scale(.64, .64); else imgItem.scale(.8, .8);
                var sltMail = this.lstMail.selectedItem;
                imgGot.visible = sltMail.state == 2;
            };
            MailDlg.prototype.onLstMailRender = function(cell, index) {
                var mail = this.lstMail.getItem(index);
                var imgSelect = cell.getChildByName("imgSelect");
                var imgCommon = cell.getChildByName("imgCommon");
                var imgState = cell.getChildByName("imgState");
                var imgHasItem = cell.getChildByName("imgHasItem");
                var lblSend = cell.getChildByName("lblSend");
                var imgRed = cell.getChildByName("imgRed");
                var isSelected = this.lstMail.selectedIndex == index;
                lblSend.text = +mail.sender_id == 0 ? "系统邮件" : "玩家邮件";
                lblSend.strokeColor = isSelected ? "#70200b" : "#0b3170";
                imgSelect.visible = isSelected;
                imgCommon.visible = !isSelected;
                var isRead = this.checkIsRead(mail.state);
                imgState.skin = isRead ? "hall/img_mail_3.png" : "hall/img_mail_4.png";
                imgHasItem.visible = this.checkHasItem(mail);
                imgRed.visible = !isRead;
                if (index == this.lstMail.selectedIndex && !this.checkIsRead(mail.state)) {
                    this.readMail(mail.id);
                    imgRed.visible = false;
                }
            };
            MailDlg.prototype.readMail = function(mail_id) {
                var mail = this.getMailById(mail_id);
                mail.state++;
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.UPDATA_MAIL_NUM);
                NetManager_1.default.reqReadMail({
                    mail_id: mail_id
                });
            };
            MailDlg.prototype.delMail = function(isDelAll) {
                var _this = this;
                if (isDelAll === void 0) isDelAll = false;
                var sltMail = this.lstMail.selectedItem;
                var initSelectIndex = this.lstMail.selectedIndex;
                var mail_id = !isDelAll ? sltMail.id : 0;
                if (isDelAll) {
                    var callBack = new Laya.Handler(this, function() {
                        NetManager_1.default.reqDelMail({
                            mail_id: mail_id
                        });
                        for (var i = g_mailsData.mailsData.length - 1; i >= 0; i--) {
                            var mail = g_mailsData.mailsData[i];
                            if (_this.checkHasItem(mail)) continue;
                            g_mailsData.mailsData.splice(i, 1);
                        }
                        _this.updateView();
                        EventDis_1.default.dispatchEvent(GlobalVar_1.default.UPDATA_MAIL_NUM);
                    });
                    var str = GlobalFunc_1.default.getColorText("是否删除所有不含未领取附件的邮件?");
                    var alert_1 = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", false, callBack);
                    SceneM_1.default.addToMiddLayer(alert_1, globalConst_1.default.dialogLayer);
                } else {
                    NetManager_1.default.reqDelMail({
                        mail_id: mail_id
                    });
                    var len = this.lstMail.dataSource.length;
                    var newIndex = initSelectIndex == len - 1 ? len - 2 : initSelectIndex;
                    for (var i = g_mailsData.mailsData.length - 1; i >= 0; i--) {
                        var mail = g_mailsData.mailsData[i];
                        if (mail_id == mail.id) {
                            g_mailsData.mailsData.splice(i, 1);
                            break;
                        }
                    }
                    this.updateView(newIndex >= 0 ? newIndex : 0);
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.UPDATA_MAIL_NUM);
                }
            };
            MailDlg.prototype.getMail = function(isGetAll) {
                if (isGetAll === void 0) isGetAll = false;
                if (this._isInGetting) {
                    new WarningMessage_1.WarningMessage("正在领取中哦！");
                    return;
                }
                var sltMail = this.lstMail.selectedItem;
                var mail_id = !isGetAll ? sltMail.id : 0;
                if (isGetAll && !this.checkAnyHasItem()) {
                    var str = GlobalFunc_1.default.getColorText("亲，暂无可领取的附件哦！");
                    var alert_2 = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                    SceneM_1.default.addToMiddLayer(alert_2, globalConst_1.default.dialogLayer);
                    return;
                }
                this._isInGetting = true;
                NetManager_1.default.reqAttachMail({
                    mail_id: mail_id
                });
            };
            MailDlg.prototype.getMailBack = function(data) {
                this._isInGetting = false;
                var mail_id = data.mail_id;
                if (mail_id != 0) {
                    var mail = this.getMailById(mail_id);
                    mail.state = 2;
                } else for (var i = 0; i < g_mailsData.mailsData.length; ++i) {
                    var mail = g_mailsData.mailsData[i];
                    mail.state = this.checkMialAttach(mail) ? 2 : 1;
                }
                var attachs = data.attachs.items;
                var callBack = new Laya.Handler(this, function() {
                    PlayerData_1.default.addItemsNum(attachs);
                });
                var rewardDlg = new RewardDialog_1.default(attachs);
                rewardDlg.init(null, callBack);
                SceneM_1.default.addToMiddLayer(rewardDlg, globalConst_1.default.dialogLayer);
                this.updateContent();
                this.lstMail.refresh();
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.UPDATA_MAIL_NUM);
            };
            MailDlg.prototype.mailSort = function(mails) {
                if (mails === void 0) mails = [];
                for (var i = 0; i < mails.length; ++i) this.setSortId(mails[i]);
                mails.sort(function(a, b) {
                    if (a.sort_id == b.sort_id) return b.id - a.id; else return a.sort_id - b.sort_id;
                });
            };
            MailDlg.prototype.setSortId = function(mail) {
                if (this.checkHasItem(mail)) if (mail.state == 0) mail.sort_id = 1; else mail.sort_id = 2; else if (mail.state == 0) mail.sort_id = 3; else if (mail.state == 2) mail.sort_id = 4; else mail.sort_id = 5;
            };
            MailDlg.prototype.checkIsRead = function(state) {
                return state != 0;
            };
            MailDlg.prototype.checkAnyHasItem = function() {
                for (var i = 0; i < g_mailsData.mailsData.length; i++) {
                    var mail = g_mailsData.mailsData[i];
                    if (this.checkHasItem(mail)) return true;
                }
                return false;
            };
            MailDlg.prototype.checkHasItem = function(mail) {
                return this.checkMialAttach(mail) && mail.state < 2;
            };
            MailDlg.prototype.checkMialAttach = function(mail) {
                return mail.attachs && mail.attachs.length > 0;
            };
            MailDlg.prototype.getMailById = function(mail_id) {
                for (var i = 0; i < g_mailsData.mailsData.length; ++i) {
                    var mail = g_mailsData.mailsData[i];
                    if (mail_id == mail.id) return mail;
                }
            };
            MailDlg.prototype.startScrollText = function(e) {
                this.prevX = this.lblDesc.mouseX;
                this.prevY = this.lblDesc.mouseY;
                Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.scrollText);
                Laya.stage.on(Laya.Event.MOUSE_UP, this, this.finishScrollText);
            };
            MailDlg.prototype.finishScrollText = function(e) {
                Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.scrollText);
                Laya.stage.off(Laya.Event.MOUSE_UP, this, this.finishScrollText);
            };
            MailDlg.prototype.scrollText = function(e) {
                var nowX = this.lblDesc.mouseX;
                var nowY = this.lblDesc.mouseY;
                this.lblDesc.scrollX += this.prevX - nowX;
                this.lblDesc.scrollY += this.prevY - nowY;
                this.prevX = nowX;
                this.prevY = nowY;
            };
            return MailDlg;
        }(layaMaxUI_1.ui.hallScene.MailDialogUI);
        exports.MailDlg = MailDlg;
        var MailData = function() {
            function MailData() {}
            return MailData;
        }();
        var MailItem = function() {
            function MailItem() {}
            return MailItem;
        }();
        var PlayerMails = function() {
            function PlayerMails() {
                this.mailsData = [];
            }
            PlayerMails.prototype.initMailData = function(data) {
                for (var i = 0; i < data.length; ++i) data[i].attachs = GlobalFunc_1.default.transGoldItem(data[i].attachs);
                this.mailsData = data;
            };
            PlayerMails.prototype.updateMailData = function(data) {
                for (var i = 0; i < data.length; ++i) data[i].attachs = GlobalFunc_1.default.transGoldItem(data[i].attachs);
                this.mailsData = this.mailsData.concat(data);
            };
            PlayerMails.prototype.isHaveNewMail = function() {
                for (var i = 0; i < this.mailsData.length; ++i) {
                    var mail = this.mailsData[i];
                    if (mail.state == 0 || mail.attachs && mail.attachs.length > 0 && mail.state < 2) return true;
                }
                return false;
            };
            PlayerMails.Instance = new PlayerMails();
            return PlayerMails;
        }();
        var g_mailsData;
        exports.g_mailsData = g_mailsData;
        exports.g_mailsData = g_mailsData = PlayerMails.Instance;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/SceneM": 19,
        "../../common/WarningMessage": 25,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "./RewardDialog": 60
    } ],
    54: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var NetManager_1 = require("../../netWork/NetManager");
        var GameData_1 = require("../../datas/hallData/GameData");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var WarningMessage_1 = require("../../common/WarningMessage");
        var RewardDialog_1 = require("./RewardDialog");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var MonthCardDlg = function(_super) {
            __extends(MonthCardDlg, _super);
            function MonthCardDlg() {
                var _this = _super.call(this) || this;
                _this.date = 0;
                _this.extra = [];
                _this.cost = 0;
                _this.subCost = 0;
                _this.shopId = 0;
                GlobalFunc_1.default.setMonthTime();
                EventDis_1.default.addEvntListener("payGiftChange", _this, function() {
                    Laya.timer.once(200, _this, function() {
                        _this.btnBuy.mouseEnabled = _this.btnReBuy.mouseEnabled = true;
                    });
                    _this.updateView();
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.GETMONTHREWARD, _this, function(data) {
                    var dlg = new RewardDialog_1.default(data);
                    dlg.init(null, null);
                    SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
                    _this.updateView();
                });
                GlobalFunc_1.default.openDialog(_this);
                _this.data = PlayerData_1.default.commoditysInfo["Yueka"];
                _this.lstItem.dataSource = (GlobalFunc_1.default.isIos() ? [] : [ null ]).concat(_this.data.items);
                _this.shopId = +_this.data.id;
                _this.cost = _this.data.discount;
                _this.subCost = _this.data.subdiscount;
                _this.btnReBuy.label = "￥" + _this.subCost + "续费";
                _this.btnBuy.label = "￥" + _this.cost + "购买";
                _this.extra = [ _this.data.diamondOnBuy, _this.data.diamondOnSub ];
                _this.lstItem.renderHandler = new Laya.Handler(_this, _this.onLstItemRender);
                _this.lstItem.width = _this.lstItem.dataSource.length * 146;
                _this.btnBack.on(Laya.Event.CLICK, _this, function() {
                    _this.doClose();
                });
                _this.btnBuy.on(Laya.Event.CLICK, _this, _this.doFirstBuy);
                _this.btnGet.on(Laya.Event.CLICK, _this, _this.getReward);
                _this.btnReBuy.on(Laya.Event.CLICK, _this, _this.reBuy);
                _this.btnGetIos.on(Laya.Event.CLICK, _this, _this.getReward);
                _this.updateView();
                _this.lstItem.left = 758 / 2 - _this.lstItem.width / 2 + (_this.lstItem.dataSource.length == 1 ? 146 / 6 : 0);
                Laya.timer.loop(1e4, _this, function() {
                    GlobalFunc_1.default.setMonthTime();
                    _this.updateView();
                });
                return _this;
            }
            MonthCardDlg.prototype.getReward = function() {
                if (!!GameData_1.default.monthEndDay && GameData_1.default.isMonthToday) {
                    new WarningMessage_1.WarningMessage("今日已领取");
                    return;
                }
                NetManager_1.default.reqMonthReward();
            };
            MonthCardDlg.prototype.reBuy = function() {
                this.btnBuy.mouseEnabled = false;
                this.dobuy(this.subCost, this.shopId);
            };
            MonthCardDlg.prototype.doFirstBuy = function() {
                this.btnReBuy.mouseEnabled = false;
                this.dobuy(this.cost, this.shopId);
            };
            MonthCardDlg.prototype.dobuy = function(money, shopId) {
                NetManager_1.default.reqShopOrder({
                    Uid: GameData_1.default.uid,
                    Amount: money,
                    Gsid: 2e4,
                    Platform: 1,
                    QdId: 1,
                    Openid: GameData_1.default.account,
                    ProductId: shopId
                });
            };
            MonthCardDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            MonthCardDlg.prototype.updateView = function() {
                if (!!GameData_1.default.monthEndDay && GameData_1.default.isMonthToday) {
                    GlobalFunc_1.default.changeButtonToGray(this.btnGet);
                    GlobalFunc_1.default.changeButtonToGray(this.btnGetIos);
                }
                if (GlobalFunc_1.default.isIos()) {
                    this.btnGet.visible = this.btnReBuy.visible = this.btnBuy.visible = false;
                    this.btnGetIos.visible = !!GameData_1.default.monthEndDay && !GameData_1.default.isMonthToday;
                }
                this.btnBuy.visible = !GameData_1.default.monthEndDay && !GlobalFunc_1.default.isIos();
                this.lblTime.visible = this.btnGet.visible = this.btnReBuy.visible = !!GameData_1.default.monthEndDay;
                this.lblTime.text = this.date + "";
                this.lblTime.text = "月卡剩余" + GameData_1.default.monthEndDay + "天";
                this.lblDesc.text = !GameData_1.default.monthEndDay ? "购买后立即额外获得" + this.extra[0] + "金币" : "续费后立即获得" + this.extra[1] + "金币";
            };
            MonthCardDlg.prototype.onLstItemRender = function(cell, index) {
                var data = this.lstItem.getItem(index);
                var lblCount = cell.getChildByName("lblCount");
                var imgItem = cell.getChildByName("imgItem");
                lblCount.align = "center";
                if (index == 0 && !GlobalFunc_1.default.isIos()) {
                    lblCount.text = "自动开炮";
                    imgItem.skin = "iconAndSkin/img_auto.png";
                    imgItem.centerY = -2;
                    return;
                }
                lblCount.text = data.itemNum;
                imgItem.skin = "iconAndSkin/" + (data.itemID == 1 || data.itemID == 5 ? "" : "icon_") + PlayerData_1.default.getItemData(data.itemID).skin;
            };
            MonthCardDlg.prototype.destroy = function() {
                _super.prototype.destroy.call(this);
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return MonthCardDlg;
        }(layaMaxUI_1.ui.hallScene.MonthCardDlgUI);
        exports.MonthCardDlg = MonthCardDlg;
    }, {
        "../../common/SceneM": 19,
        "../../common/WarningMessage": 25,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "./RewardDialog": 60
    } ],
    55: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var GlobalObj_1 = require("../../globalConst/GlobalObj");
        var GameData_1 = require("../../datas/hallData/GameData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var DialogManager_1 = require("../../common/DialogManager");
        var ItemBuyDialog_1 = require("./ItemBuyDialog");
        var ItemGiveDialog_1 = require("./ItemGiveDialog");
        var SceneM_1 = require("../../common/SceneM");
        var OnOffManager_1 = require("../../globalConst/OnOffManager");
        var PackageDialog = function(_super) {
            __extends(PackageDialog, _super);
            function PackageDialog() {
                var _this = _super.call(this) || this;
                _this.itemSelectIndex = 0;
                _this.itemArray = [];
                _this.itemBuyNum = 0;
                GlobalFunc_1.default.openDialog(_this);
                var that = _this;
                _this.itemsInfo = PlayerData_1.default.items;
                _this.initArrays();
                _this.selectItem(_this.itemArray[0], 0, false);
                _this.returnBack.on(Laya.Event.CLICK, _this, function() {
                    _this.doClose();
                });
                _this.scrollBar = _this.list_items.scrollBar;
                _this.scrollBar.centerX = -255;
                _this.scrollBar.centerY = 0;
                _this.scrollBar.showButtons = false;
                _this.scrollBar.scaleY = .85;
                _this.scrollBar.scaleBar = true;
                _this.scrollBar.hide = _this.list_items.array.length <= 16;
                _this.list_items.mouseHandler = new Laya.Handler(_this, _this.itemListOnClick);
                _this.btn_item.on(Laya.Event.CLICK, _this, _this.itemBtnClick);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ITEM_ZENG_SONG_NOTICE, that, that.s2c_getItemChangeInfo);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ITEM_BUY_NOTICE, that, that.s2c_getItemChangeInfo);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ITEM_BUY_NUM, that, function(data) {
                    _this.itemBuyNum = data;
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.REFRESH_COMPOSE, that, _this.refreshUI);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.MY_RES, that, that.updateItemInfo);
                return _this;
            }
            PackageDialog.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            PackageDialog.prototype.onClosed = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            PackageDialog.prototype.initArrays = function() {
                if (!this.itemsInfo) return;
                this.itemArray = [];
                for (var key in this.itemsInfo) if (this.itemsInfo.hasOwnProperty(key)) {
                    var itemNode = this.itemsInfo[key];
                    if (Number(key) > 100) continue;
                    if (!itemNode.isShow) continue;
                    if (+key == +globalConst_1.default.ItemMonthCardID) if (!GlobalFunc_1.default.isIos() && OnOffManager_1.default.isMonthCardOn) {
                        var itemNum_1 = PlayerData_1.default.getItemNum(key);
                        itemNum_1 = itemNum_1 ? itemNum_1 : 0;
                        this.getItemData(itemNode, itemNum_1);
                        continue;
                    } else continue;
                    var itemNum = PlayerData_1.default.getItemNum(key);
                    itemNum = itemNum ? itemNum : 0;
                    this.getItemData(itemNode, itemNum);
                }
                this.checkItemArray(this.itemArray);
                this.list_items.array = this.itemArray;
            };
            PackageDialog.prototype.getItemData = function(itemNode, itemNum) {
                var key = itemNode.itemID.toString();
                if (typeof itemNum != "string" && itemNum > 9999) while (itemNum > 9999) {
                    var obj = GlobalObj_1.default.createItemObj(itemNode, key, 9999);
                    this.setSortId(itemNode, 9999, obj);
                    this.itemArray.push(obj);
                    itemNum -= 9999;
                } else if (itemNode.itemID == +globalConst_1.default.ItemMonthCardID) itemNum = GameData_1.default.monthEndTime + "";
                var itemObj = GlobalObj_1.default.createItemObj(itemNode, key, itemNum);
                this.setSortId(itemNode, itemNum, itemObj);
                this.itemArray.push(itemObj);
            };
            PackageDialog.prototype.setSortId = function(itemNode, itemNum, itemData) {
                var sortID = 1e4 - itemNode.sortId;
                var times = Number(itemNum) != 0 && itemNum != "0" ? 1e4 : 1;
                if (typeof itemNum == "string") sortID *= times; else sortID = itemNum + sortID * times;
                itemData.sortID = sortID;
            };
            PackageDialog.prototype.checkItemArray = function(array) {
                if (array.length < 16) while (array.length < 16) array.push(GlobalObj_1.default.createItemObjEmpty()); else {
                    for (var index = 0; index < array.length; index++) {
                        var fallIndex = (index + 1) * 4 - 1;
                        if (fallIndex < 16) continue;
                        if (fallIndex > array.length - 1) fallIndex = array.length - 1;
                        var itemBox = array[fallIndex];
                        if (itemBox.itemID == -1) {
                            array.splice(fallIndex, array.length - fallIndex);
                            break;
                        }
                    }
                    if (array.length % 4 != 0) while (array.length % 4 != 0) array.push(GlobalObj_1.default.createItemObjEmpty());
                }
                this.sortArray(array);
            };
            PackageDialog.prototype.sortArray = function(array) {
                array.sort(function(a, b) {
                    if (a.sortID > b.sortID) return -1; else return 1;
                });
            };
            PackageDialog.prototype.itemListOnClick = function(event, index) {
                if (event.type == Laya.Event.CLICK && event.target instanceof Laya.Box) this.selectItem(event.target.dataSource, index);
            };
            PackageDialog.prototype.updateItemInfo = function() {
                var selectItemIndex = this.getIndexFromItem(this.selectObject.itemID).index;
                this.selectItem(this.itemArray[selectItemIndex], selectItemIndex, false);
            };
            PackageDialog.prototype.selectItem = function(data, index, isClick) {
                if (isClick === void 0) isClick = true;
                if (this.itemSelectIndex == index && isClick) return;
                if (this.itemSelectIndex != -1) this.list_items.array[this.itemSelectIndex].itemSelect.visible = false;
                this.selectObject = this.list_items.array[index];
                this.itemSelectIndex = index;
                var obj = data;
                var itemNode = this.itemsInfo[obj.itemID.toString()];
                var itemNum = PlayerData_1.default.getItemNum(itemNode.itemID.toString());
                if (data.itemID == globalConst_1.default.ItemMonthCardID) itemNum = +GameData_1.default.monthEndDay;
                obj.itemSelect.visible = true;
                this.list_items.refresh();
                this.setButtonInfo(itemNode, itemNum);
                this.image_itemIcon.skin = "iconAndSkin/icon_" + itemNode.skin;
                var scaleX = 90 / this.image_itemIcon.width;
                var scaleY = 90 / this.image_itemIcon.height;
                var scale = scaleX < scaleY ? scaleX : scaleY;
                scale = scale >= 1 ? 1 : scale;
                this.image_itemIcon.scale(scale, scale);
                this.text_itemName.text = itemNode.itemName;
                this.text_itemDescribe.text = itemNode.describe;
                var text_num = "";
                if (itemNum && itemNum != 0) if (itemNode.itemID.toString() == globalConst_1.default.ItemMonthCardID) {
                    this.text_haveDay.text = GameData_1.default.monthEndDay + "";
                    this.text_haveDay.visible = true;
                    var timeInfo = GlobalFunc_1.default.getTime(Number(GameData_1.default.monthEndTime * 1e3));
                    text_num = timeInfo.years + "/" + timeInfo.months + "/" + timeInfo.days + "到期";
                    this.text_haveNum.visible = false;
                } else {
                    this.text_haveDay.visible = false;
                    text_num = "拥有:";
                    this.text_haveNum.visible = true;
                    this.text_haveNum.text = itemNum + "";
                } else {
                    this.text_haveDay.visible = false;
                    text_num = "未拥有";
                    this.text_haveNum.visible = false;
                }
                this.lblDesc.visible = this.text_haveDay.visible;
                this.text_expireTime.text = text_num;
            };
            PackageDialog.prototype.resetItemSelectState = function() {
                for (var index = 0; index < this.list_items.array.length; index++) {
                    var itemData = this.list_items.array[index];
                    itemData.itemSelect.visible = false;
                }
            };
            PackageDialog.prototype.setButtonInfo = function(itemNode, itemNum) {
                this.btn_item.visible = true;
                if (itemNode.itemID == Number(globalConst_1.default.ItemMonthCardID)) {
                    GlobalFunc_1.default.changeButtonToGreen(this.btn_item, itemNum && itemNum != 0 ? "续费" : "购买");
                    this.itemBtnEvent = globalConst_1.default.ItemMonthbuy;
                } else if (itemNode.itemID <= 10) {
                    if (itemNode.needDiamond > PlayerData_1.default.getItemNum(globalConst_1.default.DiamondID)) GlobalFunc_1.default.changeButtonToGray(this.btn_item, "购买"); else GlobalFunc_1.default.changeButtonToOrange(this.btn_item, "购买");
                    this.itemBtnEvent = globalConst_1.default.ItemBuy;
                } else if (itemNode.itemID <= 18) {
                    if (itemNode.isGive == 0) this.btn_item.visible = false; else this.btn_item.visible = true;
                    if (itemNode.giveMinLimit > itemNum) GlobalFunc_1.default.changeButtonToGray(this.btn_item, "赠送"); else GlobalFunc_1.default.changeButtonToGreen(this.btn_item, "赠送");
                    this.itemBtnEvent = globalConst_1.default.ItemGive;
                } else if (itemNode.itemID > 40 && itemNode.itemID <= 50) {
                    GlobalFunc_1.default.changeButtonToBlue(this.btn_item, "合成");
                    this.itemBtnEvent = globalConst_1.default.ItemCompose;
                } else this.btn_item.visible = false;
            };
            PackageDialog.prototype.getIndexFromItem = function(itemID) {
                var itemIndex = undefined;
                var itemBoxNum = 0;
                var lastBoxNum = undefined;
                for (var index = 0; index < this.itemArray.length; index++) {
                    var itemData = this.itemArray[index];
                    if (itemData.itemID == itemID) {
                        itemBoxNum++;
                        if (!lastBoxNum || lastBoxNum > itemData.itemNum) {
                            lastBoxNum = itemData.itemNum;
                            itemIndex = index;
                        }
                    }
                }
                return {
                    index: itemIndex,
                    itemBoxNum: itemBoxNum
                };
            };
            PackageDialog.prototype.s2c_getItemChangeInfo = function(data) {
                var inData;
                var itemID;
                var oldItemNum;
                if (!!data.zs_uid) {
                    inData = data.items;
                    itemID = inData.item_id;
                    oldItemNum = PlayerData_1.default.getItemNum(itemID.toString());
                    PlayerData_1.default.setItemNum(data.items.item_id, data.items.count);
                } else {
                    for (var index = 0; index < data.items.length; index++) {
                        var item = data.items[index];
                        if (item.item_id != 2) {
                            inData = item;
                            break;
                        }
                    }
                    itemID = inData.item_id;
                    oldItemNum = PlayerData_1.default.getItemNum(itemID.toString());
                    PlayerData_1.default.setItemsNum(data.items);
                }
                var newItemNum = inData.count;
                if (!oldItemNum) oldItemNum = 0;
                var changeNum;
                if (newItemNum > oldItemNum) {
                    changeNum = newItemNum - oldItemNum;
                    this.addItemToArray(itemID, changeNum, newItemNum);
                } else {
                    changeNum = oldItemNum - newItemNum;
                    this.reduceItemToArray(itemID, changeNum, newItemNum);
                }
                this.sortArray(this.itemArray);
                this.checkItemArray(this.itemArray);
                this.resetItemSelectState();
                this.selectItem(this.itemArray[this.itemSelectIndex], this.itemSelectIndex, false);
                this.list_items.refresh();
                this.scrollBar.hide = this.list_items.array.length <= 16;
            };
            PackageDialog.prototype.addItemToArray = function(itemID, itemNum, newAllNum) {
                if (newAllNum === void 0) newAllNum = undefined;
                var num = itemNum;
                var itemData = this.itemArray[this.getIndexFromItem(itemID).index];
                var itemNode = this.itemsInfo[itemData.itemID.toString()];
                if (itemData.itemNum + itemNum > 9999) {
                    var addNum = 9999 - itemData.itemNum;
                    itemData.itemNum += addNum;
                    num -= addNum;
                    itemData.box_tools.text_itemNum.visible = true;
                    itemData.box_tools.text_itemNum.text = "x" + itemData.itemNum;
                    this.getItemData(itemNode, num);
                } else {
                    itemData.itemNum += itemNum;
                    itemData.box_tools.text_itemNum.visible = true;
                    itemData.box_tools.text_itemNum.text = "x" + itemData.itemNum;
                }
                this.setSortId(itemNode, itemData.itemNum, itemData);
            };
            PackageDialog.prototype.reduceItemToArray = function(itemID, itemNum, newAllNum) {
                if (newAllNum === void 0) newAllNum = undefined;
                var num = itemNum;
                var itemInData;
                var itemData;
                while (num > 0) {
                    itemInData = this.getIndexFromItem(itemID);
                    itemData = this.itemArray[itemInData.index];
                    if (itemData.itemNum - num < 0) {
                        num -= itemData.itemNum;
                        this.itemArray.splice(itemInData.index, 1);
                    } else {
                        itemData.itemNum -= num;
                        num = 0;
                        if (itemData.itemNum == 0 && itemInData.itemBoxNum > 1) this.itemArray.splice(itemInData.index, 1); else {
                            itemData.box_tools.text_itemNum.text = "x" + itemData.itemNum;
                            this.checkItemData(itemData);
                        }
                    }
                }
            };
            PackageDialog.prototype.checkItemData = function(itemData) {
                var itemNode = this.itemsInfo[itemData.itemID.toString()];
                if (itemData.itemID <= 100) {
                    var serTime = Number(GameData_1.default.serverTimeStamp) || parseInt((GlobalFunc_1.default.getClientTime() / 1e3).toString());
                    itemData.box_tools.text_itemNum.visible = false;
                    itemData.box_tools.text_expire.visible = false;
                    itemData.box_tools.image_itemFree.visible = false;
                    if (itemData.itemID.toString() == globalConst_1.default.ItemMonthCardID) {
                        if (itemData.itemNum - serTime <= 86400) itemData.box_tools.text_expire.visible = true;
                    } else if (itemData.itemNum == -1) itemData.box_tools.image_itemFree.visible = true; else if (itemData.itemNum != 0) {
                        itemData.box_tools.text_itemNum.visible = true;
                        itemData.box_tools.text_itemNum.text = "x" + itemData.itemNum;
                    }
                }
                this.setSortId(itemNode, itemData.itemNum, itemData);
            };
            PackageDialog.prototype.refreshUI = function() {
                this.initArrays();
                this.selectItem(this.itemArray[0], 0, false);
            };
            PackageDialog.prototype.itemBtnClick = function() {
                var itemInfo = this.itemsInfo[this.selectObject.itemID.toString()];
                var vip_level = PlayerData_1.default.vip_level;
                var dialog;
                if (this.itemBtnEvent == globalConst_1.default.ItemBuy) if (itemInfo.buyVip > vip_level) {
                    var str = GlobalFunc_1.default.getColorText("亲,需要贵族" + itemInfo.buyVip + "才能购买" + itemInfo.itemName + "技能哦!", 35, "#ffffff", "#0b3170");
                    dialog = new CommonDialog_1.default(1, [ str ], undefined, "查看贵族特权", "提示", false, new Laya.Handler(this, function() {
                        DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_VIPCHARGE);
                    }));
                } else dialog = new ItemBuyDialog_1.default(itemInfo.itemID); else if (this.itemBtnEvent == globalConst_1.default.ItemGive) if (vip_level < 4) {
                    var str = GlobalFunc_1.default.getColorText("亲,需要贵族" + itemInfo.giveVip + "才能赠送哦!", 35, "#ffffff", "#0b3170");
                    dialog = new CommonDialog_1.default(1, [ str ], undefined, "查看贵族特权", "提示", false, new Laya.Handler(this, function() {
                        DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_VIPCHARGE);
                    }));
                } else dialog = new ItemGiveDialog_1.default(itemInfo.itemID); else if (this.itemBtnEvent == globalConst_1.default.ItemMonthbuy) DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_MONTHCARD); else if (this.itemBtnEvent == globalConst_1.default.ItemCompose) DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_COMPOSE, undefined, true);
                if (dialog) SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
            };
            return PackageDialog;
        }(layaMaxUI_1.ui.hallScene.PackageDialogUI);
        exports.default = PackageDialog;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/DialogManager": 9,
        "../../common/SceneM": 19,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalObj": 88,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/OnOffManager": 93,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151,
        "./ItemBuyDialog": 51,
        "./ItemGiveDialog": 52
    } ],
    56: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var GameData_1 = require("../../datas/hallData/GameData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var PlayerInfoDlg = function(_super) {
            __extends(PlayerInfoDlg, _super);
            function PlayerInfoDlg() {
                var _this = _super.call(this) || this;
                GlobalFunc_1.default.openDialog(_this);
                _this.btnClose.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.btnCopy.on(Laya.Event.CLICK, _this, _this.doCopy);
                _this.updateView();
                return _this;
            }
            PlayerInfoDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            PlayerInfoDlg.prototype.updateView = function() {
                this.lblVipLevel.font = globalConst_1.default.fontNum1;
                this.imgHead.skin = GameData_1.default.headImg ? GameData_1.default.headImg : globalConst_1.default.defaultHead;
                this.lblId.text = "ID:" + GameData_1.default.uid;
                this.lblName.text = GlobalFunc_1.default.cutNickName(GameData_1.default.nickName);
                this.lblMoney.text = PlayerData_1.default.getItemNum(globalConst_1.default.gold + "") + "";
                this.lblDimond.text = PlayerData_1.default.getItemNum(globalConst_1.default.ticket + "") + "";
                this.lblVipLevel.text = PlayerData_1.default.vip_level + "";
            };
            PlayerInfoDlg.prototype.doCopy = function() {
                if (GlobalVar_1.default.isWx) wx.setClipboardData({
                    data: GameData_1.default.uid + "",
                    success: function() {
                        GlobalFunc_1.default.log("复制成功");
                    },
                    fail: function() {}
                }); else ;
            };
            PlayerInfoDlg.prototype.onClosed = function() {
                this.destroy();
            };
            PlayerInfoDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            return PlayerInfoDlg;
        }(layaMaxUI_1.ui.hallScene.PlayerDataDialogUI);
        exports.PlayerInfoDlg = PlayerInfoDlg;
    }, {
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    57: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var DialogManager_1 = require("../../common/DialogManager");
        var globalConst_1 = require("../../globalConst/globalConst");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GameData_1 = require("../../datas/hallData/GameData");
        var OnOffManager_1 = require("../../globalConst/OnOffManager");
        var PlayerInfoView = function(_super) {
            __extends(PlayerInfoView, _super);
            function PlayerInfoView() {
                var _this = _super.call(this) || this;
                EventDis_1.default.addEvntListener(GlobalVar_1.default.MY_RES, _this, _this.updateMoney);
                EventDis_1.default.addEvntListener("exchange_success", _this, _this.updateMoney);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.UPDATE_PLAYER_DATA, _this, _this.updateInfo);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.VIP_EXP_UP, _this, _this.updateInfo);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.GET_HALL_COIN_POS, _this, _this.getCoinPos);
                _this.imgHead1.on(Laya.Event.CLICK, _this, _this.showPlayerInfo);
                if (!OnOffManager_1.default.isChargeOn) _this.img_plusDmd.visible = _this.img_plusGold.visible = _this.img_plusZibi.visible = false; else {
                    _this.btnDiamond.on(Laya.Event.CLICK, _this, _this.linkToShop, [ 1 ]);
                    _this.btnMoney.on(Laya.Event.CLICK, _this, _this.linkToShop, [ 0 ]);
                }
                _this.updateView();
                _this.x = _this.y = 0;
                return _this;
            }
            PlayerInfoView.prototype.getCoinPos = function() {
                var pos = this.btnMoney.localToGlobal(new Laya.Point(0, 0));
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.SEND_HALL_COIN_POS, pos);
            };
            PlayerInfoView.prototype.showPlayerInfo = function() {
                DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_PLAYERINFO);
            };
            PlayerInfoView.prototype.linkToShop = function(index) {
                DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_SHOP, index);
            };
            PlayerInfoView.prototype.updateView = function() {
                this.updateMoney();
                this.updateInfo();
            };
            PlayerInfoView.prototype.updateInfo = function() {
                this.lblVip.text = PlayerData_1.default.vip_level + "";
                this.imgHead1.skin = GameData_1.default.headImg ? GameData_1.default.headImg : globalConst_1.default.defaultHead;
                this.lblName.text = GameData_1.default.nickName;
                this.lblId.text = GameData_1.default.uid;
            };
            PlayerInfoView.prototype.updateMoney = function() {
                this.lblMoney.text = PlayerData_1.default.getItemNum(globalConst_1.default.gold + "") + "";
                this.lblDiamond.text = PlayerData_1.default.getItemNum(globalConst_1.default.ticket + "") + "";
            };
            PlayerInfoView.prototype.closePlayerInfo = function() {
                this.img_playerInfo.visible = false;
            };
            PlayerInfoView.prototype.destroy = function() {
                this.removeSelf();
                EventDis_1.default.delAllEvnt(this);
            };
            return PlayerInfoView;
        }(layaMaxUI_1.ui.common.PlayerInfoViewUI);
        exports.PlayerInfoView = PlayerInfoView;
    }, {
        "../../common/DialogManager": 9,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/OnOffManager": 93,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    58: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var GameData_1 = require("../../datas/hallData/GameData");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var NetManager_1 = require("../../netWork/NetManager");
        var RankingListDlg = function(_super) {
            __extends(RankingListDlg, _super);
            function RankingListDlg() {
                var _this = _super.call(this) || this;
                _this.rankDesc = [ "白金弹头", "黄金弹头", "白银弹头" ];
                _this.rankType = [ "bomb4", "bomb3", "bomb2" ];
                _this.rankItem = [ 14, 13, 12 ];
                _this.rankData = [];
                GlobalFunc_1.default.openDialog(_this);
                _this.chirid = GameData_1.default.uid;
                _this.lstBullet.scrollBar.showButtons = false;
                _this.btnClose.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.lstTitle.mouseHandler = new Laya.Handler(_this, _this.onLstTitleClick);
                _this.lstTitle.renderHandler = new Laya.Handler(_this, _this.onLstTitleRender);
                _this.lstBullet.renderHandler = new Laya.Handler(_this, _this.onLstBulletRender);
                _this.lstTitle.dataSource = _this.rankDesc;
                _this.lstTitle.selectedIndex = 0;
                _this.updateView();
                _this.lblName.text = GameData_1.default.nickName;
                _this.lblName.text = GlobalFunc_1.default.cutNickName(_this.lblName.text);
                _this.label_noData.visible = false;
                _this.box_bottom.visible = false;
                EventDis_1.default.addEvntListener("get_dantou_rank_suc", _this, _this.getRankInfo);
                return _this;
            }
            RankingListDlg.prototype.getRankInfo = function(serverData) {
                if (!serverData || !serverData.list || serverData.list.length == 0) {
                    this.label_noData.visible = true;
                    this.box_bottom.visible = false;
                    this.rankData[this.lstTitle.selectedIndex] = null;
                    this.lstBullet.dataSource = [];
                    this.lstBullet.refresh();
                } else {
                    this.rankData[this.lstTitle.selectedIndex] = serverData;
                    this.updateInfo(this.lstTitle.selectedIndex);
                    this.label_noData.visible = false;
                    this.box_bottom.visible = true;
                }
            };
            RankingListDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            RankingListDlg.prototype.updateView = function() {
                this.updateContent(0);
            };
            RankingListDlg.prototype.updateContent = function(index) {
                if (!this.rankData[index] || this.rankData[index].length == 0) NetManager_1.default.reqDantouRank(this.rankItem[index]); else {
                    this.label_noData.visible = false;
                    this.box_bottom.visible = true;
                    this.updateInfo(index);
                }
            };
            RankingListDlg.prototype.updateInfo = function(index) {
                var serverData = this.rankData[index];
                if (!serverData || !serverData.list || serverData.list.length == 0) {
                    GlobalFunc_1.default.log("没有数据的操作");
                    return;
                }
                this.lstBullet.dataSource = serverData.list;
                this.lstBullet.visible = true;
                this.lstBullet.scrollTo(0);
                this.myRankInfo = {
                    self_name: serverData.self_name,
                    self_count: serverData.self_count,
                    self_ranking: serverData.self_ranking
                };
                this.label_bulletType.text = this.rankDesc[index];
                this.lblScore.strokeColor = this.lblName.strokeColor = "#0b3170";
                this.lblName.color = this.lblScore.color = "#ffffff";
                this.setRankColor(this.lblName, this.lblScore, this.myRankInfo.self_count);
                var rank = this.myRankInfo.self_ranking;
                this.lblRank.text = rank == -1 ? "当前排行：未上榜" : rank <= 3 ? "当前排行：" : "当前排行：" + rank;
                this.imgRank.visible = rank <= 3 && rank > 0;
                this.imgRank.visible && (this.imgRank.skin = "common/img_num_" + rank + ".png");
                var itemCount = this.myRankInfo.self_count;
                var itemId = this.rankItem[index];
                var item = PlayerData_1.default.items[itemId];
                this.imgBullet.skin = "iconAndSkin/icon_" + item.skin;
                this.lblScore.text = GlobalFunc_1.default.changeNum(itemCount ? itemCount : 0);
            };
            RankingListDlg.prototype.setRankColor = function(label1, label2, index) {
                switch (index) {
                  case 1:
                    label1.color = label2.color = "#ffde00";
                    label1.strokeColor = label2.strokeColor = "#5e2100";
                    break;

                  case 2:
                    label1.color = label2.color = "#85efff";
                    label1.strokeColor = label2.strokeColor = "#004b6e";
                    break;

                  case 3:
                    label1.color = label2.color = "#ffb77e";
                    label1.strokeColor = label2.strokeColor = "#602c00";
                    break;

                  default:
                    label1.color = label2.color = "#ffffff";
                    label1.strokeColor = label2.strokeColor = "#0b3170";
                    break;
                }
            };
            RankingListDlg.prototype.onLstTitleRender = function(cell, index) {
                var data = this.lstTitle.getItem(index);
                var btn = cell.getChildByName("btnTop");
                btn.label = data;
                var isSelected = index == this.lstTitle.selectedIndex;
                btn.strokeColors = isSelected ? "#70200b" : "#0b3170";
                btn.skin = isSelected ? "noZip/btn_2.png" : "noZip/btn_3.png";
            };
            RankingListDlg.prototype.onLstBulletRender = function(cell, index) {
                var selectedIndex = this.lstTitle.selectedIndex;
                var data = this.lstBullet.getItem(index);
                var imgRank = cell.getChildByName("imgRank");
                var lblRank = cell.getChildByName("lblRank");
                var imgHead = cell.getChildByName("imgHead");
                var lblName = cell.getChildByName("lblName");
                var imgBullet = cell.getChildByName("imgBullet");
                var imgBg = cell.getChildByName("imgBg");
                var lblCount = cell.getChildByName("lblCount");
                var rank = data.ranking;
                imgHead.skin = !!data.headurl ? data.headurl : "common/img_toux.png";
                lblCount.text = data.count;
                imgBg.skin = data.ranking == this.myRankInfo.self_ranking ? "noZip/img_bg_12.png" : "noZip/img_bg_11.png";
                var item = PlayerData_1.default.items[this.rankItem[selectedIndex]];
                imgBullet.skin = "iconAndSkin/icon_" + item.skin;
                lblName.text = data.name;
                var isRank = rank < 3;
                lblCount.color = lblName.color = "#ffffff";
                lblCount.strokeColor = lblName.strokeColor = "#0b3170";
                isRank && this.setRankColor(lblName, lblCount, rank);
                isRank && (imgRank.skin = "common/img_num_" + rank + ".png");
                !isRank && (lblRank.text = rank + "");
                imgRank.visible = isRank;
                lblRank.visible = !isRank;
            };
            RankingListDlg.prototype.onLstTitleClick = function(e, index) {
                if (e.type == Laya.Event.CLICK) {
                    this.lstTitle.selectedIndex = index;
                    this.updateContent(index);
                }
            };
            RankingListDlg.prototype.onClosed = function() {
                this.destroy();
            };
            RankingListDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            return RankingListDlg;
        }(layaMaxUI_1.ui.hallScene.RankingListDialogUI);
        exports.RankingListDlg = RankingListDlg;
    }, {
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151
    } ],
    59: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GameData_1 = require("../../datas/hallData/GameData");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var rankInfo = function() {
            function rankInfo() {}
            return rankInfo;
        }();
        var RankingWarDlg = function(_super) {
            __extends(RankingWarDlg, _super);
            function RankingWarDlg() {
                var _this = _super.call(this) || this;
                _this.rankName = [ "周\n榜", "月\n榜" ];
                _this.topName = [ "本周排行榜", "上周排行榜", "本月排行榜", "上月排行榜" ];
                _this.act = [ "rank_rice_w", "rank_rice_m" ];
                _this.rankData = [ null, null, null, null ];
                GlobalFunc_1.default.openDialog(_this);
                _this.lstRank.scrollBar.showButtons = false;
                _this.btnClose.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.boxDesc.on(Laya.Event.CLICK, _this, _this.showTip);
                _this.lstTop.mouseHandler = new Laya.Handler(_this, _this.onLstTopClick);
                _this.lstType.mouseHandler = new Laya.Handler(_this, _this.onLstTypeClick);
                _this.lstTop.renderHandler = new Laya.Handler(_this, _this.onLstTopRender);
                _this.lstType.renderHandler = new Laya.Handler(_this, _this.onLstTypeRender);
                _this.lstRank.renderHandler = new Laya.Handler(_this, _this.onLstRankRender);
                _this.lstType.dataSource = _this.rankName;
                _this.btnClose.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.lstTop.selectedIndex = _this.lstType.selectedIndex = 0;
                _this.updateView();
                return _this;
            }
            RankingWarDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            RankingWarDlg.prototype.showTip = function() {
                var str = GlobalFunc_1.default.getColorText("1.积分获得:只有在经典模式中的任意渔场获得的金币数\n\n量才会统计为总分（包括弹头）。\n\n2.VIP加成他:根据不同的VIP，击杀获得的鱼分加成不同。 \n\n3.不计积分项:购买、排行奖励、活动等获得的金币不计\n\n入积分项。\n\n4.奖励发放:统一发放至邮件中。\n\n5.发放时间:每日奖励会在第二天0:10分发放，每周奖励\n\n会在周一0:20发放，每月奖励会在第二个月的1号0:30分发放。", 22);
                var alert = new CommonDialog_1.default(2, [ str ], null, "确认", "规则说明", true);
                SceneM_1.default.addToMiddLayer(alert, globalConst_1.default.dialogLayer);
            };
            RankingWarDlg.prototype.updateView = function() {
                this.setTopData();
                this.updateContent();
            };
            RankingWarDlg.prototype.setTopData = function() {
                var topIndex = this.lstType.selectedIndex;
                this.lstTop.dataSource = [ this.topName[2 * topIndex], this.topName[2 * topIndex + 1] ];
            };
            RankingWarDlg.prototype.updateContent = function() {
                var index = (this.lstType.selectedIndex + 1) * (this.lstTop.selectedIndex + 1) - 1;
                if (!!this.rankData[index]) {
                    this.myData = null;
                    var data = this.rankData[index];
                    this.lstRank.dataSource = data;
                    this.lstRank.visible = true;
                    this.checkIsRank(data);
                    this.lstRank.visible = data.length > 0;
                    this.boxNoItem.visible = data.length == 0;
                    this.updateMy();
                } else this.reqRankData();
            };
            RankingWarDlg.prototype.checkIsRank = function(rankInfos) {
                if (rankInfos === void 0) rankInfos = [];
                var my = GameData_1.default.uid;
                for (var i = 0; i < rankInfos.length; i++) {
                    var data = rankInfos[i];
                    var isMe = data.uid == my;
                    if (isMe) {
                        this.myData = data;
                        this.myRank = i + 1;
                        break;
                    }
                }
            };
            RankingWarDlg.prototype.updateMy = function() {
                this.lblRank.text = !!this.myData ? "我的排名: " + this.myRank : "未上榜";
                this.lblScore.text = "积分: " + GlobalFunc_1.default.changeNum(!!this.myData ? +this.myData.value : 0);
                this.lblDesc.visible = this.imgItem.visible = !!this.myData;
                this.lblScore.visible = this.lstType.selectedIndex != 2;
                var isMonth = this.lstType.selectedIndex == 2;
                this.lblMsg.text = isMonth ? "排行榜暂未开放!" : "亲,暂无排行信息哦!";
                if (!this.myData) return;
                var itemData = this.myData.award.split("|");
                var item = PlayerData_1.default.items[itemData[0]];
                this.imgItem.skin = "iconAndSkin/icon_" + item.skin;
                this.lblRewardCount.text = "x" + GlobalFunc_1.default.changeNum(+itemData[1]);
            };
            RankingWarDlg.prototype.onLstTopClick = function(e, index) {
                if (e.type == Laya.Event.CLICK) {
                    this.lstTop.selectedIndex = index;
                    this.lstTop.refresh();
                    this.updateContent();
                }
            };
            RankingWarDlg.prototype.onLstTopRender = function(cell, index) {
                var data = this.lstTop.getItem(index);
                var btn = cell.getChildByName("btnTop");
                var isSelect = index == this.lstTop.selectedIndex;
                btn.skin = isSelect ? "noZip/btn_2.png" : "noZip/btn_3.png";
                btn.label = data;
                btn.labelColors = isSelect ? "#ffffff" : "#b3f3ff";
                btn.strokeColors = isSelect ? "#70200b" : "#0f5180";
            };
            RankingWarDlg.prototype.onLstRankRender = function(cell, index) {
                var data = this.lstRank.getItem(index);
                var imgBg = cell.getChildByName("imgBg");
                var imgVip = cell.getChildByName("imgVip");
                var imgItem = cell.getChildByName("imgItem");
                var imgRank = cell.getChildByName("imgRank");
                var lblRank = cell.getChildByName("lblRank");
                var lblName = cell.getChildByName("lblName");
                var lblScore = cell.getChildByName("lblScore");
                var lblVip = cell.getChildByName("lblVip");
                var lblReward = cell.getChildByName("lblRewardCount");
                var itemData = data.award.split("|");
                var item = PlayerData_1.default.items[itemData[0]];
                var isMe = data.uid == GameData_1.default.uid;
                imgBg.skin = isMe ? "noZip/img_bg_12.png" : "noZip/img_bg_11.png";
                imgItem.skin = "iconAndSkin/icon_" + item.skin;
                lblReward.text = "x" + GlobalFunc_1.default.changeNum(+itemData[1]);
                var isRank = index < 3;
                lblRank.text = index + 1 + "";
                lblRank.visible = !isRank;
                imgRank.visible = isRank;
                lblVip.text = data.vip;
                lblScore.text = GlobalFunc_1.default.changeNum(+data.value);
                imgVip.skin = GlobalFunc_1.default.getVipIcon(+data.vip);
                isRank && (imgRank.skin = "common/img_num_" + (index + 1) + ".png");
                lblName.text = GlobalFunc_1.default.cutNickName(data.nickname);
                lblName.color = "#ffffff";
                lblName.strokeColor = "#0b3170";
                switch (index) {
                  case 0:
                    lblName.color = "#ffde00";
                    lblName.strokeColor = "#5e2100";
                    break;

                  case 1:
                    lblName.color = "#85efff";
                    lblName.strokeColor = "#004b6e";
                    break;

                  case 2:
                    lblName.color = "#ffb77e";
                    lblName.strokeColor = "#602c00";
                    break;

                  default:
                    break;
                }
            };
            RankingWarDlg.prototype.onLstTypeClick = function(e, index) {
                if (e.type == Laya.Event.CLICK) {
                    this.lstType.selectedIndex = index;
                    this.lstType.refresh();
                    this.lstTop.selectedIndex = 0;
                    this.lstTop.refresh();
                    this.setTopData();
                    this.updateContent();
                }
            };
            RankingWarDlg.prototype.onLstTypeRender = function(cell, index) {
                var data = this.lstType.getItem(index);
                var btn = cell.getChildByName("btnRank");
                btn.label = data;
                var isSelect = this.lstType.selectedIndex == index;
                btn.skin = isSelect ? "common/btn_5.png" : "common/btn_4.png";
                this.lstType.selectedIndex != 2 && (cell.zOrder = 5 - index);
                this.lstType.selectedIndex == 2 && (cell.zOrder = 5 + index);
                isSelect && (cell.zOrder = 10);
                btn.labelColors = isSelect ? "#ffffff" : "#0f5180";
                btn.strokeColors = isSelect ? "#70200b" : "#70200b";
                btn.labelStroke = isSelect ? 3.8 : 0;
            };
            RankingWarDlg.prototype.onClosed = function() {
                this.destroy();
            };
            RankingWarDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
            };
            RankingWarDlg.prototype.reqRankData = function() {
                var that = this;
                var selectedIndex = this.lstType.selectedIndex;
                var act = this.act[selectedIndex];
                var old = this.lstTop.selectedIndex;
            };
            return RankingWarDlg;
        }(layaMaxUI_1.ui.hallScene.RankingWarDialogUI);
        exports.RankingWarDlg = RankingWarDlg;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/SceneM": 19,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    60: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalObj_1 = require("../../globalConst/GlobalObj");
        var SceneM_1 = require("../../common/SceneM");
        var SoundM_1 = require("../../common/SoundM");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var FishData_1 = require("../../datas/roomData/FishData");
        var RewardDialog = function(_super) {
            __extends(RewardDialog, _super);
            function RewardDialog(data) {
                var _this = _super.call(this) || this;
                _this.itemArray = [];
                _this.itemBoxArr = [];
                _this.coinNum = 0;
                _this.diamondNum = 0;
                _this.isFishScene = false;
                _this.allData = GlobalFunc_1.default.transGoldItem(data);
                _this.allData.sort(_this.sortArray);
                return _this;
            }
            RewardDialog.prototype.init = function(notice, handler, message, sure, isAuto) {
                if (notice === void 0) notice = undefined;
                if (handler === void 0) handler = undefined;
                if (message === void 0) message = "";
                if (sure === void 0) sure = "领取";
                if (isAuto === void 0) isAuto = false;
                GlobalFunc_1.default.openDialog(this);
                this.itemsIndex = 0;
                this.handler = handler;
                this.notice = notice;
                this.text_message.text = message;
                this.btn_receive.label = sure;
                this.initUiBox();
                this.initItemArray();
                this.checkBtn();
                if (this.itemArray.length <= 1) this.btn_left.visible = this.btn_right.visible = false;
                this.btn_left.on(Laya.Event.CLICK, this, this.turnPage, [ -1 ]);
                this.btn_right.on(Laya.Event.CLICK, this, this.turnPage, [ 1 ]);
                this.btn_receive.on(Laya.Event.CLICK, this, this.getReward);
                SoundM_1.default.playSound(globalConst_1.default.Sud_reward, 1);
                if (isAuto) this.getReward();
            };
            RewardDialog.prototype.initUiBox = function() {
                for (var index = 0; index < 5; index++) {
                    var items = new layaMaxUI_1.ui.roleNodes.RewardBoxUI();
                    items.ani_0.play(0, true);
                    this.box_items.addChild(items);
                    items.name = "itemBox_" + index;
                    this.itemBoxArr[index] = items;
                }
            };
            RewardDialog.prototype.initItemArray = function() {
                var arrLength = 0;
                for (var index = 0; index < this.allData.length; index++) {
                    var itemData = this.allData[index];
                    var itemObj = GlobalObj_1.default.createRewardItemObj(itemData);
                    if (!!!this.itemArray[arrLength] || this.itemArray[arrLength].length >= 5 && ++arrLength) this.itemArray[arrLength] = new Array();
                    this.itemArray[arrLength].push(itemObj);
                }
                this.itemsIndex = 0;
                this.setListInfo(this.itemsIndex);
            };
            RewardDialog.prototype.setListInfo = function(arrayIndex, withAni) {
                if (withAni === void 0) withAni = true;
                var itemBoxWidth = 0;
                for (var index = 0; index < this.itemBoxArr.length; index++) {
                    var box = this.itemBoxArr[index];
                    if (this.itemArray[arrayIndex] && this.itemArray[arrayIndex][index]) {
                        var data = this.itemArray[arrayIndex][index];
                        if (this.itemArray[arrayIndex].length == 1) box.img_light.scale(1, 1); else box.img_light.scale(.6, .6);
                        box.visible = true;
                        box.img_itemIcon.skin = data.icon;
                        if (data.id == "41") box.img_itemIcon.scale(.8, .8); else box.img_itemIcon.scale(1, 1);
                        box.text_itemNum.text = data.num.toString();
                        box.x = itemBoxWidth + 50;
                        box.alpha = 1;
                        box.scale(1, 1);
                        itemBoxWidth += 100;
                        if (withAni) {
                            Laya.Tween.clearAll(box);
                            this.box_items.scale(0, 0);
                            Laya.Tween.to(this.box_items, {
                                scaleX: 1,
                                scaleY: 1
                            }, 800, Laya.Ease.elasticOut);
                        }
                    } else box.visible = false;
                    if (!!this.itemArray[arrayIndex] && index >= this.itemArray[arrayIndex].length - 1) continue;
                    itemBoxWidth += 40;
                }
                this.box_items.width = itemBoxWidth;
            };
            RewardDialog.prototype.turnPage = function(dir) {
                if (dir == -1 && this.itemsIndex == 0 || dir == 1 && this.itemsIndex == this.itemArray.length - 1) return;
                this.itemsIndex += dir;
                this.setListInfo(this.itemsIndex);
                this.checkBtn();
            };
            RewardDialog.prototype.checkBtn = function() {
                this.btn_left.visible = this.itemsIndex != 0;
                this.btn_right.visible = this.itemsIndex < this.itemArray.length - 1;
            };
            RewardDialog.prototype.getReward = function() {
                var playIndex = 0;
                var delay = 500;
                if (this.itemArray[this.itemsIndex] != undefined) {
                    playIndex = this.itemsIndex;
                    this.btn_left.visible = false;
                    this.btn_right.visible = false;
                    this.btn_receive.visible = false;
                    this.img_title.visible = false;
                    delay = 10;
                } else for (var index = 0; index < this.itemArray.length; index++) if (this.itemArray[index] != undefined) {
                    playIndex = index;
                    break;
                }
                if (this.itemArray[playIndex] == undefined) {
                    this.doClose();
                    return;
                }
                this.setListInfo(playIndex, false);
                Laya.timer.once(delay, this, this.loopGetReward, [ playIndex ]);
            };
            RewardDialog.prototype.loopGetReward = function(dataIndex) {
                var hander = new Laya.Handler(this, this.getReward);
                for (var index = 0; index < this.itemBoxArr.length; index++) {
                    var box = this.itemBoxArr[index];
                    var data = this.itemArray[dataIndex][index];
                    var width = box.img_itemIcon.width;
                    var height = box.img_itemIcon.height;
                    var startPos = box.img_itemIcon.localToGlobal(new Laya.Point(width / 2, height / 2));
                    if (data) {
                        if (data.id == 1) {
                            var mySeat = PlayerData_1.default.getItemFlyPos(globalConst_1.default.itemFlyRoomCoin)[FishData_1.default.mySeatIndex - 1];
                            var pos = BattleData_1.default.isInRoom ? mySeat : PlayerData_1.default.getItemFlyPos(globalConst_1.default.itemFlyHallCoin);
                            Laya.timer.frameLoop(3, this, this.playCoin, [ {
                                startPos: startPos,
                                endPos: pos
                            } ]);
                        } else if (data.id == 4) {
                            var mySeat = PlayerData_1.default.getItemFlyPos(globalConst_1.default.itemFlyRoomTicket)[FishData_1.default.mySeatIndex - 1];
                            var pos = BattleData_1.default.isInRoom ? mySeat : PlayerData_1.default.getItemFlyPos(globalConst_1.default.itemFlyHallTicket);
                            Laya.timer.frameLoop(3, this, this.playTicket, [ {
                                startPos: startPos,
                                endPos: pos
                            } ]);
                        } else if (this.isFishScene) {
                            var pos = PlayerData_1.default.getItemFlyPos(globalConst_1.default.itemFlyCannon)[FishData_1.default.mySeatIndex - 1];
                            var img = GlobalFunc_1.default.itemFlyAni(startPos, pos, data.id, undefined);
                            SceneM_1.default.addToLayer(img, globalConst_1.default.frontDialogLayer);
                        } else {
                            var pos = PlayerData_1.default.getItemFlyPos(globalConst_1.default.itemFlyPackage);
                            var img = GlobalFunc_1.default.itemFlyAni(startPos, pos, data.id, undefined);
                            SceneM_1.default.addToLayer(img, globalConst_1.default.frontDialogLayer);
                        }
                        Laya.Tween.to(box, {
                            alpha: 0
                        }, 150);
                    }
                }
                this.itemArray[dataIndex] = undefined;
                Laya.timer.once(1800, this, this.getReward);
            };
            RewardDialog.prototype.playCoin = function(data) {
                if (this.coinNum < 8) {
                    var randomX = (Math.random() - .5) * 80;
                    var randomY = (Math.random() - .5) * 80;
                    var newPos = new Laya.Point(data.startPos.x + randomX, data.startPos.y - 50 + randomY);
                    var callBack = undefined;
                    if (this.coinNum == 0) callBack = new Laya.Handler(this, function() {
                        SoundM_1.default.playSound(globalConst_1.default.Sud_getGold, 1, 10, undefined, undefined, true);
                    });
                    var coin = GlobalFunc_1.default.goldCoinAni(newPos, data.endPos, callBack, 0, 25, "goldCoinAni", true);
                    SceneM_1.default.addToLayer(coin, globalConst_1.default.frontDialogLayer);
                    this.coinNum++;
                } else Laya.timer.clear(this, this.playCoin);
            };
            RewardDialog.prototype.playTicket = function(data) {
                if (this.diamondNum < 5) {
                    var randomX = (Math.random() - .5) * 80;
                    var randomY = (Math.random() - .5) * 80;
                    var newPos = new Laya.Point(data.startPos.x + randomX, data.startPos.y - 35 + randomY);
                    var img = GlobalFunc_1.default.itemFlyAni(newPos, data.endPos, 4, undefined);
                    img.scale(.6, .6);
                    SceneM_1.default.addToLayer(img, globalConst_1.default.frontDialogLayer);
                    this.diamondNum++;
                } else Laya.timer.clear(this, this.playTicket);
            };
            RewardDialog.prototype.sortArray = function(a, b) {
                var aSortId = PlayerData_1.default.getItemData(a.item_id).sortId;
                var bSortId = PlayerData_1.default.getItemData(b.item_id).sortId;
                return aSortId < bSortId ? -1 : 1;
            };
            RewardDialog.prototype.doClose = function() {
                var _this = this;
                if (!!this.handler) this.handler.run();
                if (!!this.notice) EventDis_1.default.dispatchEvent(this.notice);
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            RewardDialog.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.Tween.clearAll(this.box_items);
                this.removeSelf();
                this.removeChildren();
            };
            return RewardDialog;
        }(layaMaxUI_1.ui.common.RewardDialogUI);
        exports.default = RewardDialog;
    }, {
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalObj": 88,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    61: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var GlobalObj_1 = require("../../globalConst/GlobalObj");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var RewardDialog_1 = require("./RewardDialog");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var NetManager_1 = require("../../netWork/NetManager");
        var SoundM_1 = require("../../common/SoundM");
        var RouletteDialog = function(_super) {
            __extends(RouletteDialog, _super);
            function RouletteDialog() {
                var _this = _super.call(this) || this;
                _this.rewardListArray = [];
                _this.times = 0;
                _this.rewardData = undefined;
                _this.lightShineTime = 400;
                _this.resetLight = false;
                _this.handler = new Laya.Handler(_this, _this.keepRotate);
                GlobalFunc_1.default.openDialog(_this);
                _this.initReward();
                _this.startShineLight();
                _this.btn_startRotate.on(Laya.Event.CLICK, _this, _this.sendStartRotate);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.LOGIN_ROULETTE_REWARD, _this, _this.setReward);
                _this.ani_light = GlobalFunc_1.default.getAni("rouletteAni", 1);
                _this.box_out.addChild(_this.ani_light);
                _this.ani_light.x = 257;
                _this.ani_light.y = 115;
                _this.ani_light.on(Laya.Event.COMPLETE, _this, _this.showRewardDialog);
                return _this;
            }
            RouletteDialog.prototype.showRewardDialog = function() {
                var _this = this;
                var callBack = new Laya.Handler(this, function() {
                    PlayerData_1.default.addItemNum(_this.rewardData.item.itemId, _this.rewardData.item.itemNum);
                    _this.doClose();
                });
                var dialog = new RewardDialog_1.default([ {
                    item_id: this.rewardData.item.itemId,
                    item_count: this.rewardData.item.itemNum
                } ]);
                SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
                dialog.init(undefined, callBack);
            };
            RouletteDialog.prototype.initReward = function() {
                var json = GlobalFunc_1.default.layaGetRes("config/Roulette.json").Rewards;
                if (json) {
                    json.sort(function(a, b) {
                        if (a.AwardIndex < b.AwardIndex) return -1;
                        return 1;
                    });
                    for (var index = 0; index < json.length; index++) {
                        var rewardNode = json[index];
                        var obj = GlobalObj_1.default.createHallRouletteObj(rewardNode);
                        this.rewardListArray.push(obj);
                    }
                    this.list_items.array = this.rewardListArray;
                }
            };
            RouletteDialog.prototype.sendStartRotate = function() {
                this.ani_3.gotoAndStop(0);
                this.resetLight = true;
                this.lightShineTime = 120;
                this.btn_startRotate.mouseEnabled = false;
                Laya.Tween.to(this.box_roulette, {
                    rotation: 720
                }, 1500, Laya.Ease.sineIn, this.handler);
                NetManager_1.default.reqGetLoginRouletteReward();
                SoundM_1.default.playSound(globalConst_1.default.Sud_LuckyWheel_Start, 1);
            };
            RouletteDialog.prototype.setReward = function(data) {
                PlayerData_1.default.leftLoginRoulette -= 1;
                var rewardIndex = data.awardIndex;
                if (rewardIndex == -1) this.doClose();
                var itemData = this.rewardListArray[rewardIndex];
                var newDatas = [ {
                    item_id: itemData.itemId,
                    item_count: itemData.itemNum
                } ];
                var rewardData = GlobalFunc_1.default.transGoldItem(newDatas)[0];
                this.rewardData = {
                    index: rewardIndex,
                    item: {
                        itemId: rewardData.item_id,
                        itemNum: rewardData.item_count
                    }
                };
            };
            RouletteDialog.prototype.keepRotate = function() {
                if (this.times >= 1 && !!this.rewardData) {
                    this.finallyRotate(this.rewardData);
                    return;
                }
                this.times++;
                this.box_roulette.rotation = this.box_roulette.rotation % 360;
                Laya.Tween.to(this.box_roulette, {
                    rotation: 1080
                }, 1250, undefined, this.handler);
            };
            RouletteDialog.prototype.finallyRotate = function(rewardData) {
                Laya.Tween.clearAll(this.box_roulette);
                this.box_roulette.rotation = this.box_roulette.rotation % 360;
                var rotation = 360 + (10 - rewardData.index) * 36;
                var handler = new Laya.Handler(this, this.roulettefinish);
                Laya.Tween.to(this.box_roulette, {
                    rotation: rotation
                }, 1500, Laya.Ease.sineOut, handler);
            };
            RouletteDialog.prototype.roulettefinish = function() {
                this.ani_light.play(0, false);
                Laya.Tween.to(this.mask_black, {
                    alpha: .7
                }, 500);
                this.resetLight = true;
                this.lightShineTime = 400;
                SoundM_1.default.playSound(globalConst_1.default.Sud_LuckyWheel_Unlock, 1);
            };
            RouletteDialog.prototype.startShineLight = function() {
                Laya.timer.clear(this, this.shineLight);
                Laya.timer.loop(this.lightShineTime, this, this.shineLight);
            };
            RouletteDialog.prototype.shineLight = function() {
                if (this.resetLight == true) {
                    this.resetLight = false;
                    this.startShineLight();
                }
                if (this.box_light.rotation != 0) this.box_light.rotation = 0; else this.box_light.rotation = 30;
            };
            RouletteDialog.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            RouletteDialog.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return RouletteDialog;
        }(layaMaxUI_1.ui.hallScene.RouletteDialogUI);
        exports.default = RouletteDialog;
    }, {
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalObj": 88,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "./RewardDialog": 60
    } ],
    62: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var SoundM_1 = require("../../common/SoundM");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var SetDialog = function(_super) {
            __extends(SetDialog, _super);
            function SetDialog() {
                var _this = _super.call(this) || this;
                _this.isMusic = false;
                _this.isSound = true;
                GlobalFunc_1.default.openDialog(_this);
                _this.initUI();
                _this.checkMusic.on(Laya.Event.CLICK, _this, _this.clickMusic);
                _this.checkSound.on(Laya.Event.CLICK, _this, _this.clickSound);
                _this.btn_define.on(Laya.Event.CLICK, _this, _this.clickDefine);
                _this.returnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                return _this;
            }
            SetDialog.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            SetDialog.prototype.initUI = function() {
                this.isMusic = SoundM_1.default.musicEnabled;
                this.isSound = SoundM_1.default.soundEnabled;
                this.checkMusicShow();
                this.checkSoundShow();
            };
            SetDialog.prototype.checkMusicShow = function() {
                this.checkMusic.selectedIndex = this.isMusic ? 0 : 1;
                this.img_music.skin = this.isMusic ? "common/img_shez_1.png" : "common/img_shez_0.png";
            };
            SetDialog.prototype.checkSoundShow = function() {
                this.checkSound.selectedIndex = this.isSound ? 0 : 1;
                this.img_sound.skin = this.isSound ? "common/img_shez_1.png" : "common/img_shez_0.png";
            };
            SetDialog.prototype.clickMusic = function() {
                this.isMusic = !this.isMusic;
                this.checkMusicShow();
            };
            SetDialog.prototype.clickSound = function() {
                this.isSound = !this.isSound;
                this.checkSoundShow();
            };
            SetDialog.prototype.clickDefine = function() {
                SoundM_1.default.setSoundEnabled(this.isSound, this.isMusic);
                this.doClose();
            };
            return SetDialog;
        }(layaMaxUI_1.ui.common.SetDialogUI);
        exports.default = SetDialog;
    }, {
        "../../common/SoundM": 21,
        "../../globalConst/GlobalFunc": 87,
        "../../ui/layaMaxUI": 151
    } ],
    63: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var DialogManager_1 = require("../../common/DialogManager");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GlobalObj_1 = require("../../globalConst/GlobalObj");
        var NetManager_1 = require("../../netWork/NetManager");
        var GameData_1 = require("../../datas/hallData/GameData");
        var OnOffManager_1 = require("../../globalConst/OnOffManager");
        var ShopDialog = function(_super) {
            __extends(ShopDialog, _super);
            function ShopDialog(selectIndex) {
                if (selectIndex === void 0) selectIndex = 0;
                var _this = _super.call(this) || this;
                _this.goldCoinArray = [];
                _this.diamondArray = [];
                _this.currentViewIndex = undefined;
                _this.commItems = [];
                _this.vip_level = PlayerData_1.default.vip_level;
                GameData_1.default.isShopOn = true;
                _this.monthData = PlayerData_1.default.commoditysInfo["Yueka"];
                _this.imgFirst.visible = !GameData_1.default.isFirstRecharge;
                GlobalFunc_1.default.openDialog(_this);
                _this.setVipInfo();
                _this.initCommoInfo();
                _this.commoidtyList.scrollBar.hide = true;
                _this.commoidtyList.array = _this.goldCoinArray;
                _this.initTabView(selectIndex);
                _this.tab_commType.on(Laya.Event.CLICK, _this, _this.clickTab);
                _this.commoidtyList.mouseHandler = new Laya.Handler(_this, _this.listOnMouse);
                if (!GlobalFunc_1.default.isIos() && OnOffManager_1.default.isMonthCardOn) _this.commoidtyList.renderHandler = new Laya.Handler(_this, _this.onLstRender);
                EventDis_1.default.addEvntListener("payGiftChange", _this, _this.buySuccess);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.COMMODITY_PAY_FALSE, _this, _this.buyFail);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.VIP_EXP_UP, _this, _this.setVipInfo);
                _this.returnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.btn_vip.on(Laya.Event.CLICK, _this, function() {
                    _this.doClose();
                    DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_VIPCHARGE);
                });
                _this.imgFirst.on(Laya.Event.CLICK, _this, function() {
                    DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_FIRSTPAY);
                });
                return _this;
            }
            ShopDialog.prototype.onLstRender = function(cell, index) {
                if (index == 0) {
                    var lbl1 = cell.getChildByName("commodityName");
                    lbl1.visible = true;
                    var lbl2 = cell.getChildByName("itemNum");
                    lbl2.visible = false;
                    var lbl3 = cell.getChildByName("sand");
                    lbl3.visible = false;
                    var box1 = cell.getChildByName("monthCardBox");
                    box1.visible = false;
                    var box2 = cell.getChildByName("commoBox");
                    box2.visible = false;
                    var box3 = cell.getChildByName("monthCardBox");
                    box3.visible = true;
                    var box4 = cell.getChildByName("button_box");
                    var monthLbl = box1.getChildByName("monthCardWorth");
                    monthLbl.text = this.monthData.pricetotal + "元";
                    var img = cell.getChildByName("itemImage");
                    img.skin = "iconAndSkin/skin_monthlyCard.png";
                    var btn = box4.getChildByName("commodityBuy");
                    btn.label = GameData_1.default.monthEndDay ? this.monthData.subdiscount + "元" : this.monthData.discount + "元";
                }
            };
            ShopDialog.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.close();
                    _this.destroy();
                }));
            };
            ShopDialog.prototype.initCommoInfo = function() {
                var commsInfo = PlayerData_1.default.commoditysInfo;
                for (var commoID in commsInfo) if (commsInfo.hasOwnProperty(commoID)) {
                    var vipLvl = PlayerData_1.default.vip_level;
                    var commo = commsInfo[commoID];
                    var commData;
                    if (commo.type == globalConst_1.default.MonthCardType) {
                        commData = GlobalObj_1.default.createCommoObj(commo, commoID);
                        this.monthCardData = commData;
                        this.diamondArray.push(commData);
                        this.goldCoinArray.push(commData);
                    } else if (commo.type == "zuan_shop") {
                        commData = GlobalObj_1.default.createCommoObj(commo, commoID);
                        this.diamondArray.push(commData);
                    } else if (commo.type == "gold_shop") {
                        commData = GlobalObj_1.default.createCommoObj(commo, commoID);
                        this.goldCoinArray.push(commData);
                    }
                }
                this.sortArray(this.goldCoinArray);
                this.sortArray(this.diamondArray);
                if (!GlobalFunc_1.default.isIos() && OnOffManager_1.default.isMonthCardOn) {
                    this.goldCoinArray.unshift(this.monthData);
                    this.diamondArray.unshift(this.monthData);
                }
            };
            ShopDialog.prototype.sortArray = function(array) {
                array.sort(function(a, b) {
                    if (a.sortID > b.sortID) return 1; else return -1;
                });
            };
            ShopDialog.prototype.clickTab = function(eventData) {
                var _this = this;
                this.tab_commType.mouseEnabled = false;
                Laya.timer.once(400, this, function() {
                    _this.tab_commType.mouseEnabled = true;
                });
                var targetIndex = GlobalFunc_1.default.changeRankState(eventData.currentTarget._children, eventData.target);
                this.tab_commType.selectedIndex = targetIndex;
                this.changeView();
                this.tab_commType.reCache;
            };
            ShopDialog.prototype.initTabView = function(selectIndex) {
                if (selectIndex === void 0) selectIndex = 0;
                this.tab_commType.selectedIndex = selectIndex;
                GlobalFunc_1.default.changeRankState(this.tab_commType._children, this.tab_commType._children[selectIndex]);
                this.changeView();
            };
            ShopDialog.prototype.setVipInfo = function() {
                var vip_level = PlayerData_1.default.vip_level;
                this.currentVipNum.text = vip_level.toString();
                if (vip_level + 1 > 10) this.nextVipView.selectedIndex = 1; else {
                    this.nextVipNum.text = (vip_level + 1).toString();
                    this.nextVipBg.skin = GlobalFunc_1.default.getVipBg(vip_level + 1);
                }
                this.currentVipBg.skin = GlobalFunc_1.default.getVipBg(vip_level);
                this.pro_vipExp.value = PlayerData_1.default.vipExp / PlayerData_1.default.vipMax;
                this.text_vipExp.text = PlayerData_1.default.vipExp + "/" + PlayerData_1.default.vipMax;
                if (this.vip_level != vip_level) this.vip_level = vip_level;
                var nextVip = PlayerData_1.default.vip_level + 1;
                var needExp = PlayerData_1.default.vipMax - PlayerData_1.default.vipExp;
                if (needExp > 0) {
                    var htmlArray = [ {
                        text: "再充值 ",
                        color: globalConst_1.default.WhiteText
                    }, {
                        text: needExp + "元",
                        color: globalConst_1.default.GoldText
                    }, {
                        text: " ,升级到",
                        color: globalConst_1.default.WhiteText
                    }, {
                        text: " 贵族" + nextVip,
                        color: globalConst_1.default.GoldText
                    } ];
                    this.text_html.style.wordWrap = false;
                    this.text_html.innerHTML = GlobalFunc_1.default.getHtmlText(htmlArray);
                    this.text_html.visible = true;
                } else this.text_html.visible = false;
            };
            ShopDialog.prototype.changeView = function() {
                if (this.tab_commType.selectedIndex == 0) this.commoidtyList.array = this.goldCoinArray; else this.commoidtyList.array = this.diamondArray;
            };
            ShopDialog.prototype.listOnMouse = function(eventData, index) {
                if (eventData.type == Laya.Event.CLICK) if (eventData.target instanceof Laya.Button) {
                    var comm = this.commoidtyList.array[index];
                    GameData_1.default.shopOrder = comm.commID;
                    var that = this;
                    if (index == 0 && !GlobalFunc_1.default.isIos() && OnOffManager_1.default.isMonthCardOn) {
                        var money = GameData_1.default.monthEndDay ? this.monthData.subdiscount : this.monthData.discount;
                        NetManager_1.default.reqShopOrder({
                            Uid: GameData_1.default.uid,
                            Amount: money,
                            Gsid: 2e4,
                            Platform: 1,
                            QdId: 1,
                            Openid: GameData_1.default.account,
                            ProductId: that.monthData.id
                        });
                        return;
                    }
                    NetManager_1.default.reqShopOrder({
                        Uid: GameData_1.default.uid,
                        Amount: comm.money,
                        Gsid: 2e4,
                        Platform: 1,
                        QdId: 1,
                        Openid: GameData_1.default.account,
                        ProductId: comm.commID
                    });
                }
            };
            ShopDialog.prototype.buyFail = function() {};
            ShopDialog.prototype.buySuccess = function(data) {
                this.imgFirst.visible = !GameData_1.default.isFirstRecharge;
                this.commoidtyList.refresh();
            };
            ShopDialog.prototype.destroy = function() {
                GameData_1.default.isShopOn = false;
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return ShopDialog;
        }(layaMaxUI_1.ui.hallScene.ShopDialogUI);
        exports.default = ShopDialog;
    }, {
        "../../common/DialogManager": 9,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalObj": 88,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/OnOffManager": 93,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151
    } ],
    64: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var VipConfirm = function(_super) {
            __extends(VipConfirm, _super);
            function VipConfirm() {
                var _this = _super.call(this) || this;
                _this.initUI();
                return _this;
            }
            VipConfirm.prototype.initUI = function() {
                this.btn_confirm.on(Laya.Event.CLICK, this, this.sendConfirm);
                this.btn_send.on(Laya.Event.CLICK, this, this.sendMessage);
                this.list_reward.renderHandler = new Laya.Handler(this, this.listRewardRender);
            };
            VipConfirm.prototype.listRewardRender = function(cell, index) {};
            VipConfirm.prototype.sendConfirm = function() {};
            VipConfirm.prototype.sendMessage = function() {};
            return VipConfirm;
        }(layaMaxUI_1.ui.hallScene.VipConfirmUI);
        exports.default = VipConfirm;
    }, {
        "../../ui/layaMaxUI": 151
    } ],
    65: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var DialogManager_1 = require("../../common/DialogManager");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var OnOffManager_1 = require("../../globalConst/OnOffManager");
        var VipInfo = function() {
            function VipInfo() {
                this.Tips = [];
            }
            return VipInfo;
        }();
        exports.VipInfo = VipInfo;
        var VipDlg = function(_super) {
            __extends(VipDlg, _super);
            function VipDlg() {
                var _this = _super.call(this) || this;
                _this.vipConfig = [];
                GlobalFunc_1.default.openDialog(_this);
                _this.lstVip.hScrollBarSkin = "";
                PlayerData_1.default.vipInfo.length == 0 && PlayerData_1.default.getVipConfig();
                _this.vipConfig = PlayerData_1.default.vipInfo.filter(function(item) {
                    return item.vipIndex != 0;
                });
                _this.lstVip.dataSource = _this.vipConfig;
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.btnCharge.on(Laya.Event.CLICK, _this, _this.showShopDlg);
                _this.btnLeft.on(Laya.Event.CLICK, _this, _this.doMinus);
                _this.btnRight.on(Laya.Event.CLICK, _this, _this.doPlus);
                _this.lstVip.renderHandler = new Laya.Handler(_this, _this.onLstVipRender);
                _this.lstVip.mouseEnabled = false;
                if (!OnOffManager_1.default.isChargeOn) _this.btnCharge.visible = _this.boxDesc.visible = false;
                _this.updateView();
                return _this;
            }
            VipDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            VipDlg.prototype.updateView = function() {
                var lblProgress = this.pbrProgress.getChildByName("lblProgress");
                var lblNext = this.boxBottom.getChildByName("lblNextLevel");
                var lblNow = this.boxBottom.getChildByName("lblNowLevel");
                var imgVipRight = this.boxBottom.getChildByName("imgVipRight");
                lblNow.font = globalConst_1.default.fontNum1;
                var vipLevel = PlayerData_1.default.vip_level;
                var vipExp = PlayerData_1.default.vipExp;
                var isMaxLevel = vipLevel == this.vipConfig.length;
                var selectedIndex = vipLevel > 0 ? vipLevel - 1 : 0;
                this.lstVip.selectedIndex = selectedIndex;
                this.lstVip.scrollTo(selectedIndex);
                this.checkBtn();
                var nowVipData = this.vipConfig[vipLevel >= 10 ? 9 : vipLevel];
                lblProgress.text = vipExp + "/" + +nowVipData.charge;
                this.pbrProgress.value = isMaxLevel ? 1 : Math.min(1, vipExp / +nowVipData.charge);
                lblNow.text = vipLevel + "";
                lblNow.font = globalConst_1.default.fontNum1;
                lblNext.text = vipLevel + 1 + "";
                lblNext.visible = imgVipRight.visible = !isMaxLevel;
                OnOffManager_1.default.isChargeOn && (this.boxDesc.visible = !isMaxLevel);
                this.imgMax.visible = isMaxLevel;
                if (isMaxLevel) return;
                var next = this.boxDesc.getChildByName("lblBottomLevel");
                next.text = "贵族" + (vipLevel + 1);
                var cost = this.boxDesc.getChildByName("lblBottomCost");
                cost.text = +this.vipConfig[vipLevel].charge - vipExp + "元";
                this.currentVipBg.skin = GlobalFunc_1.default.getVipBg(vipLevel);
                this.nextVipBg.skin = GlobalFunc_1.default.getVipBg(vipLevel + 1);
            };
            VipDlg.prototype.doMinus = function() {
                if (this.lstVip.selectedIndex > 0) this.lstVip.scrollTo(this.lstVip.selectedIndex - 1);
                this.lstVip.selectedIndex--;
                this.checkBtn();
            };
            VipDlg.prototype.doPlus = function() {
                if (this.lstVip.selectedIndex < this.vipConfig.length) this.lstVip.scrollTo(this.lstVip.selectedIndex + 1);
                this.lstVip.selectedIndex++;
                this.checkBtn();
            };
            VipDlg.prototype.checkBtn = function() {
                this.btnLeft.visible = this.lstVip.selectedIndex != 0;
                this.btnRight.visible = this.lstVip.selectedIndex != this.vipConfig.length - 1;
            };
            VipDlg.prototype.showShopDlg = function() {
                this.doClose();
                DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_SHOP);
            };
            VipDlg.prototype.onLstVipRender = function(cell, index) {
                var data = cell.dataSource;
                var lblVipDesc = cell.getChildByName("lblVipDesc");
                var lstDesc = cell.getChildByName("lstDesc");
                var boxBattery = cell.getChildByName("boxBattery");
                var imgSec = boxBattery.getChildByName("imgSec");
                var lblNowVip = cell.getChildByName("lblNowVip");
                lblNowVip.text = index + 1 + "";
                boxBattery.visible = true;
                imgSec.skin = "connon/" + data.icon + ".png";
                lblVipDesc.text = "贵族" + (index + 1) + "专属特权";
                lstDesc.dataSource = data.Tips;
                lstDesc.renderHandler = new Laya.Handler(this, this.onLstDescRender);
                GlobalFunc_1.default.upDown(imgSec, 159);
            };
            VipDlg.prototype.onLstDescRender = function(cell, index) {
                var lblDesc = cell.getChildByName("lblDesc");
                lblDesc.text = cell.dataSource;
            };
            VipDlg.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                this.removeSelf();
            };
            return VipDlg;
        }(layaMaxUI_1.ui.hallScene.VipDlgUI);
        exports.VipDlg = VipDlg;
    }, {
        "../../common/DialogManager": 9,
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/OnOffManager": 93,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    66: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var VipRebateDlg = function(_super) {
            __extends(VipRebateDlg, _super);
            function VipRebateDlg(data) {
                var _this = _super.call(this) || this;
                GlobalFunc_1.default.openDialog(_this);
                _this.initUI(data);
                _this.returnBack.on(Laya.Event.CLICK, _this, _this.onCloseDlg);
                return _this;
            }
            VipRebateDlg.prototype.onCloseDlg = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            VipRebateDlg.prototype.initUI = function(data) {
                var vip_level = 1;
                for (var key in data) {
                    var text = this["text_vipTips_" + vip_level];
                    var numb = PlayerData_1.default.vip_level;
                    if (vip_level == PlayerData_1.default.vip_level) {
                        text.color = "#fff600";
                        text.strokeColor = "#520000";
                    }
                    text.text = data["vip" + vip_level++];
                }
            };
            return VipRebateDlg;
        }(layaMaxUI_1.ui.hallScene.vipRebateDlgUI);
        exports.default = VipRebateDlg;
    }, {
        "../../datas/hallData/PlayerData": 27,
        "../../globalConst/GlobalFunc": 87,
        "../../ui/layaMaxUI": 151
    } ],
    67: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var SoundM_1 = require("../../common/SoundM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var BossComingDlg = function(_super) {
            __extends(BossComingDlg, _super);
            function BossComingDlg(roomType) {
                var _this = _super.call(this) || this;
                _this.roomType = roomType;
                _this.initUI();
                Laya.timer.once(5e3, _this, function() {
                    SoundM_1.default.stopSound(globalConst_1.default.Sud_Boss_stage);
                    GlobalFunc_1.default.closeDialog(this, new Laya.Handler(this, this.destroy));
                });
                return _this;
            }
            BossComingDlg.prototype.initUI = function() {
                this.box_boss.visible = this.img_black.visible = false;
                this.mouseThrough = true;
                this.mouseEnabled = false;
                this.img_bg_light3.x = globalConst_1.default.stageW - 99;
                var bossId = "27";
                if (this.roomType == 1) {
                    bossId = "27";
                    this.img_boss_bg1.skin = "room_1/img_px_come_2.png";
                    this.img_boss_bg2.skin = "room_1/img_px_come_2.png";
                    this.img_boss.skin = "room_1/img_px_come_1.png";
                    this.img_boss_text.skin = "room_1/img_px_come_3.png";
                } else if (this.roomType == 2) {
                    bossId = "30";
                    this.img_boss_bg1.skin = "room_2/img_ry_come_3.png";
                    this.img_boss_bg2.skin = "room_2/img_ry_come_3.png";
                    this.img_boss.skin = "room_2/img_ry_come_1.png";
                    this.img_boss_text.skin = "room_2/img_ry_come_2.png";
                } else if (this.roomType == 3) {
                    bossId = "32";
                    this.img_boss_bg1.skin = "room_3/img_sy_come_3.png";
                    this.img_boss_bg2.skin = "room_3/img_sy_come_3.png";
                    this.img_boss.skin = "room_3/img_sy_come_1.png";
                    this.img_boss_text.skin = "room_3/img_sy_come_2.png";
                }
                var fishInfo = ConfigerHelper_1.default.getCachedValue("fish", "FishTypeID", bossId, "fish");
                this.label_bei.text = fishInfo.RealScore_1;
                this.playRedLightAni();
                SoundM_1.default.playSound(globalConst_1.default.Sud_Boss_stage, 0);
            };
            BossComingDlg.prototype.playRedLightAni = function() {
                this.ani3.play();
                Laya.timer.once(2e3, this, this.playComingAni);
            };
            BossComingDlg.prototype.playComingAni = function() {
                this.box_boss.visible = this.img_black.visible = true;
                this.ani1.play(0, false);
                this.ani1.on(Laya.Event.COMPLETE, this, function() {
                    this.ani2.play(this.ani3.index);
                });
            };
            return BossComingDlg;
        }(layaMaxUI_1.ui.roomScene.BossComingDlgUI);
        exports.default = BossComingDlg;
    }, {
        "../../common/SoundM": 21,
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    68: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var SoundM_1 = require("../../common/SoundM");
        var BubbleEff = function() {
            function BubbleEff() {
                this.playBubbleEff();
                EventDis_1.default.addEvntListener("leave_room", this, this.destroy);
            }
            BubbleEff.prototype.destroy = function() {
                Laya.timer.clearAll(this);
                Laya.Tween.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
            };
            BubbleEff.prototype.playBubbleEff = function() {
                var params = {
                    max_scale: 22,
                    min_scale: 6,
                    max_time: 2002,
                    min_time: 2e3,
                    max_speed: 1200,
                    min_speed: 700,
                    max_px: 1700,
                    min_px: -100,
                    max_py: 1300,
                    min_py: 780
                };
                this.bubbleEffect(params);
                SoundM_1.default.stopAllSound(false);
                SoundM_1.default.playSound(globalConst_1.default.Sud_bubble, 1);
            };
            BubbleEff.prototype.bubbleEffect = function(params) {
                var times1 = 38;
                var times2 = 50;
                Laya.timer.frameLoop(4, this, this.loopCreateBubble, [ params, times1, times2 ]);
                Laya.timer.once(1800, this, function() {
                    Laya.timer.clear(this, this.loopCreateBubble);
                });
            };
            BubbleEff.prototype.loopCreateBubble = function(params, times1, times2) {
                var times_ = GlobalFunc_1.default.getRandom(times1, times2);
                for (var i = 0; i < times_; i++) this.createBubble(params);
            };
            BubbleEff.prototype.createBubble = function(params) {
                var randoms = this.getBubbleRand(params);
                var px = randoms.px;
                var py = randoms.py;
                var time = randoms.time;
                var scale = randoms.scale;
                var py_ = randoms.py_;
                var sp_ = Laya.Pool.getItemByClass("img", Laya.Image);
                sp_.skin = "battle/img_qip_1.png";
                sp_.alpha = .8;
                sp_.scale(scale, scale);
                sp_.pos(px, py);
                SceneM_1.default.addToLayer(sp_, globalConst_1.default.maskLayer);
                Laya.Tween.to(sp_, {
                    y: py_
                }, time, null, Laya.Handler.create(this, function(sp_) {
                    if (sp_) {
                        sp_.removeSelf();
                        sp_.destroy();
                    } else GlobalFunc_1.default.log("泡泡不正常销毁");
                }, [ sp_ ]));
            };
            BubbleEff.prototype.getBubbleRand = function(params) {
                var px = GlobalFunc_1.default.getRandom(params.min_px, params.max_px);
                var py = GlobalFunc_1.default.getRandom(params.min_py, params.max_py);
                var speed = GlobalFunc_1.default.getRandom(params.min_speed, params.max_speed);
                var time = GlobalFunc_1.default.getRandom(params.min_time, params.max_time);
                var scale = GlobalFunc_1.default.getRandom(params.min_scale, params.max_scale) / 10;
                var py_ = 800 - time * speed / 1e3;
                return {
                    px: px,
                    py: py,
                    time: time,
                    scale: scale,
                    py_: py_
                };
            };
            return BubbleEff;
        }();
        exports.default = BubbleEff;
    }, {
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/globalConst": 97
    } ],
    69: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalObj_1 = require("../../globalConst/GlobalObj");
        var DialogManager_1 = require("../../common/DialogManager");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var NetManager_1 = require("../../netWork/NetManager");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var FishData_1 = require("../../datas/roomData/FishData");
        var ChangeCannonDlg = function(_super) {
            __extends(ChangeCannonDlg, _super);
            function ChangeCannonDlg() {
                var _this = _super.call(this) || this;
                _this.cannonList = [];
                _this.changeIndex = 0;
                _this.equipedIndex = 0;
                GlobalFunc_1.default.openDialog(_this, undefined, false);
                _this.ani_0.play(0, false);
                _this.initList();
                _this.cannon_list.width = _this.box_dialog.width;
                _this.scrollBar = _this.cannon_list.scrollBar;
                _this.scrollBar.showButtons = false;
                _this.scrollBar.scaleBar = true;
                _this.scrollBar.visible = false;
                _this.cannon_list.width = globalConst_1.default.stageW;
                _this.returnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.cannon_list.mouseHandler = new Laya.Handler(_this, _this.btnOnMouse);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_SKIN_CHANGE, _this, _this.s2cChangeCannon);
                return _this;
            }
            ChangeCannonDlg.prototype.initList = function() {
                var items = PlayerData_1.default.items;
                var equipID = BattleData_1.default.roomPlayerData[FishData_1.default.mySeatIndex].cur_pao_item;
                for (var key in items) {
                    var numKey = Number(key);
                    if (numKey <= 100 || numKey > 120) continue;
                    var data = items[key];
                    var hasCannon = PlayerData_1.default.getItemNum(key) != 0;
                    var cannonData = GlobalObj_1.default.createChangeCannonObj(data, equipID, hasCannon);
                    this.cannonList.push(cannonData);
                    if (equipID == numKey) this.equipedIndex = this.cannonList.length - 1;
                }
                this.cannon_list.array = this.cannonList;
            };
            ChangeCannonDlg.prototype.btnOnMouse = function(event, index) {
                if (event.type == Laya.Event.CLICK && event.target instanceof Laya.Button) {
                    GlobalFunc_1.default.log(event.target.dataSource);
                    var data = this.cannonList[index];
                    if (data.state == "装备") {
                        NetManager_1.default.reqEquipSkin(data.cannonID);
                        this.changeIndex = index;
                    } else if (data.state == "获取") {
                        DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_VIPCHARGE);
                        this.doClose();
                    }
                }
            };
            ChangeCannonDlg.prototype.s2cChangeCannon = function(decodeMsg) {
                var lastEquip = this.cannon_list.array[this.equipedIndex];
                lastEquip.btn_equip.mouseEnabled = true;
                lastEquip.btn_equip.skin = "noZip/btn_green.png";
                lastEquip.btn_equip.labelStrokeColor = "#226306";
                lastEquip.state = lastEquip.btn_equip.label = "装备";
                var currectEquip = this.cannon_list.array[this.changeIndex];
                currectEquip.btn_equip.mouseEnabled = false;
                currectEquip.btn_equip.skin = "noZip/btn_gray.png";
                currectEquip.btn_equip.labelStrokeColor = "#0b3170";
                currectEquip.state = currectEquip.btn_equip.label = "已装备";
                this.cannon_list.refresh();
                this.equipedIndex = this.changeIndex;
            };
            ChangeCannonDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    EventDis_1.default.delAllEvnt(_this);
                    _this.destroy();
                    _this.close();
                }));
            };
            return ChangeCannonDlg;
        }(layaMaxUI_1.ui.roomScene.ChangeCannonDlgUI);
        exports.default = ChangeCannonDlg;
    }, {
        "../../common/DialogManager": 9,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalObj": 88,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151
    } ],
    70: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var DragonHelpDialog = function(_super) {
            __extends(DragonHelpDialog, _super);
            function DragonHelpDialog() {
                var _this = _super.call(this) || this;
                GlobalFunc_1.default.openDialog(_this);
                _this.initUI();
                _this.returnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                return _this;
            }
            DragonHelpDialog.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            DragonHelpDialog.prototype.initUI = function() {
                this.text_tips_0.text = " ";
                this.spaceWidth = this.text_tips_0.width;
                this.text_tips_0.text = "游戏开始后,点击";
                this.img_tips_0.x = this.text_tips_0.displayWidth - this.img_tips_0.displayWidth / 4;
                this.text_tips_0.text += this.getInterval(45);
                this.text_tips_0.text += ",将获得对应";
                this.img_tips_1.x = this.text_tips_0.displayWidth;
                this.text_tips_0.text += this.getInterval(this.img_tips_1.displayWidth);
                this.text_tips_0.text += "  ";
                this.img_tips_2.x = this.text_tips_0.displayWidth;
                this.text_tips_0.text += this.getInterval(this.img_tips_2.displayWidth);
                this.text_tips_0.text += "  ";
                this.img_tips_3.x = this.text_tips_0.displayWidth;
                this.text_tips_0.text += this.getInterval(this.img_tips_3.displayWidth);
                this.text_tips_0.text += "  ";
                this.img_tips_4.x = this.text_tips_0.displayWidth;
                this.text_tips_0.text += this.getInterval(this.img_tips_4.displayWidth);
                this.text_tips_0.text += "  ";
                this.img_tips_5.x = this.text_tips_0.displayWidth;
                this.text_tips_0.text += this.getInterval(this.img_tips_5.displayWidth);
                this.text_tips_0.text += "  ";
                this.img_tips_6.x = this.text_tips_0.displayWidth;
                this.text_tips_0.text += this.getInterval(this.img_tips_6.displayWidth);
                this.text_tips_2.text = "当出现五灵珠";
                this.img_tips_7.x = this.text_tips_2.displayWidth;
                this.text_tips_2.text += this.getInterval(this.img_tips_7.displayWidth);
                this.text_tips_2.text += "即有机会获得多个龙座得分。";
                this.text_tips_3.text = "若同时获得四个倍数与五个龙座时,即可以获得高达";
                this.text_maxTimes.x = this.text_tips_3.displayWidth;
                this.text_tips_3.text += this.getInterval(this.text_maxTimes.displayWidth);
                this.text_tips_3.text += "底分。";
                this.text_tips_4.text = "如果游戏断线 系统将自动点选最左边的";
                this.img_tips_8.x = this.text_tips_4.displayWidth - this.img_tips_8.displayWidth / 3;
                this.text_tips_4.text += this.getInterval(20, 18);
                this.text_tips_4.text += "直到游戏结束";
            };
            DragonHelpDialog.prototype.getInterval = function(width, fontSize) {
                if (fontSize === void 0) fontSize = undefined;
                var spaceWidth;
                if (fontSize == undefined) spaceWidth = this.spaceWidth; else {
                    var space = new Laya.Label(" ");
                    space.font = "SimHei";
                    space.bold = true;
                    space.fontSize = fontSize;
                    spaceWidth = space.displayWidth;
                }
                var text = "";
                var spaceNum = Math.ceil(width / spaceWidth);
                for (var index = 0; index < spaceNum; index++) text += " ";
                return text;
            };
            return DragonHelpDialog;
        }(layaMaxUI_1.ui.roomScene.DragonHelpDialogUI);
        exports.default = DragonHelpDialog;
    }, {
        "../../globalConst/GlobalFunc": 87,
        "../../ui/layaMaxUI": 151
    } ],
    71: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var SceneM_1 = require("../../common/SceneM");
        var DialogManager_1 = require("../../common/DialogManager");
        var globalConst_1 = require("../../globalConst/globalConst");
        var ExitRoomDlg = function(_super) {
            __extends(ExitRoomDlg, _super);
            function ExitRoomDlg(gold) {
                var _this = _super.call(this) || this;
                GlobalFunc_1.default.openDialog(_this);
                _this.initUI(gold);
                _this.initEvent();
                return _this;
            }
            ExitRoomDlg.prototype.initEvent = function() {
                this.btn_cancle.on(Laya.Event.CLICK, this, this.doLeaveRoom);
                this.btn_ok.on(Laya.Event.CLICK, this, this.jumpToMfjq);
                this.img_back.on(Laya.Event.CLICK, this, this.doClose);
            };
            ExitRoomDlg.prototype.initUI = function(gold) {
                this.label_top.text = "提示";
                this.btn_ok.label = "免费奖券";
                this.btn_cancle.label = "离开房间";
                var str1 = GlobalFunc_1.default.getColorText("今日捕鱼获得金币");
                var str2 = GlobalFunc_1.default.getColorText(" " + gold, 32, "#ffde00");
                this.setNoticeLabel(this.box_text1, [ str1, str2 ]);
                var str3 = GlobalFunc_1.default.getColorText("明日可在");
                var str4 = GlobalFunc_1.default.getColorText("免费奖券", 32, "#ffde00");
                var str5 = GlobalFunc_1.default.getColorText("领取大量奖券");
                this.setNoticeLabel(this.box_text2, [ str3, str4, str5 ]);
            };
            ExitRoomDlg.prototype.setNoticeLabel = function(box, strArr) {
                for (var i = 0; i < strArr.length; ++i) {
                    strArr[i].x = box.displayWidth + 3;
                    box.addChild(strArr[i]);
                }
            };
            ExitRoomDlg.prototype.doLeaveRoom = function() {
                EventDis_1.default.dispatchEvent("sure_leave_room");
            };
            ExitRoomDlg.prototype.jumpToMfjq = function() {
                SceneM_1.default.replaceScene("FirstHallScene");
                DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_REBATE);
            };
            ExitRoomDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            return ExitRoomDlg;
        }(layaMaxUI_1.ui.common.CommonDialogUI);
        exports.default = ExitRoomDlg;
    }, {
        "../../common/DialogManager": 9,
        "../../common/SceneM": 19,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    72: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var GlobalObj_1 = require("../../globalConst/GlobalObj");
        var FishInfo = function() {
            function FishInfo() {}
            return FishInfo;
        }();
        var FishMapDlg = function(_super) {
            __extends(FishMapDlg, _super);
            function FishMapDlg() {
                var _this = _super.call(this) || this;
                _this.specialFishText = {
                    fish240: undefined,
                    fish250: undefined,
                    fish260: undefined,
                    fish270: undefined,
                    fish280: undefined,
                    fish290: undefined,
                    fish1001: undefined
                };
                _this.dianListArray = [ [], [] ];
                _this.ordinaryFishIndex = 0;
                _this.specialFishIndex = 0;
                _this.selectIndex = 0;
                GlobalFunc_1.default.openDialog(_this);
                _this.initFishInfo();
                _this.initFishObj();
                _this.chooseTab(0);
                _this.tab_type.on(Laya.Event.CLICK, _this, _this.tabOnMouse);
                _this.returnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.btn_left.on(Laya.Event.CLICK, _this, _this.turnList, [ -1 ]);
                _this.btn_right.on(Laya.Event.CLICK, _this, _this.turnList, [ 1 ]);
                return _this;
            }
            FishMapDlg.prototype.initFishInfo = function() {
                var roomData = BattleData_1.default.roomData[BattleData_1.default.room_type];
                this.fishsData = roomData.FIshList;
                this.specialFishText.fish240 = [ {
                    visible: true,
                    text: "游戏过程中，击落钻头蟹，立即获得钻头\n此时炮倍为击落炮倍"
                }, {
                    visible: false,
                    text: ""
                }, {
                    visible: true,
                    text: "发射钻头贯穿全渔场，并在结束时引爆，\n获得大量金币"
                }, {
                    visible: false,
                    text: ""
                }, {
                    visible: false,
                    text: ""
                } ];
                this.specialFishText.fish250 = [ {
                    visible: true,
                    text: "游戏过程中，击落鸿运当头，立即获得100发\n免费子弹，此时炮倍为击落炮倍"
                }, {
                    visible: false,
                    text: ""
                }, {
                    visible: true,
                    text: "使用鸿运当头子弹不消耗金币，捕鱼几率提高"
                }, {
                    visible: false,
                    text: ""
                }, {
                    visible: false,
                    text: ""
                } ];
                this.specialFishText.fish260 = [ {
                    visible: true,
                    text: "游戏过程中，击落摇钱宝箱，立即触发小游戏"
                }, {
                    visible: true,
                    text: "快速点击宝箱可获得金币"
                }, {
                    visible: true,
                    text: "点击越快获得的金币越多哦！"
                }, {
                    visible: false,
                    text: ""
                }, {
                    visible: false,
                    text: ""
                } ];
                this.specialFishText.fish270 = [ {
                    visible: true,
                    text: "游戏过程中，击落贝壳，立即触发小游戏"
                }, {
                    visible: true,
                    text: "共有9个贝壳，其中8个为奖励，1个为炸弹"
                }, {
                    visible: true,
                    text: "选中炸弹即游戏结束"
                }, {
                    visible: false,
                    text: ""
                }, {
                    visible: true,
                    text: "游戏中掉线时，系统依次选择贝壳，直到选到炸弹，补偿通过邮件发送"
                } ];
                this.specialFishText.fish280 = [ {
                    visible: true,
                    text: "游戏过程中，击落转轮，立即触发小游戏"
                }, {
                    visible: true,
                    text: "转盘分为外圈和内圈"
                }, {
                    visible: true,
                    text: "相乘最高可获得500倍奖励哦！"
                }, {
                    visible: false,
                    text: ""
                }, {
                    visible: true,
                    text: "游戏中掉线时，系统随机一个倍数补偿给玩家，补偿通过邮件发送"
                } ];
                this.specialFishText.fish290 = [ {
                    visible: true,
                    text: "游戏过程中，击落龙珠，立即触发小游戏"
                }, {
                    visible: true,
                    text: "点击宝石，获得相应的倍数和各色龙珠"
                }, {
                    visible: true,
                    text: "当任意龙珠集满两颗时，结束游戏"
                }, {
                    visible: true,
                    text: "最高可获得1800倍奖励哦！"
                }, {
                    visible: true,
                    text: "游戏中掉线时，系统自动选择最左边的宝石，直到游戏结束，补偿通过邮件发送"
                } ];
                this.specialFishText.fish10001 = [ {
                    visible: true,
                    text: "击落奖券鱼可以获得大量奖券"
                }, {
                    visible: true,
                    text: "炮倍越高获得数量越多"
                }, {
                    visible: true,
                    text: "使用奖券可以兑换免费话费"
                }, {
                    visible: false,
                    text: ""
                }, {
                    visible: false,
                    text: ""
                } ];
                this.specialFishText.fish1001 = [ {
                    visible: true,
                    text: "击落碎片鱼可获得大量碎片"
                }, {
                    visible: true,
                    text: "不同的碎片鱼掉落数量不同"
                }, {
                    visible: true,
                    text: "炮倍越高,获得碎片数量越多"
                }, {
                    visible: true,
                    text: "碎片可以在背包内合成任意弹头"
                }, {
                    visible: false,
                    text: ""
                } ];
            };
            FishMapDlg.prototype.initFishObj = function() {
                this.ordinaryFishData = new Array();
                this.specialFishData = new Array();
                var ordinArrIndex = 0;
                for (var index = 0; index < this.fishsData.length; index++) {
                    var fishId = Number(this.fishsData[index]);
                    var fishData = BattleData_1.default.fishData[fishId.toString()];
                    if (fishId < 100) {
                        var ordinFish = GlobalObj_1.default.createOrdinaryFish(fishData);
                        var isNewPage = false;
                        if (!!!this.ordinaryFishData[ordinArrIndex]) {
                            this.ordinaryFishData[ordinArrIndex] = new Array();
                            isNewPage = true;
                        }
                        if (this.ordinaryFishData[ordinArrIndex].length == 8) {
                            ordinArrIndex += 1;
                            this.ordinaryFishData[ordinArrIndex] = new Array();
                            isNewPage = true;
                        }
                        this.ordinaryFishData[ordinArrIndex].push(ordinFish);
                        if (isNewPage) {
                            var ordinDianNode = {
                                img_dian: {
                                    skin: "common/img_dian_0.png"
                                }
                            };
                            this.dianListArray[0].push(ordinDianNode);
                        }
                    } else {
                        var specialFish = GlobalObj_1.default.createSpecialFish(fishData, this.specialFishText["fish" + fishId]);
                        this.specialFishData.push(specialFish);
                        var specDianNode = {
                            img_dian: {
                                skin: "common/img_dian_0.png"
                            }
                        };
                        this.dianListArray[1].push(specDianNode);
                    }
                }
                this.list_ordinaryFish.array = this.ordinaryFishData[0];
                this.list_specialFish.array = this.specialFishData;
            };
            FishMapDlg.prototype.resetDian = function(selectIndex) {
                this.list_dian.array = this.dianListArray[selectIndex];
                for (var index = 0; index < this.dianListArray[selectIndex].length; index++) {
                    var node = this.dianListArray[selectIndex][index];
                    node.img_dian.skin = "common/img_dian_0.png";
                }
                var newNodeIndex = selectIndex == 0 ? this.ordinaryFishIndex : this.specialFishIndex;
                this.dianListArray[selectIndex][newNodeIndex].img_dian.skin = "common/img_dian_1.png";
            };
            FishMapDlg.prototype.turnList = function(dir) {
                if (this.selectIndex == 0) {
                    if (!!this.ordinaryFishData[this.ordinaryFishIndex + dir]) {
                        this.dianListArray[0][this.ordinaryFishIndex].img_dian.skin = "common/img_dian_0.png";
                        this.ordinaryFishIndex += dir;
                        this.list_ordinaryFish.array = this.ordinaryFishData[this.ordinaryFishIndex];
                        this.dianListArray[0][this.ordinaryFishIndex].img_dian.skin = "common/img_dian_1.png";
                    }
                } else if (!!this.specialFishData[this.specialFishIndex + dir]) {
                    this.dianListArray[1][this.specialFishIndex].img_dian.skin = "common/img_dian_0.png";
                    this.specialFishIndex += dir;
                    this.list_specialFish.scrollTo(this.specialFishIndex);
                    this.dianListArray[1][this.specialFishIndex].img_dian.skin = "common/img_dian_1.png";
                }
                this.list_dian.refresh();
                this.checkBtn();
            };
            FishMapDlg.prototype.chooseTab = function(index) {
                this.selectIndex = index;
                var chooseData;
                if (index == 0) {
                    this.list_ordinaryFish.visible = true;
                    this.list_specialFish.visible = false;
                    chooseData = this.ordinaryFishData;
                    this.btn_tab_0.skin = "noZip/btn_2.png";
                    this.btn_tab_0.labelStrokeColor = "#70200b";
                    this.btn_tab_1.skin = "noZip/btn_3.png";
                    this.btn_tab_1.labelStrokeColor = "#0b3170";
                    GlobalFunc_1.default.changeUI;
                } else {
                    this.list_ordinaryFish.visible = false;
                    this.list_specialFish.visible = true;
                    chooseData = this.specialFishData;
                    this.btn_tab_0.skin = "noZip/btn_3.png";
                    this.btn_tab_0.labelStrokeColor = "#0b3170";
                    this.btn_tab_1.skin = "noZip/btn_2.png";
                    this.btn_tab_1.labelStrokeColor = "#70200b";
                }
                this.resetDian(index);
                this.list_dian.width = chooseData.length * 20 + (chooseData.length - 1) * 7 + 20;
                this.checkBtn();
            };
            FishMapDlg.prototype.tabOnMouse = function(event) {
                if (event.target instanceof Laya.Button) {
                    var index = event.target.name;
                    this.chooseTab(Number(index));
                }
            };
            FishMapDlg.prototype.checkBtn = function() {
                var leftOff = false;
                var rightOff = false;
                if (this.selectIndex == 0) {
                    if (this.ordinaryFishIndex == 0) leftOff = true; else leftOff = false;
                    if (this.ordinaryFishIndex == this.ordinaryFishData.length - 1) rightOff = true; else rightOff = false;
                } else {
                    if (this.specialFishIndex == 0) leftOff = true; else leftOff = false;
                    if (this.specialFishIndex == this.specialFishData.length - 1) rightOff = true; else rightOff = false;
                }
                if (leftOff) {
                    this.btn_left.gray = true;
                    this.btn_left.mouseEnabled = false;
                } else {
                    this.btn_left.gray = false;
                    this.btn_left.mouseEnabled = true;
                }
                if (rightOff) {
                    this.btn_right.gray = true;
                    this.btn_right.mouseEnabled = false;
                } else {
                    this.btn_right.gray = false;
                    this.btn_right.mouseEnabled = true;
                }
            };
            FishMapDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            return FishMapDlg;
        }(layaMaxUI_1.ui.roomScene.FishMapDialogUI);
        exports.FishMapDlg = FishMapDlg;
    }, {
        "../../datas/roomData/BattleData": 29,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalObj": 88,
        "../../ui/layaMaxUI": 151
    } ],
    73: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var globalConst_1 = require("../../globalConst/globalConst");
        var FishTeamComingDlg = function(_super) {
            __extends(FishTeamComingDlg, _super);
            function FishTeamComingDlg() {
                var _this = _super.call(this) || this;
                _this.visible = false;
                _this.initUI();
                _this.ani1.on(Laya.Event.COMPLETE, _this, function() {
                    this.box_bg1.visible = this.box_bg2.visible = this.img_yuchao.visible = false;
                    GlobalFunc_1.default.closeDialog(this, new Laya.Handler(this, this.destroy));
                });
                return _this;
            }
            FishTeamComingDlg.prototype.initUI = function() {
                this.mouseThrough = true;
                this.mouseEnabled = false;
                this.img_fishes.x = globalConst_1.default.stageW / 2 - 300;
                this.ani1.play(0, false);
                this.visible = true;
            };
            return FishTeamComingDlg;
        }(layaMaxUI_1.ui.roomScene.FishTeamComingDlgUI);
        exports.default = FishTeamComingDlg;
    }, {
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    74: [ function(require, module, exports) {
        module.exports = Long;
        var wasm = null;
        try {
            wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([ 0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11 ])), {}).exports;
        } catch (e) {}
        function Long(low, high, unsigned) {
            this.low = low | 0;
            this.high = high | 0;
            this.unsigned = !!unsigned;
        }
        Long.prototype.__isLong__;
        Object.defineProperty(Long.prototype, "__isLong__", {
            value: true
        });
        function isLong(obj) {
            return (obj && obj["__isLong__"]) === true;
        }
        Long.isLong = isLong;
        var INT_CACHE = {};
        var UINT_CACHE = {};
        function fromInt(value, unsigned) {
            var obj, cachedObj, cache;
            if (unsigned) {
                value >>>= 0;
                if (cache = 0 <= value && value < 256) {
                    cachedObj = UINT_CACHE[value];
                    if (cachedObj) return cachedObj;
                }
                obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);
                if (cache) UINT_CACHE[value] = obj;
                return obj;
            } else {
                value |= 0;
                if (cache = -128 <= value && value < 128) {
                    cachedObj = INT_CACHE[value];
                    if (cachedObj) return cachedObj;
                }
                obj = fromBits(value, value < 0 ? -1 : 0, false);
                if (cache) INT_CACHE[value] = obj;
                return obj;
            }
        }
        Long.fromInt = fromInt;
        function fromNumber(value, unsigned) {
            if (isNaN(value)) return unsigned ? UZERO : ZERO;
            if (unsigned) {
                if (value < 0) return UZERO;
                if (value >= TWO_PWR_64_DBL) return MAX_UNSIGNED_VALUE;
            } else {
                if (value <= -TWO_PWR_63_DBL) return MIN_VALUE;
                if (value + 1 >= TWO_PWR_63_DBL) return MAX_VALUE;
            }
            if (value < 0) return fromNumber(-value, unsigned).neg();
            return fromBits(value % TWO_PWR_32_DBL | 0, value / TWO_PWR_32_DBL | 0, unsigned);
        }
        Long.fromNumber = fromNumber;
        function fromBits(lowBits, highBits, unsigned) {
            return new Long(lowBits, highBits, unsigned);
        }
        Long.fromBits = fromBits;
        var pow_dbl = Math.pow;
        function fromString(str, unsigned, radix) {
            if (str.length === 0) throw Error("empty string");
            if (str === "NaN" || str === "Infinity" || str === "+Infinity" || str === "-Infinity") return ZERO;
            if (typeof unsigned === "number") radix = unsigned, unsigned = false; else unsigned = !!unsigned;
            radix = radix || 10;
            if (radix < 2 || 36 < radix) throw RangeError("radix");
            var p;
            if ((p = str.indexOf("-")) > 0) throw Error("interior hyphen"); else if (p === 0) return fromString(str.substring(1), unsigned, radix).neg();
            var radixToPower = fromNumber(pow_dbl(radix, 8));
            var result = ZERO;
            for (var i = 0; i < str.length; i += 8) {
                var size = Math.min(8, str.length - i), value = parseInt(str.substring(i, i + size), radix);
                if (size < 8) {
                    var power = fromNumber(pow_dbl(radix, size));
                    result = result.mul(power).add(fromNumber(value));
                } else {
                    result = result.mul(radixToPower);
                    result = result.add(fromNumber(value));
                }
            }
            result.unsigned = unsigned;
            return result;
        }
        Long.fromString = fromString;
        function fromValue(val, unsigned) {
            if (typeof val === "number") return fromNumber(val, unsigned);
            if (typeof val === "string") return fromString(val, unsigned);
            return fromBits(val.low, val.high, typeof unsigned === "boolean" ? unsigned : val.unsigned);
        }
        Long.fromValue = fromValue;
        var TWO_PWR_16_DBL = 1 << 16;
        var TWO_PWR_24_DBL = 1 << 24;
        var TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;
        var TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;
        var TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;
        var TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);
        var ZERO = fromInt(0);
        Long.ZERO = ZERO;
        var UZERO = fromInt(0, true);
        Long.UZERO = UZERO;
        var ONE = fromInt(1);
        Long.ONE = ONE;
        var UONE = fromInt(1, true);
        Long.UONE = UONE;
        var NEG_ONE = fromInt(-1);
        Long.NEG_ONE = NEG_ONE;
        var MAX_VALUE = fromBits(4294967295 | 0, 2147483647 | 0, false);
        Long.MAX_VALUE = MAX_VALUE;
        var MAX_UNSIGNED_VALUE = fromBits(4294967295 | 0, 4294967295 | 0, true);
        Long.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;
        var MIN_VALUE = fromBits(0, 2147483648 | 0, false);
        Long.MIN_VALUE = MIN_VALUE;
        var LongPrototype = Long.prototype;
        LongPrototype.toInt = function toInt() {
            return this.unsigned ? this.low >>> 0 : this.low;
        };
        LongPrototype.toNumber = function toNumber() {
            if (this.unsigned) return (this.high >>> 0) * TWO_PWR_32_DBL + (this.low >>> 0);
            return this.high * TWO_PWR_32_DBL + (this.low >>> 0);
        };
        LongPrototype.toString = function toString(radix) {
            radix = radix || 10;
            if (radix < 2 || 36 < radix) throw RangeError("radix");
            if (this.isZero()) return "0";
            if (this.isNegative()) if (this.eq(MIN_VALUE)) {
                var radixLong = fromNumber(radix), div = this.div(radixLong), rem1 = div.mul(radixLong).sub(this);
                return div.toString(radix) + rem1.toInt().toString(radix);
            } else return "-" + this.neg().toString(radix);
            var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned), rem = this;
            var result = "";
            while (true) {
                var remDiv = rem.div(radixToPower), intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0, digits = intval.toString(radix);
                rem = remDiv;
                if (rem.isZero()) return digits + result; else {
                    while (digits.length < 6) digits = "0" + digits;
                    result = "" + digits + result;
                }
            }
        };
        LongPrototype.getHighBits = function getHighBits() {
            return this.high;
        };
        LongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {
            return this.high >>> 0;
        };
        LongPrototype.getLowBits = function getLowBits() {
            return this.low;
        };
        LongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {
            return this.low >>> 0;
        };
        LongPrototype.getNumBitsAbs = function getNumBitsAbs() {
            if (this.isNegative()) return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();
            var val = this.high != 0 ? this.high : this.low;
            for (var bit = 31; bit > 0; bit--) if ((val & 1 << bit) != 0) break;
            return this.high != 0 ? bit + 33 : bit + 1;
        };
        LongPrototype.isZero = function isZero() {
            return this.high === 0 && this.low === 0;
        };
        LongPrototype.eqz = LongPrototype.isZero;
        LongPrototype.isNegative = function isNegative() {
            return !this.unsigned && this.high < 0;
        };
        LongPrototype.isPositive = function isPositive() {
            return this.unsigned || this.high >= 0;
        };
        LongPrototype.isOdd = function isOdd() {
            return (this.low & 1) === 1;
        };
        LongPrototype.isEven = function isEven() {
            return (this.low & 1) === 0;
        };
        LongPrototype.equals = function equals(other) {
            if (!isLong(other)) other = fromValue(other);
            if (this.unsigned !== other.unsigned && this.high >>> 31 === 1 && other.high >>> 31 === 1) return false;
            return this.high === other.high && this.low === other.low;
        };
        LongPrototype.eq = LongPrototype.equals;
        LongPrototype.notEquals = function notEquals(other) {
            return !this.eq(other);
        };
        LongPrototype.neq = LongPrototype.notEquals;
        LongPrototype.ne = LongPrototype.notEquals;
        LongPrototype.lessThan = function lessThan(other) {
            return this.comp(other) < 0;
        };
        LongPrototype.lt = LongPrototype.lessThan;
        LongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {
            return this.comp(other) <= 0;
        };
        LongPrototype.lte = LongPrototype.lessThanOrEqual;
        LongPrototype.le = LongPrototype.lessThanOrEqual;
        LongPrototype.greaterThan = function greaterThan(other) {
            return this.comp(other) > 0;
        };
        LongPrototype.gt = LongPrototype.greaterThan;
        LongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {
            return this.comp(other) >= 0;
        };
        LongPrototype.gte = LongPrototype.greaterThanOrEqual;
        LongPrototype.ge = LongPrototype.greaterThanOrEqual;
        LongPrototype.compare = function compare(other) {
            if (!isLong(other)) other = fromValue(other);
            if (this.eq(other)) return 0;
            var thisNeg = this.isNegative(), otherNeg = other.isNegative();
            if (thisNeg && !otherNeg) return -1;
            if (!thisNeg && otherNeg) return 1;
            if (!this.unsigned) return this.sub(other).isNegative() ? -1 : 1;
            return other.high >>> 0 > this.high >>> 0 || other.high === this.high && other.low >>> 0 > this.low >>> 0 ? -1 : 1;
        };
        LongPrototype.comp = LongPrototype.compare;
        LongPrototype.negate = function negate() {
            if (!this.unsigned && this.eq(MIN_VALUE)) return MIN_VALUE;
            return this.not().add(ONE);
        };
        LongPrototype.neg = LongPrototype.negate;
        LongPrototype.add = function add(addend) {
            if (!isLong(addend)) addend = fromValue(addend);
            var a48 = this.high >>> 16;
            var a32 = this.high & 65535;
            var a16 = this.low >>> 16;
            var a00 = this.low & 65535;
            var b48 = addend.high >>> 16;
            var b32 = addend.high & 65535;
            var b16 = addend.low >>> 16;
            var b00 = addend.low & 65535;
            var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
            c00 += a00 + b00;
            c16 += c00 >>> 16;
            c00 &= 65535;
            c16 += a16 + b16;
            c32 += c16 >>> 16;
            c16 &= 65535;
            c32 += a32 + b32;
            c48 += c32 >>> 16;
            c32 &= 65535;
            c48 += a48 + b48;
            c48 &= 65535;
            return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);
        };
        LongPrototype.subtract = function subtract(subtrahend) {
            if (!isLong(subtrahend)) subtrahend = fromValue(subtrahend);
            return this.add(subtrahend.neg());
        };
        LongPrototype.sub = LongPrototype.subtract;
        LongPrototype.multiply = function multiply(multiplier) {
            if (this.isZero()) return ZERO;
            if (!isLong(multiplier)) multiplier = fromValue(multiplier);
            if (wasm) {
                var low = wasm["mul"](this.low, this.high, multiplier.low, multiplier.high);
                return fromBits(low, wasm["get_high"](), this.unsigned);
            }
            if (multiplier.isZero()) return ZERO;
            if (this.eq(MIN_VALUE)) return multiplier.isOdd() ? MIN_VALUE : ZERO;
            if (multiplier.eq(MIN_VALUE)) return this.isOdd() ? MIN_VALUE : ZERO;
            if (this.isNegative()) if (multiplier.isNegative()) return this.neg().mul(multiplier.neg()); else return this.neg().mul(multiplier).neg(); else if (multiplier.isNegative()) return this.mul(multiplier.neg()).neg();
            if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24)) return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);
            var a48 = this.high >>> 16;
            var a32 = this.high & 65535;
            var a16 = this.low >>> 16;
            var a00 = this.low & 65535;
            var b48 = multiplier.high >>> 16;
            var b32 = multiplier.high & 65535;
            var b16 = multiplier.low >>> 16;
            var b00 = multiplier.low & 65535;
            var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
            c00 += a00 * b00;
            c16 += c00 >>> 16;
            c00 &= 65535;
            c16 += a16 * b00;
            c32 += c16 >>> 16;
            c16 &= 65535;
            c16 += a00 * b16;
            c32 += c16 >>> 16;
            c16 &= 65535;
            c32 += a32 * b00;
            c48 += c32 >>> 16;
            c32 &= 65535;
            c32 += a16 * b16;
            c48 += c32 >>> 16;
            c32 &= 65535;
            c32 += a00 * b32;
            c48 += c32 >>> 16;
            c32 &= 65535;
            c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
            c48 &= 65535;
            return fromBits(c16 << 16 | c00, c48 << 16 | c32, this.unsigned);
        };
        LongPrototype.mul = LongPrototype.multiply;
        LongPrototype.divide = function divide(divisor) {
            if (!isLong(divisor)) divisor = fromValue(divisor);
            if (divisor.isZero()) throw Error("division by zero");
            if (wasm) {
                if (!this.unsigned && this.high === -2147483648 && divisor.low === -1 && divisor.high === -1) return this;
                var low = (this.unsigned ? wasm["div_u"] : wasm["div_s"])(this.low, this.high, divisor.low, divisor.high);
                return fromBits(low, wasm["get_high"](), this.unsigned);
            }
            if (this.isZero()) return this.unsigned ? UZERO : ZERO;
            var approx, rem, res;
            if (!this.unsigned) {
                if (this.eq(MIN_VALUE)) if (divisor.eq(ONE) || divisor.eq(NEG_ONE)) return MIN_VALUE; else if (divisor.eq(MIN_VALUE)) return ONE; else {
                    var halfThis = this.shr(1);
                    approx = halfThis.div(divisor).shl(1);
                    if (approx.eq(ZERO)) return divisor.isNegative() ? ONE : NEG_ONE; else {
                        rem = this.sub(divisor.mul(approx));
                        res = approx.add(rem.div(divisor));
                        return res;
                    }
                } else if (divisor.eq(MIN_VALUE)) return this.unsigned ? UZERO : ZERO;
                if (this.isNegative()) {
                    if (divisor.isNegative()) return this.neg().div(divisor.neg());
                    return this.neg().div(divisor).neg();
                } else if (divisor.isNegative()) return this.div(divisor.neg()).neg();
                res = ZERO;
            } else {
                if (!divisor.unsigned) divisor = divisor.toUnsigned();
                if (divisor.gt(this)) return UZERO;
                if (divisor.gt(this.shru(1))) return UONE;
                res = UZERO;
            }
            rem = this;
            while (rem.gte(divisor)) {
                approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));
                var log2 = Math.ceil(Math.log(approx) / Math.LN2), delta = log2 <= 48 ? 1 : pow_dbl(2, log2 - 48), approxRes = fromNumber(approx), approxRem = approxRes.mul(divisor);
                while (approxRem.isNegative() || approxRem.gt(rem)) {
                    approx -= delta;
                    approxRes = fromNumber(approx, this.unsigned);
                    approxRem = approxRes.mul(divisor);
                }
                if (approxRes.isZero()) approxRes = ONE;
                res = res.add(approxRes);
                rem = rem.sub(approxRem);
            }
            return res;
        };
        LongPrototype.div = LongPrototype.divide;
        LongPrototype.modulo = function modulo(divisor) {
            if (!isLong(divisor)) divisor = fromValue(divisor);
            if (wasm) {
                var low = (this.unsigned ? wasm["rem_u"] : wasm["rem_s"])(this.low, this.high, divisor.low, divisor.high);
                return fromBits(low, wasm["get_high"](), this.unsigned);
            }
            return this.sub(this.div(divisor).mul(divisor));
        };
        LongPrototype.mod = LongPrototype.modulo;
        LongPrototype.rem = LongPrototype.modulo;
        LongPrototype.not = function not() {
            return fromBits(~this.low, ~this.high, this.unsigned);
        };
        LongPrototype.and = function and(other) {
            if (!isLong(other)) other = fromValue(other);
            return fromBits(this.low & other.low, this.high & other.high, this.unsigned);
        };
        LongPrototype.or = function or(other) {
            if (!isLong(other)) other = fromValue(other);
            return fromBits(this.low | other.low, this.high | other.high, this.unsigned);
        };
        LongPrototype.xor = function xor(other) {
            if (!isLong(other)) other = fromValue(other);
            return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);
        };
        LongPrototype.shiftLeft = function shiftLeft(numBits) {
            if (isLong(numBits)) numBits = numBits.toInt();
            if ((numBits &= 63) === 0) return this; else if (numBits < 32) return fromBits(this.low << numBits, this.high << numBits | this.low >>> 32 - numBits, this.unsigned); else return fromBits(0, this.low << numBits - 32, this.unsigned);
        };
        LongPrototype.shl = LongPrototype.shiftLeft;
        LongPrototype.shiftRight = function shiftRight(numBits) {
            if (isLong(numBits)) numBits = numBits.toInt();
            if ((numBits &= 63) === 0) return this; else if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >> numBits, this.unsigned); else return fromBits(this.high >> numBits - 32, this.high >= 0 ? 0 : -1, this.unsigned);
        };
        LongPrototype.shr = LongPrototype.shiftRight;
        LongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {
            if (isLong(numBits)) numBits = numBits.toInt();
            if ((numBits &= 63) === 0) return this;
            if (numBits < 32) return fromBits(this.low >>> numBits | this.high << 32 - numBits, this.high >>> numBits, this.unsigned);
            if (numBits === 32) return fromBits(this.high, 0, this.unsigned);
            return fromBits(this.high >>> numBits - 32, 0, this.unsigned);
        };
        LongPrototype.shru = LongPrototype.shiftRightUnsigned;
        LongPrototype.shr_u = LongPrototype.shiftRightUnsigned;
        LongPrototype.rotateLeft = function rotateLeft(numBits) {
            var b;
            if (isLong(numBits)) numBits = numBits.toInt();
            if ((numBits &= 63) === 0) return this;
            if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);
            if (numBits < 32) {
                b = 32 - numBits;
                return fromBits(this.low << numBits | this.high >>> b, this.high << numBits | this.low >>> b, this.unsigned);
            }
            numBits -= 32;
            b = 32 - numBits;
            return fromBits(this.high << numBits | this.low >>> b, this.low << numBits | this.high >>> b, this.unsigned);
        };
        LongPrototype.rotl = LongPrototype.rotateLeft;
        LongPrototype.rotateRight = function rotateRight(numBits) {
            var b;
            if (isLong(numBits)) numBits = numBits.toInt();
            if ((numBits &= 63) === 0) return this;
            if (numBits === 32) return fromBits(this.high, this.low, this.unsigned);
            if (numBits < 32) {
                b = 32 - numBits;
                return fromBits(this.high << b | this.low >>> numBits, this.low << b | this.high >>> numBits, this.unsigned);
            }
            numBits -= 32;
            b = 32 - numBits;
            return fromBits(this.low << b | this.high >>> numBits, this.high << b | this.low >>> numBits, this.unsigned);
        };
        LongPrototype.rotr = LongPrototype.rotateRight;
        LongPrototype.toSigned = function toSigned() {
            if (!this.unsigned) return this;
            return fromBits(this.low, this.high, false);
        };
        LongPrototype.toUnsigned = function toUnsigned() {
            if (this.unsigned) return this;
            return fromBits(this.low, this.high, true);
        };
        LongPrototype.toBytes = function toBytes(le) {
            return le ? this.toBytesLE() : this.toBytesBE();
        };
        LongPrototype.toBytesLE = function toBytesLE() {
            var hi = this.high, lo = this.low;
            return [ lo & 255, lo >>> 8 & 255, lo >>> 16 & 255, lo >>> 24, hi & 255, hi >>> 8 & 255, hi >>> 16 & 255, hi >>> 24 ];
        };
        LongPrototype.toBytesBE = function toBytesBE() {
            var hi = this.high, lo = this.low;
            return [ hi >>> 24, hi >>> 16 & 255, hi >>> 8 & 255, hi & 255, lo >>> 24, lo >>> 16 & 255, lo >>> 8 & 255, lo & 255 ];
        };
        Long.fromBytes = function fromBytes(bytes, unsigned, le) {
            return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);
        };
        Long.fromBytesLE = function fromBytesLE(bytes, unsigned) {
            return new Long(bytes[0] | bytes[1] << 8 | bytes[2] << 16 | bytes[3] << 24, bytes[4] | bytes[5] << 8 | bytes[6] << 16 | bytes[7] << 24, unsigned);
        };
        Long.fromBytesBE = function fromBytesBE(bytes, unsigned) {
            return new Long(bytes[4] << 24 | bytes[5] << 16 | bytes[6] << 8 | bytes[7], bytes[0] << 24 | bytes[1] << 16 | bytes[2] << 8 | bytes[3], unsigned);
        };
    }, {} ],
    75: [ function(require, module, exports) {
        !function(n) {
            function t(n, t) {
                var r = (65535 & n) + (65535 & t);
                return (n >> 16) + (t >> 16) + (r >> 16) << 16 | 65535 & r;
            }
            function r(n, t) {
                return n << t | n >>> 32 - t;
            }
            function e(n, e, o, u, c, f) {
                return t(r(t(t(e, n), t(u, f)), c), o);
            }
            function o(n, t, r, o, u, c, f) {
                return e(t & r | ~t & o, n, t, u, c, f);
            }
            function u(n, t, r, o, u, c, f) {
                return e(t & o | r & ~o, n, t, u, c, f);
            }
            function c(n, t, r, o, u, c, f) {
                return e(t ^ r ^ o, n, t, u, c, f);
            }
            function f(n, t, r, o, u, c, f) {
                return e(r ^ (t | ~o), n, t, u, c, f);
            }
            function i(n, r) {
                n[r >> 5] |= 128 << r % 32, n[14 + (r + 64 >>> 9 << 4)] = r;
                var e, i, a, d, h, l = 1732584193, g = -271733879, v = -1732584194, m = 271733878;
                for (e = 0; e < n.length; e += 16) i = l, a = g, d = v, h = m, g = f(g = f(g = f(g = f(g = c(g = c(g = c(g = c(g = u(g = u(g = u(g = u(g = o(g = o(g = o(g = o(g, v = o(v, m = o(m, l = o(l, g, v, m, n[e], 7, -680876936), g, v, n[e + 1], 12, -389564586), l, g, n[e + 2], 17, 606105819), m, l, n[e + 3], 22, -1044525330), v = o(v, m = o(m, l = o(l, g, v, m, n[e + 4], 7, -176418897), g, v, n[e + 5], 12, 1200080426), l, g, n[e + 6], 17, -1473231341), m, l, n[e + 7], 22, -45705983), v = o(v, m = o(m, l = o(l, g, v, m, n[e + 8], 7, 1770035416), g, v, n[e + 9], 12, -1958414417), l, g, n[e + 10], 17, -42063), m, l, n[e + 11], 22, -1990404162), v = o(v, m = o(m, l = o(l, g, v, m, n[e + 12], 7, 1804603682), g, v, n[e + 13], 12, -40341101), l, g, n[e + 14], 17, -1502002290), m, l, n[e + 15], 22, 1236535329), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 1], 5, -165796510), g, v, n[e + 6], 9, -1069501632), l, g, n[e + 11], 14, 643717713), m, l, n[e], 20, -373897302), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 5], 5, -701558691), g, v, n[e + 10], 9, 38016083), l, g, n[e + 15], 14, -660478335), m, l, n[e + 4], 20, -405537848), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 9], 5, 568446438), g, v, n[e + 14], 9, -1019803690), l, g, n[e + 3], 14, -187363961), m, l, n[e + 8], 20, 1163531501), v = u(v, m = u(m, l = u(l, g, v, m, n[e + 13], 5, -1444681467), g, v, n[e + 2], 9, -51403784), l, g, n[e + 7], 14, 1735328473), m, l, n[e + 12], 20, -1926607734), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 5], 4, -378558), g, v, n[e + 8], 11, -2022574463), l, g, n[e + 11], 16, 1839030562), m, l, n[e + 14], 23, -35309556), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 1], 4, -1530992060), g, v, n[e + 4], 11, 1272893353), l, g, n[e + 7], 16, -155497632), m, l, n[e + 10], 23, -1094730640), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 13], 4, 681279174), g, v, n[e], 11, -358537222), l, g, n[e + 3], 16, -722521979), m, l, n[e + 6], 23, 76029189), v = c(v, m = c(m, l = c(l, g, v, m, n[e + 9], 4, -640364487), g, v, n[e + 12], 11, -421815835), l, g, n[e + 15], 16, 530742520), m, l, n[e + 2], 23, -995338651), v = f(v, m = f(m, l = f(l, g, v, m, n[e], 6, -198630844), g, v, n[e + 7], 10, 1126891415), l, g, n[e + 14], 15, -1416354905), m, l, n[e + 5], 21, -57434055), v = f(v, m = f(m, l = f(l, g, v, m, n[e + 12], 6, 1700485571), g, v, n[e + 3], 10, -1894986606), l, g, n[e + 10], 15, -1051523), m, l, n[e + 1], 21, -2054922799), v = f(v, m = f(m, l = f(l, g, v, m, n[e + 8], 6, 1873313359), g, v, n[e + 15], 10, -30611744), l, g, n[e + 6], 15, -1560198380), m, l, n[e + 13], 21, 1309151649), v = f(v, m = f(m, l = f(l, g, v, m, n[e + 4], 6, -145523070), g, v, n[e + 11], 10, -1120210379), l, g, n[e + 2], 15, 718787259), m, l, n[e + 9], 21, -343485551), 
                l = t(l, i), g = t(g, a), v = t(v, d), m = t(m, h);
                return [ l, g, v, m ];
            }
            function a(n) {
                var t, r = "", e = 32 * n.length;
                for (t = 0; t < e; t += 8) r += String.fromCharCode(n[t >> 5] >>> t % 32 & 255);
                return r;
            }
            function d(n) {
                var t, r = [];
                for (r[(n.length >> 2) - 1] = void 0, t = 0; t < r.length; t += 1) r[t] = 0;
                var e = 8 * n.length;
                for (t = 0; t < e; t += 8) r[t >> 5] |= (255 & n.charCodeAt(t / 8)) << t % 32;
                return r;
            }
            function h(n) {
                return a(i(d(n), 8 * n.length));
            }
            function l(n, t) {
                var r, e, o = d(n), u = [], c = [];
                for (u[15] = c[15] = void 0, o.length > 16 && (o = i(o, 8 * n.length)), r = 0; r < 16; r += 1) u[r] = 909522486 ^ o[r], 
                c[r] = 1549556828 ^ o[r];
                return e = i(u.concat(d(t)), 512 + 8 * t.length), a(i(c.concat(e), 640));
            }
            function g(n) {
                var t, r, e = "";
                for (r = 0; r < n.length; r += 1) t = n.charCodeAt(r), e += "0123456789abcdef".charAt(t >>> 4 & 15) + "0123456789abcdef".charAt(15 & t);
                return e;
            }
            function v(n) {
                return unescape(encodeURIComponent(n));
            }
            function m(n) {
                return h(v(n));
            }
            function p(n) {
                return g(m(n));
            }
            function s(n, t) {
                return l(v(n), v(t));
            }
            function C(n, t) {
                return g(s(n, t));
            }
            function A(n, t, r) {
                return t ? r ? s(t, n) : C(t, n) : r ? m(n) : p(n);
            }
            "function" == typeof define && define.amd ? define(function() {
                return A;
            }) : "object" == typeof module && module.exports ? module.exports = A : n.md5 = A;
        }(this);
    }, {} ],
    76: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var BubbleView = function(_super) {
            __extends(BubbleView, _super);
            function BubbleView(isShow) {
                if (isShow === void 0) isShow = true;
                var _this = _super.call(this) || this;
                _this.isshow = isShow;
                return _this;
            }
            BubbleView.prototype.setData = function(skin, name, count, isShowBg, color) {
                if (isShowBg === void 0) isShowBg = true;
                if (color === void 0) color = "#70200b";
                this.imgItem.skin = skin;
                this.lblItem.text = (this.isshow ? name : "") + "x" + count;
                this.lblItem.strokeColor = color;
                this.imgBubble.visible = isShowBg;
                this.lblItem.align = "center";
            };
            return BubbleView;
        }(layaMaxUI_1.ui.gift.BubbleViewUI);
        exports.BubbleView = BubbleView;
    }, {
        "../ui/layaMaxUI": 151
    } ],
    77: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var BubbleView_1 = require("./BubbleView");
        var globalConst_1 = require("../globalConst/globalConst");
        var GameData_1 = require("../datas/hallData/GameData");
        var NetManager_1 = require("../netWork/NetManager");
        var GiftKyDlg = function(_super) {
            __extends(GiftKyDlg, _super);
            function GiftKyDlg() {
                var _this = _super.call(this) || this;
                _this.isFirst = true;
                _this.money = 0;
                GlobalFunc_1.default.openDialog(_this);
                _this.isFirst = GameData_1.default.tehuiState1 == 1;
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.btnBuy.on(Laya.Event.CLICK, _this, _this.buyItem);
                _this.lstBubble.renderHandler = new Laya.Handler(_this, _this.onLstBubbleRender);
                _this.itemId = _this.isFirst ? "4010" : "4020";
                var data = PlayerData_1.default.commoditysInfo["gift"].filter(function(info) {
                    return info.id == _this.itemId;
                })[0];
                _this.money = data.discount;
                _this.lstBubble.dataSource = data.items;
                _this.updateView(data);
                return _this;
            }
            GiftKyDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            GiftKyDlg.prototype.updateView = function(data) {
                this.lblDiscount.font = globalConst_1.default.fontNum4;
                this.img_type.skin = this.isFirst ? "gift/title_ky.png" : "gift/title_zc.png";
                this.lblPrice.text = data.price;
                this.lblDiscount.text = data.discount;
            };
            GiftKyDlg.prototype.buyItem = function() {
                var that = this;
                NetManager_1.default.reqShopOrder({
                    Uid: GameData_1.default.uid,
                    Amount: that.money,
                    Gsid: 2e4,
                    Platform: 1,
                    QdId: 1,
                    Openid: GameData_1.default.account,
                    ProductId: this.itemId
                });
                this.doClose();
            };
            GiftKyDlg.prototype.onLstBubbleRender = function(cell, index) {
                var view = new BubbleView_1.BubbleView();
                var data = this.lstBubble.getItem(index);
                view.centerY = index == 1 ? -20 : 0;
                var id = data.itemID;
                var num = data.itemNum;
                var item = PlayerData_1.default.items[id + ""];
                view.setData("iconAndSkin/" + (item.itemID == 1 || item.itemID == 5 ? "" : "icon_") + item.skin, item.itemName, num);
                if (item.itemID == 41) view.imgItem.scale(.8, .8);
                view.imgItem.centerX = -5;
                cell.addChild(view);
            };
            return GiftKyDlg;
        }(layaMaxUI_1.ui.gift.GiftKyDlgUI);
        exports.GiftKyDlg = GiftKyDlg;
    }, {
        "../datas/hallData/GameData": 26,
        "../datas/hallData/PlayerData": 27,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/globalConst": 97,
        "../netWork/NetManager": 101,
        "../ui/layaMaxUI": 151,
        "./BubbleView": 76
    } ],
    78: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var BubbleView_1 = require("./BubbleView");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var GameData_1 = require("../datas/hallData/GameData");
        var NetManager_1 = require("../netWork/NetManager");
        var EventDis_1 = require("../globalConst/EventDis");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var GiftMrDlg = function(_super) {
            __extends(GiftMrDlg, _super);
            function GiftMrDlg() {
                var _this = _super.call(this) || this;
                _this.isCan = false;
                GlobalFunc_1.default.openDialog(_this);
                _this.btnGet.on(Laya.Event.CLICK, _this, _this.getReward);
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.lstBubble.renderHandler = new Laya.Handler(_this, _this.onLstBubbleRender);
                _this.giftData = PlayerData_1.default.commoditysInfo["gift"].filter(function(info) {
                    return info.id == "2040";
                })[0];
                _this.lstBubble.dataSource = _this.giftData.items;
                _this.updateView();
                EventDis_1.default.addEvntListener(GlobalVar_1.default.TOMORROW_GOT, _this, _this.doClose);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.TOMORROW_SEND, _this, _this.updateView);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.CHANGEDAY, _this, _this.updateView);
                return _this;
            }
            GiftMrDlg.prototype.doClose = function() {
                var _this = this;
                EventDis_1.default.delAllEvnt(this);
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            GiftMrDlg.prototype.updateView = function() {
                if (GameData_1.default.tomrrowState == 1) {
                    !this.lblCost.destroyed && (this.lblCost.text = "次日0点可以领取");
                    !this.btnGet.destroyed && (this.btnGet.skin = "noZip/btn_gray.png");
                } else {
                    !this.btnGet.destroyed && (this.btnGet.skin = "noZip/btn_green.png");
                    !this.lblCost.destroyed && (this.lblCost.text = "总价值" + this.giftData.price + "元");
                }
            };
            GiftMrDlg.prototype.getReward = function() {
                if (GameData_1.default.tomrrowState == 1) GlobalFunc_1.default.globalTip("未达到领取条件，请您耐心等待"); else {
                    this.mouseEnabled = false;
                    NetManager_1.default.reqTakeMing();
                }
            };
            GiftMrDlg.prototype.onLstBubbleRender = function(cell, index) {
                var view = new BubbleView_1.BubbleView(false);
                var data = this.lstBubble.getItem(index);
                view.centerX = -10;
                view.centerY = 0;
                var id = data.itemID;
                var num = data.itemNum;
                var item = PlayerData_1.default.items[id + ""];
                view.setData("iconAndSkin/" + (id == 1 || id == 5 ? "" : "icon_") + item.skin, item.itemName, num, false, "#033253");
                cell.addChild(view);
            };
            return GiftMrDlg;
        }(layaMaxUI_1.ui.gift.GiftMrDlgUI);
        exports.GiftMrDlg = GiftMrDlg;
    }, {
        "../datas/hallData/GameData": 26,
        "../datas/hallData/PlayerData": 27,
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/GlobalVar": 90,
        "../netWork/NetManager": 101,
        "../ui/layaMaxUI": 151,
        "./BubbleView": 76
    } ],
    79: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var NetManager_1 = require("../netWork/NetManager");
        var GameData_1 = require("../datas/hallData/GameData");
        var globalConst_1 = require("../globalConst/globalConst");
        var EventDis_1 = require("../globalConst/EventDis");
        var GiftScDlg = function(_super) {
            __extends(GiftScDlg, _super);
            function GiftScDlg() {
                var _this = _super.call(this) || this;
                _this.itemData = [];
                GlobalFunc_1.default.openDialog(_this);
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                var data = PlayerData_1.default.commoditysInfo["gift"].filter(function(info) {
                    return info.id == "2010";
                })[0];
                _this.itemData = data.items;
                _this.aniBg.play(0, false);
                _this.updateView(data);
                return _this;
            }
            GiftScDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            GiftScDlg.prototype.updateView = function(data) {
                this.lblMoney.font = globalConst_1.default.fontNum1;
                this.lblMoney.text = data.discount;
                this.discount = data.discount;
                this.lblBei.font = globalConst_1.default.fontNum1;
                this.lblBei.text = data.items[0].itemNum;
                this.btnBuy.label = data.discount + "元 抢购";
                this.btnBuy.on(Laya.Event.CLICK, this, this.buyReward);
            };
            GiftScDlg.prototype.buyReward = function() {
                this.doClose();
                var that = this;
                this.btnBuy.mouseEnabled = false;
                EventDis_1.default.dispatchEvent("GiftSc");
                NetManager_1.default.reqShopOrder({
                    Uid: GameData_1.default.uid,
                    Amount: that.discount,
                    Gsid: 2e4,
                    Platform: 1,
                    QdId: 1,
                    Openid: GameData_1.default.account,
                    ProductId: "2010"
                });
            };
            GiftScDlg.prototype.destroy = function() {
                _super.prototype.destroy.call(this);
            };
            return GiftScDlg;
        }(layaMaxUI_1.ui.gift.GiftScDlgUI);
        exports.GiftScDlg = GiftScDlg;
    }, {
        "../datas/hallData/GameData": 26,
        "../datas/hallData/PlayerData": 27,
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/globalConst": 97,
        "../netWork/NetManager": 101,
        "../ui/layaMaxUI": 151
    } ],
    80: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../ui/layaMaxUI");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var FishData_1 = require("../datas/roomData/FishData");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var globalConst_1 = require("../globalConst/globalConst");
        var EventDis_1 = require("../globalConst/EventDis");
        var GameData_1 = require("../datas/hallData/GameData");
        var NetManager_1 = require("../netWork/NetManager");
        var GlobalUI_1 = require("../globalConst/GlobalUI");
        var GiftShakeDlg = function(_super) {
            __extends(GiftShakeDlg, _super);
            function GiftShakeDlg() {
                var _this = _super.call(this) || this;
                _this.prex = 0;
                _this.prey = 0;
                _this.prez = 0;
                _this.money = 0;
                _this.isPaing = false;
                _this.flag = true;
                _this.lblMoney.text = GameData_1.default.shakeNum + "";
                _this.itemId = "3020";
                var str = Math.floor(GameData_1.default.shakeNum * .01) * .01 + "";
                str = str.substring(0, str.indexOf(".") + 3);
                _this.lblBefore.text = "原价：" + str + "元";
                GlobalFunc_1.default.openDialog(_this);
                var data = PlayerData_1.default.commoditysInfo["gift"].filter(function(info) {
                    return info.id == _this.itemId;
                })[0];
                _this.money = data.discount;
                _this.lblNow.text = "现价: " + _this.money + "元";
                _this.shake = Laya.Shake.instance;
                _this.btnBack.on(Laya.Event.CLICK, _this, _this.doClose);
                _this.btnShake.on(Laya.Event.CLICK, _this, _this.reqShake);
                _this.btnCancel.on(Laya.Event.CLICK, _this, _this.doCancel);
                _this.btnBuy.on(Laya.Event.CLICK, _this, _this.buyItem);
                _this.aniBorder.play(0, true);
                _this.aniRotate.play(0, true);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.YAO_YI_YAO, _this, _this.doShake);
                EventDis_1.default.addEvntListener("paySuccess", _this, _this.close);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.COMMODITY_PAY_FALSE, _this, _this.doClose);
                _this.updateView();
                return _this;
            }
            GiftShakeDlg.prototype.doCancel = function() {
                this.btnShake.mouseEnabled = true;
                Laya.timer.clearAll(this);
                FishData_1.default.shakeTime = 0;
                if (GlobalVar_1.default.isWx) {
                    var that_1 = this;
                    wx.stopAccelerometer({
                        complete: function() {
                            that_1.checkClose();
                        }
                    });
                } else this.checkClose();
            };
            GiftShakeDlg.prototype.checkClose = function() {
                if (GameData_1.default.shakeTimes <= 0) this.doClose(); else this.updateView();
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.YAO_CHANGE);
            };
            GiftShakeDlg.prototype.doClose = function() {
                var _this = this;
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    var that = _this;
                    if (GlobalVar_1.default.isWx) {
                        wx.stopAccelerometer({});
                        _this.prex = _this.prey = _this.prez = 0;
                    }
                    that.destroy();
                    that.close();
                    EventDis_1.default.delAllEvnt(_this);
                    Laya.timer.clearAll(that);
                }));
            };
            GiftShakeDlg.prototype.updateView = function() {
                this.boxShake.scale(1, 1);
                var isHasTime = FishData_1.default.shakeTime > 0;
                this.lblMoney.scale(FishData_1.default.shakeTime > 0 ? .67 : .3, FishData_1.default.shakeTime > 0 ? .67 : .3);
                this.boxReward.visible = isHasTime;
                this.boxReward.alpha = isHasTime ? 1 : 0;
                this.boxShake.visible = !isHasTime;
                this.boxShake.alpha = isHasTime ? 0 : 1;
                this.boxReward.scale(isHasTime ? 1 : .1, isHasTime ? 1 : .1);
                this.lblMoney.font = globalConst_1.default.fontNum1;
                this.lblTimes.text = Math.max(0, GameData_1.default.shakeTimes) + "";
                if (FishData_1.default.shakeTime > 0) {
                    this.startTick();
                    return;
                }
                if (GlobalVar_1.default.isWx) {
                    wx.startAccelerometer({
                        success: function() {
                            GlobalFunc_1.default.log("打开陀螺仪");
                        },
                        fail: function() {
                            GlobalFunc_1.default.log("陀螺仪打开失败");
                        },
                        interval: "normal"
                    });
                    wx.onAccelerometerChange(function(res) {});
                }
            };
            GiftShakeDlg.prototype.setFlag = function() {
                var _this = this;
                Laya.timer.once(1e3, this, function() {
                    _this.flag = true;
                });
            };
            GiftShakeDlg.prototype.reqShake = function() {
                var _this = this;
                this.btnShake.mouseEnabled = false;
                Laya.timer.once(3e3, this, function() {
                    _this.btnShake.mouseEnabled = true;
                });
                if (GameData_1.default.shakeTimes <= 0) {
                    GlobalFunc_1.default.globalTip("摇一摇次数不足，在渔场捕获一定数量的鱼即可获得次数");
                    return;
                }
                if (GameData_1.default.isShaked) {
                    GlobalFunc_1.default.globalTip("今日已购买");
                    return;
                }
                NetManager_1.default.reqOnceYao();
            };
            GiftShakeDlg.prototype.doShake = function(data) {
                var _this = this;
                !this.lblMoney.destroyed && (this.lblMoney.text = this.setMoney(data.coin_num));
                var str = Math.floor(data.coin_num * .01) * .01 + "";
                str = str.substring(0, str.indexOf(".") + 3);
                !this.lblBefore.destroyed && (this.lblBefore.text = "原价：" + str + "元");
                if (GlobalVar_1.default.isWx) wx.vibrateLong({
                    success: function() {
                        GlobalFunc_1.default.log("手机振动");
                    },
                    fail: function() {
                        GlobalFunc_1.default.log("手机振动失败");
                    },
                    complete: function() {}
                }); else GlobalUI_1.default.shockScreenEff();
                this.aniTop.play(0, false);
                this.aniShake.play(0, false);
                this.aniFinger.play(0, false);
                this.aniWave.play(0, false);
                Laya.timer.once(800, this, function() {
                    _this.onReqShake();
                    var sp = GlobalFunc_1.default.getGoldFishBoomEffect(new Laya.Point(_this.width / 2, _this.height / 2));
                    _this.addChild(sp);
                });
                if (GlobalVar_1.default.isWx) wx.stopAccelerometer({
                    success: function() {
                        GlobalFunc_1.default.log("关闭陀螺仪");
                    },
                    fail: function() {
                        GlobalFunc_1.default.log("陀螺仪关闭失败");
                    },
                    complete: function() {
                        this.prex = this.prey = this.prez = 0;
                    }
                });
            };
            GiftShakeDlg.prototype.onReqShake = function() {
                var _this = this;
                FishData_1.default.shakeTime = 180;
                PlayerData_1.default.shakeTickerStart();
                this.boxReward.visible = true;
                this.aniScale.play(0, false);
                Laya.timer.once(500, this, function() {
                    _this.aniMoney.play(0, false);
                });
                this.startTick();
                this.shake.stop();
            };
            GiftShakeDlg.prototype.setMoney = function(money) {
                var num = money;
                return num.toLocaleString();
            };
            GiftShakeDlg.prototype.startTick = function() {
                var _this = this;
                var time = FishData_1.default.shakeTime;
                this.lblTime.text = "0" + Math.floor(time / 60) + ":" + this.getTime(time);
                Laya.timer.loop(1e3, this, function() {
                    var time = FishData_1.default.shakeTime;
                    _this.lblTime.text = "0" + Math.floor(time / 60) + ":" + _this.getTime(time);
                    if (time == 0) _this.doClose();
                });
            };
            GiftShakeDlg.prototype.buyItem = function() {
                if (this.isPaing) return;
                this.isPaing = true;
                NetManager_1.default.reqShopOrder({
                    Uid: GameData_1.default.uid,
                    Amount: this.money,
                    Gsid: 2e4,
                    Platform: 1,
                    QdId: 1,
                    Openid: GameData_1.default.account,
                    ProductId: this.itemId
                });
            };
            GiftShakeDlg.prototype.getTime = function(num) {
                var data = Math.max(0, num % 60);
                return data < 10 ? "0" + data : data;
            };
            return GiftShakeDlg;
        }(layaMaxUI_1.ui.gift.GiftShakeDlgUI);
        exports.GiftShakeDlg = GiftShakeDlg;
    }, {
        "../datas/hallData/GameData": 26,
        "../datas/hallData/PlayerData": 27,
        "../datas/roomData/FishData": 30,
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/GlobalUI": 89,
        "../globalConst/GlobalVar": 90,
        "../globalConst/globalConst": 97,
        "../netWork/NetManager": 101,
        "../ui/layaMaxUI": 151
    } ],
    81: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var BattleData_1 = require("../datas/roomData/BattleData");
        var FishData_1 = require("../datas/roomData/FishData");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var globalConst_1 = require("./globalConst");
        var GameData_1 = require("../datas/hallData/GameData");
        var DialogManager_1 = require("../common/DialogManager");
        var EventDis_1 = require("./EventDis");
        var GlobalFunc_1 = require("./GlobalFunc");
        var popStep = 0;
        var BattleFunc;
        (function(BattleFunc) {
            function getFishUniqId(teamId, formationId, formationIndex) {
                return teamId + "_" + formationId + "_" + formationIndex;
            }
            BattleFunc.getFishUniqId = getFishUniqId;
            function getDropMapByItems(items) {
                var kMap = {};
                for (var k in items) {
                    var v = items[k];
                    var kv = kMap[v.item_id];
                    !kv && (kv = 0);
                    kv = kv + v.count;
                    kMap[v.item_id] = kv;
                }
                return kMap;
            }
            BattleFunc.getDropMapByItems = getDropMapByItems;
            function resChangeFunc(seatIndex, data) {
                BattleData_1.default.setSitPlayerInfoByObj(seatIndex, {
                    gold: data.gold,
                    ticket: data.liquan ? data.liquan : BattleData_1.default.roomPlayerData[seatIndex].ticket
                });
                if (seatIndex == FishData_1.default.mySeatIndex) {
                    var ticketData = data.drops && data.drops.items ? data.drops.items : [];
                    var ticket_1 = 0;
                    var debris_1 = 0;
                    ticketData.forEach(function(e) {
                        e.item_id == globalConst_1.default.ticket && (ticket_1 = e.count);
                        e.item_id == +globalConst_1.default.DebrisID && (debris_1 = e.count);
                    });
                    PlayerData_1.default.setItemNum(globalConst_1.default.GoldCoinID, data.gold);
                    PlayerData_1.default.addItemsNum([ {
                        item_id: 4,
                        item_count: !!ticket_1 ? ticket_1 : 0
                    } ], false, false);
                    PlayerData_1.default.addItemsNum([ {
                        item_id: +globalConst_1.default.DebrisID,
                        item_count: debris_1
                    } ], false, false);
                }
            }
            BattleFunc.resChangeFunc = resChangeFunc;
            function setPopIndex() {
                var isFir = GameData_1.default.isFirstRecharge;
                var isSp1 = GameData_1.default.tehuiState1 == 2;
                var isSp2 = GameData_1.default.tehuiState2 == 2;
                var isMon = GameData_1.default.monthEndDay > 0;
                if (GlobalFunc_1.default.isIos()) FishData_1.default.popindex = 5; else if (!isFir) FishData_1.default.popindex = 0; else if (!isSp1) FishData_1.default.popindex = 1; else if (!isSp2) FishData_1.default.popindex = 2; else if (!isMon) FishData_1.default.popindex = 3; else FishData_1.default.popindex = 4;
            }
            BattleFunc.setPopIndex = setPopIndex;
            function checkFishPop() {
                if (FishData_1.default.popindex == 0) {
                    var dlg = DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_FIRSTPAY);
                    FishData_1.default.popindex++;
                    return;
                }
                if (FishData_1.default.popindex == 1) if (!GameData_1.default.isFirstRecharge) FishData_1.default.popindex += 2; else {
                    var dlg = DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_PREFERENTIAL);
                    FishData_1.default.popindex++;
                    return;
                }
                if (FishData_1.default.popindex == 2) if (GameData_1.default.tehuiState1 != 2) FishData_1.default.popindex++; else {
                    var dlg = DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_PREFERENTIAL);
                    FishData_1.default.popindex++;
                    return;
                }
                if (FishData_1.default.popindex == 3) if (GameData_1.default.monthEndDay > 0) FishData_1.default.popindex++; else {
                    var dlg = DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_MONTHCARD);
                    FishData_1.default.popindex++;
                    return;
                }
                if (FishData_1.default.popindex == 4) {
                    var dlg = DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_SHOP);
                    FishData_1.default.popindex++;
                    return;
                }
                if (FishData_1.default.popindex >= 5) {
                    if (PlayerData_1.default.left_count > 0) {
                        GameData_1.default.isHelping = true;
                        EventDis_1.default.dispatchEvent("showHelp");
                    } else {
                        if (GlobalFunc_1.default.isIos()) return;
                        var dlg = DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_SHOP);
                        return;
                    }
                    FishData_1.default.popindex == 6;
                }
            }
            BattleFunc.checkFishPop = checkFishPop;
        })(BattleFunc || (BattleFunc = {}));
        exports.default = BattleFunc;
    }, {
        "../common/DialogManager": 9,
        "../datas/hallData/GameData": 26,
        "../datas/hallData/PlayerData": 27,
        "../datas/roomData/BattleData": 29,
        "../datas/roomData/FishData": 30,
        "./EventDis": 85,
        "./GlobalFunc": 87,
        "./globalConst": 97
    } ],
    82: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var ColorFilterFuns;
        (function(ColorFilterFuns) {
            function getWhiteFilter(variable) {
                var redMat = [ 1, variable, variable, variable, 0, variable, 1, variable, variable, 0, variable, variable, 1, variable, 0, 0, 0, 0, 1, 0 ];
                return new Laya.ColorFilter(redMat);
            }
            ColorFilterFuns.getWhiteFilter = getWhiteFilter;
            function getBlackFilter(variable) {
                var blackMat = [ variable, 0, 0, 0, 0, 0, variable, 0, 0, 0, 0, 0, variable, 0, 0, 0, 0, 0, 1, 0 ];
                return new Laya.ColorFilter(blackMat);
            }
            ColorFilterFuns.getBlackFilter = getBlackFilter;
        })(ColorFilterFuns || (ColorFilterFuns = {}));
        exports.default = ColorFilterFuns;
    }, {} ],
    83: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalFunc_1 = require("./GlobalFunc");
        var ConfigData = function() {
            function ConfigData() {}
            ConfigData.prototype.init = function() {};
            ConfigData.prototype.initVipData = function() {
                if (this.vipData) return;
                this.vipData = {};
                var vipJson = GlobalFunc_1.default.layaGetRes("config/Vip.json");
                for (var key in vipJson.vip) {
                    var v = vipJson.vip[key];
                    this.vipData[v.vipIndex] = v;
                }
            };
            ConfigData.prototype.getVipData = function() {
                this.initVipData();
                return this.vipData;
            };
            ConfigData.prototype.getVipDataByKey = function(k) {
                this.initVipData();
                return this.vipData[k];
            };
            ConfigData.prototype.initRoomData = function() {
                if (this.roomData) return;
                this.roomData = {};
                var jsonData = GlobalFunc_1.default.layaGetWxRes("room.json").ROOMCONFIG;
                for (var key in jsonData) {
                    var v = jsonData[key];
                    this.roomData[v.ROOM_TYPE] = v;
                }
            };
            ConfigData.prototype.getRoomData = function() {
                this.initRoomData();
                return this.roomData;
            };
            ConfigData.prototype.getRoomDataByKey = function(k) {
                this.initRoomData();
                return this.roomData[k];
            };
            ConfigData.Instance = new ConfigData();
            return ConfigData;
        }();
        var g_ConfigData;
        g_ConfigData = ConfigData.Instance;
        exports.default = g_ConfigData;
    }, {
        "./GlobalFunc": 87
    } ],
    84: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalVar_1 = require("./GlobalVar");
        var GlobalFunc_1 = require("./GlobalFunc");
        var ConfigerHelper = function() {
            function ConfigerHelper() {
                this._configCachedValue = {};
                this._configCachedFile = {};
                this._configCachedFiles = {};
            }
            ConfigerHelper.prototype.init = function() {
                this._configCachedValue = {};
                this._configCachedFile = {};
                this._configCachedFiles = {};
                this.testStr = "";
            };
            ConfigerHelper.prototype.getCachedValue = function(path, key, value, firstKey) {
                var filePath = GlobalVar_1.default.reUrl + "config/" + path + ".json";
                if (this._configCachedValue[filePath] && this._configCachedValue[filePath][key] && this._configCachedValue[filePath][key][value]) return GlobalFunc_1.default.clone(this._configCachedValue[filePath][key][value]); else {
                    var json = Laya.Loader.getRes(filePath);
                    if (json) {
                        if (firstKey != null && json[firstKey]) json = json[firstKey];
                        for (var index in json) {
                            var v = json[index];
                            if (v && v[key] == value) {
                                this._configCachedValue[filePath] = {};
                                this._configCachedValue[filePath][key] = {};
                                this._configCachedValue[filePath][key][value] = v;
                                return GlobalFunc_1.default.clone(v);
                            }
                        }
                    }
                }
            };
            ConfigerHelper.prototype.getCachedValueFirst = function(path, key, value, firstKey) {
                if (GlobalVar_1.default.isWx) {
                    var filePath = "configFirst/" + path + ".json";
                    if (this._configCachedValue[filePath] && this._configCachedValue[filePath][key] && this._configCachedValue[filePath][key][value]) return GlobalFunc_1.default.clone(this._configCachedValue[filePath][key][value]); else {
                        var json = Laya.Loader.getRes(filePath);
                        if (json) {
                            if (firstKey != null && json[firstKey]) json = json[firstKey];
                            for (var index in json) {
                                var v = json[index];
                                if (v && v[key] == value) {
                                    this._configCachedValue[filePath] = {};
                                    this._configCachedValue[filePath][key] = {};
                                    this._configCachedValue[filePath][key][value] = v;
                                    return GlobalFunc_1.default.clone(v);
                                }
                            }
                        }
                    }
                } else return this.getCachedValue(path, key, value, firstKey);
            };
            ConfigerHelper.prototype.getCachedValueByKey = function(path, key) {
                var filePath = GlobalVar_1.default.reUrl + "config/" + path + ".json";
                var json;
                if (this._configCachedFiles[filePath]) json = this._configCachedFiles[filePath]; else {
                    json = Laya.Loader.getRes(filePath);
                    this._configCachedFiles[filePath] = json;
                }
                if (json) {
                    var value = json[key[0]];
                    for (var i = 1; i < key.length; i++) {
                        if (!value) return;
                        value = value[key[i]];
                    }
                    return value;
                }
            };
            ConfigerHelper.prototype.getFileData = function(path, isCopy) {
                var filePath = GlobalVar_1.default.reUrl + path;
                var json = Laya.Loader.getRes(filePath);
                return json;
            };
            ConfigerHelper.Instance = new ConfigerHelper();
            return ConfigerHelper;
        }();
        var g_ConfigerHelper;
        g_ConfigerHelper = ConfigerHelper.Instance;
        exports.default = g_ConfigerHelper;
    }, {
        "./GlobalFunc": 87,
        "./GlobalVar": 90
    } ],
    85: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalFunc_1 = require("./GlobalFunc");
        var EventDis = function(_super) {
            __extends(EventDis, _super);
            function EventDis() {
                var _this = _super.call(this) || this;
                _this.EventDis = new Laya.EventDispatcher();
                _this._eventPair = new Array();
                return _this;
            }
            EventDis.prototype.dispatchEvent = function(eventName, data) {
                if (data === void 0) data = undefined;
                Laya.stage.event(eventName, [ data ]);
            };
            EventDis.prototype.addEvntListener = function(eventName, caller, listener, data) {
                if (data === void 0) data = undefined;
                Laya.stage.on(eventName, caller, listener);
                var cName = GlobalFunc_1.default.getClassName(caller);
                if (caller.name) cName = caller.name;
                if (cName && !this._eventPair[cName]) this._eventPair[cName] = {};
                this._eventPair[cName][eventName] = listener;
            };
            EventDis.prototype.delAllEvnt = function(caller) {
                var cName = GlobalFunc_1.default.getClassName(caller);
                if (caller.name) cName = caller.name;
                if (!this._eventPair[cName]) return;
                for (var eventName in this._eventPair[cName]) {
                    var listener = this._eventPair[cName][eventName];
                    if (listener) {
                        Laya.stage.off(eventName, caller, listener);
                        delete this._eventPair[cName][eventName];
                    }
                }
            };
            EventDis.prototype.delEventName = function(eventName, caller) {
                var cName = GlobalFunc_1.default.getClassName(caller);
                if (caller.name) cName = caller.name;
                if (!this._eventPair[cName]) return;
                var listener = this._eventPair[cName][eventName];
                if (listener) {
                    Laya.stage.off(eventName, caller, listener);
                    delete this._eventPair[cName][eventName];
                }
            };
            EventDis.Instance = new EventDis();
            return EventDis;
        }(Laya.EventDispatcher);
        var g_EventDis;
        g_EventDis = EventDis.Instance;
        exports.default = g_EventDis;
    }, {
        "./GlobalFunc": 87
    } ],
    86: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalFunc_1 = require("./GlobalFunc");
        var GameData_1 = require("../datas/hallData/GameData");
        var FreeFunc;
        (function(FreeFunc) {
            function checkWholeRed(data) {
                if (data === void 0) data = [];
                var isRed = false;
                var time = GlobalFunc_1.default.getTime(GameData_1.default.serverTimeStamp).hours;
                for (var i = 0; i < data.length; i++) if (data[i].status == 1 && checkWholeTime(time, i)) {
                    isRed = true;
                    break;
                }
                return isRed;
            }
            FreeFunc.checkWholeRed = checkWholeRed;
            function checkWholeTime(time, index) {
                var integerArr = [ 0, 9, 12, 15, 18, 21, 24 ];
                return time >= integerArr[index] && time < integerArr[index + 1];
            }
            FreeFunc.checkWholeTime = checkWholeTime;
        })(FreeFunc || (FreeFunc = {}));
        exports.default = FreeFunc;
    }, {
        "../datas/hallData/GameData": 26,
        "./GlobalFunc": 87
    } ],
    87: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalVar_1 = require("./GlobalVar");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var HttpManager_1 = require("../netWork/HttpManager");
        var EventDis_1 = require("./EventDis");
        var globalConst_1 = require("./globalConst");
        var SceneM_1 = require("../common/SceneM");
        var ConfigerHelper_1 = require("./ConfigerHelper");
        var BattleData_1 = require("../datas/roomData/BattleData");
        var WarningMessage_1 = require("../common/WarningMessage");
        var FishData_1 = require("../datas/roomData/FishData");
        var StringFunc_1 = require("./StringFunc");
        var TimeLineManager_1 = require("./TimeLineManager");
        var SoundM_1 = require("../common/SoundM");
        var GameData_1 = require("../datas/hallData/GameData");
        var NoticeDlg_1 = require("../common/NoticeDlg");
        var OnOffManager_1 = require("./OnOffManager");
        var DialogManager_1 = require("../common/DialogManager");
        var CommonDialog_1 = require("../common/CommonDialog");
        var ConfigData_1 = require("./ConfigData");
        var DragonCannonNode_1 = require("../rolesNodes/fishNodes/DragonCannonNode");
        var TicketView_1 = require("../common/TicketView");
        var DebrisFallView_1 = require("../rolesNodes/fishNodes/DebrisFallView");
        var editorScaleX;
        var editorScaleY;
        var centerP;
        var centerPx;
        var centerPy;
        var aniNum = 0;
        var globalFun;
        (function(globalFun) {
            function isInNewUserRoom() {
                if (!GlobalVar_1.default.isWx) GlobalVar_1.default.zip2Ok = true;
                return PlayerData_1.default.guideStep > 0;
            }
            globalFun.isInNewUserRoom = isInNewUserRoom;
            function valNotDefined(val) {
                return typeof val == "undefined";
            }
            globalFun.valNotDefined = valNotDefined;
            function getDiffJson(json1, json2) {
                var arr = [];
                if (!json1 || !json2) return arr;
                var tmpV = {};
                for (var key in json1) {
                    var oldkey = json1[key];
                    tmpV[oldkey.loaddir] = oldkey.ver;
                }
                for (var key in json2) {
                    var newKey = json2[key].loaddir;
                    var num1 = tmpV[newKey];
                    var num2 = json2[key].ver;
                    if (num2 > num1) {
                        globalFun.log("热更差异文件:", newKey, num1, num2);
                        arr.push(newKey);
                    }
                }
                return arr;
            }
            globalFun.getDiffJson = getDiffJson;
            function downOneFile(sourcePath, desPath) {
                globalFun.log("下载单个文件：", sourcePath, desPath);
                if (!sourcePath || !desPath) {
                    globalFun.log("路径非法");
                    return;
                }
                if (GlobalVar_1.default.isWx) wx.downloadFile({
                    url: sourcePath,
                    filePath: desPath,
                    success: function(res) {
                        if (res.statusCode === 200) {
                            globalFun.log(sourcePath + "下载文件完毕");
                            EventDis_1.default.dispatchEvent("downOneFileOver", {
                                sourcePath: sourcePath,
                                desPath: desPath
                            });
                        }
                    },
                    fail: function(evt) {
                        globalFun.log(sourcePath + "文件下载失败：" + evt.errMsg);
                    }
                }); else globalFun.log("网页版暂不热更");
            }
            globalFun.downOneFile = downOneFile;
            function isIos() {
                if (GlobalVar_1.default.phoneBrand == globalConst_1.default.iosBrand || GlobalVar_1.default.phoneSystem == globalConst_1.default.iosSystem) return true;
                return false;
            }
            globalFun.isIos = isIos;
            function getScreenRet() {
                return Laya.stage.width / Laya.stage.height / (1334 / 750);
            }
            globalFun.getScreenRet = getScreenRet;
            function getSystemType() {
                if (GlobalVar_1.default.isWx) {
                    var sysInfo = wx.getSystemInfoSync();
                    var model = sysInfo.model;
                    var system = sysInfo.system;
                    if (model.indexOf("iPhone") != -1) return 1; else if (system.indexOf("Android") != -1 || system.indexOf("Adr") != -1) return 2;
                } else return 3;
                return;
            }
            globalFun.getSystemType = getSystemType;
            function getPhoneBrand() {
                if (GlobalVar_1.default.isWx) {
                    var sysInfo = wx.getSystemInfoSync();
                    var system = sysInfo.system;
                    GlobalVar_1.default.phoneBrand = sysInfo.brand;
                    GlobalVar_1.default.phoneSystem = system.split(" ")[0];
                    globalFun.log("手机型号：" + GlobalVar_1.default.phoneBrand);
                    globalFun.log("操作系统：" + GlobalVar_1.default.phoneSystem);
                    OnOffManager_1.default.isChargeOn = !isIos();
                }
            }
            globalFun.getPhoneBrand = getPhoneBrand;
            function isNeedScaleMode() {
                return Laya.Browser.clientWidth / Laya.Browser.clientHeight >= 1.9;
            }
            globalFun.isNeedScaleMode = isNeedScaleMode;
            function isPhoneX() {
                if (GlobalVar_1.default.isWx) {
                    var sysInfo = wx.getSystemInfoSync();
                    var model = sysInfo.model;
                    if (model.indexOf("iPhoneX") != -1) return true;
                }
                return false;
            }
            globalFun.isPhoneX = isPhoneX;
            function adaptX() {
                var diffx = (Laya.stage.width - 1334) / 2;
                return diffx > 0 ? diffx : 0;
            }
            globalFun.adaptX = adaptX;
            function adaptX2() {
                var diffx = (1630 - Laya.stage.width) / 2;
                return diffx > 0 ? diffx : 0;
            }
            globalFun.adaptX2 = adaptX2;
            function adaptX3() {
                var num = Laya.stage.width - 1630;
                var diffx = num > 0 ? num : 0;
                return diffx;
            }
            globalFun.adaptX3 = adaptX3;
            function doLayerAddAdapt(node) {
                node.x = node.x + adaptX3() / 2;
            }
            globalFun.doLayerAddAdapt = doLayerAddAdapt;
            function doLRAdapt(param) {
                var node = param.node;
                var isRight = param.isRight || false;
                var time = param.time || 10;
                var num = isRight ? -adaptX2() : adaptX2();
                if (node) {
                    var vsb_1 = node.visible;
                    node.visible = false;
                    Laya.timer.once(time, this, function() {
                        node.x = node.x + num;
                        node.visible = vsb_1;
                    });
                }
            }
            globalFun.doLRAdapt = doLRAdapt;
            function adaptLiuHai(node, isRight) {
                if (isRight === void 0) isRight = false;
                var num = isRight ? -50 : 50;
                if (Laya.stage.width / Laya.stage.height > 1.9) Laya.timer.once(10, this, function() {
                    node.x = node.x + num;
                });
            }
            globalFun.adaptLiuHai = adaptLiuHai;
            function getClassName(obj) {
                if (obj && obj.constructor && obj.constructor.toString()) {
                    if (obj.constructor.name) return obj.constructor.name;
                    var str = obj.constructor.toString();
                    if (str.charAt(0) == "[") var arr = str.match(/\[\w+\s*(\w+)\]/); else var arr = str.match(/function\s*(\w+)/);
                    if (arr && arr.length == 2) return arr[1];
                }
                return undefined;
            }
            globalFun.getClassName = getClassName;
            function getRandom(n1, n2) {
                var s = Math.random();
                return Math.ceil(n1 + s * (n2 - n1));
            }
            globalFun.getRandom = getRandom;
            function getFrameArr(PreName, frameCount) {
                var arr = new Array();
                var firstName = PreName;
                globalConst_1.default.newUserFishArr.forEach(function(newFish) {
                    if (PreName == newFish) firstName = "firstPic";
                });
                for (var i = 0; i < frameCount; i++) {
                    var index = i + 1;
                    var str = firstName + "/" + PreName + "_" + index + ".png";
                    arr[i] = str;
                }
                return arr;
            }
            globalFun.getFrameArr = getFrameArr;
            function cacheFishFrames(isNew) {
                if (isNew === void 0) isNew = false;
                var json = ConfigerHelper_1.default.getFileData("config/fish.json");
                if (!json) return;
                var inJson = json["fish"];
                for (var j in inJson) {
                    var fish = inJson[j];
                    if (BattleData_1.default.cachedFish[fish.Res]) continue;
                    if (isNew) {
                        var resName = inJson[j].Res;
                        var newFish = globalConst_1.default.newUserFishArr.filter(function(fishName) {
                            return fishName == resName;
                        });
                    }
                    var resUrl = getFrameArr(fish.Res, fish.FrameCount);
                    if (!isNew || newFish.length > 0) {
                        Laya.Animation.createFrames(resUrl, fish.Res);
                        BattleData_1.default.cachedFish[fish.Res] = true;
                    }
                }
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ROOM_FISHRESOK_NOTICE);
            }
            globalFun.cacheFishFrames = cacheFishFrames;
            function clone(obj) {
                function _copy(obj1) {
                    if (typeof obj1 != "object") return obj1;
                    var newTable = {};
                    for (var index in obj1) newTable[index] = _copy(obj1[index]);
                    return newTable;
                }
                return _copy(obj);
            }
            globalFun.clone = clone;
            function playClickSound() {
                SoundM_1.default.playSound(globalConst_1.default.Sud_click, 1);
            }
            globalFun.playClickSound = playClickSound;
            function playRoomMusic() {
                var path;
                var roomId = BattleData_1.default.room_type;
                if (BattleData_1.default.scene_type == 1) path = globalConst_1.default.Sud_bg_king; else path = globalConst_1.default["Sud_room" + (roomId == 0 ? "1" : BattleData_1.default.room_type)];
                SoundM_1.default.playMusic(path);
            }
            globalFun.playRoomMusic = playRoomMusic;
            function buttonDot(data) {
                HttpManager_1.default.connect(HttpManager_1.default.sendButtonDotToHttp({
                    actionId: data
                }), null);
            }
            globalFun.buttonDot = buttonDot;
            function cutNickName(name) {
                if (name) return name.length > 11 ? name.substr(0, 10) + ".." : name;
                return "....";
            }
            globalFun.cutNickName = cutNickName;
            function getActivity(task, btnText, jumpType) {
                var btnState = {};
                if (task.state == 0) btnState = {
                    skin: "common/btn_blue.png",
                    label: btnText,
                    mouseEnable: true,
                    labelStrokeColor: "#0b3170"
                }; else if (task.state == 1) btnState = {
                    skin: "basePic/btn_yellow.png",
                    label: "领取",
                    mouseEnable: true,
                    labelStrokeColor: "#70200b"
                }; else btnState = {
                    skin: "noZip/btn_gray.png",
                    label: "已领取",
                    mouseEnable: false,
                    labelStrokeColor: "#0b3170"
                };
                if (jumpType == 0 && task.state == 0) btnState = {
                    skin: "noZip/btn_gray.png",
                    label: btnText,
                    mouseEnable: false,
                    labelStrokeColor: "#0b3170"
                };
                btnState["state"] = task.state;
                btnState["jumpType"] = jumpType;
                return btnState;
            }
            globalFun.getActivity = getActivity;
            function getClientTime() {
                return Laya.Browser.now();
            }
            globalFun.getClientTime = getClientTime;
            function SecsToMinStr(num) {
                var m = Math.floor(num / 60).toString();
                var s = (num % 60).toString();
                return FillStrStart(m, 2, "0") + ":" + FillStrStart(s, 2, "0");
            }
            globalFun.SecsToMinStr = SecsToMinStr;
            function getRestTime(targetTime, currentTime) {
                var date = (targetTime - currentTime) / 1e3;
                var days = Math.floor(date / 86400);
                date = date % 86400;
                var hours = Math.floor(date / 3600);
                date = date % 3600;
                var minutes = Math.floor(date / 60);
                var seconds = Math.floor(date % 60);
                var time = {
                    days: days,
                    hours: hours,
                    minutes: minutes,
                    seconds: seconds
                };
                return time;
            }
            globalFun.getRestTime = getRestTime;
            function getTime(timestamp) {
                var date = new Date(timestamp);
                var Y = date.getFullYear();
                var M = date.getMonth() + 1 < 10 ? "0" + (date.getMonth() + 1) : date.getMonth() + 1;
                var D = date.getDate();
                var h = date.getHours();
                var m = date.getMinutes();
                var time = {
                    years: Y,
                    months: M,
                    days: D,
                    hours: h,
                    minutes: m
                };
                return time;
            }
            globalFun.getTime = getTime;
            function getMousePos() {
                return {
                    x: Laya.stage.mouseX,
                    y: Laya.stage.mouseY
                };
            }
            globalFun.getMousePos = getMousePos;
            function getSeatPos() {
                var y1 = 786;
                var y2 = -37;
                var sw = globalConst_1.default.stageW;
                var x1 = sw * 1 / 4;
                var x2 = sw * 3 / 4;
                if (!BattleData_1.default.isFlip) return [ {}, {
                    x: x1,
                    y: y1
                }, {
                    x: x2,
                    y: y1
                }, {
                    x: x1,
                    y: y2
                }, {
                    x: x2,
                    y: y2
                } ]; else return [ {}, {
                    x: x1,
                    y: y2
                }, {
                    x: x2,
                    y: y2
                }, {
                    x: x1,
                    y: y1
                }, {
                    x: x2,
                    y: y1
                } ];
            }
            globalFun.getSeatPos = getSeatPos;
            function getCannonPos() {
                var y1 = 750;
                var y2 = 0;
                var sw = globalConst_1.default.stageW;
                var x1 = sw * 1 / 4;
                var x2 = sw * 3 / 4;
                if (!BattleData_1.default.isFlip) return [ {}, {
                    x: x1,
                    y: y1
                }, {
                    x: x2,
                    y: y1
                }, {
                    x: x1,
                    y: y2
                }, {
                    x: x2,
                    y: y2
                } ]; else return [ {}, {
                    x: x1,
                    y: y2
                }, {
                    x: x2,
                    y: y2
                }, {
                    x: x1,
                    y: y1
                }, {
                    x: x2,
                    y: y1
                } ];
            }
            globalFun.getCannonPos = getCannonPos;
            function getSeatInfoPos() {
                var x1 = Laya.stage.width - 96;
                var y1 = BattleData_1.default.isFlip ? 50 : 700;
                var y2 = BattleData_1.default.isFlip ? 700 : 50;
                return [ {}, {
                    x: 96,
                    y: y1
                }, {
                    x: x1,
                    y: y1
                }, {
                    x: 96,
                    y: y2
                }, {
                    x: x1,
                    y: y2
                } ];
            }
            globalFun.getSeatInfoPos = getSeatInfoPos;
            function getBigFishPos() {
                var sw = globalConst_1.default.stageW;
                var x1 = sw * 1 / 4;
                var x2 = sw * 3 / 4;
                var y1_ = 170;
                var y2_ = 570;
                var y1 = BattleData_1.default.isFlip ? y1_ : y2_;
                var y2 = BattleData_1.default.isFlip ? y2_ : y1_;
                return [ {}, {
                    x: x1,
                    y: y1
                }, {
                    x: x2,
                    y: y1
                }, {
                    x: x1,
                    y: y2
                }, {
                    x: x2,
                    y: y2
                } ];
            }
            globalFun.getBigFishPos = getBigFishPos;
            function getRoomHelpPos() {
                var sw = globalConst_1.default.stageW;
                var x1 = sw * 1 / 4;
                var x2 = sw * 3 / 4;
                var y = 494;
                return [ {}, {
                    x: x1,
                    y: y
                }, {
                    x: x2,
                    y: y
                }, {
                    x: x1,
                    y: y
                }, {
                    x: x2,
                    y: y
                } ];
            }
            globalFun.getRoomHelpPos = getRoomHelpPos;
            function getBulletSpeed() {
                return Math.ceil(Math.sqrt(Math.pow(globalConst_1.default.stageW, 2) + Math.pow(globalConst_1.default.stageH, 2)) + 100) / 2;
            }
            globalFun.getBulletSpeed = getBulletSpeed;
            function uiClose(ui) {
                ui.visible = false;
                ui.mouseEnabled = false;
            }
            globalFun.uiClose = uiClose;
            function uiOpen(ui) {
                ui.visible = true;
                ui.mouseEnabled = true;
            }
            globalFun.uiOpen = uiOpen;
            function getStageBounds() {
                globalConst_1.default.stageW = Laya.stage.width;
                globalConst_1.default.stageH = Laya.stage.height;
            }
            globalFun.getStageBounds = getStageBounds;
            function changeNum(num_) {
                var num = Number(num_);
                if (num < 1e8) return String(num > 9999 ? parseInt(String(num / 1e3)) / 10 + "万" : num); else return String(parseInt(String(num / 1e7)) / 10 + "亿");
            }
            globalFun.changeNum = changeNum;
            function pDotPos(node1, node2) {
                return node1.x * node2.x + node1.y * node2.y;
            }
            globalFun.pDotPos = pDotPos;
            function pSubPos(node1, node2) {
                return {
                    x: node1.x - node2.x,
                    y: node1.y - node2.y
                };
            }
            globalFun.pSubPos = pSubPos;
            function pMulPos(node1, factor) {
                return {
                    x: node1.x * factor,
                    y: node1.y * factor
                };
            }
            globalFun.pMulPos = pMulPos;
            function pAddPos(node1, node2) {
                return {
                    x: node1.x + node2.x,
                    y: node1.y + node2.y
                };
            }
            globalFun.pAddPos = pAddPos;
            function pGetLength(node1) {
                return Math.sqrt(node1.x * node1.x + node1.y * node1.y);
            }
            globalFun.pGetLength = pGetLength;
            function pGetDistance(node1, node2) {
                return pGetLength(pSubPos(node1, node2));
            }
            globalFun.pGetDistance = pGetDistance;
            function vecToAngle(ptFrom, ptTo) {
                return getFloat(-Math.atan2(ptTo.y - ptFrom.y, ptTo.x - ptFrom.x) / Math.PI * 180, 2);
            }
            globalFun.vecToAngle = vecToAngle;
            function radToangle(rad) {
                return rad / Math.PI * 180;
            }
            globalFun.radToangle = radToangle;
            function angleToRad(angle) {
                return angle * Math.PI / 180;
            }
            globalFun.angleToRad = angleToRad;
            function getFloat(f, n) {
                if (n === void 0) n = 2;
                var m = Math.pow(10, n);
                return Math.round(f * m) / m;
            }
            globalFun.getFloat = getFloat;
            function FillStrStart(str, len, ch) {
                while (str.length < len) str = ch + str;
                return str;
            }
            globalFun.FillStrStart = FillStrStart;
            function transNumByComma(num_) {
                var num = (num_ || 0).toString();
                var result = "";
                while (num.length > 3) {
                    result = "," + num.slice(-3) + result;
                    num = num.slice(0, num.length - 3);
                }
                if (num) result = num + result;
                return result;
            }
            globalFun.transNumByComma = transNumByComma;
            function transGoldItem(data) {
                if (!data) return;
                for (var i in data) {
                    if (data[i].item_id == 5) data[i].item_id = 1;
                    if (data[i].itemID == 5) data[i].itemID = 1;
                }
                return data;
            }
            globalFun.transGoldItem = transGoldItem;
            function getVipIcon(level) {
                if (level == 0) return "common/img_huiz_0.png"; else if (level >= 1 && level < 5) return "common/img_huiz_1.png"; else if (level >= 5 && level < 8) return "common/img_huiz_5.png"; else if (level >= 8 && level < 10) return "common/img_huiz_8.png"; else if (level == 10) return "common/img_huiz_10.png";
            }
            globalFun.getVipIcon = getVipIcon;
            function layaGetRes(url) {
                return Laya.Loader.getRes(GlobalVar_1.default.reUrl + url);
            }
            globalFun.layaGetRes = layaGetRes;
            function layaGetWxRes(url) {
                if (GlobalVar_1.default.isWx) return Laya.Loader.getRes("configFirst/" + url); else return Laya.Loader.getRes(GlobalVar_1.default.reUrl + "config/" + url);
            }
            globalFun.layaGetWxRes = layaGetWxRes;
            function changeRankState(children, target) {
                var targetIndex = undefined;
                for (var index = 0; index < children.length; index++) {
                    var child = children[index];
                    child.skin = "common/btn_4.png";
                    child.labelColors = "#0b3170";
                    child.labelStroke = 0;
                    child.zOrder = index + 1;
                }
                target.skin = "common/btn_5.png";
                target.labelColors = "#ffffff";
                target.labelStroke = 4;
                target.zOrder = 10;
                if (target.name == "item0") targetIndex = 0; else if (target.name == "item1") targetIndex = 1; else if (target.name == "item2") targetIndex = 2; else if (target.name == "item3") targetIndex = 3;
                if (target != undefined) return targetIndex; else globalFun.log("获取tab-target对象失败");
            }
            globalFun.changeRankState = changeRankState;
            function getVipBg(vip_level) {
                var skin = "";
                if (vip_level == 10) skin = "common/img_huiz_10.png"; else if (vip_level >= 8) skin = "common/img_huiz_8.png"; else if (vip_level >= 5) skin = "common/img_huiz_5.png"; else if (vip_level >= 1) skin = "common/img_huiz_1.png"; else if (vip_level == 0) skin = "common/img_huiz_0.png";
                return skin;
            }
            globalFun.getVipBg = getVipBg;
            function getHtmlText(array) {
                var html = "";
                for (var index = 0; index < array.length; index++) {
                    var textData = array[index];
                    html += getHtml(textData.text, textData.color, textData.size);
                }
                return html;
            }
            globalFun.getHtmlText = getHtmlText;
            function getHtml(text, color, size) {
                if (size === void 0) size = "26";
                var labelColor;
                var strokeColor;
                switch (color) {
                  case globalConst_1.default.GoldText:
                    labelColor = "#ffec4c";
                    strokeColor = "#70200b";
                    break;

                  case globalConst_1.default.WhiteText:
                    labelColor = "#ffffff";
                    strokeColor = "#0b3170";
                    break;

                  case globalConst_1.default.BlueText:
                    labelColor = "#85efff";
                    strokeColor = "#004b6e";
                    break;

                  case globalConst_1.default.RedText:
                    labelColor = "#f34a47";
                    strokeColor = "#0b3170";
                    break;

                  default:
                    return undefined;
                }
                var html = "<span style='color:" + labelColor + ";bold:true;font-family:SimHei;" + "font-size:" + size + "px;stroke:4px;strokeColor:" + strokeColor + ";'>" + text + "</span>";
                return html;
            }
            globalFun.getHtml = getHtml;
            function getColorText(string, size, color, strokeColor, font) {
                if (size === void 0) size = 32;
                if (color === void 0) color = "#ffffff";
                if (strokeColor === void 0) strokeColor = "#0b3170";
                if (font === void 0) font = null;
                var txt = new Laya.Label();
                txt.color = color;
                txt.font = "SimHei";
                txt.fontSize = size;
                txt.text = string;
                txt.strokeColor = strokeColor;
                txt.align = "left";
                txt.valign = "middle";
                txt.stroke = 4;
                txt.bold = true;
                txt.autoSize = true;
                font && (txt.font = font);
                return txt;
            }
            globalFun.getColorText = getColorText;
            function changeButtonToOrange(button, text) {
                if (text === void 0) text = undefined;
                button.skin = "basePic/btn_yellow.png";
                button.strokeColors = "#70200b";
                button.mouseEnabled = true;
                if (text) button.label = text;
            }
            globalFun.changeButtonToOrange = changeButtonToOrange;
            function changeButtonToGreen(button, text) {
                if (text === void 0) text = undefined;
                button.skin = "noZip/btn_green.png";
                button.strokeColors = "#226306";
                button.mouseEnabled = true;
                if (text) button.label = text;
            }
            globalFun.changeButtonToGreen = changeButtonToGreen;
            function changeButtonToGray(button, text) {
                if (text === void 0) text = undefined;
                button.skin = "noZip/btn_gray.png";
                button.strokeColors = "#0b3170";
                button.mouseEnabled = false;
                if (text) button.label = text;
            }
            globalFun.changeButtonToGray = changeButtonToGray;
            function changeButtonToBlue(button, text) {
                if (text === void 0) text = undefined;
                button.skin = "common/btn_blue.png";
                button.strokeColors = "#0b3170";
                button.mouseEnabled = true;
                if (text) button.label = text;
            }
            globalFun.changeButtonToBlue = changeButtonToBlue;
            function calLegalAngle(angle) {
                if (angle < 1 && angle > -90) angle = 1; else if (angle > 179 || angle < -90 && angle > -180) angle = 179;
                return angle;
            }
            globalFun.calLegalAngle = calLegalAngle;
            function globalTip(txt) {
                BattleData_1.default.roomWarnMessage = new WarningMessage_1.WarningMessage(txt, true);
            }
            globalFun.globalTip = globalTip;
            function isHaveFishInScreen() {
                var nodes = FishData_1.default.fishNodesObj;
                for (var index in nodes) {
                    var fish = nodes[index];
                    if (!fish) continue;
                    if (fish.isInScreen) return true;
                }
                return false;
            }
            globalFun.isHaveFishInScreen = isHaveFishInScreen;
            function isBulletHitFish(obj1, fish, radius) {
                if (radius === void 0) radius = 35;
                if (fish.beginDead == true) return false;
                if (pGetDistance({
                    x: fish.x,
                    y: fish.y
                }, {
                    x: obj1.x,
                    y: obj1.y
                }) > Math.max(fish.selfH, fish.selfW) + radius) return false;
                var lockP = fish.getLockP();
                var lockPLen = lockP.length;
                for (var i = 0; i < lockPLen; ++i) {
                    var lock = lockP[i];
                    var len = pGetDistance({
                        x: obj1.x,
                        y: obj1.y
                    }, {
                        x: lock.x,
                        y: lock.y
                    });
                    if (len <= lock.r + radius) return true;
                }
                return false;
            }
            globalFun.isBulletHitFish = isBulletHitFish;
            function changeLockP(fishNode) {
                if (!fishNode) return {
                    x: 0,
                    y: 0
                };
                var p = fishNode.getLockP();
                var len = p.length;
                if (!len) return {
                    x: 0,
                    y: 0
                };
                for (var i = 0; i < len; i++) {
                    if (p[i].x < 0 || p[i].y < 0 || p[i].x > globalConst_1.default.stageW || p[i].y > globalConst_1.default.stageH) continue;
                    return {
                        x: p[i].x,
                        y: p[i].y
                    };
                }
                return {
                    x: p[len - 1].x,
                    y: p[len - 1].y
                };
            }
            globalFun.changeLockP = changeLockP;
            function getDragonSeatindex(color) {
                if (color == "white") return 0; else if (color == "blue") return 1; else if (color == "purple") return 2; else if (color == "red") return 3; else if (color == "green") return 4; else return -1;
            }
            globalFun.getDragonSeatindex = getDragonSeatindex;
            function getDragonSeatColor(index) {
                if (index == 0) return "white"; else if (index == 1) return "blue"; else if (index == 2) return "purple"; else if (index == 3) return "red"; else if (index == 4) return "green";
            }
            globalFun.getDragonSeatColor = getDragonSeatColor;
            function getDragonSeatSkin(index) {
                if (index == 0) return "dragonBall/image_dragon_white.png"; else if (index == 1) return "dragonBall/image_dragon_blue.png"; else if (index == 2) return "dragonBall/image_dragon_purple.png"; else if (index == 3) return "dragonBall/image_dragon_red.png"; else if (index == 4) return "dragonBall/image_dragon_green.png";
            }
            globalFun.getDragonSeatSkin = getDragonSeatSkin;
            function getDragonSeatTimes(index) {
                if (index == 0) return 4; else if (index == 1) return 8; else if (index == 2) return 20; else if (index == 3) return 10; else if (index == 4) return 8;
            }
            globalFun.getDragonSeatTimes = getDragonSeatTimes;
            function getFishById(id) {
                return FishData_1.default.fishNodesObj[id];
            }
            globalFun.getFishById = getFishById;
            function addGlobalAni(x, y, aniName, scale, rotation, layer, isAtlas) {
                if (scale === void 0) scale = 1;
                if (rotation === void 0) rotation = 0;
                if (layer === void 0) layer = globalConst_1.default.bulletLayer;
                if (isAtlas === void 0) isAtlas = true;
                var sp = getBaseEffectNode(aniName);
                if (aniName == "bombBaozha" || aniName == "zuantouBaozha") sp.zOrder = 100;
                sp.scaleX = sp.scaleY = scale;
                sp.rotation = rotation;
                SceneM_1.default.addToLayer(sp, layer, x, y);
                var ani = sp.getChildByName("ani");
                ani.on(Laya.Event.COMPLETE, this, function(data) {
                    data.isAtlas && Laya.Loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas/" + aniName + ".atlas");
                    data.node.removeSelf();
                    data.node.destroy();
                }, [ {
                    node: sp,
                    isAtlas: isAtlas
                } ]);
                return sp;
            }
            globalFun.addGlobalAni = addGlobalAni;
            function getBaseEffectNode(frameName) {
                var sp = Laya.Pool.getItemByClass(frameName, Laya.Sprite);
                var ani = Laya.Pool.getItemByClass(frameName, Laya.Animation);
                ani.name = "ani";
                ani = ani.loadAnimation(GlobalVar_1.default.reUrl + "animation/" + frameName + ".ani");
                ani.rotation = 0;
                ani.scale(1, 1);
                ani.play(0, false);
                sp.addChild(ani);
                return sp;
            }
            globalFun.getBaseEffectNode = getBaseEffectNode;
            function getAni(frameName, scale) {
                if (scale === void 0) scale = 1;
                var ani = Laya.Pool.getItemByClass(frameName, Laya.Animation);
                ani = ani.loadAnimation(GlobalVar_1.default.reUrl + "animation/" + frameName + ".ani");
                ani.scale(scale, scale);
                ani.pos(0, 0);
                ani.alpha = 1;
                ani.rotation = 0;
                ani.name = frameName + "_" + aniNum++;
                return ani;
            }
            globalFun.getAni = getAni;
            function getRandomDir() {
                return Math.random() - .5 <= 0 ? -1 : 1;
            }
            globalFun.getRandomDir = getRandomDir;
            function openDialog(dialog, handler, isDialogAni) {
                if (isDialogAni === void 0) isDialogAni = true;
                var param = {
                    scaleX: 1,
                    scaleY: 1,
                    alpha: 1
                };
                if (dialog.black_bg) {
                    dialog.black_bg.alpha = 0;
                    Laya.Tween.to(dialog.black_bg, {
                        alpha: .75
                    }, 200, Laya.Ease.quadIn);
                }
                if (dialog.box_dialog && isDialogAni) {
                    dialog.box_dialog.scale(0, 0);
                    dialog.box_dialog.alpha = 0;
                    Laya.Tween.to(dialog.box_dialog, param, 200, Laya.Ease.quadIn, handler);
                }
            }
            globalFun.openDialog = openDialog;
            function closeDialog(dialog, handler) {
                var param = {
                    scaleX: 0,
                    scaleY: 0,
                    alpha: 0
                };
                if (dialog.black_bg) Laya.Tween.to(dialog.black_bg, {
                    alpha: 0
                }, 200, Laya.Ease.quadOut);
                dialog.box_dialog && Laya.Tween.to(dialog.box_dialog, param, 200, Laya.Ease.quadOut, handler);
            }
            globalFun.closeDialog = closeDialog;
            function enlargeUI(node, handler, delay) {
                if (handler === void 0) handler = undefined;
                if (delay === void 0) delay = 0;
                Laya.Tween.to(node, {
                    scaleX: 1,
                    scaleY: 1
                }, 200, Laya.Ease.backOut, handler, delay);
            }
            globalFun.enlargeUI = enlargeUI;
            function narrowUI(node, handler, delay) {
                if (handler === void 0) handler = undefined;
                if (delay === void 0) delay = 0;
                Laya.Tween.to(node, {
                    scaleX: 0,
                    scaleY: 0
                }, 200, Laya.Ease.backIn, handler, delay);
            }
            globalFun.narrowUI = narrowUI;
            function changeUI(current, target, handler) {
                if (handler === void 0) handler = undefined;
                narrowUI(current);
                enlargeUI(target, handler, 200);
            }
            globalFun.changeUI = changeUI;
            function goldCoinAni(pos, endPos, handler, flyDelay, randomHeight, aniName, startLabel) {
                if (flyDelay === void 0) flyDelay = 0;
                if (randomHeight === void 0) randomHeight = 50;
                if (aniName === void 0) aniName = "goldCoinAni";
                if (startLabel === void 0) startLabel = false;
                var ani = getAni(aniName);
                var timeline = TimeLineManager_1.default.creatTimeLine();
                var backPos = {
                    x: (endPos.x - pos.x) * .3,
                    y: (endPos.y - pos.y) * .3
                };
                ani.pos(pos.x, pos.y);
                if (startLabel) ani.y += randomHeight * 2;
                timeline.addLabel("ani_0", 0).to(ani, {
                    y: pos.y
                }, 300, Laya.Ease.quadInOut).addLabel("ani_1", 0).to(ani, {
                    y: pos.y + randomHeight
                }, 300, Laya.Ease.quadInOut).addLabel("ani_2", 0).to(ani, {
                    y: pos.y
                }, 300, Laya.Ease.quadInOut).addLabel("ani_3", 0).to(ani, {
                    y: pos.y + randomHeight * .7
                }, 200, Laya.Ease.quadInOut).addLabel("ani_4", 0).to(ani, {
                    y: pos.y
                }, flyDelay + 200, Laya.Ease.quadInOut).addLabel("ani_5", 0).to(ani, {
                    x: pos.x - backPos.x,
                    y: pos.y - backPos.y
                }, 300, Laya.Ease.quadInOut).addLabel("ani_6", 0).to(ani, {
                    x: endPos.x,
                    y: endPos.y,
                    scaleX: .6,
                    scaleY: .6
                }, 600, Laya.Ease.quadInOut);
                timeline.play(startLabel ? 0 : "ani_1", false);
                ani.play(0, true);
                timeline.on(Laya.Event.COMPLETE, this, function(ani, handler) {
                    if (handler) handler.run();
                    ani.removeSelf();
                }, [ ani, handler ]);
                return ani;
            }
            globalFun.goldCoinAni = goldCoinAni;
            function numberTextFly(pos, handler, caller, num, scale) {
                if (scale === void 0) scale = .5;
                var text = new Laya.Label();
                text.text = "+" + Math.floor(num);
                text.anchorX = text.anchorY = .5;
                text.scale(scale, scale);
                text.alpha = 0;
                text.font = globalConst_1.default.fontNum1;
                text.pos(pos.x, pos.y);
                Laya.Tween.to(text, {
                    alpha: 1
                }, 800);
                Laya.Tween.to(text, {
                    alpha: 0
                }, 600, Laya.Ease.strongOut, undefined, 800);
                Laya.Tween.to(text, {
                    alpha: 0
                }, 1200, Laya.Ease.strongOut, undefined, 1400);
                Laya.Tween.to(text, {
                    y: text.y - 200
                }, 2e3, undefined, Laya.Handler.create(caller, function(data) {
                    if (data.handler) data.handler.run();
                    data.text.removeSelf();
                    data.text.destroy();
                }, [ {
                    text: text,
                    handler: handler
                } ]));
                return text;
            }
            globalFun.numberTextFly = numberTextFly;
            function itemFlyAni(startPos, endPos, itemId, handler) {
                var skin = "iconAndSkin/" + (itemId < 10 ? "skin_" : "icon_") + PlayerData_1.default.getItemData(itemId).skin;
                var img = new Laya.Image(skin);
                img.anchorX = img.anchorY = .5;
                img.pos(startPos.x, startPos.y);
                img.scale(0, 0);
                var isTicket = itemId == globalConst_1.default.ticket;
                var timeline = TimeLineManager_1.default.creatTimeLine();
                timeline.addLabel("ani_0", 0).to(img, {
                    scaleX: 1.1,
                    scaleY: 1.1
                }, 300, Laya.Ease.quadInOut).addLabel("ani_1", 0).to(img, {
                    scaleX: 1,
                    scaleY: 1
                }, 300, Laya.Ease.quadInOut).addLabel("ani_2", 0).to(img, {
                    scaleX: 1.1,
                    scaleY: 1.1
                }, 300, Laya.Ease.quadInOut).addLabel("ani_3", 0).to(img, {
                    scaleX: 1,
                    scaleY: 1
                }, 300, Laya.Ease.quadInOut).addLabel("ani_4", 0).to(img, {
                    scaleX: isTicket ? .8 : 1.5,
                    scaleY: isTicket ? .8 : 1.5
                }, 300, Laya.Ease.quadInOut).addLabel("ani_5", 0).to(img, {
                    scaleX: .4,
                    scaleY: .4
                }, 300, Laya.Ease.quadInOut);
                Laya.Tween.to(img, {
                    x: endPos.x,
                    y: endPos.y
                }, 600, Laya.Ease.quadInOut, handler, 1200);
                timeline.on(Laya.Event.COMPLETE, this, function(data) {
                    data.timeline.destroy();
                    data.img.removeSelf();
                }, [ {
                    img: img,
                    timeline: timeline
                } ]);
                timeline.play(0, false);
                return img;
            }
            globalFun.itemFlyAni = itemFlyAni;
            function doItemFlyAni(param) {
                var coinNums = [ 3, 6, 11 ];
                var coinIndex;
                var count;
                var isSmall = param.characterType == 1;
                var isMiddle = param.characterType == 2 || param.characterType == 3 || param.characterType == 50;
                var isBig = param.characterType == 10 || param.characterType == 30 || globalFun.checkSpFish(param.characterType);
                if (!isSmall && !isMiddle && !isBig) return;
                coinIndex = isSmall ? 0 : isMiddle ? 1 : 2;
                count = coinNums[coinIndex];
                count + Math.floor(Math.random() + .5);
                var coinArea = [ 60, 100, 130 ];
                var points = [];
                var width = param.isCommon ? 70 : coinArea[coinIndex];
                initPoint(param.isCommon, true);
                while (count > 0) {
                    initPoint(param.isCommon);
                    count--;
                    if (count == 1) points.forEach(function(value, index) {
                        delete points[index];
                    });
                }
                function initPoint(isCommon, isFirst) {
                    if (isFirst === void 0) isFirst = false;
                    var point = checkPoint(param.startPoint, width, points, isCommon);
                    points.push(point);
                    var item = goldCoinAni(point, param.endPoint, new Laya.Handler(this, function() {
                        if (!isCommon && isFirst) {
                            var soundName = undefined;
                            if (param.aniName == "goldCoinAni") {
                                param.seat.updateGold(true);
                                soundName = globalConst_1.default.Sud_getGold;
                            } else if (param.aniName == "diamondCoinAni") {
                                param.seat.updateTicket(true);
                                soundName = globalConst_1.default.Sud_getDiamond;
                            }
                            if (param.seat.seatIndex == FishData_1.default.mySeatIndex && !!soundName) SoundM_1.default.playSound(soundName, 1, 10, undefined, undefined, true);
                        }
                    }), count * 40, 50, param.aniName);
                    SceneM_1.default.addToLayer(item, globalConst_1.default.effectTopLayer);
                }
            }
            globalFun.doItemFlyAni = doItemFlyAni;
            function canNodeInfoEffext(params) {
                var timeLine = TimeLineManager_1.default.creatTimeLine();
                timeLine.addLabel("numPlay1", 0).to(params.obsp, {
                    scaleX: 1.2,
                    scaleY: 1.2
                }, 100).addLabel("numPlay2", 0).to(params.obsp, {
                    scaleX: 1,
                    scaleY: 1
                }, 200);
                var timeIndex = this.timeNum++ % 1e3;
                this.timeLineArr[timeIndex] = timeLine;
                timeLine.play();
                if (params.callBack) timeLine.on(Laya.Event.COMPLETE, this, params.callBack);
            }
            globalFun.canNodeInfoEffext = canNodeInfoEffext;
            function checkPoint(startPoint, width, points, isCommon) {
                if (points === void 0) points = [];
                if (isCommon === void 0) isCommon = false;
                var point = setPoint(startPoint, width);
                for (var i = 0; i < points.length; i++) {
                    if (isCommon) break;
                    if (points[i] && point.distance(points[i].x, points[i].y) < 63) return checkPoint(startPoint, width, points);
                }
                return point;
                function setPoint(startPoint, width) {
                    var x = getRandom(startPoint.x - width, startPoint.x + width);
                    var y = getRandom(startPoint.y - width, startPoint.y + width);
                    return new Laya.Point(x, y);
                }
            }
            globalFun.checkPoint = checkPoint;
            function getGoldFishBoomEffect(deadPos, scale, isSelf) {
                if (scale === void 0) scale = 1.8;
                if (isSelf === void 0) isSelf = true;
                var max_gold = 80;
                var min_gold = 70;
                var goldNum = getRandom(min_gold, max_gold);
                var pos;
                var sp = new Laya.Sprite();
                sp.width = 475;
                sp.height = 475;
                sp.pivot(0, 0);
                sp.pos(deadPos.x, deadPos.y);
                var sp1 = getAniEffectNode("goldFishBoomBg");
                sp1.blendMode = "lighter";
                sp1.scale(scale, scale);
                sp1.on(Laya.Event.COMPLETE, this, function(sp1) {
                    sp1.removeSelf();
                    sp1.destroy();
                    Laya.Loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas/goldFishBoomBg.atlas");
                }, [ sp1 ]);
                sp.addChild(sp1);
                var sp2 = [];
                initData(sp, 0, scale, true, isSelf);
                for (var i = 1; i < goldNum; i++) Laya.timer.once(scale == 1.8 ? 1 : 500, this, function() {
                    initData(sp, i, 1.8, false, isSelf);
                });
                return sp;
                function initData(sp, i, scale, isDelay, isSelf) {
                    if (scale === void 0) scale = 1.8;
                    if (isDelay === void 0) isDelay = false;
                    if (isSelf === void 0) isSelf = true;
                    pos = getRandNum();
                    sp2[i] = getAniEffectNode(isSelf ? "goldCoinAni" : "sliverCoinAni", true, pos.f, pos.rota);
                    if (!sp2[i] && sp2[i].destroyed) return;
                    if (isDelay) Laya.timer.once(500, this, function() {
                        sp.addChild(sp2[i]);
                    }); else sp.addChild(sp2[i]);
                    scale != 1.8 && sp2[i].scale(.1, .1);
                    scale != 1.8 && Laya.Tween.to(sp2[i], {
                        scaleX: 1,
                        scaleY: 1
                    }, 1e3);
                    Laya.Tween.to(sp2[i], {
                        x: pos.x,
                        y: pos.y,
                        alpha: pos.a
                    }, pos.t, null, Laya.Handler.create(sp2, function(coinNode) {
                        coinNode.clear();
                        coinNode.removeSelf();
                        coinNode.destroy();
                    }, [ sp2[i] ], false));
                }
            }
            globalFun.getGoldFishBoomEffect = getGoldFishBoomEffect;
            function getAniEffectNode(frameName, isRepeat, frame, rota, scalem, name) {
                if (isRepeat === void 0) isRepeat = false;
                if (frame === void 0) frame = null;
                if (rota === void 0) rota = 0;
                if (scalem === void 0) scalem = 1;
                if (name === void 0) name = null;
                var ani = new Laya.Animation();
                ani.loadAnimation(GlobalVar_1.default.reUrl + "animation/" + frameName + ".ani");
                ani.name = "anim";
                ani.rotation = rota;
                ani.scale(scalem, scalem);
                if (name) ani.play(frame, isRepeat, name); else ani.play(frame, isRepeat);
                return ani;
            }
            globalFun.getAniEffectNode = getAniEffectNode;
            function getRandNum() {
                var max_s = 750;
                var min_s = 150;
                var max_r = 360;
                var min_r = 0;
                var max_t = 1e3;
                var min_t = 500;
                var max_f = 7;
                var min_f = 0;
                var max_a = 8;
                var min_a = 6;
                var rota = getRandom(min_r, max_r);
                var f = getRandom(min_f, max_f);
                var s = getRandom(min_s, max_s);
                var t = getRandom(min_t, max_t);
                var a = getRandom(min_a, max_a);
                var t_s = t / 1e3;
                var d = s * t_s;
                var k = 0;
                var r;
                var x;
                var y;
                r = Math.floor(Math.random() * (max_r - min_r + 1) + min_r);
                if (r != 90 && r != 270) {
                    k = Math.tan(r);
                    x = d / Math.sqrt(Math.pow(k, 2) + 1);
                    if (r > 90 && r < 270) x = -x;
                    y = k * x;
                } else if (r == 90) {
                    x = 0;
                    y = -d;
                } else if (r == 270) {
                    x = 0;
                    y = d;
                }
                return {
                    x: x,
                    y: y,
                    t: t,
                    f: f,
                    rota: rota,
                    a: a / 10
                };
            }
            globalFun.getRandNum = getRandNum;
            function searchTarget(fishs) {
                if (!fishs) return;
                var target;
                for (var index in fishs) {
                    var fish = fishs[index];
                    if (!fish) continue;
                    if (!target && !fish.beginDead && fish.isInScreen) {
                        target = fish;
                        continue;
                    }
                    var isTarget = target && !fish.beginDead && fish.isInScreen;
                    if (isTarget && (fish.characterType > target.characterType || fish.characterType == target.characterType && fish.type > target.type)) target = fish;
                }
                return target;
            }
            globalFun.searchTarget = searchTarget;
            function getFishIcon(id) {
                var fishInfo = BattleData_1.default.fishData[id];
                var image;
                image = new Laya.Image(fishInfo ? "fishIcon/" + fishInfo.Icon + ".png" : "");
                return image;
            }
            globalFun.getFishIcon = getFishIcon;
            function switchRoom(id) {
                if (id == 1 || id == 2) {
                    if (!GlobalVar_1.default.zip2Ok) return;
                    var dlg = SceneM_1.default.getSceneByName("NewRoomChangeDlg");
                    SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
                }
            }
            globalFun.switchRoom = switchRoom;
            function compare(property) {
                return function(a, b) {
                    var value1 = a[property];
                    var value2 = b[property];
                    return value1 - value2;
                };
            }
            globalFun.compare = compare;
            function getFishCfgIds(fishUniqId) {
                var arr = fishUniqId.split("_");
                return {
                    teamId: arr[0],
                    formationId: arr[1],
                    formationIndex: arr[2]
                };
            }
            globalFun.getFishCfgIds = getFishCfgIds;
            var logHasObj = true;
            var includeStr = {
                heart: true
            };
            var excludeStr = {
                heart: true
            };
            function log() {
                var optionalParams = [];
                for (var _i = 0; _i < arguments.length; _i++) optionalParams[_i] = arguments[_i];
                if (!!!optionalParams) return;
                var s = "";
                for (var i = 0; i < optionalParams.length; i++) {
                    var v = optionalParams[i];
                    if (typeof v == "object" && logHasObj) console.log(v); else s = s + " " + optionalParams[i];
                }
                if (!StringFunc_1.default.isContainStr(s, excludeStr)) console.log(s);
            }
            globalFun.log = log;
            function globalSetZorder(node, zOrder) {
                if (!!node) node.zOrder = zOrder;
            }
            globalFun.globalSetZorder = globalSetZorder;
            function getLoopValue(v, min, max) {
                if (!v) return min;
                if (v < min) return max;
                if (v > max) return min;
                return v;
            }
            globalFun.getLoopValue = getLoopValue;
            function checkSpFish(type) {
                return type >= 21 && type <= 26;
            }
            globalFun.checkSpFish = checkSpFish;
            function testFish(step) {}
            globalFun.testFish = testFish;
            function getItemNumFromArr(arr, item_id) {
                var itemNum = 0;
                for (var index = 0; index < arr.length; index++) {
                    var item = arr[index];
                    if (item.item_id == item_id) itemNum = item.count;
                }
                return itemNum;
            }
            globalFun.getItemNumFromArr = getItemNumFromArr;
            function sortObj(obj, isPc) {
                if (isPc === void 0) isPc = false;
                var newkey = Object.keys(obj).sort();
                var str = "";
                for (var i = 0; i < newkey.length; i++) str += newkey[i] + "=" + obj[newkey[i]] + "&";
                !isPc && (str += "session_key=" + GameData_1.default.wx_session_key);
                return str;
            }
            globalFun.sortObj = sortObj;
            function getMyCannonAngle() {
                if (!FishData_1.default.mySeatNode) return;
                var myCannon = FishData_1.default.mySeatNode.cannonNode;
                if (!myCannon) return;
                var ptTo = {
                    x: Laya.stage.mouseX,
                    y: Laya.stage.mouseY
                };
                var ptFrom = {
                    x: myCannon.x,
                    y: myCannon.y - 34
                };
                var originAngle = globalFun.vecToAngle(ptFrom, ptTo);
                var angle = globalFun.calLegalAngle(originAngle);
                return angle;
            }
            globalFun.getMyCannonAngle = getMyCannonAngle;
            function serverCloseNotice(notice) {
                var outNoticeDlg = new NoticeDlg_1.OutNoticeDlg();
                outNoticeDlg.initOutNotice(notice);
                SceneM_1.default.addToMiddLayer(outNoticeDlg, globalConst_1.default.dialogLayer);
            }
            globalFun.serverCloseNotice = serverCloseNotice;
            function upDown(obj, oriY) {
                var _this = this;
                Laya.Tween.clearAll(obj);
                obj.y = oriY;
                Laya.Tween.to(obj, {
                    y: obj.y - 15
                }, 800, Laya.Ease.quadInOut, Laya.Handler.create(this, function() {
                    Laya.Tween.to(obj, {
                        y: obj.y + 15
                    }, 800, Laya.Ease.quadInOut, Laya.Handler.create(_this, function() {
                        upDown(obj, oriY);
                    }));
                }));
            }
            globalFun.upDown = upDown;
            function openTipsForVip() {
                var handler = new Laya.Handler(this, function() {
                    DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_VIPCHARGE);
                });
                var str = globalFun.getColorText("贵族等级不足，无法使用该炮倍");
                var dialog = new CommonDialog_1.default(1, [ str ], undefined, "成为贵族", "温馨提示", false, handler);
                SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
            }
            globalFun.openTipsForVip = openTipsForVip;
            function checkVipToFire(cur_pao, isTips) {
                if (cur_pao === void 0) cur_pao = undefined;
                if (isTips === void 0) isTips = true;
                var vipData = ConfigData_1.default.getVipDataByKey(PlayerData_1.default.vip_level);
                var vipMax = +vipData.maxGun;
                cur_pao = cur_pao != undefined ? cur_pao : +BattleData_1.default.getSitInfo(FishData_1.default.mySeatIndex).cur_pao;
                if (cur_pao > vipMax) {
                    if (FishData_1.default.isAutoButtonOn) {
                        EventDis_1.default.dispatchEvent(GlobalVar_1.default.CHANGE_AUTO_PAO_STATE);
                        globalFun.openTipsForVip();
                    } else isTips && globalFun.openTipsForVip();
                    return false;
                }
                return true;
            }
            globalFun.checkVipToFire = checkVipToFire;
            function getInterval(width, fontSize) {
                if (fontSize === void 0) fontSize = 25;
                var spaceWidth;
                var space = new Laya.Label(" ");
                space.font = "SimHei";
                space.bold = true;
                space.fontSize = fontSize;
                spaceWidth = space.displayWidth;
                var text = "";
                var spaceNum = Math.ceil(width / spaceWidth);
                for (var index = 0; index < spaceNum; index++) text += " ";
                return text;
            }
            globalFun.getInterval = getInterval;
            function sendAld(eventId, arg) {
                if (arg === void 0) arg = "default";
                if (!eventId) return;
                if (GlobalVar_1.default.isWx) {
                    wx.aldSendEvent(eventId, {
                        costTime: getClientTime() - GlobalVar_1.default.lastAldTime,
                        arg: arg
                    });
                    GlobalVar_1.default.lastAldTime = getClientTime();
                }
            }
            globalFun.sendAld = sendAld;
            function sendAldNewuser(eventId, arg) {
                if (arg === void 0) arg = "default";
                if (!eventId) return;
                if (GlobalVar_1.default.isWx && GlobalVar_1.default.isNewZipUser) {
                    wx.aldSendEvent(eventId, {
                        costTime: getClientTime() - GlobalVar_1.default.lastAldTimeNew,
                        arg: arg
                    });
                    GlobalVar_1.default.lastAldTimeNew = getClientTime();
                }
            }
            globalFun.sendAldNewuser = sendAldNewuser;
            function remoteLog(eventId, arg) {
                if (arg === void 0) arg = "default";
                if (!eventId) return;
                if (GlobalVar_1.default.isWx) {
                    var logId = eventId.substr(0, 3);
                    EventDis_1.default.dispatchEvent("log_test", [ logId ]);
                    GlobalVar_1.default.aldStr = GlobalVar_1.default.aldStr + "_" + eventId;
                }
            }
            globalFun.remoteLog = remoteLog;
            function copyObj(obj) {
                if (!obj) return {}; else return JSON.parse(JSON.stringify(obj));
            }
            globalFun.copyObj = copyObj;
            function getDragonCannonID(type) {
                if (type == DragonCannonNode_1.DragonType.GREEN_CANNON) return "34"; else if (type == DragonCannonNode_1.DragonType.SILVER_CANNON) return "35"; else if (type == DragonCannonNode_1.DragonType.GOLD_CANNON) return "36";
                return;
            }
            globalFun.getDragonCannonID = getDragonCannonID;
            function enterRoomFailed(needGold) {
                var str1 = globalFun.getColorText("你的金币不足");
                var str3 = globalFun.getColorText("" + needGold, 32, "#ffde00");
                var str2 = globalFun.getColorText("无法进入该房间");
                var alert;
                if (!OnOffManager_1.default.isChargeOn) alert = new CommonDialog_1.default(1, [ str1, str3 ], [ str2 ], "确定", "提示", true); else alert = new CommonDialog_1.default(1, [ str1, str3 ], [ str2 ], "充值", "提示", false, new Laya.Handler(this, function() {
                    DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_SHOP);
                }));
                SceneM_1.default.addToMiddLayer(alert, globalConst_1.default.dialogLayer);
            }
            globalFun.enterRoomFailed = enterRoomFailed;
            function setStorage(k, value) {
                if (GlobalVar_1.default.isWx) wx.setStorage({
                    key: k,
                    data: value.toString()
                }); else Laya.LocalStorage.setItem(k, value);
            }
            globalFun.setStorage = setStorage;
            function getStorage(key) {
                return GlobalVar_1.default.isWx ? wx.getStorageSync(key) : Laya.LocalStorage.getItem(key);
            }
            globalFun.getStorage = getStorage;
            function setReset(isChild, box, target) {
                if (isChild === void 0) isChild = false;
                if (target === void 0) target = [];
                var visibles = [];
                var childs = target;
                box.removeChildren();
                for (var i = 0; i < childs.length; i++) {
                    var child = childs[i];
                    visibles[i] = isChild ? child._children[0] && child._children[0].visible : child.visible;
                    visibles[i] && box.addChild(child);
                }
            }
            globalFun.setReset = setReset;
            function roomItemsFlyAni(data) {
                var isSelf = data.seatIndex == FishData_1.default.mySeatIndex;
                var picNum = Math.min(data.itemNum, 10);
                var points = [];
                for (var i = 0; i < picNum; i++) points.push(globalFun.checkPoint(data.startPos, 40 + picNum * 10, points));
                var seatInfo = FishData_1.default.seatNodes[data.seatIndex].seatInfoNode;
                var callBack = undefined;
                if (data.itemId == +globalConst_1.default.TicketID) callBack = new Laya.Handler(seatInfo, seatInfo.updateTicket, [ true ]);
                points.forEach(function(point, index, arr) {
                    var newEnd = PlayerData_1.default.getItemFlyPos(data.flyPos, data.seatIndex);
                    var pic = globalFun.itemFlyAni(point, newEnd, data.itemId, index == arr.length - 1 ? callBack : undefined);
                    SceneM_1.default.addToLayer(pic, globalConst_1.default.effectTopLayer);
                });
                if (isSelf) if (data.itemId == +globalConst_1.default.TicketID) {
                    EventDis_1.default.dispatchEvent("kill_ticket");
                    var view = new TicketView_1.TicketView();
                    view.setData(data.itemNum);
                    view.pos(Laya.stage.width / 2, Laya.stage.height / 2 - 100);
                    SceneM_1.default.addToLayer(view, globalConst_1.default.effectBottomLayer);
                } else if (data.itemId == 41) {
                    var tips = new DebrisFallView_1.default();
                    tips.x = globalConst_1.default.stageW / 2;
                    tips.y = 200;
                    SceneM_1.default.addToLayer(tips, globalConst_1.default.effectTopLayer);
                    globalFun.globalSetZorder(tips, 1e3);
                    tips.initText(+data.itemNum);
                }
            }
            globalFun.roomItemsFlyAni = roomItemsFlyAni;
            function getMarqueeColor(color) {
                var data = {
                    color: "#ffffff",
                    strokeColor: "#000000"
                };
                switch (color) {
                  case "green":
                    data.color = "#68ff3f";
                    data.strokeColor = "#004719";
                    break;

                  case "red":
                    data.color = "#ff5551";
                    data.strokeColor = "#5a0000";
                    break;

                  case "white":
                    data.color = "#ffffff";
                    data.strokeColor = "#0b3170";
                    break;

                  case "blue":
                    data.color = "#85efff";
                    data.strokeColor = "#004b6e";
                    break;

                  case "yellow":
                    data.color = "#ffde00";
                    data.strokeColor = "#70200b";
                    break;

                  default:
                    break;
                }
                return data;
            }
            globalFun.getMarqueeColor = getMarqueeColor;
            function getDragonCanPao(type) {
                var pao = 0;
                switch (type) {
                  case DragonCannonNode_1.DragonType.GREEN_CANNON:
                    pao = 100;
                    break;

                  case DragonCannonNode_1.DragonType.SILVER_CANNON:
                    pao = 1e3;
                    break;

                  case DragonCannonNode_1.DragonType.GOLD_CANNON:
                    pao = 1e4;
                    break;

                  default:
                    break;
                }
                return pao;
            }
            globalFun.getDragonCanPao = getDragonCanPao;
            function setMonthTime() {
                var serverTime = GameData_1.default.serverTimeStamp;
                var endtime = GameData_1.default.monthEndTime - Math.floor(serverTime * .001);
                GameData_1.default.monthEndDay = Math.max(Math.ceil(endtime / (24 * 60 * 60)), 0);
            }
            globalFun.setMonthTime = setMonthTime;
            function setGiftMr(data) {
                if (data && JSON.parse(data)) {
                    var info = JSON.parse(data);
                    if (+info.takeFlag != 0) GameData_1.default.tomrrowState = 3; else if (PlayerData_1.default.checkMatchDate(info["canTakeTime"])) GameData_1.default.tomrrowState = 2; else GameData_1.default.tomrrowState = 1;
                } else GameData_1.default.tomrrowState = 0;
            }
            globalFun.setGiftMr = setGiftMr;
        })(globalFun || (globalFun = {}));
        exports.default = globalFun;
    }, {
        "../common/CommonDialog": 7,
        "../common/DialogManager": 9,
        "../common/NoticeDlg": 17,
        "../common/SceneM": 19,
        "../common/SoundM": 21,
        "../common/TicketView": 23,
        "../common/WarningMessage": 25,
        "../datas/hallData/GameData": 26,
        "../datas/hallData/PlayerData": 27,
        "../datas/roomData/BattleData": 29,
        "../datas/roomData/FishData": 30,
        "../netWork/HttpManager": 100,
        "../rolesNodes/fishNodes/DebrisFallView": 108,
        "../rolesNodes/fishNodes/DragonCannonNode": 111,
        "./ConfigData": 83,
        "./ConfigerHelper": 84,
        "./EventDis": 85,
        "./GlobalVar": 90,
        "./OnOffManager": 93,
        "./StringFunc": 94,
        "./TimeLineManager": 95,
        "./globalConst": 97
    } ],
    88: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var globalConst_1 = require("./globalConst");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var GameData_1 = require("../datas/hallData/GameData");
        var GlobalFunc_1 = require("./GlobalFunc");
        var BattleData_1 = require("../datas/roomData/BattleData");
        var CreateObj;
        (function(CreateObj) {
            function createCommoObj(data, key) {
                var comm;
                if (data.type == globalConst_1.default.MonthCardType) comm = {
                    commodityName: {
                        visible: true,
                        text: "月卡"
                    },
                    button_box: {
                        commodityBuy: {
                            label: data.money + "元"
                        }
                    },
                    ribbon: {
                        visible: true
                    },
                    itemImage: {
                        skin: "iconAndSkin/" + data.skin
                    },
                    commoBox: {
                        visible: false
                    },
                    monthCardBox: {
                        visible: true
                    },
                    sand: {
                        visible: false
                    },
                    itemNum: {
                        visible: false
                    },
                    conti: data.conti,
                    items: data.items,
                    sortID: 10
                }; else {
                    var vip_level = PlayerData_1.default.vip_level;
                    var rebate = data.rebate != "0" ? data.rebate : undefined;
                    var hasRebate = rebate != undefined;
                    var unit = data.type == "zuan_shop" ? "钻石" : "金币";
                    comm = {
                        commodityName: {
                            visible: false
                        },
                        button_box: {
                            commodityBuy: {
                                label: data.money + "元"
                            }
                        },
                        ribbon: {
                            visible: true
                        },
                        itemImage: {
                            skin: "iconAndSkin/" + data.skin
                        },
                        commoBox: {
                            visible: true,
                            giveNum: {
                                text: data.firstGift + unit
                            }
                        },
                        monthCardBox: {
                            visible: false
                        },
                        sand: {
                            visible: true
                        },
                        itemNum: {
                            visible: true,
                            text: +data.itemNum + (+rebate || 0) + unit
                        },
                        getNum: Number(data.itemNum),
                        rebateNum: Number(rebate),
                        unit: unit,
                        sortID: Number(key)
                    };
                    comm.commoBox.giveNum.text = Math.floor((+data.itemNum + (+rebate || 0)) / data.money) + unit;
                    if (vip_level > 5 && data.type != globalConst_1.default.MonthCardType) comm.sortID = 1e4 - comm.sortID;
                }
                if (!comm) {
                    GlobalFunc_1.default.log("未能初始化商品内容");
                    return undefined;
                }
                comm.commID = key;
                comm.type = data.type;
                comm.money = Number(data.money);
                return comm;
            }
            CreateObj.createCommoObj = createCommoObj;
            function createItemObj(data, key, num) {
                var img = new Laya.Image("iconAndSkin/icon_" + data.skin);
                var scaleX = 90 / img.width;
                var scaleY = 90 / img.height;
                var scale = scaleX < scaleY ? scaleX : scaleY;
                scale = scale >= 1 ? 1 : scale;
                var obj = {
                    mouseEnabled: true,
                    itemSelect: {
                        visible: false
                    },
                    itemImage: {
                        skin: "iconAndSkin/icon_" + data.skin,
                        scaleX: scale,
                        scaleY: scale
                    },
                    box_equip: {
                        visible: Number(key) > 100,
                        image_noItem: {
                            visible: false
                        },
                        image_equiped: {
                            visible: false
                        }
                    },
                    box_tools: {
                        visible: Number(key) <= 100,
                        image_itemFree: {
                            visible: false
                        },
                        text_expire: {
                            visible: false
                        },
                        text_itemNum: {
                            text: "",
                            visible: false
                        }
                    },
                    sortID: Number(data.sortId),
                    itemID: Number(key),
                    itemNum: num
                };
                var serTime = Number(GameData_1.default.serverTimeStamp) || parseInt((GlobalFunc_1.default.getClientTime() / 1e3).toString());
                if (Number(key) <= 100) {
                    obj.box_tools.image_itemFree.visible = data.needDiamond == -1;
                    obj.box_tools.text_expire.visible = typeof num == "string" && Number(num) - serTime < 86400 && Number(num) - serTime > 0;
                    if (num > 0) {
                        obj.box_tools.text_itemNum.visible = true;
                        obj.box_tools.text_itemNum.text = "x" + (typeof num == "string" ? 1 : num);
                    }
                }
                return obj;
            }
            CreateObj.createItemObj = createItemObj;
            function createItemObjEmpty() {
                var obj = {
                    mouseEnabled: false,
                    itemSelect: {
                        visible: false
                    },
                    itemImage: {
                        skin: ""
                    },
                    box_equip: {
                        visible: false,
                        image_noItem: {
                            visible: false
                        },
                        image_equiped: {
                            visible: false
                        }
                    },
                    box_tools: {
                        visible: false,
                        image_itemFree: {
                            visible: false
                        },
                        text_expire: {
                            visible: false
                        },
                        text_itemNum: {
                            text: "",
                            visible: false
                        }
                    },
                    sortID: 0,
                    itemID: -1,
                    itemNum: 0
                };
                return obj;
            }
            CreateObj.createItemObjEmpty = createItemObjEmpty;
            function createRoomObj(spine, jackpotNode, fishData, fishBox) {
                var obj = {
                    room_type: BattleData_1.default.room_type,
                    mouseThrough: true,
                    width: 444,
                    box_spine: {
                        room_spine: undefined
                    },
                    box_ticket: {
                        img_getTicket: {
                            skin: "selectRoom/img_roomName_" + (Number(BattleData_1.default.room_type) - 1) + ".png"
                        }
                    },
                    spine: spine,
                    jackpotNode: jackpotNode,
                    fishBox: fishBox
                };
                return obj;
            }
            CreateObj.createRoomObj = createRoomObj;
            function createJackpotRanking(playData) {
                var obj = {
                    img_playerHead: {
                        skin: playData.headUrl
                    },
                    text_playerName: {
                        text: playData.name
                    },
                    text_playerNum: {
                        text: Number(playData.num).toLocaleString()
                    },
                    text_vipGrade: {
                        text: playData.vip_level.toString()
                    },
                    timeStamp: playData.timeStamp
                };
                return obj;
            }
            CreateObj.createJackpotRanking = createJackpotRanking;
            function createChangeCannonObj(cannonData, equipCannon, hasCannon) {
                var btnMouse = equipCannon != cannonData.itemID;
                var btnSkin;
                var btnStroke;
                var btnLabel;
                if (!hasCannon) {
                    btnSkin = "basePic/btn_yellow.png";
                    btnStroke = "#70200b";
                    btnLabel = "获取";
                } else if (Number(cannonData.itemID) == equipCannon) {
                    btnSkin = "noZip/btn_gray.png";
                    btnStroke = "#0b3170";
                    btnLabel = "已装备";
                } else {
                    btnSkin = "noZip/btn_green.png";
                    btnStroke = "#226306";
                    btnLabel = "装备";
                }
                var obj = {
                    text_cannon: {
                        text: cannonData.itemName
                    },
                    btn_equip: {
                        skin: btnSkin,
                        mouseEnabled: btnMouse,
                        label: btnLabel,
                        labelStrokeColor: btnStroke
                    },
                    img_cannon: {
                        skin: "iconAndSkin/skin_" + cannonData.skin
                    },
                    img_suo: {
                        visible: !hasCannon
                    },
                    cannonID: +cannonData.itemID,
                    state: btnLabel
                };
                return obj;
            }
            CreateObj.createChangeCannonObj = createChangeCannonObj;
            function createActivityTabsObj(data) {
                var obj = {
                    btn_tabs: {
                        width: 202,
                        centerX: 0,
                        skin: "noZip/btn_1.png",
                        label: data.name,
                        labelStrokeColor: "#0b3170"
                    },
                    viewID: data.viewID
                };
                return obj;
            }
            CreateObj.createActivityTabsObj = createActivityTabsObj;
            function createOrdinaryFish(fishData) {
                if (!fishData) return;
                var fishIcon = "fishIcon/" + fishData.Icon + ".png";
                var img = new Laya.Image(fishIcon);
                var scale = img.width <= 219 ? 1 : 219 / img.width;
                var times = fishData.RealScore_0 + (fishData.RealScore_1 != "0" ? "-" + +fishData.RealScore_1 : "") + "倍";
                var mask = new Laya.Image("noZip/img_bg_18.png");
                mask.name = "maskImage";
                mask.width = 219;
                mask.height = 118;
                var obj = {
                    box_fishIcon: {
                        img_fishIcon: {
                            skin: fishIcon,
                            scaleX: scale,
                            scaleY: scale
                        }
                    },
                    text_fishTimes: {
                        text: times
                    },
                    text_fishName: {
                        text: fishData.Name
                    },
                    maskImg: mask,
                    img: fishIcon,
                    scale: scale
                };
                return obj;
            }
            CreateObj.createOrdinaryFish = createOrdinaryFish;
            function createSpecialFish(fishData, textDatas) {
                var obj = {
                    img_fishIcon: {
                        skin: "fishIcon/" + fishData.Icon + ".png"
                    },
                    text_fishName: {
                        text: fishData.type == "40" ? "奖券鱼" : fishData.Name
                    },
                    box_text0: {
                        visible: textDatas[0].visible
                    },
                    box_text1: {
                        visible: textDatas[1].visible
                    },
                    box_text2: {
                        visible: textDatas[2].visible
                    },
                    box_text3: {
                        visible: textDatas[3].visible
                    },
                    text_describe0: {
                        text: textDatas[0].text
                    },
                    text_describe1: {
                        text: textDatas[1].text
                    },
                    text_describe2: {
                        text: textDatas[2].text
                    },
                    text_describe3: {
                        text: textDatas[3].text
                    },
                    text_help: {
                        visible: textDatas[4].visible,
                        text: textDatas[4].text
                    }
                };
                return obj;
            }
            CreateObj.createSpecialFish = createSpecialFish;
            function createHallRouletteObj(rewardNode) {
                var itemIcon = "iconAndSkin/" + rewardNode.skin;
                var img = new Laya.Image(itemIcon);
                var scale = 70 / img.width;
                var obj = {
                    img_itemIcon: {
                        skin: itemIcon,
                        scaleX: scale,
                        scaleY: scale
                    },
                    text_itemNum: {
                        text: rewardNode.ItemNum
                    },
                    rotation: Number(rewardNode.AwardIndex) * 36,
                    itemId: Number(rewardNode.ItemId),
                    itemNum: Number(rewardNode.ItemNum)
                };
                return obj;
            }
            CreateObj.createHallRouletteObj = createHallRouletteObj;
            function createRewardItemObj(data) {
                var itemIcon;
                if (data.item_id == 1 || data.item_id == 5) itemIcon = "iconAndSkin/skin_goldCoin.png";
                if (data.item_id == 2 || data.item_id == 6) itemIcon = "iconAndSkin/skin_diamond.png";
                !!!itemIcon && (itemIcon = "iconAndSkin/icon_" + PlayerData_1.default.getItemData(data.item_id).skin);
                var obj = {
                    icon: itemIcon,
                    num: data.item_count,
                    id: data.item_id
                };
                return obj;
            }
            CreateObj.createRewardItemObj = createRewardItemObj;
            function createComposeItemObj(item) {
                var obj = {
                    itemName: {
                        text: item.name
                    },
                    itemSkin: {
                        skin: "iconAndSkin/icon_" + item.skin
                    },
                    itemNum: {
                        text: "1"
                    },
                    btn_reduce: {
                        mouseEnabled: true,
                        skin: "common/btn_-_0.png"
                    },
                    btn_plus: {
                        mouseEnabled: true,
                        skin: "common/btn_+_0.png"
                    },
                    box_needNum: {
                        text_needNum: {
                            text: item.composeNum,
                            color: "#68ff3f",
                            strokeColor: "#004719"
                        }
                    },
                    btn_compose: {
                        skin: "basePic/btn_yellow.png",
                        labelStrokeColor: "#70200b",
                        labelColors: "#ffffff"
                    },
                    itemData: item
                };
                return obj;
            }
            CreateObj.createComposeItemObj = createComposeItemObj;
            function createComposeRecordObj(data) {
                var item = PlayerData_1.default.getItemData(+data.dst_item_id);
                var time = GlobalFunc_1.default.getTime(data.time * 1e3);
                var days = (time.days + "").length == 1 ? "0" + time.days : time.days;
                var minutes = (time.minutes + "").length == 1 ? "0" + time.minutes : time.minutes;
                var obj = {
                    text_time: {
                        text: time.years + "/" + time.months + "/" + days + " " + time.hours + ":" + time.minutes
                    },
                    text_used: {
                        text: "合成" + item.itemName + "*" + data.dst_item_count
                    },
                    text_composed: {
                        text: "消耗" + data.debris_count + "碎片"
                    }
                };
                return obj;
            }
            CreateObj.createComposeRecordObj = createComposeRecordObj;
        })(CreateObj || (CreateObj = {}));
        exports.default = CreateObj;
    }, {
        "../datas/hallData/GameData": 26,
        "../datas/hallData/PlayerData": 27,
        "../datas/roomData/BattleData": 29,
        "./GlobalFunc": 87,
        "./globalConst": 97
    } ],
    89: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var TimeLineManager_1 = require("./TimeLineManager");
        var SceneM_1 = require("../common/SceneM");
        var globalConst_1 = require("./globalConst");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var GlobalFunc_1 = require("./GlobalFunc");
        var GlobalVar_1 = require("./GlobalVar");
        var FishData_1 = require("../datas/roomData/FishData");
        var SoundM_1 = require("../common/SoundM");
        var GlobalUI;
        (function(GlobalUI) {
            GlobalUI.WxLoadingScene = null;
            function shockScreenEff() {
                shockScreenTimeLine(SceneM_1.default._layers[globalConst_1.default.uiLayer]);
                shockScreenTimeLine(SceneM_1.default._layers[globalConst_1.default.roLayer]);
                shockScreenTimeLine(SceneM_1.default._layers[globalConst_1.default.bgLayer]);
            }
            GlobalUI.shockScreenEff = shockScreenEff;
            function shockScreenTimeLine(shockNode) {
                var shockTimeLine = TimeLineManager_1.default.creatTimeLine();
                shockTimeLine.addLabel("line1", 0).to(shockNode, {
                    _x: 2,
                    _y: -7,
                    scaleX: 1.01,
                    scaleY: 1.01,
                    skewX: -.1
                }, 30).addLabel("line2", 0).to(shockNode, {
                    _x: 2,
                    _y: 1,
                    scaleX: 1.01,
                    scaleY: 1.01,
                    skewX: .1
                }, 30).addLabel("line3", 0).to(shockNode, {
                    _x: 2,
                    _y: 4,
                    scaleX: 1.01,
                    scaleY: 1.01,
                    skewX: -.1
                }, 30).addLabel("line4", 0).to(shockNode, {
                    _x: -3,
                    _y: 12,
                    scaleX: 1.01,
                    scaleY: 1.01,
                    skewX: .1
                }, 30).addLabel("line5", 0).to(shockNode, {
                    _x: 2,
                    _y: 4,
                    scaleX: 1,
                    scaleY: 1,
                    skewX: -.1
                }, 30).addLabel("line6", 0).to(shockNode, {
                    _x: -3,
                    _y: 12,
                    scaleX: 1,
                    scaleY: 1,
                    skewX: .1
                }, 30).addLabel("line7", 0).to(shockNode, {
                    _x: 2,
                    _y: 4,
                    scaleX: 1,
                    scaleY: 1,
                    skewX: -.1
                }, 30).addLabel("line8", 0).to(shockNode, {
                    _x: 2,
                    _y: -4,
                    scaleX: 1,
                    scaleY: 1,
                    skewX: .1
                }, 30).addLabel("line9", 0).to(shockNode, {
                    _x: 2,
                    _y: 0,
                    scaleX: 1,
                    scaleY: 1,
                    skewX: -.1
                }, 30).addLabel("line10", 0).to(shockNode, {
                    _x: 2,
                    _y: 4,
                    scaleX: 1,
                    scaleY: 1,
                    skewX: .1
                }, 30).addLabel("line11", 0).to(shockNode, {
                    _x: 2,
                    _y: 2,
                    scaleX: 1,
                    scaleY: 1,
                    skewX: -.1
                }, 30).addLabel("line12", 0).to(shockNode, {
                    _x: -2,
                    _y: 4,
                    scaleX: 1,
                    scaleY: 1,
                    skewX: .1
                }, 30).addLabel("line13", 0).to(shockNode, {
                    _x: 0,
                    _y: 0,
                    scaleX: 1,
                    scaleY: 1,
                    skewX: 0
                }, 30);
                shockTimeLine.play();
            }
            GlobalUI.shockScreenTimeLine = shockScreenTimeLine;
            function dropDaoDanEff(id, num, seatIndex, x, y) {
                var sp_daodan = new Laya.Sprite();
                var img_daodan_bg = sp_daodan.addChild(new Laya.Image("battle/img_battle_2.png"));
                var img_daodan_icon = "bullets/img_zid_" + (id - 1) + ".png";
                var img_daodan = sp_daodan.addChild(new Laya.Image(img_daodan_icon));
                img_daodan.centerX = img_daodan.centerY = img_daodan_bg.centerX = img_daodan_bg.centerY = 0;
                img_daodan.anchorX = img_daodan.anchorY = .5;
                img_daodan.rotation = 45;
                img_daodan.scale(.8, .8);
                sp_daodan.width = 100;
                sp_daodan.height = 100;
                sp_daodan.pivot(sp_daodan.width / 2, sp_daodan.height / 2);
                sp_daodan.pos(x, y);
                SceneM_1.default.addToLayer(sp_daodan, globalConst_1.default.effectTopLayer);
                GlobalFunc_1.default.globalSetZorder(sp_daodan, 5e3);
                var label_num = sp_daodan.addChild(new Laya.Label("x" + num));
                label_num.pos(50, 80);
                label_num.font = "numberFont1";
                label_num.anchorX = label_num.anchorY = .5;
                label_num.scale(.7, .7);
                var endPos = PlayerData_1.default.getItemFlyPos(globalConst_1.default.itemFlyCannon, seatIndex);
                var flyTime = 600;
                var timeLine_daodan = TimeLineManager_1.default.creatTimeLine();
                timeLine_daodan.addLabel("daodan1", 0).to(sp_daodan, {
                    scaleX: 1.2,
                    scaleY: 1.2
                }, 200).addLabel("daodan2", 0).to(sp_daodan, {
                    scaleX: 1,
                    scaleY: 1
                }, 200).addLabel("daodan3", 0).to(sp_daodan, {
                    scaleX: 1.1,
                    scaleY: 1.1
                }, 200).addLabel("daodan4", 0).to(sp_daodan, {
                    scaleX: 1,
                    scaleY: 1
                }, 200).addLabel("daodan5", 0).to(sp_daodan, {
                    scaleX: 1,
                    scaleY: 1
                }, 800).addLabel("daodan6", 0).to(sp_daodan, {
                    x: endPos.x,
                    y: endPos.y,
                    scaleX: .3,
                    scaleY: .3,
                    alpha: .5
                }, flyTime);
                timeLine_daodan.play();
                timeLine_daodan.on(Laya.Event.COMPLETE, sp_daodan, function(sp_daodan) {
                    sp_daodan.destroy();
                }, [ sp_daodan ]);
            }
            GlobalUI.dropDaoDanEff = dropDaoDanEff;
            function clearHallPicRes() {
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/activitys.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/dial.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/dragonBall.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/fishIcon.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/gift.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/hall.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/jackpotPool.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/monthCard.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/package.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/pearl.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/selectRoom.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/treasureBox.atlas");
                Laya.loader.clearTextureRes(GlobalVar_1.default.reUrl + "atlas2/vipCharge.atlas");
            }
            GlobalUI.clearHallPicRes = clearHallPicRes;
            function showBombEffect(point) {
                singleBombEffect(point, 150, 100);
                Laya.timer.once(300, this, function() {
                    singleBombEffect(point, 100, -150);
                });
                Laya.timer.once(600, this, function() {
                    singleBombEffect(point, 0, 110);
                });
            }
            GlobalUI.showBombEffect = showBombEffect;
            function singleBombEffect(point, spaceX, spaceY) {
                var sp = GlobalFunc_1.default.getGoldFishBoomEffect(new Laya.Point(point.x - spaceX, point.y - spaceY), 1.8, true);
                SceneM_1.default.addToLayer(sp, globalConst_1.default.effectTopLayer);
                var param = {
                    characterType: 2,
                    startPoint: new Laya.Point(point.x - spaceX, point.y - spaceY),
                    endPoint: PlayerData_1.default.getItemFlyPos(globalConst_1.default.itemFlyRoomCoin, FishData_1.default.mySeatIndex),
                    aniName: "goldCoinAni",
                    seat: null,
                    isCommon: true
                };
                SoundM_1.default.playSound(globalConst_1.default.Sud_pearl_bomb, 1);
                GlobalFunc_1.default.doItemFlyAni(param);
                GlobalFunc_1.default.addGlobalAni(point.x - spaceX, point.y - spaceY, globalConst_1.default.daoDanEffect, 1, 0, globalConst_1.default.effectBottomLayer, false);
            }
            GlobalUI.singleBombEffect = singleBombEffect;
            function setFishNum(isSelf, gold, posX, posY) {
                var label = new Laya.Label();
                label.font = isSelf ? globalConst_1.default.fontNum1 : globalConst_1.default.fontNum2;
                label.text = gold + "";
                label.anchorX = label.anchorY = .5;
                label.scale(.5, .5);
                label.x = posX;
                label.y = posY;
                Laya.Tween.to(label, {
                    scaleX: .96,
                    scaleY: .96
                }, 200);
                Laya.Tween.to(label, {
                    scaleX: .72,
                    scaleY: .72
                }, 160, null, null, 200);
                Laya.Tween.to(label, {
                    scaleX: .88,
                    scaleY: .88
                }, 140, null, null, 360);
                Laya.Tween.to(label, {
                    scaleX: .72,
                    scaleY: .72
                }, 100, null, null, 600);
                Laya.Tween.to(label, {
                    alpha: 1
                }, 350, null, null, 700);
                Laya.Tween.to(label, {
                    alpha: 0
                }, 300, null, Laya.Handler.create(this, function() {
                    label.destroy();
                }), 1050);
                SceneM_1.default.addToLayer(label, globalConst_1.default.effectTopLayer, posX, posY - 60);
            }
            GlobalUI.setFishNum = setFishNum;
            function initHbox(box) {
                var data = box._children;
                var target = [];
                for (var i = 0; i < data.length; i++) target.push(data[i]);
                return target;
            }
            GlobalUI.initHbox = initHbox;
        })(GlobalUI || (GlobalUI = {}));
        exports.default = GlobalUI;
    }, {
        "../common/SceneM": 19,
        "../common/SoundM": 21,
        "../datas/hallData/PlayerData": 27,
        "../datas/roomData/FishData": 30,
        "./GlobalFunc": 87,
        "./GlobalVar": 90,
        "./TimeLineManager": 95,
        "./globalConst": 97
    } ],
    90: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var globalVar;
        (function(globalVar) {
            globalVar.PLAY_SOUND_RAWARD = "playSoundRaward";
            globalVar.SPINE_SEND = "spineSend";
            globalVar.BOMB_FIRE = "bombFire";
            globalVar.ROOM_SKIN_CHANGE = "roomSkinChange";
            globalVar.ROOM_SKIN_CHANGE_BROAD = "roomSkinChangeBraod";
            globalVar.REPLAY_MUSIC = "replayMusic";
            globalVar.CLOSE_FIRSTPACKAGE_DIAN = "CloseFirstPackageDian";
            globalVar.NEW_PLAYER = "NewPlayer";
            globalVar.GET_NOTICE_SUCCESS = "getNoticeSuccess";
            globalVar.GET_FREE_GIFT_INFO_SUCCESS = "getFreeGiftInfoSuccess";
            globalVar.PLATER_INFO_NOTICE = "PlayerInfoNotice";
            globalVar.ITEM_BUY_NUM = "itemBuyNum";
            globalVar.PLAY_ROOM_TRAY_ANI = "playRoomTrayAni";
            globalVar.ROOM_SPECIAL_FISH_END = "roomSpecialFishEnd";
            globalVar.ROOM_SPECIAL_FISH_AUTO_END = "roomSpecialFishAutoEnd";
            globalVar.HONG_YUN_SCORE_UPDATE = "hongYunScoreUpdate";
            globalVar.DRAGON_BALL_BACK = "dragonBallBack";
            globalVar.DRAGON_SCORE_BOARD_POP = "dragonScoreBoardPop";
            globalVar.PEARL_MOUSE_ENABLED = "pearlUnEnabled";
            globalVar.PEARL_MOUSE_DOWN = "pearlMouseDown";
            globalVar.PEARL_ANI_COMPLETE = "pearlAniComplete";
            globalVar.PEARL_OPEN_ANI_COMPLETE = "pearlOpenAniComplete";
            globalVar.PEARL_ANI_POP_COMPLETE = "pearlAniPopComplete";
            globalVar.HWBZ_START_GAME = "hwbzStartGame";
            globalVar.HWBZ_CLICK_EVENT = "hwbzClickEvent";
            globalVar.JACKPOT_CHANGE_PAO = "jackpotChangePao";
            globalVar.NOTICE_YESTERDAY_GOLD = "noticeYesterDayGold";
            globalVar.NOTICE_YESTERDAY_DONE = "noticeYesterDayDone";
            globalVar.GET_ROOM_MAX = "getRoomMax";
            globalVar.CHANGE_ROOM_HELP_STATE = "changeRoomHelpState";
            globalVar.DELETE_ACTIVITY_TAB = "deleteActivityTab";
            globalVar.ITEM_BUY = "buyItem";
            globalVar.ITEM_ZENG_SONG = "zengSong";
            globalVar.UPDATE_PLAYER_DATA = "upDatePlayerData";
            globalVar.GATE_LOGIN_SUC_NOTICE = "GATE_LOGIN_SUC_NOTICE";
            globalVar.ITEM_INFO_INIT = "ITEM_INFO_INIT";
            globalVar.CONFIG_INFO_NOTICE = "config_info_notice";
            globalVar.COMMODITY_BUY = "CommodityBuy";
            globalVar.NEWUSERPACK_BUY = "newbie";
            globalVar.LIMITTIMEPACK_BUY = "limitPack";
            globalVar.INVITEDATAREFRESH = "inviteDataFresh";
            globalVar.ITEM_ZENG_SONG_NOTICE = "zengSongResp";
            globalVar.ITEM_BUY_NOTICE = "buyItemResp";
            globalVar.COMMODITY_PAY_OK = "PayOK";
            globalVar.COMMODITY_PAY_FALSE = "PayOK";
            globalVar.DATA_VIP_INFO = "VipInfo";
            globalVar.VIP_EXP_UP = "vipExpUp";
            globalVar.VIP_UP = "VipUp";
            globalVar.REWARD_OPEN = "RewardOpen";
            globalVar.UPDATA_MAIL_NUM = "updataMailnum";
            globalVar.MY_RES = "MyRes";
            globalVar.ADD_NOTICE_TO_LIST = "LEDMsg";
            globalVar.BASE_TASK_INFO = "baseTaskinfo";
            globalVar.TASK_SCHEDULE = "taskschedule";
            globalVar.UPDATE_TASK = "updatetask";
            globalVar.LIMITTIMEPACK_END = "limitTimeOver";
            globalVar.WX_ONSHOW = "wxOnshow";
            globalVar.WX_ONHIDE = "wxOnhide";
            globalVar.ROOM_USER_LOGIN = "QuickEnter";
            globalVar.ROOM_FISHLINE = "FishLine";
            globalVar.ROOM_LEAVEROOM = "LeaveRoom";
            globalVar.RUN_CALL_BACK = "RunCallBack";
            globalVar.ROOM_SHOOT = "Shoot";
            globalVar.ROOM_HIT = "Hit";
            globalVar.ROOM_UPGRADE_PAO = "UpgradePao";
            globalVar.ROOM_UPGRADE_ALL = "UpgradePaoAttach";
            globalVar.ROOM_ALTER_PAO = "AlterPao";
            globalVar.ROOM_LOCK_SHOOT = "LockAim";
            globalVar.ROOM_RAGE_SHOOT = "Rage";
            globalVar.ROOM_FREEZE_SHOOT = "Freeze";
            globalVar.LOTTERY_DRAW = "Lottery";
            globalVar.LOTTERY_CLEAR_INTEGRAL = "clearPlayerIntegral";
            globalVar.ROOM_FREEZE_STOP = "FreezeOver";
            globalVar.ROOM_IS_GET_RELIVE = "isGetRelive";
            globalVar.ROOM_SPECIAL_BOOM_FISH = "FishBomb";
            globalVar.REFRESH_BOSS = "RefreshBoss";
            globalVar.ROOM_SPECIAL_ZUANTOU_FISH = "ZuantouBomb";
            globalVar.ROOM_WATCH_VIDEO = "WatchVideo";
            globalVar.HUA_FEI_TI_SHI = "huafeiTishi";
            globalVar.LOGIN_ROULETTE_REWARD = "LoginRouletteReward";
            globalVar.HALL_DEBRISE_COMPOSE = "hallDebriseCompose";
            globalVar.LEAVE_ROOM_SUCCESS = "leave_room_success";
            globalVar.ENTER_ROOM_SUCCESS = "enter_room_success";
            globalVar.ENTER_ROOM_FAIL = "enter_room_fail";
            globalVar.NET_OVER = "net_over";
            globalVar.NET_ON = "net_on";
            globalVar.ROOM_FISHRESOK_NOTICE = "ROOM_FISHRESOK_NOTICE";
            globalVar.ROOM_LOCK_SHOOT_NOTICE = "ROOM_LOCK_SHOOT_NOTICE";
            globalVar.ROOM_RAGE_SHOOT_NOTICE = "ROOM_RAGE_SHOOT_NOTICE";
            globalVar.ROOM_FREEZE_SHOOT_NOTICE = "ROOM_FREEZE_SHOOT_NOTICE";
            globalVar.ROOM_FREEZE_STOP_NOTICE = "ROOM_FREEZE_STOP_NOTICE";
            globalVar.ROOM_LOCK_STOP_NOTICE = "ROOM_LOCK_STOP_NOTICE";
            globalVar.ROOM_RAGE_STOP_NOTICE = "ROOM_RAGE_STOP_NOTICE";
            globalVar.DAO_DAN_BOMB = "Bomb";
            globalVar.BIT_BOOM = "bitBoom";
            globalVar.ADDRESS_SET_SUCCESS = "addressSetSuccess";
            globalVar.REQ_ADDRESS_SUCCESS = "reqAddressSuccess";
            globalVar.COUNT_VIEW_CHANGE = "countViewChange";
            globalVar.REFRESH_SKILL_LIST = "refreshSkillList";
            globalVar.ROOM_USE_ITEM_NOTICE = "roomUseItemNotice";
            globalVar.ROOM_USE_DAO_DAN_NOTICE = "roomUseDaoDanNotice";
            globalVar.ROOM_CHANGE_DRAGON_CANNON_START = "roomChangeDragonCannonStart";
            globalVar.ROOM_CHANGE_DRAGON_CANNON_END = "roomChangeDragonCannonEnd";
            globalVar.CLOSE_FISH_SCENE_VIEW = "closeFishSceneView";
            globalVar.REFRESH_COMPOSE = "refreshCompose";
            globalVar.HY_CHANGE = "hyChange";
            globalVar.LAST_BULLET_VIEW_OPEN = "lastBulletViewOpen";
            globalVar.HEART_BEAT = "heartBeat";
            globalVar.GET_HALL_COIN_POS = "getHallCoinPos";
            globalVar.SEND_HALL_COIN_POS = "sendHallCoinPos";
            globalVar.UPDATE_ITEMS_NUM_FROM_PLAYERDATA = "update_items_num_from_playerData";
            globalVar.TOMORROW_GOT = "tomorrowGot";
            globalVar.TOMORROW_SEND = "tomorrowSend";
            globalVar.GETMONTHREWARD = "getMonthReward";
            globalVar.CHANGE_AUTO_PAO_STATE = "change_autoPao_state";
            globalVar.YAO_YI_YAO = "yaoyiyao";
            globalVar.CLOSE_MYSEAT_ANI = "CloseMySeatAni";
            globalVar.MARQUEE_BROAD_MSG = "MarqueeBroadMsg";
            globalVar.YAO_CHANGE = "yaoChange";
            globalVar.SHARE_ADD = "shareAdd";
            globalVar.SHARE_REWARD = "shareReward";
            globalVar.CHANGEDAY = "changeDay";
            globalVar.isMe = true;
            globalVar.disableSound = false;
            globalVar.showLog = true;
            globalVar.isOutVersion = false;
            globalVar.zipDownVer = false;
            globalVar.isShenHe = true;
            globalVar.phoneBrand = "";
            globalVar.phoneSystem = "";
            globalVar.channelId = "";
            globalVar.hasGetNotice = false;
            globalVar.isWxGranted = undefined;
            globalVar.ITEM_GOLD = "1";
            globalVar.ITEM_DMD = "2";
            globalVar.soundType = ".mp3";
            globalVar.isOpenTeamLog = false;
            globalVar.isDevelopMode = false;
            globalVar.isTestBtnOpen = false;
            globalVar.isNewUserWx = false;
            globalVar.lastAldTime = 0;
            globalVar.lastAldTimeNew = 0;
            globalVar.lastZip1 = 0;
            globalVar.lastZip2 = 0;
            globalVar.aldStr = "";
            globalVar.isNewZipUser = false;
            globalVar.needSh = false;
        })(globalVar || (globalVar = {}));
        exports.default = globalVar;
    }, {} ],
    91: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var MarqueeNode_1 = require("../rolesNodes/otherNodes/MarqueeNode");
        var SceneM_1 = require("../common/SceneM");
        var globalConst_1 = require("./globalConst");
        var EventDis_1 = require("./EventDis");
        var GlobalVar_1 = require("./GlobalVar");
        var OnOffManager_1 = require("./OnOffManager");
        var ConfigerHelper_1 = require("./ConfigerHelper");
        var GameData_1 = require("../datas/hallData/GameData");
        var MarqueeManager = function() {
            function MarqueeManager() {
                this.marqueeType = {};
                this.marqueeArray = {};
                this.timespan = 0;
                this.isNetOff = false;
            }
            MarqueeManager.prototype.init = function() {
                var _this = this;
                this.loadMarqueeJson();
                EventDis_1.default.addEvntListener(GlobalVar_1.default.NET_OVER, this, function() {
                    _this.isNetOff = true;
                    Laya.timer.clearAll(_this);
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.NET_ON, this, function() {
                    _this.isNetOff = false;
                    GameData_1.default.isGameStart && _this.getRateData();
                });
            };
            MarqueeManager.prototype.playMarquee = function(data) {
                if (!this.marqueeNode || this.marqueeNode.destroyed) {
                    this.marqueeNode = undefined;
                    this.marqueeNode = new MarqueeNode_1.default();
                }
                if (!!!this.marqueeNode.parent) {
                    SceneM_1.default.addToLayer(this.marqueeNode, globalConst_1.default.broadCastLayer);
                    !this.marqueeNode.isPlaying && this.marqueeNode.setAndPlayMarquee([ {
                        text: "欢迎来到捕鱼侠3D,游戏内禁止赌博,文明游戏，祝游戏愉快!",
                        color: "blue"
                    } ], data.play_second);
                    return;
                }
                !this.marqueeNode.isPlaying && this.marqueeNode.setAndPlayMarquee(data.contents, data.play_second);
            };
            MarqueeManager.prototype.loadMarqueeJson = function() {
                var json = ConfigerHelper_1.default.getFileData("config/paomadeng.json");
                if (json) {
                    this.initMarqueeArray(json.desc);
                    this.initMarqueeTypeText(json.text);
                    this.playerName = json.nickname;
                    this.timespan = +json.timespan[0].timespan * 1e3;
                }
            };
            MarqueeManager.prototype.initMarqueeArray = function(data) {
                for (var index = 0; index < data.length; index++) {
                    var marqueeData = data[index];
                    if (!this.marqueeArray[marqueeData.type]) {
                        this.marqueeArray[marqueeData.type] = {};
                        this.marqueeArray[marqueeData.type]["array"] = new Array();
                        this.marqueeArray[marqueeData.type]["typeRate"] = marqueeData.weight;
                        this.marqueeArray[marqueeData.type]["type"] = marqueeData.type;
                    }
                    this.marqueeArray[marqueeData.type].array.push(marqueeData);
                }
            };
            MarqueeManager.prototype.initMarqueeTypeText = function(data) {
                for (var index = 0; index < data.length; index++) {
                    var text = data[index];
                    this.marqueeType[index + 1 + ""] = text;
                }
            };
            MarqueeManager.prototype.getRateData = function() {
                if (!OnOffManager_1.default.isMarquee) return;
                var typeRate = Math.floor(Math.random() * 1e4);
                var useType = "";
                var _rateNum = 0;
                for (var key in this.marqueeArray) {
                    var typeArr = this.marqueeArray[key];
                    _rateNum += +typeArr.typeRate;
                    if (typeRate <= _rateNum) {
                        useType = typeArr.type;
                        break;
                    }
                }
                var useTypeArray = this.marqueeArray[useType].array;
                var marqueeRate = Math.floor(Math.random() * 1e4);
                var _marqueeNum = 0;
                for (var index = 0; index < useTypeArray.length; index++) {
                    var inData = useTypeArray[index];
                    _marqueeNum += +inData.rate;
                    if (marqueeRate <= _marqueeNum) {
                        var marquee = this.addMarquee(inData);
                        this.playMarquee({
                            contents: marquee,
                            play_second: 20,
                            level: 1
                        });
                        return;
                    }
                }
            };
            MarqueeManager.prototype.addMarquee = function(data) {
                var textData = this.marqueeType[data.type];
                var arr = new Array();
                var playerNameRandom = Math.floor(Math.random() * 1e3);
                var playerName = this.playerName[playerNameRandom];
                if (data.type == "1") {
                    arr.push({
                        text: playerName.nickname,
                        color: "yellow"
                    });
                    arr.push({
                        text: textData.text1,
                        color: "white"
                    });
                    arr.push({
                        text: data.green,
                        color: "green"
                    });
                    arr.push({
                        text: textData.text2,
                        color: "white"
                    });
                } else {
                    arr.push({
                        text: playerName.nickname,
                        color: "yellow"
                    });
                    arr.push({
                        text: textData.text1,
                        color: "white"
                    });
                    arr.push({
                        text: data.blue,
                        color: "blue"
                    });
                    arr.push({
                        text: textData.text2,
                        color: "white"
                    });
                    arr.push({
                        text: data.red,
                        color: "red"
                    });
                    arr.push({
                        text: textData.text3,
                        color: "white"
                    });
                    arr.push({
                        text: data.green,
                        color: "green"
                    });
                    arr.push({
                        text: textData.text4,
                        color: "white"
                    });
                }
                return arr;
            };
            MarqueeManager.prototype.loopToPlay = function() {
                !this.isNetOff && Laya.timer.once(this.timespan, this, this.getRateData);
            };
            MarqueeManager.Instance = new MarqueeManager();
            return MarqueeManager;
        }();
        var g_MarqueeManager;
        g_MarqueeManager = MarqueeManager.Instance;
        exports.default = g_MarqueeManager;
    }, {
        "../common/SceneM": 19,
        "../datas/hallData/GameData": 26,
        "../rolesNodes/otherNodes/MarqueeNode": 125,
        "./ConfigerHelper": 84,
        "./EventDis": 85,
        "./GlobalVar": 90,
        "./OnOffManager": 93,
        "./globalConst": 97
    } ],
    92: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalFunc_1 = require("./GlobalFunc");
        var MathFunc;
        (function(MathFunc) {
            function getFishsInCircle(x, y, radius, fishes) {
                var fish_ids = [];
                for (var i in fishes) {
                    var fish = fishes[i];
                    if (GlobalFunc_1.default.pGetDistance({
                        x: x,
                        y: y
                    }, fish) <= radius) fish_ids.push(fish.fishUniqId);
                }
                return fish_ids;
            }
            MathFunc.getFishsInCircle = getFishsInCircle;
        })(MathFunc || (MathFunc = {}));
        exports.default = MathFunc;
    }, {
        "./GlobalFunc": 87
    } ],
    93: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var OnOffManager;
        (function(OnOffManager) {
            OnOffManager.isSkillOn = false;
            OnOffManager.isBullet = true;
            OnOffManager.isLongPaoOn = true;
            OnOffManager.isLeftBoxOn = true;
            OnOffManager.isRewardOn = true;
            OnOffManager.isBubbleEffOn = true;
            OnOffManager.isFishMapOn = true;
            OnOffManager.isJackPotOn = false;
            OnOffManager.isGuideOn = true;
            OnOffManager.isRotate = true;
            OnOffManager.isMarquee = true;
            OnOffManager.isVipOn = true;
            OnOffManager.isActivityOn = false;
            OnOffManager.isExchangeOn = true;
            OnOffManager.isMailOn = true;
            OnOffManager.isPackageOn = true;
            OnOffManager.isPlayerInfoOn = false;
            OnOffManager.isRankListOn = true;
            OnOffManager.isRankWarOn = false;
            OnOffManager.isShopOn = true;
            OnOffManager.isShare = false;
            OnOffManager.isMenu = true;
            OnOffManager.isFree = true;
            OnOffManager.isService = true;
            OnOffManager.isNotice = true;
            OnOffManager.isHelp = true;
            OnOffManager.isRebate = true;
            OnOffManager.isInvite = true;
            OnOffManager.isReserve = false;
            OnOffManager.isLuck = false;
            OnOffManager.isWhole = true;
            OnOffManager.isSpceialView = true;
            OnOffManager.isShake = false;
            OnOffManager.isTomorrom = false;
            OnOffManager.isGiftOn = false;
            OnOffManager.isGIftSp = false;
            OnOffManager.isMonthCardOn = false;
            OnOffManager.isChargeOn = true;
            OnOffManager.isShenheOn = false;
            OnOffManager.isPhoneBillOn = true;
            OnOffManager.isDateActivelOn = false;
            OnOffManager.isGoldPagOn = false;
            OnOffManager.isGongZhongHaoOn = true;
            OnOffManager.isVipConfirmOn = false;
        })(OnOffManager || (OnOffManager = {}));
        exports.default = OnOffManager;
    }, {} ],
    94: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var StringFunc;
        (function(StringFunc) {
            function getObjLen(obj) {
                return !!obj ? Object.keys(obj).length : 0;
            }
            StringFunc.getObjLen = getObjLen;
            function isContainStr(str1, strArr) {
                if (!str1 || !strArr) return false;
                for (var key in strArr) if (str1.indexOf(key) >= 0) return true;
                return false;
            }
            StringFunc.isContainStr = isContainStr;
        })(StringFunc || (StringFunc = {}));
        exports.default = StringFunc;
    }, {} ],
    95: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var TimeLineManager = function() {
            function TimeLineManager() {
                this.timeLines = {};
                this.timeLinesNum = 0;
                this.timeLinescnt = 0;
            }
            TimeLineManager.prototype.init = function() {
                this.timeLinescnt = 0;
                this.timeLinesNum = 0;
                this.timeLines = {};
            };
            TimeLineManager.prototype.creatTimeLine = function(loop) {
                if (loop === void 0) loop = false;
                this.timeLines[this.timeLinescnt] = Laya.Pool.getItemByClass("timeLine", Laya.TimeLine);
                this.timeLines[this.timeLinescnt].name = this.timeLinescnt;
                !loop && this.timeLines[this.timeLinescnt].on(Laya.Event.COMPLETE, this, function(index) {
                    delete this.timeLines[index];
                }, [ this.timeLinescnt ]);
                return this.timeLines[this.timeLinescnt++];
            };
            TimeLineManager.prototype.clearTimeLines = function() {
                for (var i in this.timeLines) this.timeLines[i].reset();
                this.timeLines = {};
            };
            TimeLineManager.Instance = new TimeLineManager();
            return TimeLineManager;
        }();
        var g_timeLines;
        g_timeLines = TimeLineManager.Instance;
        exports.default = g_timeLines;
    }, {} ],
    96: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalFunc_1 = require("./GlobalFunc");
        var GlobalVar_1 = require("./GlobalVar");
        var EventDis_1 = require("./EventDis");
        var WxFuncs;
        (function(WxFuncs) {
            function isDirExistSyn(path) {
                try {
                    GlobalVar_1.default.fswx.accessSync(path);
                    return true;
                } catch (err) {
                    return false;
                }
            }
            WxFuncs.isDirExistSyn = isDirExistSyn;
            function isDirExist(path, callBack) {
                GlobalVar_1.default.fswx.access({
                    path: path,
                    success: function() {
                        if (callBack) callBack(true);
                    },
                    fail: function() {
                        if (callBack) callBack(false);
                    },
                    complete: function() {}
                });
            }
            WxFuncs.isDirExist = isDirExist;
            function copyFile(param) {
                GlobalVar_1.default.fswx.copyFile({
                    srcPath: param.remotePath,
                    destPath: param.localPath,
                    success: function(evt) {
                        if (param.callBack) param.callBack(true);
                    },
                    fail: function(evt) {
                        if (param.callBack) param.callBack(false);
                    }
                });
            }
            WxFuncs.copyFile = copyFile;
            function getFileList(path) {
                var arr;
                try {
                    return GlobalVar_1.default.fswx.readdirSync(path);
                } catch (err) {
                    GlobalFunc_1.default.log("获取文件列表，目录不存在", path);
                    return false;
                }
            }
            WxFuncs.getFileList = getFileList;
            function logRecFileList(filePath) {
                var deletePath = filePath;
                var fileList = getFileList(filePath);
                if (!fileList) return;
                for (var index = 0; index < fileList.length; index++) {
                    var element = fileList[index];
                    var name = filePath + element + "/";
                    if (element.indexOf(".") > -1) GlobalFunc_1.default.log(name); else {
                        GlobalFunc_1.default.log(name);
                        getFileList(name);
                    }
                }
            }
            WxFuncs.logRecFileList = logRecFileList;
            function mkdirSync(path) {
                try {
                    GlobalVar_1.default.fswx.mkdirSync(path, true);
                    GlobalFunc_1.default.log("创建目录成功" + path);
                } catch (err) {
                    GlobalFunc_1.default.log("建立目录失败:", err);
                    return false;
                }
            }
            WxFuncs.mkdirSync = mkdirSync;
            function renameSync(path) {
                try {
                    GlobalVar_1.default.fswx.renameSync(path, true);
                } catch (err) {
                    GlobalFunc_1.default.log("重命名文件失败:", err);
                    return false;
                }
            }
            WxFuncs.renameSync = renameSync;
            function removefiles(filePath, isfirst) {
                var deletePath = filePath;
                var fileList = getFileList(filePath);
                if (!fileList) return;
                for (var index = 0; index < fileList.length; index++) {
                    var element = fileList[index];
                    if (element.indexOf(".") > -1) {
                        GlobalFunc_1.default.log("delf", filePath + element);
                        GlobalVar_1.default.fswx.unlinkSync(filePath + "/" + element);
                    } else removefiles(filePath + "/" + element, false);
                }
                if (isfirst) Laya.timer.once(500, null, function() {
                    GlobalVar_1.default.fswx.rmdirSync(filePath, true);
                });
            }
            WxFuncs.removefiles = removefiles;
            function downFile(index) {
                var desPath = GlobalVar_1.default.localZipPaths[index];
                var sourcePath = GlobalVar_1.default.downUrls[index];
                GlobalFunc_1.default.log("开始下载", sourcePath, desPath);
                var downloadTask = wx.downloadFile({
                    url: sourcePath,
                    filePath: desPath,
                    success: function(res) {
                        GlobalFunc_1.default.log(res);
                        if (res.statusCode === 200) {
                            GlobalFunc_1.default.log("下载成功", index);
                            EventDis_1.default.dispatchEvent("downOneZipOk", {
                                index: index,
                                isSuc: true
                            });
                        }
                    },
                    fail: function(evt) {
                        GlobalFunc_1.default.log("下载失败：" + evt.errMsg, index);
                        EventDis_1.default.dispatchEvent("downOneZipOk", {
                            index: index,
                            isSuc: false
                        });
                    }
                });
                var count = 0;
                downloadTask.onProgressUpdate(function(res) {});
            }
            WxFuncs.downFile = downFile;
            function unzipOneFile(index, zipFilePath, targetPath) {
                GlobalVar_1.default.fswx.unzip({
                    zipFilePath: zipFilePath,
                    targetPath: targetPath,
                    success: function(evt) {
                        GlobalFunc_1.default.log("解压完毕", index);
                        EventDis_1.default.dispatchEvent("unZipOneOk", {
                            index: index,
                            isSuc: true
                        });
                    },
                    fail: function(evt) {
                        GlobalFunc_1.default.log("解压取消" + evt.errMsg, index, zipFilePath);
                        return;
                        EventDis_1.default.dispatchEvent("unZipOneOk", {
                            index: index,
                            isSuc: false
                        });
                    }
                });
            }
            WxFuncs.unzipOneFile = unzipOneFile;
        })(WxFuncs || (WxFuncs = {}));
        exports.default = WxFuncs;
    }, {
        "./EventDis": 85,
        "./GlobalFunc": 87,
        "./GlobalVar": 90
    } ],
    97: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalConst = function() {
            function GlobalConst() {}
            GlobalConst.zipName = "test";
            GlobalConst.clientVer = "1.2.5";
            GlobalConst.accActionInterval = 50;
            GlobalConst.phpUrl = "http://10.246.95.153/";
            GlobalConst.phpUrlOut = "https://bfby.gameabc2.com/";
            GlobalConst.loginUrl151 = "http://10.246.95.151/login";
            GlobalConst.loginUrl152 = "https://10.246.95.152:14000/login";
            GlobalConst.loginUrlWanmiao = "https://10.244.105.71:14000/login";
            GlobalConst.loginUrlDongyanan = "https://10.244.105.42:14000/login";
            GlobalConst.loginUrlJin = "https://10.244.105.66:14000/login";
            GlobalConst.loginUrlOutQa = "https://dmzbuyu.gameabc2.com/qa/svr/login";
            GlobalConst.loginUrlOutForm = "https://dmzonline.gameabc2.com/buyuxia/svr/login";
            GlobalConst.httpUrl = "";
            GlobalConst.localChannel = "1100";
            GlobalConst.newJson = {};
            GlobalConst.noticeUrl151 = "http://10.246.95.151/announcement";
            GlobalConst.noticeUrlOutQa = "https://dmzbuyu.gameabc2.com/qa/svr/announcement";
            GlobalConst.orderUrl151 = "http://10.246.95.151/pay/get_order_id";
            GlobalConst.orderUrl151Check = "http://10.246.95.151/pay/pay_order_by_id_nocheck";
            GlobalConst.mainEntryUrl1 = "https://bfbyres.gameabc2.com/mainEntry.json?v=";
            GlobalConst.mainEntryUrQA = "https://dmzbuyu.gameabc2.com/qa/client/mainEntry.json?v=";
            GlobalConst.mainEntryUrForm = "https://dmzresonline.gameabc2.com/mainEntry.json?v=";
            GlobalConst.bgLayer = "bgLayer";
            GlobalConst.hallBtnLayer = "hallBtnLayer";
            GlobalConst.uiLayer = "uiLayer";
            GlobalConst.roLayer = "roLayer";
            GlobalConst.freezeLayer = "freezeLayer";
            GlobalConst.bulletLayer = "bulletLayer";
            GlobalConst.btnsLayer = "btnsLayer";
            GlobalConst.cannonLayer = "cannonLayer";
            GlobalConst.effectLayer = "effectLayer";
            GlobalConst.effectBottomLayer = "effectBottomLayer";
            GlobalConst.effectTopLayer = "effectTopLayer";
            GlobalConst.testLayer = "testLayer";
            GlobalConst.maskLayer = "maskLayer";
            GlobalConst.dialogLayer = "dialogLayer";
            GlobalConst.broadCastLayer = "broadCastLayer";
            GlobalConst.frontDialogLayer = "frontDialogLayer";
            GlobalConst.fontNum1 = "numberFont1";
            GlobalConst.fontNum2 = "numberFont2";
            GlobalConst.fontNum3 = "numberFont3";
            GlobalConst.fontNum4 = "numberFont4";
            GlobalConst.fontNum5 = "numberFont5";
            GlobalConst.fontNum6 = "numberFont6";
            GlobalConst.iosSystem = "iOS";
            GlobalConst.iosBrand = "iPhone";
            GlobalConst.maxFishNum = 38;
            GlobalConst.maxFishFrame = 60;
            GlobalConst.globalFishSpeed = 2;
            GlobalConst.room1BossMaxSore = 500;
            GlobalConst.room2BossMaxSore = 650;
            GlobalConst.room3BossMaxSore = 800;
            GlobalConst.room4BossMaxSore = 500;
            GlobalConst.maxBulletFrame = 13;
            GlobalConst.maxBulletNum = 40;
            GlobalConst.autoShootInterval = 200;
            GlobalConst.netAniName = "boom2";
            GlobalConst.honyunAniName = "boomHy";
            GlobalConst.daoDanEffect = "daoDanEffect";
            GlobalConst.bombFishEffect1 = "bombFishEffect1";
            GlobalConst.bombFishEffect2 = "bombFishEffect2";
            GlobalConst.zuantouHit = "zuantouHit";
            GlobalConst.lockInterVal = 200;
            GlobalConst.rageInterVal1 = 170;
            GlobalConst.rageInterVal2 = 140;
            GlobalConst.maxWaitFireTime = 5 * 60 * 1e3;
            GlobalConst.bitBoomRadius = 500;
            GlobalConst.bitFlyTime1 = 15e3;
            GlobalConst.bitFlyTime2 = 5e3;
            GlobalConst.bitFlySpeed1 = 15e3;
            GlobalConst.bitFlySpeed2 = 5e3;
            GlobalConst.bitCountDownSec = 15;
            GlobalConst.haiWangJiange = 200;
            GlobalConst.haiWangTime = 30;
            GlobalConst.specialFishStartTime = 15;
            GlobalConst.specialFishEndTime = 90;
            GlobalConst.reduce = -1;
            GlobalConst.whit = 0;
            GlobalConst.plus = 1;
            GlobalConst.gold = 1;
            GlobalConst.diamond = 2;
            GlobalConst.zibi = 3;
            GlobalConst.ticket = 4;
            GlobalConst.buy = "购买";
            GlobalConst.give = "赠送";
            GlobalConst.renew = "续费";
            GlobalConst.number = 0;
            GlobalConst.numberHave = 1;
            GlobalConst.infinite = -1;
            GlobalConst.noEquipment = 3;
            GlobalConst.haveEquipment = 4;
            GlobalConst.equipped = 5;
            GlobalConst.gameItemIDStart = 1;
            GlobalConst.gameItemIDEnd = 300;
            GlobalConst.netItemIDStart = 301;
            GlobalConst.netItemIDEnd = 400;
            GlobalConst.entityIDStart = 401;
            GlobalConst.entityIDEnd = 500;
            GlobalConst.monthlyCard = "monthcard";
            GlobalConst.newPlayerBag = "newBiePack";
            GlobalConst.newPlayerBagBuy = "newbie";
            GlobalConst.goldCoinComm = "gold_shop";
            GlobalConst.diamondsComm = "zuan_shop";
            GlobalConst.limitTimePacks = "limitPacks";
            GlobalConst.limitTimePacksBuy = "buyPack";
            GlobalConst.qihangID = "30";
            GlobalConst.firstPayID = "20";
            GlobalConst.commGoldStart = 110;
            GlobalConst.commGoldEnd = 1e3;
            GlobalConst.commdiamondStart = 1001;
            GlobalConst.commdiamondEnd = 2e3;
            GlobalConst.giftBag_Sv1 = 50100;
            GlobalConst.giftBag_Sv2 = 50200;
            GlobalConst.giftBag_Sv3 = 50300;
            GlobalConst.giftBag_Sv4 = 50400;
            GlobalConst.hongBaoIdMin = 80100;
            GlobalConst.hongBaoIdMax = 80500;
            GlobalConst.maxItemNum = 5;
            GlobalConst.onlyInterval = 150;
            GlobalConst.doubleInterval = 200;
            GlobalConst.man = 0;
            GlobalConst.woman = 1;
            GlobalConst.ENTITY = "entity";
            GlobalConst.NETITEM = "netItem";
            GlobalConst.GAMEITEM = "gameItem";
            GlobalConst.OPEN = 1;
            GlobalConst.CLOSE = 0;
            GlobalConst.Sud_bg_hall = "sound/bg_hall";
            GlobalConst.Sud_bg_king = "sound/bg_king";
            GlobalConst.Sud_room1 = "sound/room1";
            GlobalConst.Sud_room2 = "sound/room2";
            GlobalConst.Sud_room3 = "sound/room5";
            GlobalConst.Sud_click = "sound/click";
            GlobalConst.Sud_fire = "sound/fire";
            GlobalConst.Sud_Boss_stage = "sound/Boss_stage";
            GlobalConst.Sud_bubble = "sound/bubble";
            GlobalConst.Sud_reward = "sound/reward";
            GlobalConst.Sud_CaiJinSound = "sound/CaiJinSound";
            GlobalConst.Sud_cannon_bomb = "sound/cannon_bomb";
            GlobalConst.Sud_getGold = "sound/getGold";
            GlobalConst.Sud_getDiamond = "sound/getDiamond";
            GlobalConst.Sud_NPC_OS_01 = "sound/NPC_OS_01";
            GlobalConst.Sud_NPC_OS_02 = "sound/NPC_OS_02";
            GlobalConst.Sud_result_MiniWin = "sound/result_MiniWin";
            GlobalConst.Sud_Choice_bs = "sound/Choice_bs";
            GlobalConst.Sud_long_light = "sound/long_light";
            GlobalConst.Sud_beishu_fly = "sound/beishu_fly";
            GlobalConst.Sud_count_down = "sound/count_down";
            GlobalConst.Sud_bx_gold = "sound/bx_gold";
            GlobalConst.Sud_turn_gem = "sound/turn_gem";
            GlobalConst.Sud_turn_stop = "sound/turn_stop";
            GlobalConst.Sud_turntable_stop = "sound/turntable_stop";
            GlobalConst.Sud_click_shell = "sound/click_shell";
            GlobalConst.Sud_pearl_bomb = "sound/pearl_bomb";
            GlobalConst.Sud_drill_addgun = "sound/drill_addgun";
            GlobalConst.Sud_drill_bomb = "sound/drill_bomb";
            GlobalConst.Sud_drill_bound = "sound/drill_bound";
            GlobalConst.Sud_drill_ready = "sound/drill_ready";
            GlobalConst.Sud_drill_shoot = "sound/drill_shoot";
            GlobalConst.Sud_drill_title = "sound/drill_title";
            GlobalConst.Sud_drill_uncon = "sound/drill_uncon";
            GlobalConst.Sud_get_Firestorm = "sound/get_Firestorm";
            GlobalConst.Sud_storm_addgun = "sound/storm_addgun";
            GlobalConst.Sud_storm_shoot = "sound/storm_shoot";
            GlobalConst.Sud_storm_title = "sound/storm_title";
            GlobalConst.Sud_LuckyWheel_Start = "sound/LuckyWheel_Start";
            GlobalConst.Sud_LuckyWheel_Unlock = "sound/LuckyWheel_Unlock";
            GlobalConst.Sud_fishDead_0 = "sound/death1";
            GlobalConst.Sud_fishDead_1 = "sound/death2";
            GlobalConst.Sud_fishDead_2 = "sound/death3";
            GlobalConst.Sud_fishDead_3 = "sound/v002";
            GlobalConst.Sud_fishDead_4 = "sound/v004";
            GlobalConst.Sud_fishDead_5 = "sound/v007";
            GlobalConst.Sud_fishDead_6 = "sound/v0012";
            GlobalConst.initVolumeNum = .1;
            GlobalConst.HongYunSkin = "hongYun/hong_yun_001.png";
            GlobalConst.RoomMenu = "roomMenu";
            GlobalConst.RoomBottonCharge = "RoomBottonCharge";
            GlobalConst.RoomPao = "RoomPao";
            GlobalConst.RoomDaoDan = "RoomDaoDan";
            GlobalConst.RoomSkill = "RoomSkill";
            GlobalConst.RoomPackage = "RoomPackage";
            GlobalConst.RoomShop = "RoomShop";
            GlobalConst.RoomOpenBag = "RoomOpenBag";
            GlobalConst.ButtleSessUnused = -100;
            GlobalConst.bitFishId = 240;
            GlobalConst.hongyunFishId = 250;
            GlobalConst.baoxiangFishId = 260;
            GlobalConst.beikeFishId = 270;
            GlobalConst.zhuanpanFishId = 280;
            GlobalConst.longzhuFishId = 290;
            GlobalConst.stageW = 1630;
            GlobalConst.stageH = 750;
            GlobalConst.downloadTips = [ "加载配置中…", "正在下载游戏资源…", "正在解压和安装中…(不消耗流量)", "正在授权中…(不消耗流量)", "正在进入游戏..." ];
            GlobalConst.downloadTips1 = [ "加载配置中…", "正在下载游戏资源…", "正在解压和安装中…(不消耗流量)", "正在授权中…(不消耗流量)", "正在进入游戏..." ];
            GlobalConst.downloadFailTips = [ "网络不给力哦，请检查网络后再开启游戏", "您的网络开小差了，请重新连接" ];
            GlobalConst.buyFlag = 0;
            GlobalConst.ShareDmd = "shareDmd";
            GlobalConst.ShareGold = "shareGold";
            GlobalConst.ShareAutoPao = "shareAutoPao";
            GlobalConst.ShareFreeDmd = "shareFreeDmd";
            GlobalConst.ShareSignIn = "shareSignIn";
            GlobalConst.rewardPaobei = "rewardPaobei";
            GlobalConst.rewardSkill = "rewardSkill";
            GlobalConst.rewardAlms = "rewardAlms";
            GlobalConst.rewardAutoPao = "rewardAutoPao";
            GlobalConst.rewardFreeDmd = "rewardFreeDmd";
            GlobalConst.rewardSignIn = "rewardSignIn";
            GlobalConst.getRewardPaoBei = 302500;
            GlobalConst.getRewardSkill = 302600;
            GlobalConst.getRewardAutoPao = 302700;
            GlobalConst.getRewardAlms = 302800;
            GlobalConst.getRewardViewPaoBei = 303500;
            GlobalConst.getRewardViewSkill = 303600;
            GlobalConst.getRewardViewAlms = 303800;
            GlobalConst.isFreezeCanUse = true;
            GlobalConst.isLeaveDialogOn = false;
            GlobalConst.firstShareTime = 2500;
            GlobalConst.secondShareTime = 2e3;
            GlobalConst.thirdShareTime = 0;
            GlobalConst.isRedPacket = true;
            GlobalConst.hbRatio = 100;
            GlobalConst.olduid = 12300;
            GlobalConst.defaultHead = "common/img_toux.png";
            GlobalConst.giftSortValue = 1e6;
            GlobalConst.freezeFlag = true;
            GlobalConst.lockFlag = true;
            GlobalConst.rageFlag = true;
            GlobalConst.newUserFishArr = [ "fish001", "fish002", "fish006", "fish009", "fish030", "fish10001" ];
            GlobalConst.DIA_PACKAGE = "package";
            GlobalConst.DIA_RANKLIST = "ranking";
            GlobalConst.DIA_RANKINGWAR = "rankingWar";
            GlobalConst.DIA_NOTICE = "notice";
            GlobalConst.DIA_SHOP = "shop";
            GlobalConst.DIA_VIPCHARGE = "vip";
            GlobalConst.DIA_PLAYERINFO = "playerInfo";
            GlobalConst.DIA_SERVICE = "service";
            GlobalConst.DIA_SET = "set";
            GlobalConst.DIA_EXCHANGEDLG = "exChange";
            GlobalConst.DIA_MAIL = "mail";
            GlobalConst.DIA_ACTIVITY = "activity";
            GlobalConst.DIA_FREEGOLD = "freeGold";
            GlobalConst.DIA_SHARE = "share";
            GlobalConst.DIA_MONTHCARD = "monthCardDialog";
            GlobalConst.DIA_FIRSTPAY = "firstPay";
            GlobalConst.DIA_PREFERENTIAL = "preferential";
            GlobalConst.DIA_SECONDDAY = "secondDayDlg";
            GlobalConst.DIA_GIFTSHAKE = "giftShakeDlg";
            GlobalConst.DIA_LUCKYDRAW = "luckyDrawDlg";
            GlobalConst.DIA_FreeGold = "freeGoldDlg";
            GlobalConst.DIA_REBATE = "rebateDlg";
            GlobalConst.DIA_VIPTIP = "vipTipDlg";
            GlobalConst.DIA_FISHMAP = "fishMap";
            GlobalConst.DIA_ROULETTE = "roulette";
            GlobalConst.DIA_COMPOSE = "compoose";
            GlobalConst.ItemMonthCardID = "100";
            GlobalConst.GoldCoinID = "1";
            GlobalConst.DiamondID = "2";
            GlobalConst.TicketID = "4";
            GlobalConst.DebrisID = "41";
            GlobalConst.GoldText = "gold";
            GlobalConst.WhiteText = "white";
            GlobalConst.BlueText = "blue";
            GlobalConst.RedText = "red";
            GlobalConst.ItemBuy = "itemBuy";
            GlobalConst.ItemGive = "itemGive";
            GlobalConst.ItemMonthbuy = "itemMonthBuy";
            GlobalConst.ItemCompose = "itemCompose";
            GlobalConst.MonthCardType = "monthcard";
            GlobalConst.GoldCoinType = "gold_shop";
            GlobalConst.DiamondType = "zuan_shop";
            GlobalConst.goldKey = "1";
            GlobalConst.diamondKey = "2";
            GlobalConst.itemFlyPackage = 0;
            GlobalConst.itemFlyHallCoin = 1;
            GlobalConst.itemFlyHallTicket = 2;
            GlobalConst.itemFlyCannon = 3;
            GlobalConst.itemFlyRoomCoin = 4;
            GlobalConst.itemFlyRoomTicket = 5;
            GlobalConst.itemFlyRoomDragonCannon = 6;
            GlobalConst.zuanTouId = 240;
            GlobalConst.HongYunId = 250;
            GlobalConst.hwbzId = 260;
            GlobalConst.zshyId = 270;
            GlobalConst.xyzpId = 280;
            GlobalConst.wlxbId = 290;
            GlobalConst.enterRoomFlag = true;
            return GlobalConst;
        }();
        exports.default = GlobalConst;
    }, {} ],
    98: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var SpineManager = function() {
            function SpineManager() {
                this.spineLoadNum = {};
            }
            SpineManager.prototype.getLoadNum = function(fileName) {
                var num = this.spineLoadNum[fileName];
                if (num > 0 || num == 0) this.spineLoadNum[fileName]++; else num = this.spineLoadNum[fileName] = 0;
                return num;
            };
            SpineManager.Instance = new SpineManager();
            return SpineManager;
        }();
        var g_spineManager;
        g_spineManager = SpineManager.Instance;
        exports.default = g_spineManager;
    }, {} ],
    99: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var GameData_1 = require("../datas/hallData/GameData");
        var FishData_1 = require("../datas/roomData/FishData");
        var SceneM_1 = require("../common/SceneM");
        var ConfigerHelper_1 = require("../globalConst/ConfigerHelper");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var globalConst_1 = require("../globalConst/globalConst");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var EventDis_1 = require("../globalConst/EventDis");
        var WxFuncs_1 = require("../globalConst/WxFuncs");
        var SoundM_1 = require("../common/SoundM");
        var TimeLineManager_1 = require("../globalConst/TimeLineManager");
        var CommonDialog_1 = require("../common/CommonDialog");
        var NoticeDlg_1 = require("../common/NoticeDlg");
        var MarqueeManager_1 = require("../globalConst/MarqueeManager");
        var OnOffManager_1 = require("../globalConst/OnOffManager");
        var MainFunc;
        (function(MainFunc) {
            function loadText() {
                var _this = this;
                var fontName1 = globalConst_1.default.fontNum1;
                var fontName2 = globalConst_1.default.fontNum2;
                var fontName3 = globalConst_1.default.fontNum3;
                var fontName4 = globalConst_1.default.fontNum4;
                var fontName5 = globalConst_1.default.fontNum5;
                var fontName6 = globalConst_1.default.fontNum6;
                var bitmapFont = new Laya.BitmapFont();
                bitmapFont.loadFont(GlobalVar_1.default.reUrl + "bitmapFont/win.fnt", new Laya.Handler(this, function() {
                    bitmapFont.setSpaceWidth(10);
                    Laya.Text.registerBitmapFont(fontName1, bitmapFont);
                    var bitmapFont1 = new Laya.BitmapFont();
                    bitmapFont1.loadFont(GlobalVar_1.default.reUrl + "bitmapFont/lose.fnt", new Laya.Handler(_this, function() {
                        bitmapFont1.setSpaceWidth(10);
                        Laya.Text.registerBitmapFont(fontName2, bitmapFont1);
                        var bitmapFont2 = new Laya.BitmapFont();
                        bitmapFont2.loadFont(GlobalVar_1.default.reUrl + "bitmapFont/paoBei.fnt", new Laya.Handler(_this, function() {
                            bitmapFont2.setSpaceWidth(10);
                            Laya.Text.registerBitmapFont(fontName3, bitmapFont2);
                            var bitmapFont3 = new Laya.BitmapFont();
                            bitmapFont3.loadFont(GlobalVar_1.default.reUrl + "bitmapFont/goldNum.fnt", new Laya.Handler(_this, function() {
                                bitmapFont3.setSpaceWidth(10);
                                Laya.Text.registerBitmapFont(fontName4, bitmapFont3);
                                var bitmapFont4 = new Laya.BitmapFont();
                                bitmapFont4.loadFont(GlobalVar_1.default.reUrl + "bitmapFont/dragonScore.fnt", new Laya.Handler(_this, function() {
                                    bitmapFont4.letterSpacing = -5;
                                    Laya.Text.registerBitmapFont(fontName5, bitmapFont4);
                                    var bitmapFont5 = new Laya.BitmapFont();
                                    bitmapFont5.loadFont(GlobalVar_1.default.reUrl + "bitmapFont/blueNum.fnt", new Laya.Handler(_this, function() {
                                        bitmapFont5.letterSpacing = -5;
                                        Laya.Text.registerBitmapFont(fontName6, bitmapFont5);
                                    }, [ bitmapFont5 ]));
                                }, [ bitmapFont4 ]));
                            }, [ bitmapFont3 ]));
                        }, [ bitmapFont2 ]));
                    }, [ bitmapFont1 ]));
                }, [ bitmapFont ]));
            }
            MainFunc.loadText = loadText;
            function setDownUrl(index) {
                GlobalVar_1.default.downUrls[index] = GlobalVar_1.default.remotePre + "res/" + globalConst_1.default.zipName + "_" + globalConst_1.default.clientVer + "_" + index + ".zip" + GlobalVar_1.default.zipVer;
            }
            MainFunc.setDownUrl = setDownUrl;
            function isNameValid(name) {
                return name.indexOf(".png") != -1 || name.indexOf(GlobalVar_1.default.soundType) != -1 || name.indexOf(".atlas") != -1 || name.indexOf(".sk") != -1 || name.indexOf(".json") != -1;
            }
            MainFunc.isNameValid = isNameValid;
            function getDownUrlArray(jsonNow, jsonDown) {
                var downArr = new Array();
                var preKV = {};
                for (var keyPre in jsonNow) if (isNameValid(keyPre)) preKV[keyPre] = jsonNow[keyPre];
                for (var keyNow in jsonDown) if (isNameValid(keyNow)) if (jsonDown[keyNow] != preKV[keyNow]) downArr.push(keyNow);
                return downArr;
            }
            MainFunc.getDownUrlArray = getDownUrlArray;
            function clearDownloads() {
                GlobalFunc_1.default.log("大更新，删除文件夹内容");
                var deletePath = GlobalVar_1.default.unZipPath;
                var fileList = WxFuncs_1.default.getFileList(deletePath);
                GlobalFunc_1.default.log(fileList);
                if (fileList && fileList.length > 0) {
                    GlobalFunc_1.default.log("递归删除所有文件");
                    WxFuncs_1.default.removefiles(deletePath, true);
                }
            }
            MainFunc.clearDownloads = clearDownloads;
            function showAllfiles(filePath) {
                var fileList = GlobalVar_1.default.fswx.readdirSync(filePath);
                for (var index = 0; index < fileList.length; index++) {
                    var element = fileList[index];
                    if (!element) return;
                    if (element.indexOf(".") > -1) GlobalFunc_1.default.log(filePath + "/" + element); else {
                        GlobalFunc_1.default.log(filePath + "/" + element);
                        showAllfiles(filePath + "/" + element);
                    }
                }
            }
            MainFunc.showAllfiles = showAllfiles;
            function getUpdateConfigReq() {
                if (!GlobalVar_1.default.isWx) return;
                GlobalVar_1.default.updateOver = false;
                var desPath = GlobalVar_1.default.reUrl + "resconfigRemote.json";
                var sourcePath = GlobalVar_1.default.remotePre + "resconfig.json?v=" + GlobalFunc_1.default.getRandom(0, 1e3);
                GlobalFunc_1.default.log("收到后端热更请求，下载最新resConfig", sourcePath);
                GlobalFunc_1.default.downOneFile(sourcePath, desPath);
                Laya.timer.once(2e4, this, function() {
                    EventDis_1.default.dispatchEvent("downJsonFileOver");
                });
            }
            MainFunc.getUpdateConfigReq = getUpdateConfigReq;
            function downResConfigOver(param) {
                var sourcePath = param.sourcePath;
                var desPath = param.desPath;
                var localPath = GlobalVar_1.default.reUrl + "resconfig.json";
                if (!sourcePath || !desPath) return;
                if (desPath.indexOf("resconfig") > -1) {
                    GlobalFunc_1.default.log("下载新的resconfig表成功");
                    Laya.Loader.clearRes(desPath);
                    Laya.loader.load([ desPath, localPath ], new Laya.Handler(this, function() {
                        var remoteJson = Laya.Loader.getRes(desPath);
                        GlobalFunc_1.default.log("remote:", desPath);
                        var jsonLocal = Laya.Loader.getRes(localPath);
                        GlobalFunc_1.default.log("local:", localPath);
                        var diffArr = GlobalFunc_1.default.getDiffJson(jsonLocal, remoteJson);
                        if (!diffArr || !diffArr.length || diffArr.length < 0) {
                            GlobalFunc_1.default.log("更新配置数组非法或者为空");
                            return;
                        }
                        if (GlobalVar_1.default.isWx) {
                            GlobalFunc_1.default.log("差异文件");
                            downJsonFileList(diffArr, GlobalVar_1.default.remotePre, GlobalFunc_1.default.getRandom(0, 1e3));
                        } else GlobalFunc_1.default.log("内网不作更新");
                    }));
                }
            }
            MainFunc.downResConfigOver = downResConfigOver;
            function updateJsonsOver(list) {
                if (GlobalVar_1.default.updateOver) return;
                if (!GlobalVar_1.default.isWx) return;
                GlobalVar_1.default.updateOver = true;
                var baseDir = wx.env.USER_DATA_PATH + "/cache/res/config/";
                list = list || [];
                GlobalFunc_1.default.log("json更新成功", list);
                for (var index in list) list[index] = baseDir + list[index];
                Laya.loader.load(list, new Laya.Handler(this, function() {
                    GlobalFunc_1.default.log("加载新json完成");
                    var remotePath = GlobalVar_1.default.reUrl + "resconfigRemote.json";
                    var localPath = GlobalVar_1.default.reUrl + "resconfig.json";
                    GlobalVar_1.default.fswx.copyFile({
                        srcPath: remotePath,
                        destPath: localPath,
                        success: function(evt) {
                            GlobalFunc_1.default.log("覆盖resconfig成功");
                            ConfigerHelper_1.default.init();
                            PlayerData_1.default.vipSkillAssign();
                        },
                        fail: function(evt) {
                            GlobalFunc_1.default.log("覆盖resconfig失败:" + evt.errMsg);
                        }
                    });
                }));
            }
            MainFunc.updateJsonsOver = updateJsonsOver;
            function downJsonFileList(list, downBaseUrl, version) {
                GlobalFunc_1.default.log("开始下载文件列表", list);
                if (!list || list.length == 0) EventDis_1.default.dispatchEvent("downJsonFileOver");
                var totalNum = list.length;
                var curNum = 0;
                var baseDir = "res/config/";
                for (var index in list) {
                    var sourcePath = downBaseUrl + baseDir + list[index] + "?v=" + version;
                    var desPath = GlobalVar_1.default.localPre + baseDir + list[index];
                    GlobalFunc_1.default.log("下载文件：", sourcePath, desPath);
                    wx.downloadFile({
                        url: sourcePath,
                        filePath: desPath,
                        success: function(res) {
                            if (res.statusCode === 200) {
                                curNum++;
                                var oldFile = GlobalVar_1.default.localPre + baseDir + list[curNum - 1];
                                Laya.loader.clearRes(oldFile);
                                GlobalFunc_1.default.log("清理旧的json文件", oldFile);
                                GlobalFunc_1.default.log(sourcePath + "下载完毕", curNum, totalNum);
                                if (curNum >= totalNum) {
                                    GlobalFunc_1.default.log("全部下载完毕");
                                    EventDis_1.default.dispatchEvent("downJsonFileOver", list);
                                }
                            }
                        },
                        fail: function(evt) {
                            GlobalFunc_1.default.log(sourcePath + "下载失败：" + evt.errMsg);
                        }
                    });
                }
            }
            MainFunc.downJsonFileList = downJsonFileList;
            function setDefault() {
                if (GlobalFunc_1.default.valNotDefined(GlobalVar_1.default.bagVersion)) GlobalVar_1.default.bagVersion = "0.0.0";
                if (GlobalFunc_1.default.valNotDefined(GlobalVar_1.default.entryJson)) {
                    GlobalFunc_1.default.log("入口信息采用默认值--------------------");
                    GlobalVar_1.default.entryJson = {
                        formHttp: "https://dmzonline.gameabc2.com/buyuxia/svr/login/",
                        formRes: "https://dmzresonline.gameabc2.com/",
                        formNotice: "https://dmzonline.gameabc2.com/buyuxia/svr/announcement",
                        formOrder: "https://dmzonline.gameabc2.com/buyuxia/pay/get_order_id",
                        formPay: "https://dmzonline.gameabc2.com/buyuxia/pay/pay_order_by_id",
                        QARes: "https://dmzbuyu.gameabc2.com/qa/client/",
                        QAHttp: "https://dmzbuyu.gameabc2.com/qa/svr/login/",
                        QANotice: "https://dmzbuyu.gameabc2.com/qa/svr/announcement",
                        QAOrder: "https://dmzbuyu.gameabc2.com/qa/pay/get_order_id",
                        QAPay: "https://dmzbuyu.gameabc2.com/qa/pay/pay_order_by_id",
                        shenHeVer: "1.0.7",
                        needSh: true,
                        "7.7.7": "1",
                        "7.7.8": "1",
                        "7.7.9": "1",
                        "9.9.8": "1",
                        "1.1.1": "1",
                        "6.6.5": "1"
                    };
                }
                GlobalVar_1.default.isQA = GlobalVar_1.default.entryJson[globalConst_1.default.clientVer] ? true : false;
                GlobalVar_1.default.formHttp = GlobalVar_1.default.entryJson["formHttp"];
                GlobalVar_1.default.formRes = GlobalVar_1.default.entryJson["formRes"];
                GlobalVar_1.default.QARes = GlobalVar_1.default.entryJson["QARes"];
                GlobalVar_1.default.QAHttp = GlobalVar_1.default.entryJson["QAHttp"];
                GlobalVar_1.default.isShenHeVer = globalConst_1.default.clientVer == GlobalVar_1.default.entryJson["shenHeVer"];
                OnOffManager_1.default.isInvite = !GlobalVar_1.default.isShenHeVer;
                GlobalVar_1.default.remotePre = GlobalVar_1.default.isQA ? GlobalVar_1.default.QARes : GlobalVar_1.default.formRes;
                globalConst_1.default.httpUrl = GlobalVar_1.default.isQA ? globalConst_1.default.loginUrlOutQa : globalConst_1.default.loginUrlOutForm;
                GlobalVar_1.default.noticeUrl = GlobalVar_1.default.isQA ? GlobalVar_1.default.entryJson["QANotice"] : GlobalVar_1.default.entryJson["formNotice"];
                GlobalVar_1.default.orderUrl = GlobalVar_1.default.isQA ? GlobalVar_1.default.entryJson["QAOrder"] : GlobalVar_1.default.entryJson["formOrder"];
                GlobalVar_1.default.payUrl = GlobalVar_1.default.isQA ? GlobalVar_1.default.entryJson["QAPay"] : GlobalVar_1.default.entryJson["formPay"];
                GlobalVar_1.default.zipVer = "?v=" + GlobalFunc_1.default.getRandom(1, 1e4);
                GlobalVar_1.default.downUrls = [];
                GlobalVar_1.default.needSh = GlobalVar_1.default.entryJson["needSh"];
                setDownUrl(1);
                setDownUrl(2);
                setDownUrl(3);
                GlobalFunc_1.default.log("入口配置信息：");
                GlobalFunc_1.default.log(GlobalVar_1.default.entryJson);
                GlobalFunc_1.default.log("是否为审核版本：" + GlobalVar_1.default.isShenHeVer);
                GlobalFunc_1.default.log("是否是QA服", GlobalVar_1.default.isQA);
                GlobalFunc_1.default.log("资源", GlobalVar_1.default.remotePre);
                GlobalFunc_1.default.log("web", globalConst_1.default.httpUrl);
                GlobalFunc_1.default.log("公告", GlobalVar_1.default.noticeUrl);
                GlobalFunc_1.default.log("订单", GlobalVar_1.default.orderUrl);
                GlobalFunc_1.default.log("支付", GlobalVar_1.default.payUrl);
                if (GlobalFunc_1.default.valNotDefined(GlobalVar_1.default.isWxGranted)) GlobalVar_1.default.isWxGranted = true;
                GlobalFunc_1.default.log("微信授权", GlobalVar_1.default.isWxGranted);
            }
            MainFunc.setDefault = setDefault;
            function getLoadPath0() {
                return [ {
                    url: "configFirst/constAnnouncement.json",
                    type: Laya.Loader.JSON
                }, {
                    url: "configFirst/guide.json",
                    type: Laya.Loader.JSON
                }, {
                    url: "configFirst/invitationAward.json",
                    type: Laya.Loader.JSON
                }, {
                    url: "configFirst/Item.json",
                    type: Laya.Loader.JSON
                }, {
                    url: "configFirst/shop.json",
                    type: Laya.Loader.JSON
                }, {
                    url: "configFirst/Vip.json",
                    type: Laya.Loader.JSON
                }, {
                    url: "configFirst/fish.json",
                    type: Laya.Loader.JSON
                }, {
                    url: "configFirst/room.json",
                    type: Laya.Loader.JSON
                }, {
                    url: "configFirst/longpao.json",
                    type: Laya.Loader.JSON
                }, {
                    url: "configFirst/allfishScript.json",
                    type: Laya.Loader.JSON
                }, {
                    url: "configFirst/global_define.json",
                    type: Laya.Loader.JSON
                } ];
            }
            MainFunc.getLoadPath0 = getLoadPath0;
            function getLoadPath1() {
                return [ {
                    url: GlobalVar_1.default.reUrl + "config/global_define.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/constAnnouncement.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/paomadeng.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/fish.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/allfishScript.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/fishPathList.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/Formations.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/FishTeam.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/Item.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/Vip.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/shop.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/exchange.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/room.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/fishlocker.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/timeLimitPacks.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/luckyRoulette.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/invitationAward.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/luckyDraw.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/wholepoint.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/collection.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/guide.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/activity.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/Roulette.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/player_init.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/longpao.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "ui.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas1/firstPic.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas1/noZip.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "config/sharecard.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/freeTicket.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "animation/goldCoinAni.ani",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "animation/diamond.ani",
                    type: Laya.Loader.JSON
                } ];
            }
            MainFunc.getLoadPath1 = getLoadPath1;
            function getLoadPath2() {
                return [ {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish003.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish004.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish005.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish008.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish010.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish011.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish012.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish013.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish014.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish015.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish016.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish017.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish018.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish019.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish020.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish021.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish027.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish032.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish070.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish075.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish080.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish085.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish090.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish095.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish240.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish250.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish260.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish270.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish280.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish290.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish1001.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish1002.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fish1003.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/common.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/gift.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/fishIcon.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/selectRoom.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/hall.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/dial.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/bullets.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/iconAndSkin.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/activitys.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/battle.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/boombg.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/comp.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/dragonBall.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/hongYun.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/jackpotPool.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/monthCard.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/package.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/pearl.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/resAni.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/room_1.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/room_2.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/room_3.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/room_all.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/smallPic.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/treasureBox.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/vipCharge.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/bitBoombg.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/connon.atlas",
                    type: Laya.Loader.ATLAS
                }, {
                    url: GlobalVar_1.default.reUrl + "atlas2/nets.atlas",
                    type: Laya.Loader.ATLAS
                } ];
            }
            MainFunc.getLoadPath2 = getLoadPath2;
            function wxInit() {
                GlobalFunc_1.default.log("2.-------------------------------初始化微信信息");
                if (GlobalVar_1.default.isWx) {
                    GlobalVar_1.default.isWxMode = wx.env.USER_DATA_PATH.indexOf("http") >= 0;
                    var path = wx.env.USER_DATA_PATH;
                    GlobalVar_1.default.fswx = wx.getFileSystemManager();
                    GlobalVar_1.default.reUrl = path + "/cache/res/";
                    GlobalVar_1.default.localZipPaths = [];
                    GlobalVar_1.default.localZipPaths[1] = GlobalVar_1.default.reUrl + globalConst_1.default.zipName + "_" + globalConst_1.default.clientVer + "_1.zip";
                    GlobalVar_1.default.localZipPaths[2] = GlobalVar_1.default.reUrl + globalConst_1.default.zipName + "_" + globalConst_1.default.clientVer + "_2.zip";
                    GlobalVar_1.default.unZipPath = path + "/cache/res/";
                    GlobalVar_1.default.localPre = path + "/cache/";
                    GlobalVar_1.default.zip1Path = path + "/cache/res/atlas1";
                    GlobalVar_1.default.zip2Path = path + "/cache/res/atlas2";
                    GlobalVar_1.default.updateOver = true;
                    GlobalVar_1.default.zip1Ok = false;
                    GlobalVar_1.default.zip2Ok = false;
                }
            }
            MainFunc.wxInit = wxInit;
            function initGlobalWithoutNet() {
                SceneM_1.default.init();
                ConfigerHelper_1.default.init();
            }
            MainFunc.initGlobalWithoutNet = initGlobalWithoutNet;
            function initGlobalStaticInstance() {
                GlobalFunc_1.default.log("开始初始化游戏变量");
                GameData_1.default.init();
                SoundM_1.default.init();
                NoticeDlg_1.default.initNotice();
                TimeLineManager_1.default.init();
                FishData_1.default.initFishData();
                MarqueeManager_1.default.init();
            }
            MainFunc.initGlobalStaticInstance = initGlobalStaticInstance;
            function initGlobalEvents() {
                var _this = this;
                EventDis_1.default.addEvntListener("sc_player_kick_1", this, function() {
                    var str = GlobalFunc_1.default.getColorText("网络连接中断，请重新进入游戏");
                    var callBack = new Laya.Handler(_this, function() {
                        if (GlobalVar_1.default.isWx) wx.exitMiniProgram(); else SceneM_1.default.replaceScene("PcLoadingScene", null);
                    });
                    var kickDialog = new CommonDialog_1.default(1, [ str ], null, "确定", "提示", true, callBack);
                    SceneM_1.default.addToMiddLayer(kickDialog, globalConst_1.default.dialogLayer);
                });
                EventDis_1.default.addEvntListener("sc_player_kick_2", this, function() {
                    var str = GlobalFunc_1.default.getColorText("账号重复登录，请重新进入游戏");
                    var callBack = new Laya.Handler(_this, function() {
                        if (GlobalVar_1.default.isWx) wx.exitMiniProgram(); else SceneM_1.default.replaceScene("PcLoadingScene", null);
                    });
                    var kickDialog = new CommonDialog_1.default(1, [ str ], null, "确定", "提示", true, callBack);
                    SceneM_1.default.addToMiddLayer(kickDialog, globalConst_1.default.dialogLayer);
                });
            }
            MainFunc.initGlobalEvents = initGlobalEvents;
        })(MainFunc || (MainFunc = {}));
        exports.default = MainFunc;
    }, {
        "../common/CommonDialog": 7,
        "../common/NoticeDlg": 17,
        "../common/SceneM": 19,
        "../common/SoundM": 21,
        "../datas/hallData/GameData": 26,
        "../datas/hallData/PlayerData": 27,
        "../datas/roomData/FishData": 30,
        "../globalConst/ConfigerHelper": 84,
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/GlobalVar": 90,
        "../globalConst/MarqueeManager": 91,
        "../globalConst/OnOffManager": 93,
        "../globalConst/TimeLineManager": 95,
        "../globalConst/WxFuncs": 96,
        "../globalConst/globalConst": 97
    } ],
    100: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GameData_1 = require("../datas/hallData/GameData");
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var HttpManager = function() {
            function HttpManager() {}
            HttpManager.prototype.DecodeMessage = function(message) {
                var msg = message;
            };
            HttpManager.prototype.onHttpRequestError = function(e) {
                GlobalFunc_1.default.log("http请求出错：----1");
                GlobalFunc_1.default.log(e);
                GlobalFunc_1.default.log("http请求出错：-----2");
            };
            HttpManager.prototype.onHttpRequestProgress = function(e) {};
            HttpManager.prototype.connect = function(url, callBack, method, head, data) {
                if (method === void 0) method = null;
                if (head === void 0) head = [];
                this.hr = new Laya.HttpRequest();
                this.hr.once(Laya.Event.PROGRESS, this, this.onHttpRequestProgress);
                this.hr.once(Laya.Event.COMPLETE, this, this.onHttpRequestComplete, [ this.hr, callBack ]);
                this.hr.once(Laya.Event.ERROR, this, this.onHttpRequestError);
                if (url.indexOf("statistic") <= 0) GlobalFunc_1.default.log("http Send:", url);
                if (method == "post") this.hr.send(url, data, "post", "text"); else this.hr.send(url, null, "get", "text");
            };
            HttpManager.prototype.onHttpRequestComplete = function(hr, callBack, e) {
                if (callBack === void 0) callBack = undefined;
                clearTimeout(this.responseTimer);
                if (hr.data && hr.data.length < 500) GlobalFunc_1.default.log("http rec:", hr.data);
                var data = JSON.parse(hr.data);
                if (!data) return;
                GlobalFunc_1.default.log("http.ret:" + data.ret);
                if (callBack) callBack(data);
            };
            HttpManager.prototype.getcCommodityHttpUrl = function(commid) {
                return this.useUrl + "simulate_pay.php?" + "zone=" + GameData_1.default.serverName + "&uid=" + GameData_1.default.uid + "&productId=" + commid + "&dbgrp=" + GameData_1.default.dbgrp;
            };
            HttpManager.prototype.getGiftPackHttpUrl = function(commid, type, rmb) {
                return this.useUrl + "timeLimitPacks.php?" + "account=" + GameData_1.default.account + "&token=" + GameData_1.default.token + "&action=" + type + "&zone=" + GameData_1.default.serverName + "&dbgrp=" + GameData_1.default.dbgrp + "&productId=" + commid + "&rmb=" + rmb;
            };
            HttpManager.prototype.getSearchPackHttpUrl = function() {
                return this.useUrl + "queryBuyPacks.php?" + "account=" + GameData_1.default.account + "&token=" + GameData_1.default.token + "&action=schedule";
            };
            HttpManager.prototype.getNoticeData = function() {
                return this.useUrl + "announcement.php";
            };
            HttpManager.prototype.getInviteInformation = function(type) {
                return this.useUrl + "spreader.php?account=" + GameData_1.default.account + "&token=" + GameData_1.default.token + "&action=" + type;
            };
            HttpManager.prototype.sendButtonDotToHttp = function(data) {
                if (data === void 0) data = {
                    actionId: 0
                };
                var actionid = GlobalFunc_1.default.isIos() ? data.actionId : data.actionId * 10;
                return this.useUrl + "statisticsPoint.php?uid=" + GameData_1.default.uid + "&action=" + actionid;
            };
            HttpManager.Instance = new HttpManager();
            return HttpManager;
        }();
        var g_httpManager;
        g_httpManager = HttpManager.Instance;
        exports.default = g_httpManager;
    }, {
        "../datas/hallData/GameData": 26,
        "../globalConst/GlobalFunc": 87
    } ],
    101: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var EventDis_1 = require("../globalConst/EventDis");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var GameData_1 = require("../datas/hallData/GameData");
        var WaitManager_1 = require("../common/WaitManager");
        var Long = require(".././externals/long.js");
        var BattleData_1 = require("../datas/roomData/BattleData");
        var MailDialog_1 = require("../dialog/hallDlg/MailDialog");
        var PlayerData_1 = require("../datas/hallData/PlayerData");
        var globalConst_1 = require("../globalConst/globalConst");
        var WarningMessage_1 = require("../common/WarningMessage");
        var MD5 = require(".././externals/md5.min.js");
        var HttpManager_1 = require("./HttpManager");
        var FishData_1 = require("../datas/roomData/FishData");
        var NoticeDlg_1 = require("../common/NoticeDlg");
        var WxLoginManager_1 = require("./WxLoginManager");
        var hallData_1 = require("../datas/hallData/hallData");
        var SceneM_1 = require("../common/SceneM");
        var CommonDialog_1 = require("../common/CommonDialog");
        var NetManager = function() {
            function NetManager() {
                this.newJson = {};
                this.serverName = "";
                this.protoSec = 0;
                this.reconnectTime = 0;
                this.isReconnecting = false;
                this.isKicked = false;
                this.lastReconnectTime = 0;
                this.isLoginOver = true;
                this.isWxlogining = true;
                this.server_Address = "";
                this.my_stop = false;
                this.socket = new Laya.Socket();
                this.isConnected = false;
                this.isLogined = false;
                this.nWaitPongCount = 0;
                this.isForceConnecting = false;
                this.isKicked = false;
                this.socket.on(Laya.Event.OPEN, this, this.onEventWebSocketOpen);
                this.socket.on(Laya.Event.CLOSE, this, this.onEventWebSocketShut);
                this.socket.on(Laya.Event.MESSAGE, this, this.onEventWebSocketRead);
                this.socket.on(Laya.Event.ERROR, this, this.onEventWebSocketError);
            }
            NetManager.prototype.init = function() {
                EventDis_1.default.addEvntListener("wait_overTime", this, this.connectOVerTime);
                EventDis_1.default.addEvntListener("server_notice", this, this.ckeckNoticeOk);
            };
            NetManager.prototype.startWx = function() {
                this.isKicked = false;
                GlobalFunc_1.default.sendAldNewuser("_4.1 包1拉取公告");
                GlobalFunc_1.default.log("请求公告");
                NoticeDlg_1.default.reqNotice();
            };
            NetManager.prototype.ckeckNoticeOk = function(notice) {
                GlobalFunc_1.default.sendAldNewuser("_4.2 包1拉取公告结束");
                if (!!notice && !GameData_1.default.white_user) GlobalFunc_1.default.serverCloseNotice(notice); else if (GlobalVar_1.default.isWx) {
                    GlobalFunc_1.default.log("公告拉取成功，开始连接网络.........");
                    g_NetManager.connect();
                }
            };
            NetManager.prototype.reconnectFunc = function() {
                if (this.isConnected || this.isKicked) return;
                if (this.reconnectTime++ >= 10) return;
                if (GlobalFunc_1.default.getClientTime() - this.lastReconnectTime <= 7e3) return;
                this.isReconnecting = true;
                this.lastReconnectTime = GlobalFunc_1.default.getClientTime();
                WaitManager_1.default.showWaitLayer("enter room", 3e4, "1");
                GlobalFunc_1.default.log("reconnecting.......", this.lastReconnectTime);
                if (GlobalVar_1.default.isWx) {
                    GlobalFunc_1.default.remoteLog("0所有用户重连请求登录");
                    WxLoginManager_1.default.begin();
                } else Laya.timer.once(1e3, this, function() {
                    HttpManager_1.default.connect(globalConst_1.default.loginUrl151 + "?login_type=1&device_info=" + GameData_1.default.account, function(data) {
                        GameData_1.default.setLoginInfo(data.login_info);
                        EventDis_1.default.dispatchEvent("switchSteps", [ 9 ]);
                        g_NetManager.connect();
                    });
                });
            };
            NetManager.prototype.connectOVerTime = function(str) {
                if (str && str == "1") {
                    WaitManager_1.default.HideWaitingImageForce();
                    this.isKicked = true;
                    EventDis_1.default.dispatchEvent("sc_player_kick_1");
                }
            };
            NetManager.prototype.connect = function() {
                GlobalFunc_1.default.sendAldNewuser("_7.1 连接网关");
                if (this.isConnected) return;
                this.socket.endian = Laya.Byte.BIG_ENDIAN;
                this.socket.connect(GameData_1.default.gateIp, Number(GameData_1.default.gatePort));
            };
            NetManager.prototype.decodeMessage = function(jsonStr) {
                this.doProtoDecode(jsonStr);
            };
            NetManager.prototype.onEventWebSocketOpen = function() {
                GlobalFunc_1.default.log("Socket Connected");
                WaitManager_1.default.HideWaitingImageForce();
                this.my_stop = false;
                this.isConnected = true;
                this.nWaitPongCount = 0;
                this.isReconnecting = false;
                this.reconnectTime = 0;
                this.reqPlayerLogin();
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.NET_ON);
            };
            NetManager.prototype.onEventWebSocketShut = function() {
                Laya.stage.timer.clear(this, this.HeartBeatFunction);
                this.socket.close();
                this.isConnected = false;
                EventDis_1.default.dispatchEvent("socket_closed");
                GlobalFunc_1.default.log("socket_closed");
                this.loopReconnect();
            };
            NetManager.prototype.loopReconnect = function() {
                Laya.timer.loop(8e3, this, this.startReconnect);
                this.reconnectFunc();
            };
            NetManager.prototype.startReconnect = function() {
                if (this.isReconnecting) this.reconnectFunc();
            };
            NetManager.prototype.onEventWebSocketRead = function(message) {
                this.decodeMessage(message);
            };
            NetManager.prototype.getAddress = function() {
                return this.server_Address;
            };
            NetManager.prototype.getPort = function() {
                return this.server_port;
            };
            NetManager.prototype.start = function() {
                GlobalFunc_1.default.log("Socket connectTo:" + this.server_Address + this.server_port);
                this.socket.connect(this.server_Address, this.server_port);
            };
            NetManager.prototype.stop = function() {
                this.my_stop = true;
                Laya.stage.timer.clear(this, this.HeartBeatFunction);
                this.socket.close();
            };
            NetManager.prototype.HeartBeatFunction = function() {};
            NetManager.prototype.GetSocketIsConnected = function() {
                return this.isConnected;
            };
            NetManager.prototype.onEventWebSocketError = function(e) {
                this.isConnected = false;
                GlobalFunc_1.default.log("Socket error");
            };
            NetManager.prototype.doLogin = function(data) {
                GlobalFunc_1.default.log("登录成功.........");
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.GATE_LOGIN_SUC_NOTICE, data.user_info);
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ITEM_INFO_INIT, data.player_item_info);
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.CONFIG_INFO_NOTICE, data.config_info);
            };
            NetManager.prototype.send = function(protoType, proto) {
                var buffer = new ArrayBuffer(16);
                var dv = new DataView(buffer);
                dv.setUint32(0, protoType, false);
                dv.setUint32(4, this.protoSec++, false);
                this.setBufferUint64By32(GameData_1.default.uid, buffer, 8);
                var arrAll = new Uint8Array(16 + (!!proto ? proto.length : 0));
                var s = new Uint8Array(arrAll);
                var s1 = new Uint8Array(buffer);
                if (proto) {
                    var s2 = proto;
                    s.set(s1, 0);
                    s.set(s2, 16);
                }
                if (!this.socket.connected) {
                    this.loopReconnect();
                    return;
                }
                this.socket.send(s.buffer);
            };
            NetManager.prototype.setBufferUint64By32 = function(uint32, buffer, offset) {
                var uint8Arr = new Uint8Array(buffer);
                var long1 = Long.fromNumber(uint32);
                var bit64 = long1.toBytesBE();
                uint8Arr.set(bit64, offset);
            };
            NetManager.prototype.doProtoDecode = function(arrayBuff) {
                var headLen = 16;
                var totalLen = arrayBuff.byteLength;
                var bodyLen = totalLen - headLen;
                var buffHead = arrayBuff.slice(0, headLen);
                var proto = arrayBuff.slice(headLen, totalLen);
                var dv1 = new DataView(buffHead);
                var protoType = dv1.getUint32(0);
                var seq = dv1.getUint32(4);
                var uid = dv1.getUint32(12);
                proto = new Uint8Array(proto);
                this.onEventTCPSocketRead(protoType, proto);
            };
            NetManager.prototype.isMsgValid = function(msg) {
                var isValid = !msg || !msg.ret || msg.ret.err_code == 0;
                if (!isValid) GlobalFunc_1.default.log("msg not valid:", msg);
                return isValid;
            };
            NetManager.prototype.onEventTCPSocketRead = function(protoType, msg) {
                var time = Laya.Browser.now();
                var decodeMsg;
                switch (protoType) {
                  case ProtoMsg.emCSMsgId.CS_MSG_PLAYER_LOGIN:
                    decodeMsg = ProtoMsg.PbCsPlayerLoginResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resPlayerLogin(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_HEART_BEAT:
                    decodeMsg = ProtoMsg.PbCsPlayerHeartBeatResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resHeartBeat(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_ENTER_ROOM:
                    decodeMsg = ProtoMsg.PbCsGameEnterRoomResMsg.decode(msg);
                    this.resEnterRoom(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_BROAD_SCENE:
                    decodeMsg = ProtoMsg.PBCsRoomScenBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resSwitchScene(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_BULLET:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerBulletResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resShootFail(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_HIT:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerHitResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resHitFail(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_BROAD_BULLET:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerBulletBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resShootBroad(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_BROAD_HIT:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerHitBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resHitBroad(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_BROAD_PLAYER_ENTER_DESK:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerEnterDeskBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resPlayInfo(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_CHANGE_PAO:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerChangePaoBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resChangePao(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_BROAD_REBORN_FISH:
                    decodeMsg = ProtoMsg.PBCsRoomRebornFishBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resRebornFish(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_OVERTIME_KICK_PLAYER:
                    this.resOverTime();
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_UPDATE_GUIDE_STEP:
                    decodeMsg = ProtoMsg.PbCsGameUpdateGuideStepResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resGetGuideStep(decodeMsg.cur_step);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_PLAYER_KICK:
                    decodeMsg = ProtoMsg.PBCsPlayerKickMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resPlayerKick();
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_GET_PLAYER_INFO:
                    decodeMsg = ProtoMsg.PbCsGameGetPlayerInfoResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resGetPlayerInfo(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_BAG_BUY_ITEM:
                    decodeMsg = ProtoMsg.PbCsGameBagBuyItemResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resPackageBuy(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_BAG_ZENGSONG:
                    decodeMsg = ProtoMsg.PbCsGameBagZengSongResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resPackageZengSong(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_PLAYER_RECV_MAIL:
                    decodeMsg = ProtoMsg.PbCsGamePlayerMailMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resMailMsg(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_PLAYER_READ_MAIL:
                    decodeMsg = ProtoMsg.PbCsGamePlayerReadMailResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resReadMail(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_PLAYER_DEL_MAIL:
                    decodeMsg = ProtoMsg.PbCsGamePlayerDelMailResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resDelMail(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_PLAYER_ATTACH_MAIL:
                    decodeMsg = ProtoMsg.PbCsGamePlayerAttachMailResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resAttachMail(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_BROAD_SPECIAL_FISH_END:
                    decodeMsg = ProtoMsg.PBCsRoomSpecialFishEndBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resRoomSpecialFishEnd(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_SEND_PLAYER_ROUND_PLATE_INFO:
                    decodeMsg = ProtoMsg.PbCsSendPlayerRoundPlateInfo.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resGetLoginRouletteInfo(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_ROUND_PLATE:
                    decodeMsg = ProtoMsg.PbCsRoundPlateResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resGetLoginRouletteReward(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_GET_ZHENG_DIAN_REWARD_LIST:
                    decodeMsg = ProtoMsg.PbCsGameGetZhengDianRewardListResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    EventDis_1.default.dispatchEvent("wholeLoad", decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_TAKE_ZHENG_DIAN_REWARD:
                    decodeMsg = ProtoMsg.PbCsGameTakeZhengDianRewardResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    EventDis_1.default.dispatchEvent("getWholeReward", decodeMsg);
                    PlayerData_1.default.addItemsNum([ {
                        item_id: decodeMsg.item_id,
                        count: decodeMsg.item_count
                    } ]);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_HWBZ_START:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerHwbzStartResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resStartHaiWangFish(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_HWBZ_CLICK:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerHwbzClickResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resHaiWangFishClick(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_DOLE_LEFT_COUNT:
                    decodeMsg = ProtoMsg.PbCsGameDoleLeftCountResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    PlayerData_1.default.left_count = decodeMsg.left_count;
                    EventDis_1.default.dispatchEvent("helpLoad", decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_TAKE_DOLE:
                    decodeMsg = ProtoMsg.PbCsGameTakeDoleResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    PlayerData_1.default.left_count = decodeMsg.left_count;
                    PlayerData_1.default.addItemsNum([ {
                        item_id: decodeMsg.item_id,
                        count: decodeMsg.item_count
                    } ], false, true, true);
                    EventDis_1.default.dispatchEvent("helpReward", decodeMsg.left_count);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_BROAD_ITEM:
                    decodeMsg = ProtoMsg.PbCsPlayerItemsBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resUpdateItemBroad(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_EXCHANGE_ADD_INFO:
                    if (!this.isMsgValid(decodeMsg)) return;
                    decodeMsg = ProtoMsg.PbCsGameExchangeAddInfoResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resCommitExchangeAddress(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_EXCHANGE_GET_INFO:
                    if (!this.isMsgValid(decodeMsg)) return;
                    decodeMsg = ProtoMsg.PbCsGameExchangeGetInfoResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resPullExchangeAddress(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_EXCHANGE_RECORD:
                    if (!this.isMsgValid(decodeMsg)) return;
                    decodeMsg = ProtoMsg.PbCsGameExchangeRecordResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.respullExChangeRecord(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_EXCHANGE_BY_LOTTERY:
                    if (!this.isMsgValid(decodeMsg)) return;
                    decodeMsg = ProtoMsg.PbCsGameExchangeByLotteryResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resExchangeItem(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_YESTERDAY_KILLED_GOLD:
                    if (!this.isMsgValid(decodeMsg)) return;
                    decodeMsg = ProtoMsg.PbCsGameYesterdayKilledGoldResMsg.decode(msg);
                    GameData_1.default.isRebate = !!decodeMsg.hastake;
                    GameData_1.default.rebateDate = decodeMsg.date;
                    GameData_1.default.rebateNum = decodeMsg.lottery_count ? decodeMsg.lottery_count : 0;
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.NOTICE_YESTERDAY_GOLD, decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_YESTERDAY_KILLED_LOTTERY:
                    if (!this.isMsgValid(decodeMsg)) return;
                    decodeMsg = ProtoMsg.PbCsGameYesterdayKilledLotteryResMsg.decode(msg);
                    GameData_1.default.isRebate = true;
                    PlayerData_1.default.setItemNum(globalConst_1.default.ticket + "", decodeMsg.left_lottery);
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.NOTICE_YESTERDAY_DONE, decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_USE_ITEM:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerUseItemResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resDaoDanHitFail(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_BROAD_USE_ITEM:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerUseItemBroadMsg.decode(msg);
                    var data = decodeMsg.item_info;
                    if (!this.isMsgValid(decodeMsg)) return;
                    var items_1 = GlobalFunc_1.default.transGoldItem(data.drops.items);
                    var tray_1 = {
                        fishData: {
                            goldNum: items_1[0] ? items_1[0].count : 0,
                            tray: 4,
                            fishInfo: {
                                Icon: "" + (data.item_id - 1)
                            }
                        },
                        seatIndex: BattleData_1.default.getUserSeatByUid(data.uid)
                    };
                    Laya.timer.once(3500, this, function() {
                        EventDis_1.default.dispatchEvent(GlobalVar_1.default.PLAY_ROOM_TRAY_ANI, tray_1);
                    });
                    if (data.uid != GameData_1.default.uid) return;
                    PlayerData_1.default.addItemsNum([ {
                        item_id: data.item_id,
                        count: -data.item_count
                    } ], false, false);
                    Laya.timer.once(3500, this, function() {
                        PlayerData_1.default.addItemsNum(items_1, false, true, true);
                    });
                    EventDis_1.default.dispatchEvent("bombReceive", items_1);
                    Laya.timer.once(6e3, this, function() {
                        FishData_1.default.isInDaoDan = false;
                        FishData_1.default.inDaodan = false;
                    });
                    this.resDaoDanHitSuccess(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_DANTOU_RANKING_LIST:
                    decodeMsg = ProtoMsg.PbCsGameDanTouRankingListResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resDantouRank(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_STORE_PURCHASE:
                    decodeMsg = ProtoMsg.PbCsGamePlayerStorePurchaseMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    GlobalFunc_1.default.log(decodeMsg);
                    PlayerData_1.default.addItemsNum(decodeMsg.items, false, true, true);
                    EventDis_1.default.dispatchEvent("paySuccess", decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_UPDATE_CONFIG_BROAD:
                    decodeMsg = ProtoMsg.PBCsGameUpdateConfigBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resUpdateConfig();
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_ON_RECHARGE:
                    decodeMsg = ProtoMsg.PbCsSendPlayerOnRechargeMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    if (decodeMsg.rInfo.product_id == "2010") {
                        GameData_1.default.tehuiState1 = 1;
                        GameData_1.default.isFirstRecharge = true;
                    } else if (decodeMsg.rInfo.product_id == "4010") {
                        GameData_1.default.tehuiState2 = 1;
                        GameData_1.default.tehuiState1 = 2;
                    } else if (decodeMsg.rInfo.product_id == "4020") GameData_1.default.tehuiState2 = 2; else if (decodeMsg.rInfo.product_id == "3020") {
                        GameData_1.default.isShaked = true;
                        FishData_1.default.shakeTime = 0;
                    } else if (decodeMsg.rInfo.product_id == "3010") {
                        var time_1 = GameData_1.default.monthEndTime ? GameData_1.default.monthEndTime : Math.floor(GameData_1.default.serverTimeStamp * .001);
                        if (GameData_1.default.monthEndDay <= 0) {
                            GameData_1.default.monthEndDay == 30;
                            GameData_1.default.isMonthToday = true;
                            GameData_1.default.monthEndTime = 30 * 3600 * 24 + Math.floor(GameData_1.default.serverTimeStamp * .001);
                        } else {
                            GameData_1.default.monthEndTime = time_1 + 30 * 3600 * 24;
                            GameData_1.default.monthEndDay += 30;
                        }
                        GlobalFunc_1.default.setMonthTime();
                    }
                    EventDis_1.default.dispatchEvent("payGiftChange");
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.DATA_VIP_INFO, {
                        vip: decodeMsg.rInfo.vip_lv
                    });
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.VIP_EXP_UP, decodeMsg.rInfo.vip_exp);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_BROAD_EQUIP_PAO_ITEM:
                    decodeMsg = ProtoMsg.PBCsRoomEquipPaoItemBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resEquipSkinBroad(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_EQUIP_PAO_ITEM:
                    decodeMsg = ProtoMsg.PbCsGameEquipPaoItemResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resEquipSkin(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_NEW_ANNOUNCEMENT:
                    decodeMsg = ProtoMsg.PBCsGameNewAnnouncementBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resNewAnnouncement(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_TAKE_MINGRI:
                    decodeMsg = ProtoMsg.PbCsGamePlayerTakeMingriResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    GameData_1.default.tomrrowState = 3;
                    PlayerData_1.default.addItemsNum(decodeMsg.items);
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.TOMORROW_GOT, GlobalFunc_1.default.transGoldItem(decodeMsg.items));
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_SET_MINGRI:
                    decodeMsg = ProtoMsg.PbCsGamePlayerSetMingriResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    GameData_1.default.tomrrowState = 1;
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.TOMORROW_SEND);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_ADD_YAOYIYAO:
                    decodeMsg = ProtoMsg.PbCsGamePlayerAddYaoyiyaoResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    GameData_1.default.shakeTimes++;
                    GameData_1.default.shakeTimes = Math.min(GameData_1.default.shakeTimes, 5);
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.YAO_CHANGE);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_ONCE_YAOYIYAO:
                    decodeMsg = ProtoMsg.PbCsGamePlayerOnceYaoyiyaoResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    GameData_1.default.shakeNum = decodeMsg.coin_num;
                    GameData_1.default.shakeTimes--;
                    GameData_1.default.shakeTimes = Math.max(GameData_1.default.shakeTimes, 0);
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.YAO_YI_YAO, decodeMsg);
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.YAO_CHANGE);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_YUEKA_DAILY_PACKET:
                    decodeMsg = ProtoMsg.PbCsGamePlayerYuekaDailyPacketResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    GameData_1.default.isMonthToday = true;
                    PlayerData_1.default.addItemsNum(decodeMsg.items);
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.GETMONTHREWARD, decodeMsg.items);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_BROAD_MARQUEE:
                    decodeMsg = ProtoMsg.PBCsGameMarqueeBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.MARQUEE_BROAD_MSG, decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_CHANGE_LONGPAO_BROAD:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerChangeLongPaoBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resChangeDragonCannonState(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_CHANGE_LONGPAO:
                    decodeMsg = ProtoMsg.PBCsRoomPlayerChangeLongPaoResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_SEND_SHARE_NOTIFY:
                    decodeMsg = ProtoMsg.PbCsGamePlayerSendShareNotifyMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    GameData_1.default.inviteNum++;
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.SHARE_ADD);
                    GlobalFunc_1.default.log("好友受邀登陆");
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_GET_SHARE_AWARDS:
                    EventDis_1.default.dispatchEvent("reset_list_invite");
                    decodeMsg = ProtoMsg.PbCsGamePlayerGetShareAwardsResMsg.decode(msg);
                    if (!this.isMsgValid(msg)) return;
                    if (decodeMsg.items.length == 0) return;
                    PlayerData_1.default.addItemsNum(decodeMsg.items);
                    GameData_1.default.inviteAwards.push(decodeMsg.award_id);
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.SHARE_REWARD, decodeMsg.items);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_ROOM_GET_TODAY_TOTAL_KILL_GOLD:
                    decodeMsg = ProtoMsg.PBCsRoomGetTodayTotalKillGoldResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resTodayKillGold(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_SEND_SHARE_INFO:
                    decodeMsg = ProtoMsg.PbCsGamePlayerSendShareInfoMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    GameData_1.default.inviteNum = decodeMsg.uid_arr.length;
                    GameData_1.default.inviteAwards = decodeMsg.award_arr;
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_DEBRIS_COMPOSE:
                    decodeMsg = ProtoMsg.PbCsGameDebrisComposeResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resDebrisCompose(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_DEBRIS_COMPOSE_LIST:
                    decodeMsg = ProtoMsg.PbCsGameDebrisComposeListMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resPlayerComposeList(decodeMsg);
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_GUIDE_UPLOAD:
                    decodeMsg = ProtoMsg.PBCsGameGuideUploadResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    if (decodeMsg.guide_type == 0) GameData_1.default.roomguide = true; else if (decodeMsg.guide_type == 1) GameData_1.default.numberState = true;
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_ACTIVITY_START_BROAD:
                    decodeMsg = ProtoMsg.PBCsGameActivityStartBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    GameData_1.default.activityData = decodeMsg.activities;
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_ACTIVITY_END_BROAD:
                    decodeMsg = ProtoMsg.PBCsGameActivityEndBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_ACTIVITY_PHONE_BILL_GET:
                    decodeMsg = ProtoMsg.PBCsGameActivityPhoneBillGetResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_ACTIVITY_PUBLIC_NUMBER_GET:
                    decodeMsg = ProtoMsg.PBCsGameActivityPublicNumberGetResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_ACTIVITY_PUBLIC_NUMBER_REWARD:
                    decodeMsg = ProtoMsg.PBCsGameActivityPublicNumberRewardResMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    break;

                  case ProtoMsg.emCSMsgId.CS_MSG_GAME_ITEM_BAG_FULL_BROAD:
                    decodeMsg = ProtoMsg.PBCsGameItemBagFullBroadMsg.decode(msg);
                    if (!this.isMsgValid(decodeMsg)) return;
                    this.resPlayerItemFall(decodeMsg);
                    break;

                  default:
                    break;
                }
                this.filtMsglog(protoType, time, decodeMsg);
            };
            NetManager.prototype.filtMsglog = function(protoType, time, decodeMsg) {
                if (protoType != ProtoMsg.emCSMsgId.CS_MSG_ROOM_BROAD_BULLET && protoType != ProtoMsg.emCSMsgId.CS_MSG_GAME_NEW_ANNOUNCEMENT && protoType != ProtoMsg.emCSMsgId.CS_MSG_ROOM_BROAD_HIT) {
                    GlobalFunc_1.default.log("socket receive:" + protoType, ProtoMsg.emCSMsgId[protoType], decodeMsg);
                    console.log("-----------------------------------------");
                }
            };
            NetManager.prototype.resPlayerKick = function() {
                this.isKicked = true;
                EventDis_1.default.dispatchEvent("sc_player_kick_2");
            };
            NetManager.prototype.encodeMsg = function(cls, protoType, protoB) {
                var msg = cls.create(protoB);
                var buff = cls.encode(msg).finish();
                this.send(protoType, buff);
            };
            NetManager.prototype.isMsgSuc = function(msg) {
                if (!msg || msg.ret != 0) return false; else return true;
            };
            NetManager.prototype.reqPlayerLogin = function() {
                var protoB = new ProtoMsg.PbCsPlayerLoginReqMsg();
                protoB.account = GameData_1.default.account;
                protoB.login_type = GameData_1.default.accountType;
                protoB.token = GameData_1.default.token;
                protoB.uid = +GameData_1.default.uid;
                protoB.version = globalConst_1.default.clientVer;
                if (GlobalVar_1.default.isWx) {
                    var queryList = wx.getLaunchOptionsSync();
                    if (queryList != undefined && queryList.query && queryList.query.uid) GameData_1.default.queryId = queryList.query.uid;
                }
                protoB.invite_uid = GameData_1.default.queryId;
                this.encodeMsg(ProtoMsg.PbCsPlayerLoginReqMsg, ProtoMsg.emCSMsgId.CS_MSG_PLAYER_LOGIN, protoB);
            };
            NetManager.prototype.resPlayerLogin = function(decodeMsg) {
                this.doLogin(decodeMsg);
                this.reqHeartBeat();
                this.reqLoadHelp();
                Laya.timer.loop(10 * 1e3, this, this.reqHeartBeat);
            };
            NetManager.prototype.reqHeartBeat = function() {
                var protoType = ProtoMsg.emSSMsgId.SVR_MSG_HEART_BEAT;
                var proto = new Uint8Array(0);
                this.send(protoType, proto);
            };
            NetManager.prototype.resHeartBeat = function(decodeMsg) {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.HEART_BEAT, decodeMsg.now_time_msec);
            };
            NetManager.prototype.reqEnterRoom = function(data) {
                console.log(data);
                console.log("-----------------22222");
                var protoB = new ProtoMsg.PbCsGameEnterRoomReqMsg();
                protoB.room_type = data.room_type;
                protoB.enter = data.enter;
                this.encodeMsg(ProtoMsg.PbCsGameEnterRoomReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_ENTER_ROOM, protoB);
            };
            NetManager.prototype.resEnterRoom = function(decodeMsg) {
                globalConst_1.default.enterRoomFlag = true;
                if (decodeMsg.enter) {
                    if (decodeMsg.ret.err_code == ProtoMsg.emResponseCode.CODE_GOLD_NOT_ENOUGH) {
                        GlobalFunc_1.default.enterRoomFailed(decodeMsg.enter_need_gold);
                        return;
                    } else if (decodeMsg.ret.err_code == ProtoMsg.emResponseCode.CODE_GAME_TODAY_GOLD_LIMIT) {
                        var str1 = GlobalFunc_1.default.getColorText("抱歉您已达到今日输赢上限");
                        var str2 = GlobalFunc_1.default.getColorText("无法继续捕鱼，欢迎明日再来");
                        SceneM_1.default.addToMiddLayer(new CommonDialog_1.default(1, [ str1 ], [ str2 ], "确定", "提示", true), globalConst_1.default.dialogLayer);
                        return;
                    }
                    BattleData_1.default.setRoomInfo(decodeMsg);
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.ENTER_ROOM_SUCCESS, decodeMsg);
                } else EventDis_1.default.dispatchEvent(GlobalVar_1.default.LEAVE_ROOM_SUCCESS);
            };
            NetManager.prototype.reqShoot = function(data) {
                var protoB = new ProtoMsg.PBCsRoomPlayerBulletReqMsg();
                protoB.bullet_id = data.bullet_id;
                protoB.bullet_type = data.bullet_type;
                protoB.rotation_angle = data.rotation_angle;
                this.encodeMsg(ProtoMsg.PBCsRoomPlayerBulletReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_BULLET, protoB);
            };
            NetManager.prototype.resShootFail = function(decodeMsg) {
                GlobalFunc_1.default.log("请求发射子弹失败");
            };
            NetManager.prototype.resShootBroad = function(decodeMsg) {
                EventDis_1.default.dispatchEvent("shoot_notice_broadCast", decodeMsg);
            };
            NetManager.prototype.reqHit = function(data) {
                var protoB = new ProtoMsg.PBCsRoomPlayerHitReqMsg();
                protoB.bullet_id = data.bulletId;
                protoB.fish_id = data.fishUniqId;
                this.encodeMsg(ProtoMsg.PBCsRoomPlayerHitReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_HIT, protoB);
            };
            NetManager.prototype.resHitFail = function(decodeMsg) {
                GlobalFunc_1.default.log("请求击中鱼失败");
            };
            NetManager.prototype.resHitBroad = function(decodeMsg) {
                if (decodeMsg.drops) EventDis_1.default.dispatchEvent("killFish_broad", decodeMsg); else ;
            };
            NetManager.prototype.reqChangePao = function(data) {
                var proto = new ProtoMsg.PBCsRoomPlayerChangePaoReqMsg();
                proto.pao = data.pao;
                this.encodeMsg(ProtoMsg.PBCsRoomPlayerChangePaoReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_CHANGE_PAO, proto);
            };
            NetManager.prototype.resChangePao = function(data) {
                EventDis_1.default.dispatchEvent("change_paobei_notice", data);
            };
            NetManager.prototype.reqSetGuideStep = function() {
                var proto = new ProtoMsg.PbCsGameUpdateGuideStepReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGameUpdateGuideStepReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_UPDATE_GUIDE_STEP, proto);
            };
            NetManager.prototype.resMailMsg = function(decodeMsg) {
                if (decodeMsg.login) MailDialog_1.g_mailsData.initMailData(decodeMsg.mails); else {
                    MailDialog_1.g_mailsData.updateMailData(decodeMsg.mails);
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.UPDATA_MAIL_NUM);
                }
            };
            NetManager.prototype.reqReadMail = function(data) {
                var proto = new ProtoMsg.PbCsGamePlayerReadMailReqMsg();
                proto.mail_id = data.mail_id;
                this.encodeMsg(ProtoMsg.PbCsGamePlayerReadMailReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_PLAYER_READ_MAIL, proto);
            };
            NetManager.prototype.resReadMail = function(decodeMsg) {};
            NetManager.prototype.reqAttachMail = function(data) {
                var proto = new ProtoMsg.PbCsGamePlayerAttachMailReqMsg();
                proto.mail_id = data.mail_id;
                this.encodeMsg(ProtoMsg.PbCsGamePlayerAttachMailReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_PLAYER_ATTACH_MAIL, proto);
            };
            NetManager.prototype.resAttachMail = function(decodeMsg) {
                EventDis_1.default.dispatchEvent("attach_mail", decodeMsg);
            };
            NetManager.prototype.reqDelMail = function(data) {
                var proto = new ProtoMsg.PbCsGamePlayerDelMailReqMsg();
                proto.mail_id = data.mail_id;
                this.encodeMsg(ProtoMsg.PbCsGamePlayerDelMailReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_PLAYER_DEL_MAIL, proto);
            };
            NetManager.prototype.resDelMail = function(decodeMsg) {};
            NetManager.prototype.reqGetPlayerInfo = function(uid) {
                var proto = new ProtoMsg.PbCsGameGetPlayerInfoReqMsg();
                proto.uid = uid;
                this.encodeMsg(ProtoMsg.PbCsGameGetPlayerInfoReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_GET_PLAYER_INFO, proto);
            };
            NetManager.prototype.reqPackageBuy = function(data) {
                var proto = new ProtoMsg.PbCsGameBagBuyItemReqMsg();
                proto.item_id = data.itemId;
                proto.count = data.itemNum;
                this.encodeMsg(ProtoMsg.PbCsGameBagBuyItemReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_BAG_BUY_ITEM, proto);
            };
            NetManager.prototype.resPackageBuy = function(decodeMsg) {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ITEM_BUY_NOTICE, decodeMsg);
            };
            NetManager.prototype.reqPackageZengSong = function(data) {
                var proto = new ProtoMsg.PbCsGameBagZengSongReqMsg();
                proto.item_id = data.itemId;
                proto.count = data.itemNum;
                proto.zs_uid = data.uid;
                this.encodeMsg(ProtoMsg.PbCsGameBagZengSongReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_BAG_ZENGSONG, proto);
            };
            NetManager.prototype.reqXyzpReward = function() {
                var proto = new ProtoMsg.PBCsRoomPlayerXyzpGetRewardReqMsg();
                this.encodeMsg(ProtoMsg.PBCsRoomPlayerXyzpGetRewardReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_XYZP_GET_REWARD, proto);
            };
            NetManager.prototype.resPackageZengSong = function(decodeMsg) {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ITEM_ZENG_SONG_NOTICE, decodeMsg);
            };
            NetManager.prototype.reqStartHaiWangFish = function() {
                var proto = new ProtoMsg.PBCsRoomPlayerHwbzStartReqMsg();
                this.encodeMsg(ProtoMsg.PBCsRoomPlayerHwbzStartReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_HWBZ_START, proto);
            };
            NetManager.prototype.resStartHaiWangFish = function(decodeMsg) {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.HWBZ_START_GAME);
            };
            NetManager.prototype.reqHaiWangFishClick = function() {
                var proto = new ProtoMsg.PBCsRoomPlayerHwbzClickReqMsg();
                this.encodeMsg(ProtoMsg.PBCsRoomPlayerHwbzClickReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_HWBZ_CLICK, proto);
            };
            NetManager.prototype.resHaiWangFishClick = function(decodeMsg) {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.HWBZ_CLICK_EVENT, decodeMsg);
            };
            NetManager.prototype.reqGetLoginRouletteReward = function() {
                var proto = new ProtoMsg.PbCsRoundPlateReqMsg();
                this.encodeMsg(ProtoMsg.PbCsRoundPlateReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_ROUND_PLATE, proto);
            };
            NetManager.prototype.resGetLoginRouletteReward = function(decodeMsg) {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.LOGIN_ROULETTE_REWARD, decodeMsg);
            };
            NetManager.prototype.reqWholeRewardLoad = function() {
                var proto = new ProtoMsg.PbCsGameGetZhengDianRewardListReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGameGetZhengDianRewardListReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_GET_ZHENG_DIAN_REWARD_LIST, proto);
            };
            NetManager.prototype.reqWholeReward = function(id) {
                var proto = new ProtoMsg.PbCsGameTakeZhengDianRewardReqMsg();
                proto.list_id = id;
                this.encodeMsg(ProtoMsg.PbCsGameTakeZhengDianRewardReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_TAKE_ZHENG_DIAN_REWARD, proto);
            };
            NetManager.prototype.reqLoadHelp = function() {
                var proto = new ProtoMsg.PbCsGameDoleLeftCountReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGameDoleLeftCountReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_DOLE_LEFT_COUNT, proto);
            };
            NetManager.prototype.reqGetHelp = function() {
                var proto = new ProtoMsg.PbCsGameTakeDoleReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGameTakeDoleReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_TAKE_DOLE, proto);
            };
            NetManager.prototype.reqZshyGameFinish = function() {
                var proto = new ProtoMsg.PBCsRoomPlayerZshyCollectReqMsg();
                this.encodeMsg(ProtoMsg.PBCsRoomPlayerZshyCollectReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_ZSHY_COLLECT, proto);
            };
            NetManager.prototype.reqWldbGameFinish = function() {
                var proto = new ProtoMsg.PBCsRoomPlayerWldbCollectReqMsg();
                this.encodeMsg(ProtoMsg.PBCsRoomPlayerWldbCollectReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_WLDB_COLLECT, proto);
            };
            NetManager.prototype.reqHydtGameFinish = function() {};
            NetManager.prototype.reqBitBomb = function(data) {
                var proto = new ProtoMsg.PBCsRoomPlayerZuantouBombReqMsg();
                proto.fish_ids = data.fish_ids;
                this.encodeMsg(ProtoMsg.PBCsRoomPlayerZuantouBombReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_ZUANTOU_BOMB, proto);
            };
            NetManager.prototype.reqpullExchangeRecord = function() {
                var proto = new ProtoMsg.PbCsGameExchangeRecordReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGameExchangeRecordReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_EXCHANGE_RECORD, proto);
            };
            NetManager.prototype.respullExChangeRecord = function(decodeMsg) {
                EventDis_1.default.dispatchEvent("pull_record_success", decodeMsg);
            };
            NetManager.prototype.reqCommitExchangeAddress = function(address) {
                var proto = new ProtoMsg.PbCsGameExchangeAddInfoReqMsg();
                proto.address = address;
                this.encodeMsg(ProtoMsg.PbCsGameExchangeAddInfoReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_EXCHANGE_ADD_INFO, proto);
            };
            NetManager.prototype.resCommitExchangeAddress = function(decodeMsg) {
                EventDis_1.default.dispatchEvent("commit_address_success");
            };
            NetManager.prototype.reqPullExchangeAddress = function() {
                var proto = new ProtoMsg.PbCsGameExchangeGetInfoReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGameExchangeGetInfoReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_EXCHANGE_GET_INFO, proto);
            };
            NetManager.prototype.resPullExchangeAddress = function(decodeMsg) {
                EventDis_1.default.dispatchEvent("pull_address_success", decodeMsg);
            };
            NetManager.prototype.reqExchangeItem = function(data) {
                var proto = new ProtoMsg.PbCsGameExchangeByLotteryReqMsg();
                proto.exchange_id = data.exchange_id;
                proto.address = data.address;
                proto.quantity = data.count;
                GlobalFunc_1.default.log("兑换数量:" + data.count);
                GlobalFunc_1.default.log("兑换ID:" + data.exchange_id);
                this.encodeMsg(ProtoMsg.PbCsGameExchangeByLotteryReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_EXCHANGE_BY_LOTTERY, proto);
            };
            NetManager.prototype.resExchangeItem = function(decodeMsg) {
                PlayerData_1.default.setItemNum(globalConst_1.default.ticket + "", decodeMsg.left_lottery);
                !decodeMsg.real && PlayerData_1.default.addItemsNum([ {
                    item_id: decodeMsg.item_id,
                    count: decodeMsg.item_count * decodeMsg.quantity
                } ]);
                EventDis_1.default.dispatchEvent("exchange_success", decodeMsg);
            };
            NetManager.prototype.reqDantouRank = function(type_id) {
                var proto = new ProtoMsg.PbCsGameDanTouRankingListReqMsg();
                proto.type_id = type_id;
                this.encodeMsg(ProtoMsg.PbCsGameDanTouRankingListReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_DANTOU_RANKING_LIST, proto);
            };
            NetManager.prototype.resDantouRank = function(decodeMsg) {
                EventDis_1.default.dispatchEvent("get_dantou_rank_suc", decodeMsg);
            };
            NetManager.prototype.reqDaoDanHit = function(data) {
                if (data.fishId == "" || data.itemId == -1) return;
                var proto = new ProtoMsg.PBCsRoomPlayerUseItemReqMsg();
                proto.fish_id = data.fishId;
                proto.item_id = data.itemId;
                proto.item_count = !!data.item_count ? data.item_count : 1;
                this.encodeMsg(ProtoMsg.PBCsRoomPlayerUseItemReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_USE_ITEM, proto);
            };
            NetManager.prototype.resDaoDanHitFail = function(decodeMsg) {
                PlayerData_1.default.updateItemsNum({
                    items: [ {
                        item_id: decodeMsg.item_id,
                        count: decodeMsg.item_count
                    } ]
                });
            };
            NetManager.prototype.reqYesterDayGold = function() {
                var proto = new ProtoMsg.PbCsGameYesterdayKilledGoldReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGameYesterdayKilledGoldReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_YESTERDAY_KILLED_GOLD, proto);
            };
            NetManager.prototype.reqYesterDayReward = function() {
                var proto = new ProtoMsg.PbCsGameYesterdayKilledLotteryReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGameYesterdayKilledLotteryReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_YESTERDAY_KILLED_LOTTERY, proto);
            };
            NetManager.prototype.reqPcOrder = function(obj) {
                var url = globalConst_1.default.orderUrl151;
                obj["QdId"] = "-1";
                obj["NoCheck"] = "1";
                var param = GlobalFunc_1.default.sortObj(obj, true);
                param = param.slice(0, param.length - 1);
                var head = [ "Content-Type", "application/x-www-form-urlencoded" ];
                HttpManager_1.default.connect(url, function(data) {
                    if (data.ret == ProtoMsg.emResponseCode.WEB_CODE_PAY_ORDER_DAY_LIMIT || data.ret == ProtoMsg.emResponseCode.WEB_CODE_PAY_ORDER_MONTH_LIMIT) {
                        var str1 = GlobalFunc_1.default.getColorText("抱歉您已达到每日充值上限");
                        var str2 = GlobalFunc_1.default.getColorText("明日可继续充值");
                        SceneM_1.default.addToMiddLayer(new CommonDialog_1.default(1, [ str1 ], [ str2 ], "确定", "提示", true), globalConst_1.default.dialogLayer);
                        return;
                    }
                    if (data.ret != 0) return;
                    url = globalConst_1.default.orderUrl151Check;
                    obj.OrderId = data.OrderId;
                    var sign = GlobalFunc_1.default.sortObj(obj);
                    obj["Sign"] = MD5(sign);
                    obj["NoCheck"] = "1";
                    sign = GlobalFunc_1.default.sortObj(obj);
                    HttpManager_1.default.connect(url, function(data) {}, "post", head, sign);
                }, "post", head, param);
            };
            NetManager.prototype.reqShopOrder = function(data) {
                if (!GlobalVar_1.default.isWx) {
                    this.reqPcOrder(data);
                    return;
                }
                if (GlobalFunc_1.default.isIos()) {
                    new WarningMessage_1.WarningMessage("ios暂未开放充值");
                    return;
                }
                if (GameData_1.default.isPaing) return;
                GameData_1.default.isPaing = true;
                var that = this;
                var url = GlobalVar_1.default.orderUrl;
                GlobalFunc_1.default.log("请求服务器", url, data);
                wx.request({
                    url: url,
                    method: "POST",
                    data: data,
                    header: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    success: function(res) {
                        if (res.data.ret == ProtoMsg.emResponseCode.WEB_CODE_PAY_ORDER_DAY_LIMIT || res.data.ret == ProtoMsg.emResponseCode.WEB_CODE_PAY_ORDER_MONTH_LIMIT) {
                            var str1 = GlobalFunc_1.default.getColorText("抱歉您已达到每日充值上限");
                            var str2 = GlobalFunc_1.default.getColorText("明日可继续充值");
                            SceneM_1.default.addToMiddLayer(new CommonDialog_1.default(1, [ str1 ], [ str2 ], "确定", "提示", true), globalConst_1.default.dialogLayer);
                        } else if (res.data && res.data.ret == 0 && !!res.data.OrderId) {
                            GlobalFunc_1.default.log("请求服务器订单号成功");
                            data.OrderId = res.data.OrderId;
                            that.reqWxPay(data);
                        } else {
                            for (var k in res) GlobalFunc_1.default.log(res[k]);
                            GameData_1.default.isPaing = false;
                            GlobalFunc_1.default.log("请求服务器订单号失败");
                            EventDis_1.default.dispatchEvent(GlobalVar_1.default.COMMODITY_PAY_FALSE);
                        }
                    },
                    fail: function(res) {
                        GameData_1.default.isPaing = false;
                        GlobalFunc_1.default.log("请求服务器订单号失败");
                        EventDis_1.default.dispatchEvent(GlobalVar_1.default.COMMODITY_PAY_FALSE);
                    }
                });
            };
            NetManager.prototype.reqWxPay = function(data) {
                var that = this;
                wx.requestMidasPayment({
                    mode: "game",
                    env: 0,
                    offerId: "1450018131",
                    currencyType: "CNY",
                    platform: "android",
                    buyQuantity: data.Amount,
                    zoneId: 1,
                    success: function(res) {
                        GlobalFunc_1.default.log("支付米大师成功" + res.data);
                        that.reqShopPay(data);
                    },
                    fail: function(res) {
                        GameData_1.default.isPaing = false;
                        EventDis_1.default.dispatchEvent(GlobalVar_1.default.COMMODITY_PAY_FALSE);
                        GlobalFunc_1.default.log("米大师支付取消");
                    }
                });
            };
            NetManager.prototype.reqShopPay = function(info) {
                var sign = GlobalFunc_1.default.sortObj(info);
                info["Sign"] = MD5(sign);
                wx.request({
                    url: GlobalVar_1.default.payUrl,
                    method: "POST",
                    data: info,
                    header: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    success: function(res) {
                        if (res.data && res.data.ret == 0) {
                            GlobalFunc_1.default.log("服务器扣费成功");
                            GameData_1.default.isPaing = false;
                            EventDis_1.default.dispatchEvent(GlobalVar_1.default.COMMODITY_PAY_OK);
                        } else {
                            GameData_1.default.isPaing = false;
                            for (var k in res) GlobalFunc_1.default.log(res[k]);
                            GlobalFunc_1.default.log("服务器扣费失败");
                            EventDis_1.default.dispatchEvent(GlobalVar_1.default.COMMODITY_PAY_FALSE);
                        }
                    },
                    fail: function(res) {
                        GameData_1.default.isPaing = false;
                        EventDis_1.default.dispatchEvent(GlobalVar_1.default.COMMODITY_PAY_FALSE);
                        GlobalFunc_1.default.log("服务器扣费失败");
                    }
                });
            };
            NetManager.prototype.reqEquipSkin = function(pao_item) {
                var proto = new ProtoMsg.PbCsGameEquipPaoItemReqMsg();
                proto.pao_item = pao_item;
                this.encodeMsg(ProtoMsg.PbCsGameEquipPaoItemReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_EQUIP_PAO_ITEM, proto);
            };
            NetManager.prototype.resEquipSkin = function(decodeMsg) {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ROOM_SKIN_CHANGE, decodeMsg);
                decodeMsg.uid = GameData_1.default.uid;
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ROOM_SKIN_CHANGE_BROAD, decodeMsg);
            };
            NetManager.prototype.resEquipSkinBroad = function(decodeMsg) {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ROOM_SKIN_CHANGE_BROAD, decodeMsg);
            };
            NetManager.prototype.reqTakeMing = function() {
                var proto = new ProtoMsg.PbCsGamePlayerTakeMingriReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGamePlayerTakeMingriReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_TAKE_MINGRI, proto);
            };
            NetManager.prototype.reqSetMing = function() {
                var proto = new ProtoMsg.PbCsGamePlayerSetMingriReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGamePlayerSetMingriResMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_SET_MINGRI, proto);
            };
            NetManager.prototype.reqAddYao = function() {
                var proto = new ProtoMsg.PbCsGamePlayerAddYaoyiyaoReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGamePlayerAddYaoyiyaoReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_ADD_YAOYIYAO, proto);
            };
            NetManager.prototype.reqOnceYao = function() {
                var proto = new ProtoMsg.PbCsGamePlayerOnceYaoyiyaoReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGamePlayerOnceYaoyiyaoReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_ONCE_YAOYIYAO, proto);
            };
            NetManager.prototype.reqMonthReward = function() {
                var proto = new ProtoMsg.PbCsGamePlayerYuekaDailyPacketReqMsg();
                this.encodeMsg(ProtoMsg.PbCsGamePlayerYuekaDailyPacketReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_YUEKA_DAILY_PACKET, proto);
            };
            NetManager.prototype.reqChangeDragonState = function(state, dragonId) {
                var proto = new ProtoMsg.PBCsRoomPlayerChangeLongPaoReqMsg();
                proto.change_flag = state;
                proto.longpao_id = dragonId;
                this.encodeMsg(ProtoMsg.PBCsRoomPlayerChangeLongPaoReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_CHANGE_LONGPAO, proto);
            };
            NetManager.prototype.reqShareAward = function(id) {
                var proto = new ProtoMsg.PbCsGamePlayerGetShareAwardsReqMsg();
                proto.award_id = id;
                this.encodeMsg(ProtoMsg.PbCsGamePlayerGetShareAwardsReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_GET_SHARE_AWARDS, proto);
            };
            NetManager.prototype.reqTodayKillGold = function() {
                var proto = new ProtoMsg.PBCsRoomGetTodayTotalKillGoldReqMsg();
                this.encodeMsg(ProtoMsg.PBCsRoomGetTodayTotalKillGoldReqMsg, ProtoMsg.emCSMsgId.CS_MSG_ROOM_GET_TODAY_TOTAL_KILL_GOLD, proto);
            };
            NetManager.prototype.resTodayKillGold = function(decodeMsg) {
                EventDis_1.default.dispatchEvent("today_gold_back", decodeMsg);
            };
            NetManager.prototype.reqDebrisCompose = function(itemId, count) {
                var proto = new ProtoMsg.PbCsGameDebrisComposeReqMsg();
                proto.dst_item_count = count;
                proto.dst_item_id = +itemId;
                this.encodeMsg(ProtoMsg.PbCsGameDebrisComposeReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_DEBRIS_COMPOSE, proto);
            };
            NetManager.prototype.resDebrisCompose = function(decodeMsg) {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.HALL_DEBRISE_COMPOSE, decodeMsg);
            };
            NetManager.prototype.reqGuideSend = function(type) {
                var proto = new ProtoMsg.PBCsGameGuideUploadReqMsg();
                proto.guide_type = type;
                this.encodeMsg(ProtoMsg.PBCsGameGuideUploadReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_GUIDE_UPLOAD, proto);
            };
            NetManager.prototype.reqPhoneBillGet = function(activity_id) {
                var proto = new ProtoMsg.PBCsGameActivityPhoneBillGetReqMsg();
                proto.activity_id = activity_id;
                this.encodeMsg(ProtoMsg.PBCsGameActivityPhoneBillGetReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_ACTIVITY_PHONE_BILL_GET, proto);
            };
            NetManager.prototype.reqPublicNumberReward = function(activity_id) {
                var proto = new ProtoMsg.PBCsGameActivityPublicNumberGetReqMsg();
                proto.activity_id = activity_id;
                this.encodeMsg(ProtoMsg.PBCsGameActivityPublicNumberGetReqMsg, ProtoMsg.emCSMsgId.CS_MSG_GAME_ACTIVITY_PUBLIC_NUMBER_REWARD, proto);
            };
            NetManager.prototype.resPlayerItemFall = function(decodeMsg) {
                var itemName = PlayerData_1.default.getItemData(+decodeMsg.item_id).itemName;
                var str = GlobalFunc_1.default.getColorText("您的" + itemName + "已到达上限,请尽快使用!");
                var common = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                SceneM_1.default.addToMiddLayer(common, globalConst_1.default.dialogLayer);
            };
            NetManager.prototype.resSwitchScene = function(decodeMsg) {
                EventDis_1.default.dispatchEvent("switchSceneId", decodeMsg);
            };
            NetManager.prototype.resRebornFish = function(decodeMsg) {
                Laya.timer.once(1e3, EventDis_1.default, EventDis_1.default.dispatchEvent, [ "rebornFish", decodeMsg ], false);
            };
            NetManager.prototype.resOverTime = function() {
                EventDis_1.default.dispatchEvent("roomOverTime");
            };
            NetManager.prototype.resPlayInfo = function(decodeMsg) {
                var player = decodeMsg.room_player;
                if (!player) {
                    GlobalFunc_1.default.log("玩家信息无效", decodeMsg);
                    return;
                }
                if (decodeMsg.enter) {
                    BattleData_1.default.updateSeatInfo(player);
                    EventDis_1.default.dispatchEvent("player_enter_room", player);
                } else {
                    BattleData_1.default.updateSitInfoByLeave(player);
                    EventDis_1.default.dispatchEvent("player_leave_room", player);
                }
            };
            NetManager.prototype.resGetGuideStep = function(step) {
                PlayerData_1.default.guideStep = step;
                step == 0 && GlobalFunc_1.default.switchRoom(1);
            };
            NetManager.prototype.resGetPlayerInfo = function(decodeMsg) {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.PLATER_INFO_NOTICE, decodeMsg);
            };
            NetManager.prototype.resGetLoginRouletteInfo = function(decodeMsg) {
                PlayerData_1.default.setLoginRouletteInfo(decodeMsg);
            };
            NetManager.prototype.resRoomSpecialFishEnd = function(decodeMsg) {
                GlobalFunc_1.default.log("rrrrrrrrrrrrrrr", GlobalFunc_1.default.getClientTime());
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ROOM_SPECIAL_FISH_END, decodeMsg);
            };
            NetManager.prototype.resUpdateItemBroad = function(decodeMsg) {
                PlayerData_1.default.updateItemsNum(decodeMsg);
            };
            NetManager.prototype.resDaoDanHitSuccess = function(decodeMsg) {
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ROOM_USE_ITEM_NOTICE, decodeMsg);
            };
            NetManager.prototype.resUpdateConfig = function() {
                EventDis_1.default.dispatchEvent("updateConfigNotice");
            };
            NetManager.prototype.resNewAnnouncement = function(decodeMsg) {
                EventDis_1.default.dispatchEvent("new_notice_coming", decodeMsg);
            };
            NetManager.prototype.resChangeDragonCannonState = function(decodeMsg) {
                if (decodeMsg.change_flag == 1) EventDis_1.default.dispatchEvent(GlobalVar_1.default.ROOM_CHANGE_DRAGON_CANNON_START, {
                    uid: decodeMsg.uid,
                    longpao_id: decodeMsg.longpao_id
                }); else {
                    var seatIndex = BattleData_1.default.getUserSeatByUid(decodeMsg.uid);
                    if (seatIndex == FishData_1.default.mySeatIndex) return;
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.ROOM_CHANGE_DRAGON_CANNON_END, seatIndex);
                }
            };
            NetManager.prototype.resPlayerComposeList = function(decodeMsg) {
                hallData_1.default.initComposeList(decodeMsg.list);
            };
            NetManager.Instance = new NetManager();
            return NetManager;
        }();
        exports.NetManager = NetManager;
        var g_NetManager;
        g_NetManager = NetManager.Instance;
        exports.default = g_NetManager;
    }, {
        ".././externals/long.js": 74,
        ".././externals/md5.min.js": 75,
        "../common/CommonDialog": 7,
        "../common/NoticeDlg": 17,
        "../common/SceneM": 19,
        "../common/WaitManager": 24,
        "../common/WarningMessage": 25,
        "../datas/hallData/GameData": 26,
        "../datas/hallData/PlayerData": 27,
        "../datas/hallData/hallData": 28,
        "../datas/roomData/BattleData": 29,
        "../datas/roomData/FishData": 30,
        "../dialog/hallDlg/MailDialog": 53,
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/GlobalVar": 90,
        "../globalConst/globalConst": 97,
        "./HttpManager": 100,
        "./WxLoginManager": 102
    } ],
    102: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var NetManager_1 = require("./NetManager");
        var GameData_1 = require("../datas/hallData/GameData");
        var EventDis_1 = require("../globalConst/EventDis");
        var globalConst_1 = require("../globalConst/globalConst");
        var GlobalVar_1 = require("../globalConst/GlobalVar");
        var GlobalUI_1 = require("../globalConst/GlobalUI");
        var WxLoginManager = function() {
            function WxLoginManager() {
                this.isWxlogining = false;
                this.reGetNum = 5;
                this.codeOk = false;
                this.curCode = undefined;
            }
            WxLoginManager.prototype.init = function() {
                wx.getSetting({
                    success: function(res) {
                        if (res.authSetting["scope.userInfo"]) GlobalVar_1.default.isWxGranted = true; else GlobalVar_1.default.isWxGranted = false;
                    }
                });
            };
            WxLoginManager.prototype.getWxCode = function(cb) {
                wx.login({
                    success: function(res) {
                        GlobalFunc_1.default.log(" 登录code 获取成功 succ:", res.code);
                        cb(res.code);
                    },
                    fail: function(err) {
                        GlobalFunc_1.default.log("微信登录code获取失败");
                    }
                });
            };
            WxLoginManager.prototype.getUserInfo = function(cb) {
                wx.getUserInfo({
                    success: function(res) {
                        GlobalFunc_1.default.log(" 登录userInfo 获取成功 succ:");
                        GlobalFunc_1.default.log(res.rawData);
                        cb(res);
                    },
                    fail: function(err) {
                        GlobalFunc_1.default.log("微信登录UserInfo获取失败");
                    }
                });
            };
            WxLoginManager.prototype.begin = function() {
                var _this = this;
                NetManager_1.default.newJson.code = undefined;
                this.reGetNum = 10;
                if (GlobalVar_1.default.isWxGranted) {
                    GlobalFunc_1.default.log("已授权登录");
                    this.getWxCode(function(code) {
                        g_WxLoginManager.curCode = code;
                        _this.getUserInfo(function(res) {
                            _this.reSendTime = 5;
                            _this.beginOld(res, code);
                        });
                    });
                } else {
                    GlobalFunc_1.default.sendAldNewuser("_6.11 微信请求授权和用户信息1");
                    GlobalFunc_1.default.log("未授权登录");
                    GlobalUI_1.default.WxLoadingScene.isShowBtn = true;
                }
            };
            WxLoginManager.prototype.beginOld = function(res, code) {
                if (res.rawData) {
                    var jsonData = JSON.parse(res.rawData);
                    GameData_1.default.headImg = jsonData.avatarUrl;
                }
                var newJson = {};
                newJson.rawData = res.rawData;
                newJson.signature = res.signature;
                var loginUrl = globalConst_1.default.httpUrl + "?login_type=4&channel=" + GlobalVar_1.default.channelId;
                newJson.code = code;
                GlobalFunc_1.default.log("已授权用户发起登录:", code, g_WxLoginManager.curCode);
                GlobalFunc_1.default.log(loginUrl);
                var channel = wx.getStorageSync("channelLocal");
                if (!channel) channel = "1038";
                newJson.channel = channel;
                if (g_WxLoginManager.reqFunc) g_WxLoginManager.reqFunc.abort();
                g_WxLoginManager.reqFunc = wx.request({
                    url: loginUrl,
                    method: "GET",
                    data: newJson,
                    success: function(res) {
                        if (res.data.ret == 0 && res.data.code && res.data.code == g_WxLoginManager.curCode) {
                            if (res.data.code) var data = res.data;
                            GameData_1.default.serverName = NetManager_1.default.serverName;
                            Laya.LocalStorage.setItem("userAccount", GameData_1.default.account);
                            var innerData = data.login_info;
                            GameData_1.default.setLoginInfo(innerData);
                            GlobalFunc_1.default.log("已授权用户微信登录成功");
                            GlobalFunc_1.default.log("cur code:", g_WxLoginManager.curCode, res.data.code);
                            GlobalFunc_1.default.remoteLog("6.2已授权用户请求登录结束成功");
                            EventDis_1.default.dispatchEvent("switchSteps", [ 9 ]);
                            NetManager_1.default.startWx();
                        } else {
                            GlobalFunc_1.default.remoteLog("6.21已授权用户请求登录结束失败后端错误1");
                            GlobalFunc_1.default.log("已授权用户微信登录失败，重登录1");
                        }
                    },
                    fail: function(res) {
                        GlobalFunc_1.default.remoteLog("6.22已授权用户请求登录结束失败微信错误2");
                        GlobalFunc_1.default.log("已授权用户微信登录失败，重登录2");
                    }
                });
            };
            WxLoginManager.Instance = new WxLoginManager();
            return WxLoginManager;
        }();
        exports.WxLoginManager = WxLoginManager;
        var g_WxLoginManager;
        g_WxLoginManager = WxLoginManager.Instance;
        exports.default = g_WxLoginManager;
    }, {
        "../datas/hallData/GameData": 26,
        "../globalConst/EventDis": 85,
        "../globalConst/GlobalFunc": 87,
        "../globalConst/GlobalUI": 89,
        "../globalConst/GlobalVar": 90,
        "../globalConst/globalConst": 97,
        "./NetManager": 101
    } ],
    103: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var FishData_1 = require("../../datas/roomData/FishData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var SceneM_1 = require("../../common/SceneM");
        var TimeLineManager_1 = require("../../globalConst/TimeLineManager");
        var SoundM_1 = require("../../common/SoundM");
        var BitBulletNode = function(_super) {
            __extends(BitBulletNode, _super);
            function BitBulletNode() {
                var _this = _super.call(this) || this;
                _this.preName = "bullets";
                _this._x1 = 0;
                _this._x2 = globalConst_1.default.stageW;
                _this._y1 = 0;
                _this._y2 = globalConst_1.default.stageH;
                _this._hitFlag = 0;
                _this._speed1 = 1500;
                _this._speed2 = 900;
                _this._stateTime1 = 5e3;
                _this._stateTime2 = 3e3;
                _this._flyTimeSum = 0;
                _this._flyState = 1;
                _this.trailImgs = [];
                return _this;
            }
            BitBulletNode.prototype.destroy = function() {
                !!this.redBitTimeLine && this.redBitTimeLine.reset();
                this.clearTrail();
                Laya.Tween.clearAll(this);
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
                this.body = null;
                this.destroyChildren();
                this.removeSelf();
            };
            BitBulletNode.prototype.getbulletId = function() {
                return this.bullet_id;
            };
            BitBulletNode.prototype.getFlyState = function() {
                return this._flyState;
            };
            BitBulletNode.prototype.initEvent = function() {};
            BitBulletNode.prototype.initBitBullet = function(param) {
                this.type = "10001";
                this.frameName = this.preName + this.type;
                this.bulletIndex = param.bullet_id;
                this.initAngle = param.angle;
                this.bullet_id = param.bullet_id;
                this.rotation = 90 - this.initAngle;
                this.name = (this.bulletIndex * 1e5).toString();
                this.seatIndex = param.seatIndex;
                this._stateTime1 = globalConst_1.default.bitFlyTime1;
                this._stateTime2 = globalConst_1.default.bitFlyTime2;
                this._speed1 = globalConst_1.default.bitFlySpeed1;
                this._speed2 = globalConst_1.default.bitFlySpeed2;
                this.name = "bitBullet" + this.seatIndex;
                this.body = this.addChild(new Laya.Sprite());
                var bitImg = this.body.addChild(new Laya.Sprite());
                bitImg.loadImage("bullets/zuantou1.png");
                bitImg.pivot(bitImg.width * .5, bitImg.height * .5);
                bitImg.pos(0, 0);
                this.initEvent();
                this.bitFireFly();
            };
            BitBulletNode.prototype.shootTo = function(angle) {
                this.bitFly({
                    x: this.x,
                    y: this.y
                }, -GlobalFunc_1.default.angleToRad(angle || this.initAngle));
            };
            BitBulletNode.prototype.bitTrail = function() {
                var trailImg = new Laya.Image("battle/img_zt_trail.png");
                trailImg.height = 2e3;
                trailImg.anchorX = .5;
                trailImg.anchorY = 0;
                trailImg.blendMode = "lighter";
                return trailImg;
            };
            BitBulletNode.prototype.bitFly = function(lastPos, rad) {
                var data = this.getNextPos(lastPos, rad);
                var nextRad = this.getNextRad(rad);
                this.rotation = 90 + data.angle;
                var callBack = null;
                if (this._hitFlag) callBack = new Laya.Handler(this, function() {
                    this.bitFly(data, nextRad);
                    this.seatIndex == FishData_1.default.mySeatIndex && SoundM_1.default.playSound(globalConst_1.default.Sud_drill_bound, 1);
                }); else callBack = new Laya.Handler(this, function() {
                    this.clearTrail();
                    this.clearFire();
                    this.transState();
                    this.shootTo(-data.angle);
                });
                if (this._flyState == 1) {
                    var trailImg = this.bitTrail();
                    this.trailImgs.push(trailImg);
                    trailImg.pos(this.x, this.y);
                    trailImg.rotation = this.rotation;
                    SceneM_1.default.addToLayer(trailImg, globalConst_1.default.bulletLayer);
                    GlobalFunc_1.default.globalSetZorder(trailImg, 5e3);
                    var imgrad = GlobalFunc_1.default.angleToRad(this.rotation - 90);
                    var imgx = data.x + 2e3 * Math.cos(imgrad);
                    var imgy = data.y + 2e3 * Math.sin(imgrad);
                    var imgtime = data.time + 2e3 / this._speed1 * 1e3;
                    Laya.Tween.to(trailImg, {
                        x: imgx,
                        y: imgy
                    }, imgtime, null, new Laya.Handler(this, function(img) {
                        img.removeSelf();
                        img.destroy();
                    }, [ trailImg ]));
                }
                Laya.Tween.to(this, {
                    x: data.x,
                    y: data.y
                }, data.time, null, callBack);
            };
            BitBulletNode.prototype.bitFireFly = function() {
                this.flyFireAni = GlobalFunc_1.default.getAni("bitTrailFire");
                this.addChild(this.flyFireAni);
                this.flyFireAni.pos(0, 165);
                this.flyFireAni.play();
            };
            BitBulletNode.prototype.clearFire = function() {
                if (!!this.flyFireAni && this.flyFireAni.isPlaying) {
                    this.flyFireAni.removeSelf();
                    this.flyFireAni.destroy();
                }
            };
            BitBulletNode.prototype.getNextPos = function(lastPos, rad) {
                var sin = Math.sin(rad);
                var cos = Math.cos(rad);
                var data = {};
                var angle = GlobalFunc_1.default.radToangle(rad);
                var bool1 = rad > -Math.PI / 2 && rad < Math.PI / 2;
                var bool2 = rad > 0;
                var tns = rad > 0 && rad < Math.PI / 2 || rad > -Math.PI && rad < -Math.PI / 2 ? -1 : 1;
                var d1 = Math.abs((lastPos.x - this._x1) / cos);
                var d2 = Math.abs((this._x2 - lastPos.x) / cos);
                var d3 = Math.abs((lastPos.y - this._y1) / sin);
                var d4 = Math.abs((this._y2 - lastPos.y) / sin);
                var p1 = {
                    x: this._x1,
                    y: lastPos.y + tns * Math.abs(d1 * sin)
                };
                var p2 = {
                    x: this._x2,
                    y: lastPos.y - tns * Math.abs(d2 * sin)
                };
                var p3 = {
                    x: lastPos.x + tns * Math.abs(d3 * cos),
                    y: this._y1
                };
                var p4 = {
                    x: lastPos.x - tns * Math.abs(d4 * cos),
                    y: this._y2
                };
                var distance;
                if (p1.y < this._y2 && p1.y > this._y1 && !bool1) {
                    data = p1;
                    distance = d1;
                    this._hitFlag = 1;
                } else if (p2.y < this._y2 && p2.y > this._y1 && bool1) {
                    data = p2;
                    distance = d2;
                    this._hitFlag = 2;
                } else if (p3.x < this._x2 && p3.x > this._x1 && !bool2) {
                    data = p3;
                    distance = d3;
                    this._hitFlag = 3;
                } else if (p4.x < this._x2 && p4.x > this._x1 && bool2) {
                    data = p4;
                    distance = d4;
                    this._hitFlag = 4;
                } else {
                    GlobalFunc_1.default.log("钻头路径异常！！！");
                    this.destroy();
                    return;
                }
                if (this._flyTimeSum >= this._stateTime1) {
                    data.time = distance / this._speed2 * 1e3;
                    this._flyState = 2;
                } else data.time = distance / this._speed1 * 1e3;
                data.angle = angle;
                this._flyTimeSum += data.time;
                if (this._flyTimeSum >= this._stateTime1 && this._flyState == 1) {
                    this._hitFlag = null;
                    var deltaTime = data.time - (this._flyTimeSum - this._stateTime1);
                    var percent = deltaTime / data.time;
                    data.x = lastPos.x * (1 - percent) + data.x * percent;
                    data.y = lastPos.y * (1 - percent) + data.y * percent;
                    data.time = deltaTime;
                }
                return data;
            };
            BitBulletNode.prototype.getNextRad = function(rad) {
                if (this._hitFlag == 1 || this._hitFlag == 2) return rad > 0 ? Math.PI - rad : -Math.PI - rad;
                return -rad;
            };
            BitBulletNode.prototype.transState = function() {
                this.body.destroyChildren();
                var redBitImg = this.body.addChild(new Laya.Sprite());
                redBitImg.loadImage("battle/img_zt_3.png");
                redBitImg.pivot(redBitImg.width * .5, redBitImg.height * .5);
                redBitImg.pos(0, 0);
                this.redBitTimeLine = TimeLineManager_1.default.creatTimeLine();
                this.redBitTimeLine.addLabel("red_bit_1", 0).to(redBitImg, {
                    scaleX: 1.68,
                    scaleY: .9
                }, 500).addLabel("red_bit_2", 0).to(redBitImg, {
                    scaleX: .9,
                    scaleY: .9
                }, 500);
                this.redBitTimeLine.play(0, true);
                Laya.Tween.to(redBitImg, {
                    rotation: 720
                }, globalConst_1.default.bitFlyTime2);
            };
            BitBulletNode.prototype.clearTrail = function() {
                if (!this.trailImgs) return;
                this.trailImgs.forEach(function(img) {
                    if (!img.destroyed) {
                        img.removeSelf();
                        img.destroy();
                    }
                });
                this.trailImgs = null;
            };
            BitBulletNode.prototype.hitEffect = function() {
                var hitAni = GlobalFunc_1.default.getAni("bitHitFire", 1.4);
                hitAni.rotation = this.rotation;
                SceneM_1.default.addToLayer(hitAni, globalConst_1.default.effectLayer);
                hitAni.pos(this.x, this.y);
                hitAni.play(0, false);
            };
            return BitBulletNode;
        }(Laya.Sprite);
        exports.default = BitBulletNode;
    }, {
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/TimeLineManager": 95,
        "../../globalConst/globalConst": 97
    } ],
    104: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var SceneM_1 = require("../../common/SceneM");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var Bullet_Skin;
        (function(Bullet_Skin) {
            Bullet_Skin[Bullet_Skin["BULLET_1"] = 1] = "BULLET_1";
            Bullet_Skin[Bullet_Skin["BULLET_2"] = 2] = "BULLET_2";
            Bullet_Skin[Bullet_Skin["BULLET_3"] = 3] = "BULLET_3";
            Bullet_Skin[Bullet_Skin["BULLET_4"] = 4] = "BULLET_4";
            Bullet_Skin[Bullet_Skin["BULLET_5"] = 5] = "BULLET_5";
            Bullet_Skin[Bullet_Skin["BULLET_6"] = 6] = "BULLET_6";
            Bullet_Skin[Bullet_Skin["BULLET_7"] = 7] = "BULLET_7";
            Bullet_Skin[Bullet_Skin["BULLET_8"] = 8] = "BULLET_8";
            Bullet_Skin[Bullet_Skin["HONGYUN"] = 10] = "HONGYUN";
        })(Bullet_Skin = exports.Bullet_Skin || (exports.Bullet_Skin = {}));
        var BulletNode = function(_super) {
            __extends(BulletNode, _super);
            function BulletNode() {
                var _this = _super.call(this) || this;
                _this.isCaught = false;
                _this.lockFishId = 0;
                _this._x1 = 0;
                _this._x2 = globalConst_1.default.stageW;
                _this._y1 = 0;
                _this._y2 = globalConst_1.default.stageH;
                _this._hitFlag = 0;
                _this._speed = 1e3;
                _this.type = 1;
                return _this;
            }
            BulletNode.prototype.destroy = function() {
                EventDis_1.default.dispatchEvent("bulletBoom", this.bulletIndex);
                Laya.Tween.clearAll(this);
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
                this.body = null;
                this.destroyChildren();
                this.removeSelf();
            };
            BulletNode.prototype.initBullet = function(param) {
                this.bulletIndex = param.bulletIndex;
                this.initAngle = param.angle;
                this.rotation = 90 - this.initAngle;
                this.specialName = param.sprcialButtle;
                this.seatIndex = param.seatIndex;
                this.bullet_id = param.bullet_id;
                this.body = this.addChild(new Laya.Sprite());
                var bulletSkin = this.setSkin();
                var sp1 = this.addChild(new Laya.Sprite());
                sp1.loadImage(bulletSkin);
                sp1.blendMode = "lighter";
                var bound = sp1.getBounds();
                sp1.pivotY = bound.height * .5;
                sp1.pivotX = bound.width * .5;
                sp1.pos(0, 0);
            };
            BulletNode.prototype.setSkin = function() {
                var roomPlayerInfo = BattleData_1.default.getSitInfo(this.seatIndex);
                this.type = roomPlayerInfo.cur_pao_item;
                if (roomPlayerInfo.isHongYun) this.type = Bullet_Skin.HONGYUN; else if (roomPlayerInfo.isDragonCannon != -1) this.type = roomPlayerInfo.isDragonCannon;
                if (PlayerData_1.default.guideStep != 0) var bulletSkin = "firstPic/img_zid_0.png"; else bulletSkin = this.type == Bullet_Skin.HONGYUN ? "bullets/img_zid_9.png" : "bullets/img_zid_" + this.type + ".png";
                if (!!this.specialName) bulletSkin = "bullets/" + this.specialName + ".png";
                return bulletSkin;
            };
            BulletNode.prototype.shootTo = function(angle) {
                this.goFly({
                    x: this.x,
                    y: this.y
                }, -GlobalFunc_1.default.angleToRad(angle || this.initAngle));
            };
            BulletNode.prototype.goFly = function(lastPos, rad) {
                var data = this.getNextPos(lastPos, rad);
                if (!data || !data.angle) return;
                var nextRad = this.getNextRad(rad);
                this.rotation = 90 + data.angle;
                Laya.Tween.to(this, {
                    x: data.x,
                    y: data.y
                }, data.time, null, Laya.Handler.create(this, this.goFly, [ data, nextRad ]));
            };
            BulletNode.prototype.getNextPos = function(lastPos, rad) {
                var sin = Math.sin(rad);
                var cos = Math.cos(rad);
                var data = {};
                var angle = GlobalFunc_1.default.radToangle(rad);
                var bool1 = rad > -Math.PI / 2 && rad < Math.PI / 2;
                var bool2 = rad > 0;
                var tns = rad > 0 && rad < Math.PI / 2 || rad > -Math.PI && rad < -Math.PI / 2 ? -1 : 1;
                var d1 = Math.abs((lastPos.x - this._x1) / cos);
                var d2 = Math.abs((this._x2 - lastPos.x) / cos);
                var d3 = Math.abs((lastPos.y - this._y1) / sin);
                var d4 = Math.abs((this._y2 - lastPos.y) / sin);
                var p1 = {
                    x: this._x1,
                    y: lastPos.y + tns * Math.abs(d1 * sin)
                };
                var p2 = {
                    x: this._x2,
                    y: lastPos.y - tns * Math.abs(d2 * sin)
                };
                var p3 = {
                    x: lastPos.x + tns * Math.abs(d3 * cos),
                    y: this._y1
                };
                var p4 = {
                    x: lastPos.x - tns * Math.abs(d4 * cos),
                    y: this._y2
                };
                var distance;
                if (p1.y < this._y2 && p1.y > this._y1 && !bool1) {
                    data = p1;
                    distance = d1;
                    this._hitFlag = 1;
                } else if (p2.y < this._y2 && p2.y > this._y1 && bool1) {
                    data = p2;
                    distance = d2;
                    this._hitFlag = 2;
                } else if (p3.x < this._x2 && p3.x > this._x1 && !bool2) {
                    data = p3;
                    distance = d3;
                    this._hitFlag = 3;
                } else if (p4.x < this._x2 && p4.x > this._x1 && bool2) {
                    data = p4;
                    distance = d4;
                    this._hitFlag = 4;
                } else {
                    GlobalFunc_1.default.log("子弹路径异常！！！");
                    this.destroy();
                    return;
                }
                data.time = distance / this._speed * 1e3;
                data.angle = angle;
                return data;
            };
            BulletNode.prototype.getNextRad = function(rad) {
                if (this._hitFlag == 1 || this._hitFlag == 2) return rad > 0 ? Math.PI - rad : -Math.PI - rad;
                return -rad;
            };
            BulletNode.prototype.showNet = function(fish) {
                var index = this.getNetworkIndex();
                var x = !!fish ? GlobalFunc_1.default.changeLockP(fish).x : this.x;
                var y = !!fish ? GlobalFunc_1.default.changeLockP(fish).y : this.y;
                this.destroy();
                if (this.type == Bullet_Skin.HONGYUN) GlobalFunc_1.default.addGlobalAni(x, y, globalConst_1.default.honyunAniName, 1, this.rotation); else {
                    var netAni = Laya.Pool.getItemByClass("net_ani", netsAni);
                    netAni.initNetSkin(this.type, this.seatIndex);
                    netAni.pos(x, y);
                    SceneM_1.default.addToLayer(netAni, globalConst_1.default.bulletLayer);
                }
            };
            BulletNode.prototype.getNetworkIndex = function() {
                var index = 1;
                return index;
            };
            BulletNode.prototype.killFish = function() {};
            return BulletNode;
        }(Laya.Sprite);
        exports.default = BulletNode;
        var netsAni = function(_super) {
            __extends(netsAni, _super);
            function netsAni() {
                return _super.call(this) || this;
            }
            netsAni.prototype.initNetSkin = function(type, seatIndex) {
                var roomPlayerInfo = BattleData_1.default.getSitInfo(seatIndex);
                if (PlayerData_1.default.guideStep != 0) this.img_net.skin = "firstPic/net0.png"; else if (roomPlayerInfo.isDragonCannon != -1) switch (type) {
                  case 4:
                    this.img_net.skin = "nets/img_net" + 8 + ".png";
                    break;

                  case 5:
                    this.img_net.skin = "nets/img_net" + 5 + ".png";
                    break;

                  case 6:
                    this.img_net.skin = "nets/img_net" + 10 + ".png";
                    break;
                } else this.img_net.skin = "nets/img_net" + type % 100 + ".png";
                this.ani1.play(0, false);
                this.ani1.blendMode = "lighter";
                this.ani1.on(Laya.Event.COMPLETE, this, this.destroy);
            };
            return netsAni;
        }(layaMaxUI_1.ui.battle.netAniUI);
        exports.netsAni = netsAni;
    }, {
        "../../common/SceneM": 19,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    105: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var BulletNode_1 = require("./BulletNode");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var FishData_1 = require("../../datas/roomData/FishData");
        var TrackBulletNode = function(_super) {
            __extends(TrackBulletNode, _super);
            function TrackBulletNode() {
                var _this = _super.call(this) || this;
                _this.lockFishId = 0;
                _this.loopInterval = 40;
                _this.daoDanHandler = undefined;
                return _this;
            }
            TrackBulletNode.prototype.doTrackFire = function(trackFish) {
                if (this.isCaught || !this.lockFishId) return;
                this.trackFish = trackFish;
                Laya.timer.loop(this.loopInterval, this, this.trackLoop);
            };
            TrackBulletNode.prototype.trackLoop = function() {
                if (this.isCaught) {
                    this.destroy();
                    return;
                }
                var trackPos = new Laya.Point(0, 0);
                if (!this.trackFish || this.trackFish.beginDead || !this.trackFish.isInScreen) {
                    Laya.timer.clear(this, this.trackLoop);
                    this.trackFish = null;
                    this.lockFishId = 0;
                    var angle = 90 - this.rotation;
                    this.shootTo(angle);
                    return;
                } else {
                    var pos = GlobalFunc_1.default.changeLockP(this.trackFish);
                    trackPos = new Laya.Point(pos.x, pos.y);
                }
                var speed = GlobalFunc_1.default.getBulletSpeed();
                var distance = GlobalFunc_1.default.pGetDistance(this, trackPos);
                if (distance <= 50) {
                    this.showNet(this.trackFish);
                    var isSelf = this.seatIndex == FishData_1.default.mySeatIndex;
                    this.trackFish.onCaught(isSelf);
                    Laya.timer.clear(this, this.trackLoop);
                } else {
                    var duration = distance / speed * 1e3;
                    var angle = Math.atan2(this.y - trackPos.y, trackPos.x - this.x) / Math.PI * 180;
                    var minus = 90 - angle - this.rotation;
                    if (Math.abs(minus) > 1) this.rotation = minus > 1 ? this.rotation + 1 : this.rotation - 1; else this.rotation = 90 - angle;
                    Laya.Tween.to(this, {
                        x: trackPos.x,
                        y: trackPos.y
                    }, duration / 1.5);
                }
            };
            return TrackBulletNode;
        }(BulletNode_1.default);
        exports.default = TrackBulletNode;
    }, {
        "../../datas/roomData/FishData": 30,
        "../../globalConst/GlobalFunc": 87,
        "./BulletNode": 104
    } ],
    106: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var BitBulletNode_1 = require("../bulletNodes/BitBulletNode");
        var EventDis_1 = require("../../globalConst/EventDis");
        var FishData_1 = require("../../datas/roomData/FishData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var BulletFactory_1 = require("../../secens/roomScenes/BulletFactory");
        var NetManager_1 = require("../../netWork/NetManager");
        var MathFunc_1 = require("../../globalConst/MathFunc");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var SoundM_1 = require("../../common/SoundM");
        var BitPlayNode = function() {
            function BitPlayNode() {
                this.timerCount = 10;
                this.readyShoot = false;
                this.flipRatio = 1;
                this._countDownImg = null;
                this._countDownNum = null;
                this._launchTip = null;
                this._isFlip = false;
                this.isPlaySound = false;
            }
            BitPlayNode.prototype.destroy = function() {
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
                !!this.bitBullet && this.bitBullet.destroy();
                !!this._bitImg && this._bitImg.destroy();
                this.bitBullet = null;
                this.isSelfBit && (FishData_1.default.isSelfBitTime = false);
                BattleData_1.default.setPlayerSpecialState(false, this.seatIndex, "isBitting");
                if (this.isSelfBit) {
                    Laya.stage.off(Laya.Event.MOUSE_MOVE, this, this.onMouseMove);
                    Laya.stage.off(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
                    Laya.stage.off(Laya.Event.MOUSE_UP, this, this.onMouseUp);
                }
            };
            BitPlayNode.prototype.onMouseDown = function() {
                FishData_1.default.isTouching = true;
                this.readyShoot = true;
                this.clearLaunchTip();
            };
            BitPlayNode.prototype.onMouseMove = function() {
                if (!this.isCanMove || !FishData_1.default.isTouching) return;
                var angle = GlobalFunc_1.default.getMyCannonAngle();
                if (!angle) return;
                var myCannon = FishData_1.default.mySeatNode.cannonNode;
                myCannon.justRotate(angle);
            };
            BitPlayNode.prototype.onMouseUp = function() {
                this.readyShoot && this.isCanMove && this.bitLaunchSend();
            };
            BitPlayNode.prototype.initEvent = function() {
                if (this.isSelfBit) {
                    Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.onMouseMove);
                    Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
                    Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
                }
                EventDis_1.default.addEvntListener("bitBackNotice", this, this.bitLaunchBack);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.BIT_BOOM, this, this.boomOver);
                EventDis_1.default.addEvntListener("leave_room", this, this.destroy);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_SPECIAL_FISH_END, this, this.recBitBoom);
                EventDis_1.default.addEvntListener("player_leave_room", this, this.checkLeave);
            };
            BitPlayNode.prototype.checkLeave = function(data) {
                var seatIndex = data.room_pos + 1;
                if (seatIndex == this.seatIndex) this.destroy();
            };
            BitPlayNode.prototype.beginBitPlay = function(pos, seatIndex) {
                this.seatIndex = seatIndex;
                this.isPlaySound = seatIndex == FishData_1.default.mySeatIndex;
                this.name = "bitPlay" + this.seatIndex;
                BattleData_1.default.setPlayerSpecialState(true, this.seatIndex, "isBitting");
                this.isSelfBit = this.seatIndex == FishData_1.default.mySeatIndex;
                this.isCanMove = !this.isSelfBit;
                this._isFlip = FishData_1.default.seatNodes[seatIndex].isSeatFlip;
                this.flipRatio = this._isFlip ? 1 : -1;
                if (this.isSelfBit) FishData_1.default.isSelfBitTime = true;
                this.initEvent();
                this.bitImgFly(pos);
            };
            BitPlayNode.prototype.bitImgFly = function(pos) {
                this._bitImg = new Laya.Image("bullets/zuantou5.png");
                this._bitImg.anchorX = this._bitImg.anchorY = .5;
                this._bitImg.pos(pos.x, pos.y);
                this._bitImg.zOrder = 1e3;
                if (this._isFlip) this._bitImg.rotation += 180;
                SceneM_1.default.addToLayer(this._bitImg, globalConst_1.default.effectLayer);
                var endPos = GlobalFunc_1.default.getCannonPos()[this.seatIndex];
                var endy = endPos.y + 73 * this.flipRatio;
                var midx = (endPos.x + this._bitImg.x) / 2;
                var midy = (endy + this._bitImg.y) / 2;
                var props1 = {
                    x: midx,
                    y: midy,
                    scaleX: 1.8,
                    scaleY: 1.8
                };
                var props2 = {
                    x: endPos.x,
                    y: endy,
                    scaleX: 1,
                    scaleY: 1
                };
                this._bitWaitAni = new Laya.Animation();
                Laya.Tween.to(this._bitImg, props1, 1e3);
                Laya.timer.once(1e3, this, function() {
                    Laya.Tween.to(this._bitImg, props2, 500);
                });
                Laya.timer.once(1500, this, function() {
                    this._bitImg.destroy();
                    if (!this._bitWaitAni) {
                        var seatNode = FishData_1.default.seatNodes[this.seatIndex];
                        seatNode.cannonNode.offOrdinaryCannon();
                        seatNode.numPanel.openZtPanel();
                        return;
                    }
                    this.bitWait(endPos);
                    this.isSelfBit && this.bitCD();
                });
                this.isPlaySound && SoundM_1.default.playSound(globalConst_1.default.Sud_drill_addgun, 1);
            };
            BitPlayNode.prototype.bitWait = function(pos) {
                var seatNode = FishData_1.default.seatNodes[this.seatIndex];
                seatNode.cannonNode.offOrdinaryCannon();
                seatNode.numPanel.closePaoBeiUI();
                seatNode.numPanel.openZtPanel();
                this._bitWaitAni.loadAnimation(GlobalVar_1.default.reUrl + "animation/bitWait.ani");
                this._bitWaitAni.play(0, true);
                seatNode.cannonNode.addSpecialCannon(this._bitWaitAni);
                var waitAni = GlobalFunc_1.default.getAni("bitWaitFire");
                waitAni.blendMode = "lighter";
                this._bitWaitAni.addChild(waitAni);
                waitAni.play();
                waitAni.pos(47, 0);
            };
            BitPlayNode.prototype.seatResume = function() {
                var seatNode = FishData_1.default.seatNodes[this.seatIndex];
                seatNode.cannonNode.onOrdinaryCannon();
                seatNode.numPanel.closeZtPanel();
                var playerInfo = BattleData_1.default.roomPlayerData[FishData_1.default.mySeatIndex];
                playerInfo.isDragonCannon == -1 && seatNode.numPanel.openPaoBeiUI();
            };
            BitPlayNode.prototype.bitCD = function() {
                this.launchTip();
                this.isCanMove = true;
                this.timerCount = globalConst_1.default.bitCountDownSec;
                Laya.timer.loop(1e3, this, this.timerFunc);
                this.isPlaySound && SoundM_1.default.playSound(globalConst_1.default.Sud_drill_uncon, 0);
            };
            BitPlayNode.prototype.launchTip = function() {
                this._launchTip = new Laya.Sprite();
                SceneM_1.default.addToMiddLayer(this._launchTip, globalConst_1.default.effectLayer);
                var img_bg = this._launchTip.addChild(new Laya.Image("noZip/img_bg_14.png"));
                img_bg.centerX = img_bg.centerY = 0;
                var label_tip = this._launchTip.addChild(new Laya.Label("按住屏幕调整方向，抬起，发射钻头"));
                label_tip.font = "SimHei";
                label_tip.fontSize = 36;
                label_tip.bold = true;
                label_tip.color = "#c2e7ff";
                label_tip.centerX = label_tip.centerY = 0;
                label_tip.stroke = 4;
                label_tip.strokeColor = "#0b3170";
            };
            BitPlayNode.prototype.clearLaunchTip = function() {
                if (!this._launchTip || this._launchTip.destroyed) return;
                this._launchTip.destroy();
            };
            BitPlayNode.prototype.timerFunc = function() {
                this.timerCount--;
                if (this.timerCount <= 5) if (!this._countDownImg) {
                    var tmpIndex = this.seatIndex <= 2 ? this.seatIndex : this.seatIndex - 2;
                    var cannon_pos = PlayerData_1.default.getItemFlyPos(3, tmpIndex);
                    this._countDownImg = new Laya.Image("battle/img_zt_cnt.png");
                    this._countDownNum = new Laya.Label(this.timerCount + "");
                    this._countDownNum.font = "numberFont1";
                    this._countDownNum.fontSize = 30;
                    this._countDownNum.anchorX = .5;
                    this._countDownNum.anchorY = .5;
                    this._countDownNum.pos(cannon_pos.x, cannon_pos.y - 250);
                    this._countDownImg.pos(cannon_pos.x, cannon_pos.y - 340);
                    this._countDownImg.anchorX = .5;
                    this._countDownImg.anchorY = .5;
                    SceneM_1.default.addToLayer(this._countDownImg, globalConst_1.default.effectLayer);
                    SceneM_1.default.addToLayer(this._countDownNum, globalConst_1.default.effectLayer);
                } else this._countDownNum.text = this.timerCount + "";
                this.timerCount <= 0 && this.bitLaunchSend();
            };
            BitPlayNode.prototype.bitLaunchSend = function() {
                Laya.timer.clear(this, this.timerFunc);
                this.clearLaunchTip();
                !!this._countDownImg && this._countDownImg.destroy();
                !!this._countDownNum && this._countDownNum.destroy();
                this.isCanMove = false;
                var angle = FishData_1.default.mySeatNode.cannonNode.gCannonAngle;
                var data = {
                    bullet_id: 99999,
                    bullet_type: BulletFactory_1.BulletType.bullet_type_zuantou,
                    rotation_angle: angle
                };
                NetManager_1.default.reqShoot(data);
            };
            BitPlayNode.prototype.bitLaunchBack = function(data) {
                var uid = data.uid;
                var seatIndex = BattleData_1.default.getUserSeatByUid(uid);
                if (this.seatIndex != seatIndex) return;
                this._bitWaitAni.removeSelf();
                this._bitWaitAni = null;
                this.createBitBullet(data);
                this.isPlaySound && SoundM_1.default.stopSound(globalConst_1.default.Sud_drill_uncon);
                this.isPlaySound && SoundM_1.default.playSound(globalConst_1.default.Sud_drill_shoot, 1);
            };
            BitPlayNode.prototype.createBitBullet = function(data) {
                var seatIndex = this.seatIndex;
                var angle = data.rotation_angle;
                if (this._isFlip) angle = -(angle + 180) % 180;
                var bulletIndex = data.bullet_id;
                this.bitBullet = new BitBulletNode_1.default();
                var bitParam = {
                    bulletIndex: bulletIndex,
                    angle: angle,
                    seatIndex: seatIndex
                };
                this.bitBullet.initBitBullet(bitParam);
                var bitPos = GlobalFunc_1.default.getSeatPos()[seatIndex];
                this.bitBullet.pos(bitPos.x, bitPos.y + this.flipRatio * (50 + 47 - 20));
                this.bitBullet.shootTo();
                SceneM_1.default.addToLayer(this.bitBullet, globalConst_1.default.bulletLayer);
                GlobalFunc_1.default.globalSetZorder(this.bitBullet, 5500);
                var cannon = FishData_1.default.seatNodes[seatIndex];
                cannon && cannon.cannonNode && cannon.cannonNode.justRotate(angle);
                Laya.timer.once(globalConst_1.default.bitFlyTime1 + globalConst_1.default.bitFlyTime2, this, function() {
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.BIT_BOOM, this.seatIndex);
                });
                this.isSelfBit && Laya.timer.loop(50, this, this.updateGame);
            };
            BitPlayNode.prototype.boomOver = function(seatIndex) {
                if (seatIndex != this.seatIndex) return;
                if (!this.bitBullet) return;
                var bombAni = GlobalFunc_1.default.getAni("bitFishBoomBg", 1.4);
                bombAni.pos(this.bitBullet.x, this.bitBullet.y);
                SceneM_1.default.addToLayer(bombAni, globalConst_1.default.effectLayer);
                bombAni.play(0, false);
                bombAni.blendMode = "lighter";
                this.isPlaySound && SoundM_1.default.playSound(globalConst_1.default.Sud_drill_bomb, 1);
                this.isSelfBit && this.sendBitBoom();
                this.bitBullet.destroy();
                this.bitBullet = null;
            };
            BitPlayNode.prototype.sendBitBoom = function() {
                var radius = globalConst_1.default.bitBoomRadius;
                var fish_ids = MathFunc_1.default.getFishsInCircle(this.bitBullet.x, this.bitBullet.y, radius, FishData_1.default.fishNodesObj);
                NetManager_1.default.reqBitBomb({
                    fish_ids: fish_ids
                });
            };
            BitPlayNode.prototype.recBitBoom = function(data) {
                var uid = data.uid;
                var seatIndex = BattleData_1.default.getUserSeatByUid(uid);
                if (seatIndex != this.seatIndex) return;
                var fishInfo = data.special_fish_info;
                if (!fishInfo) return;
                var specData = fishInfo.data;
                if (!specData) return;
                var bombFishes = specData.zuantou_bomb_fishs;
                var gold = specData.total_gold;
                var diamond = specData.total_diamond;
                for (var i = 0; i < bombFishes.length; ++i) {
                    var fish_id = bombFishes[i].fish_id;
                    var drop_data = bombFishes[i].drop_data;
                    if (!drop_data) continue;
                    drop_data.items = GlobalFunc_1.default.transGoldItem(drop_data.items);
                    var param = {
                        uid: uid,
                        fish_id: fish_id,
                        drops: drop_data,
                        gold: gold,
                        diamond: diamond
                    };
                    EventDis_1.default.dispatchEvent("killFish_broad", param);
                }
                this.seatResume();
                this.destroy();
            };
            BitPlayNode.prototype.updateGame = function() {
                for (var fishIndex in FishData_1.default.fishNodesObj) {
                    var fish = FishData_1.default.fishNodesObj[fishIndex];
                    if (!fish) continue;
                    if (!this.bitBullet || this.bitBullet.getFlyState() == 2) {
                        Laya.timer.clear(this, this.updateGame);
                        return;
                    }
                    if (GlobalFunc_1.default.isBulletHitFish(this.bitBullet, fish)) {
                        if (fish.isBitHitting) continue;
                        fish.isBitHitting = true;
                    } else if (fish.isBitHitting) fish.isBitHitting = false;
                    if (!fish.isBitHitting) continue;
                    var data = {
                        bulletId: 99999,
                        fishUniqId: fish.fishUniqId
                    };
                    NetManager_1.default.reqHit(data);
                    this.bitBullet.hitEffect();
                    break;
                }
            };
            return BitPlayNode;
        }();
        exports.default = BitPlayNode;
    }, {
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/MathFunc": 92,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../secens/roomScenes/BulletFactory": 143,
        "../bulletNodes/BitBulletNode": 103
    } ],
    107: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var FishNode_1 = require("./FishNode");
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var FishLineData_1 = require("../../datas/roomData/FishLineData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var FishData_1 = require("../../datas/roomData/FishData");
        var SceneM_1 = require("../../common/SceneM");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var GameData_1 = require("../../datas/hallData/GameData");
        var CrabNode = function(_super) {
            __extends(CrabNode, _super);
            function CrabNode() {
                var _this = _super.call(this) || this;
                _this.flipAngle = 0;
                return _this;
            }
            CrabNode.prototype.initFish = function(param) {
                this.visible = false;
                this.lineIdx = "pangxie";
                this.fishUniqId = param.fishUniqId;
                this.name = "fish" + this.fishUniqId;
                this.type = 27;
                this.lineSpeed = 20;
                this._showScale = 1.43;
                this.scale(this._showScale, this._showScale);
                this.deadPos = new Laya.Point();
                this.lastPos = new Laya.Point();
                this.lockPsInside = ConfigerHelper_1.default.getCachedValueByKey("fishlocker", [ "lock", this.type, "lock" ]);
                this.configInfo = ConfigerHelper_1.default.getCachedValue("fish", "FishTypeID", this.type, "fish");
                this.characterType = Number(this.configInfo.type);
                this.zOrder = this.configInfo.top * 10;
                this.frameName = this.configInfo.Res;
                this.lineId = param.lineId;
                this.interval = Number(this.configInfo.framespeed);
                this.hasDead = this.beginDead = false;
                this.flipAngle = BattleData_1.default.isFlip ? 180 : 0;
                this.pointItem = FishLineData_1.default.fishLineObj[this.lineIdx];
                var startDiff = param.startDiff || 0;
                FishData_1.default.fishNodesObj[this.fishUniqId] = this;
                SceneM_1.default.addToLayer(this, globalConst_1.default.roLayer);
                this.fishShow(!startDiff);
                this.curStep = this.getStepByTime(0, startDiff);
                this.keepOnLine();
                Laya.timer.once(this.lineSpeed * 2, this, function() {
                    this.visible = true;
                });
                if (GlobalVar_1.default.isWx) {
                    EventDis_1.default.addEvntListener(GlobalVar_1.default.WX_ONSHOW, this, this.updateFishLine);
                    EventDis_1.default.addEvntListener(GlobalVar_1.default.WX_ONHIDE, this, this.updateFishLine);
                }
            };
            CrabNode.prototype.updateFishLine = function() {
                var isOnShow = GlobalVar_1.default.isWx ? GameData_1.default.isWxOnshow : Laya.stage.isVisibility;
                if (this.isOnHide && !isOnShow) return;
                !isOnShow && !this.isOnHide && this.fishOnHide();
                this.isOnHide && isOnShow && this.fishOnShow();
                var curStep = this.getLineStep();
                if (curStep >= this.pointItem.length) {
                    this.deadPos.x = this.x;
                    this.deadPos.y = this.y;
                    EventDis_1.default.dispatchEvent("fishDead", this.fishUniqId);
                    this.destroy();
                    return;
                }
                var item = this.pointItem[curStep];
                var pos = {
                    x: item[0],
                    y: item[1]
                };
                var frameRate = item[2];
                var flip = item[4];
                var speed = item[5];
                this.transPos(pos);
                this.getCrabDir(pos, this.lastPos, flip);
                this.lastPos.x = pos.x;
                this.lastPos.y = pos.y;
                this.pos(pos.x, pos.y);
                this.updateLockP();
                this.checkFrame(frameRate);
                this.checkSpeed(speed);
            };
            CrabNode.prototype.getLineStep = function() {
                return this.curStep++;
            };
            CrabNode.prototype.transPos = function(pos, type) {
                pos.x *= globalConst_1.default.stageW;
                pos.y *= globalConst_1.default.stageH;
                if (this.lineId == 0) {
                    pos.x = globalConst_1.default.stageW - pos.x;
                    pos.y = globalConst_1.default.stageH - pos.y;
                }
                if (BattleData_1.default.isFlip) pos.y = 750 - pos.y;
            };
            CrabNode.prototype.getCrabDir = function(pos, lastPos, flip) {
                if (!this.lastPos) return;
                var angle = GlobalFunc_1.default.radToangle(Math.atan2(pos.y - lastPos.y, pos.x - lastPos.x)) + this.flipAngle;
                if (flip != 0) this.rotation = angle; else this.rotation = angle - 180;
            };
            CrabNode.prototype.checkFrame = function(frameRate) {
                if (frameRate != this.interval) this.setInterVal(frameRate);
            };
            CrabNode.prototype.checkStay = function(stayTime) {
                if (stayTime != 0) {
                    Laya.timer.clear(this, this.updateFishLine);
                    Laya.timer.once(stayTime, this, this.keepOnLine);
                }
            };
            CrabNode.prototype.checkSpeed = function(speed) {
                if (speed != this.lineSpeed) {
                    this.lineSpeed = speed;
                    this.keepOnLine();
                }
            };
            CrabNode.prototype.pauseLine = function() {
                Laya.timer.clear(this, this.updateFishLine);
                Laya.timer.clear(this, this.keepOnLine);
                this.stopInterval();
            };
            CrabNode.prototype.getStepByTime = function(startStep, passTime) {
                var sumTime = 0;
                for (var i = startStep; i < this.pointItem.length; ++i) {
                    if (sumTime >= passTime) break;
                    sumTime += this.pointItem[i][5];
                }
                return i;
            };
            CrabNode.prototype.fishOnShow = function() {
                this.isOnHide = false;
                var nowTime = GlobalFunc_1.default.getClientTime();
                var deltaTime = nowTime - this.hideTime;
                this.curStep = this.getStepByTime(this.curStep, deltaTime);
                this.keepOnLine();
            };
            CrabNode.prototype.fishOnHide = function() {
                this.isOnHide = true;
                this.hideTime = GlobalFunc_1.default.getClientTime();
            };
            return CrabNode;
        }(FishNode_1.default);
        exports.default = CrabNode;
    }, {
        "../../common/SceneM": 19,
        "../../datas/hallData/GameData": 26,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../datas/roomData/FishLineData": 31,
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "./FishNode": 115
    } ],
    108: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var DebrisFallView = function(_super) {
            __extends(DebrisFallView, _super);
            function DebrisFallView() {
                var _this = _super.call(this) || this;
                _this.ani_0.on(Laya.Event.COMPLETE, _this, _this.destroy);
                return _this;
            }
            DebrisFallView.prototype.initText = function(num) {
                this.text_num.text = num + "";
                var interval = GlobalFunc_1.default.getInterval(this.text_num.displayWidth, 24);
                this.text_describe.text = "成功击落" + interval + "个碎片";
                this.ani_0.play();
            };
            DebrisFallView.prototype.destroy = function() {
                this.removeSelf();
                this.destroyed = true;
            };
            return DebrisFallView;
        }(layaMaxUI_1.ui.roleNodes.DebrisFallViewUI);
        exports.default = DebrisFallView;
    }, {
        "../../globalConst/GlobalFunc": 87,
        "../../ui/layaMaxUI": 151
    } ],
    109: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var TimeLineManager_1 = require("../../globalConst/TimeLineManager");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var FishData_1 = require("../../datas/roomData/FishData");
        var NetManager_1 = require("../../netWork/NetManager");
        var SoundM_1 = require("../../common/SoundM");
        var CountDownNode_1 = require("../otherNodes/CountDownNode");
        var DialView = function(_super) {
            __extends(DialView, _super);
            function DialView(data) {
                var _this = _super.call(this) || this;
                _this.inner = [];
                _this.outter = [];
                _this.imgIndex = 8;
                _this.outterNum = 0;
                _this.innerNum = 0;
                _this.reward = 0;
                _this.outterNum = data.xyzp_outter_id;
                _this.innerNum = data.xyzp_inner_id;
                _this.reward = data.xyzp_total_gold;
                _this.updateView();
                _this.mouseThrough = false;
                _this.imgMask.visible = false;
                _this.boxBorad.rotation = _this.boxOutter.rotation = -45 * 3 / 2;
                _this.boxInner.rotation = -45 * 3 / 2;
                _this.boxInner.scale(.1, .1);
                _this.boxOutter.scale(.5, .5);
                _this.boxBorad.scale(.5, .5);
                _this.boxOutter.visible = _this.boxBorad.visible = false;
                _this.boxUpper.y = _this.boxUpper.y - _this.boxUpper.height;
                _this.btnStart.on(Laya.Event.CLICK, _this, _this.doDail);
                Laya.Tween.to(_this.boxInner, {
                    scaleX: .5,
                    scaleY: .5
                }, 200);
                Laya.timer.once(200, _this, _this.doShow);
                _this.showView();
                GlobalFunc_1.default.openDialog(_this);
                EventDis_1.default.addEvntListener("dialDead", _this, _this.destroy);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_SPECIAL_FISH_AUTO_END, _this, _this.doAutoGame);
                BattleData_1.default.setPlayerSpecialState(true, FishData_1.default.mySeatIndex, "isDial");
                _this.countDownNode = new CountDownNode_1.default(globalConst_1.default.specialFishEndTime, true);
                _this.box_dialog.addChild(_this.countDownNode);
                _this.countDownNode.left = 70;
                _this.countDownNode.bottom = 30;
                _this.countDownNode.startTiming();
                return _this;
            }
            DialView.prototype.showView = function() {
                SceneM_1.default.addToMiddLayer(this, globalConst_1.default.dialogLayer);
            };
            DialView.prototype.updateView = function() {
                var _this = this;
                var json = GlobalFunc_1.default.layaGetRes("config/luckyRoulette.json");
                if (json) {
                    var inner = json.inner;
                    var outter = json.outter;
                    for (var i = 0; i < inner.length; i++) {
                        this.inner.push(inner[i].value);
                        this.outter.push(outter[i].value);
                    }
                }
                this.boxInner._children.forEach(function(img, index) {
                    var label = new Laya.Label();
                    label.font = "numberFont6";
                    label.height = 86;
                    label.text = _this.inner[index % 4] + "X";
                    label.anchorX = label.anchorY = .5;
                    label.x = label.width * 3 / 4;
                    label.rotation = 45 / 2 + 180;
                    label.top = 100;
                    img.addChild(label);
                });
                this.boxOutter._children.forEach(function(img, index) {
                    var label = new Laya.Label();
                    label.font = "numberFont4";
                    label.height = 86;
                    label.anchorX = label.anchorY = .5;
                    label.rotation = 45 / 2 + 180;
                    label.centerX = -20;
                    label.y = 130;
                    label.text = _this.outter[index % 4] + "";
                    img.addChild(label);
                });
            };
            DialView.prototype.doAutoGame = function() {
                this.doDail();
            };
            DialView.prototype.doShow = function() {
                var _this = this;
                Laya.Tween.to(this.boxUpper, {
                    y: this.boxUpper.y + this.boxUpper.height
                }, 700, Laya.Ease.bounceOut);
                Laya.Tween.to(this.boxInner, {
                    scaleX: 1,
                    scaleY: 1
                }, 700, Laya.Ease.bounceOut, null, 150);
                Laya.timer.once(300, this, function() {
                    _this.boxBorad.visible = _this.boxOutter.visible = true;
                    Laya.Tween.to(_this.boxOutter, {
                        scaleX: 1,
                        scaleY: 1
                    }, 700, Laya.Ease.bounceOut);
                    Laya.Tween.to(_this.boxBorad, {
                        scaleX: 1,
                        scaleY: 1
                    }, 700, Laya.Ease.bounceOut);
                });
            };
            DialView.prototype.doTween = function(box, value, isInner) {
                if (isInner === void 0) isInner = false;
                Laya.Tween.to(box, {
                    rotation: box.rotation + (!isInner ? 720 + 45 / 2 + value * 45 : -(720 + 45 / 2 + value * 45))
                }, 6e3, Laya.Ease.quadInOut, Laya.Handler.create(this, function() {
                    Laya.Tween.to(box, {
                        rotation: box.rotation - (!isInner ? 45 / 2 : -45 / 2)
                    }, 3e3, Laya.Ease.cubicOut);
                }));
            };
            DialView.prototype.doDail = function() {
                var _this = this;
                this.btnStart.mouseEnabled = false;
                this.countDownNode.stopTiming();
                SoundM_1.default.playSound(globalConst_1.default.Sud_turn_gem, 1);
                Laya.timer.once(500, this, function() {
                    _this.btnStart.visible = false;
                });
                var out = this.outterNum - 1;
                var inner = this.innerNum - 1;
                var innerSelect = this.boxInner._children[inner]._children[0];
                var outterSelect = this.boxOutter._children[out]._children[0];
                this.doTween(this.boxOutter, out);
                this.doTween(this.boxBorad, out);
                this.doTween(this.boxInner, inner, true);
                Laya.timer.once(8500, this, function() {
                    _this.doSelect();
                    _this.doScale(outterSelect);
                    _this.doScale(innerSelect);
                    _this.doMask(_this.boxOutter, out);
                    _this.doMask(_this.boxInner, -inner);
                    SoundM_1.default.playSound(globalConst_1.default.Sud_turn_stop, 1);
                });
                Laya.timer.once(9500, this, function() {
                    Laya.Tween.to(innerSelect, {
                        x: innerSelect.x + 60,
                        y: innerSelect.y - 130
                    }, 200, null, Laya.Handler.create(_this, function() {
                        innerSelect.visible = outterSelect.visible = false;
                    }));
                });
                Laya.timer.once(9800, this, function() {
                    var label = _this.boxReward.getChildByName("lblCount");
                    _this.boxReward.visible = true;
                    label.font = globalConst_1.default.fontNum1;
                    label.text = _this.reward + "";
                    Laya.Tween.to(_this.boxReward, {
                        scaleX: 1,
                        scaleY: 1
                    }, 500, Laya.Ease.backOut, Laya.Handler.create(_this, function() {
                        Laya.timer.once(1e3, _this, function() {
                            NetManager_1.default.reqXyzpReward();
                            SoundM_1.default.playSound(globalConst_1.default.Sud_result_MiniWin, 1);
                        });
                    }));
                });
            };
            DialView.prototype.doSelect = function() {
                var imgEffect = this.boxUpper.getChildByName("imgEffect");
                imgEffect.visible = true;
                Laya.timer.loop(80, this, this.doShine, [ imgEffect ]);
            };
            DialView.prototype.doShine = function(img) {
                this.imgIndex--;
                img.skin = "dial/img_effect_" + this.imgIndex + ".png";
                if (this.imgIndex == 1) {
                    img.visible = false;
                    this.imgIndex = 8;
                    img.skin = "";
                    Laya.timer.clear(this, this.doShine);
                }
            };
            DialView.prototype.doMask = function(box, deviation) {
                var graphy = new Laya.Sprite();
                var g = graphy.graphics;
                g.drawPie(box.width / 2, box.width / 2, box.width / 2, 180 - deviation * 45, 180 + 360 - 45 - deviation * 45, "#000000");
                graphy.alpha = .5;
                graphy.name = "imgMask";
                box.addChild(graphy);
            };
            DialView.prototype.doScale = function(label) {
                var _this = this;
                Laya.Tween.to(label, {
                    scaleX: 2,
                    scaleY: 2
                }, 200, null, Laya.Handler.create(this, function() {
                    Laya.Tween.to(label, {
                        scaleX: 1,
                        scaleY: 1
                    }, 200, null, Laya.Handler.create(_this, _this.doShake, [ label ]));
                }));
            };
            DialView.prototype.doShake = function(label) {
                label.pivotX = label.width / 2;
                label.pivotY = label.height / 2;
                var timeLine = TimeLineManager_1.default.creatTimeLine();
                var rotate = label.rotation;
                timeLine.to(label, {
                    rotation: rotate + 15
                }, 50).to(label, {
                    rotation: rotate - 15
                }, 100).to(label, {
                    rotation: rotate + 15
                }, 100).to(label, {
                    rotation: rotate - 15
                }, 100).to(label, {
                    rotation: rotate + 15
                }, 100).to(label, {
                    rotation: rotate - 15
                }, 100).to(label, {
                    rotation: rotate
                }, 50);
                timeLine.play();
                timeLine.on(Laya.Event.COMPLETE, this, function() {
                    SoundM_1.default.playSound(globalConst_1.default.Sud_turntable_stop, 1);
                });
            };
            DialView.prototype.destroy = function() {
                _super.prototype.destroy.call(this);
                BattleData_1.default.setPlayerSpecialState(false, FishData_1.default.mySeatIndex, "isDial");
                this.reward = 0;
                EventDis_1.default.delAllEvnt(this);
                Laya.Tween.clearAll(this);
                Laya.timer.clearAll(this);
                if (this.countDownNode && !this.countDownNode.destroyed) {
                    this.countDownNode.doDestroy();
                    this.countDownNode = undefined;
                }
            };
            return DialView;
        }(layaMaxUI_1.ui.roomScene.DialViewUI);
        exports.DialView = DialView;
    }, {
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/TimeLineManager": 95,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "../otherNodes/CountDownNode": 121
    } ],
    110: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var FishNode_1 = require("./FishNode");
        var EventDis_1 = require("../../globalConst/EventDis");
        var DragonInterface_1 = require("./DragonInterface");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var FishData_1 = require("../../datas/roomData/FishData");
        var DragonBallFishNode = function(_super) {
            __extends(DragonBallFishNode, _super);
            function DragonBallFishNode() {
                return _super.call(this) || this;
            }
            DragonBallFishNode.prototype.fishShow = function(isTween) {
                this.body = new Laya.Animation();
                this.body.blendMode = "lighter";
                this.addChild(this.body);
                this.startPlay();
                if (isTween) {
                    this.scale(.1, .1);
                    Laya.Tween.to(this, {
                        scaleX: this._showScale,
                        scaleY: this._showScale
                    }, 400);
                }
                var bodyStr;
                for (var i = 1; i < 8; ++i) {
                    var src = "fish290/fish290_body_" + i + ".png";
                    if (bodyStr) bodyStr = bodyStr + "," + src; else bodyStr = src;
                }
                this.dragonBody = new Laya.Animation();
                this.dragonBody.source = bodyStr;
                this.dragonBody.pos(-200, -180);
                this.dragonBody.play();
                this.dragonBody.interval = 120;
                this.addChild(this.dragonBody);
            };
            DragonBallFishNode.prototype.deadAction = function(callBack, seatIndex) {
                var attribute = {
                    alpha: 0
                };
                if (!!this.specialFishData) {
                    var dialog = new DragonInterface_1.default(seatIndex != undefined ? seatIndex : FishData_1.default.mySeatIndex);
                    this.setInterVal(120);
                    Laya.Tween.to(this.dragonBody, attribute, 1e3, laya.utils.Ease.quadOut, Laya.Handler.create(this, this.doOpenInterface, [ dialog ]));
                } else {
                    Laya.Tween.to(this.dragonBody, attribute, 1e3);
                    Laya.Tween.to(this.body, attribute, 1e3, undefined, Laya.Handler.create(this, this.doDestroy));
                }
                !!callBack && callBack.run();
            };
            DragonBallFishNode.prototype.doOpenInterface = function(dialog) {
                var _this = this;
                Laya.timer.once(800, this, function() {
                    var pos = _this.body.localToGlobal(new Laya.Point(_this.selfW / 2, _this.selfH / 2));
                    _this.body.removeSelf();
                    dialog.init(pos, _this.body, _this.specialFishData);
                    SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
                    _this.doDestroy();
                });
            };
            DragonBallFishNode.prototype.doDestroy = function() {
                EventDis_1.default.dispatchEvent("fishDead", this.fishUniqId);
                this.removeSelf();
                this.destroy();
            };
            return DragonBallFishNode;
        }(FishNode_1.default);
        exports.default = DragonBallFishNode;
    }, {
        "../../common/SceneM": 19,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/globalConst": 97,
        "./DragonInterface": 113,
        "./FishNode": 115
    } ],
    111: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var SpecialCannonNode_1 = require("./SpecialCannonNode");
        var FishData_1 = require("../../datas/roomData/FishData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var DragonType;
        (function(DragonType) {
            DragonType[DragonType["GREEN_CANNON"] = 4] = "GREEN_CANNON";
            DragonType[DragonType["SILVER_CANNON"] = 5] = "SILVER_CANNON";
            DragonType[DragonType["GOLD_CANNON"] = 6] = "GOLD_CANNON";
        })(DragonType = exports.DragonType || (exports.DragonType = {}));
        var DragonCannonNode = function(_super) {
            __extends(DragonCannonNode, _super);
            function DragonCannonNode(seat, dragonType) {
                var _this = _super.call(this, seat) || this;
                _this.dragonType = dragonType;
                _this.leftBullet = PlayerData_1.default.getItemNum(GlobalFunc_1.default.getDragonCannonID(dragonType));
                _this.cannonNode.isDragonStart = true;
                _this.cannonNode.dragonCannonNode = _this;
                _this.isSelf && (FishData_1.default.isSelfDragonTime = true);
                _this.roomPlayerData.isDragonCannon = dragonType;
                _this.seatPanel.closePaoBeiUI();
                _this.initCannonSkin();
                if (_this.isSelf) EventDis_1.default.dispatchEvent(GlobalVar_1.default.LAST_BULLET_VIEW_OPEN, {
                    name: "龙炮子弹",
                    bulletNum: _this.leftBullet,
                    node: _this
                });
                _this.changePaoBei();
                return _this;
            }
            DragonCannonNode.prototype.initCannonSkin = function() {
                var cannon = "";
                var turret = "";
                switch (this.dragonType) {
                  case DragonType.GREEN_CANNON:
                    cannon = "iconAndSkin/skin_dragonCannon_1.png";
                    break;

                  case DragonType.SILVER_CANNON:
                    cannon = "iconAndSkin/skin_dragonCannon_2.png";
                    break;

                  case DragonType.GOLD_CANNON:
                    cannon = "iconAndSkin/skin_dragonCannon_3.png";
                    turret = "iconAndSkin/skin_dragonTurret_2.png";
                    break;

                  default:
                    break;
                }
                this.cannonNode.changeSpecialSkin(cannon, turret);
            };
            DragonCannonNode.prototype.setLeftButtle = function(num) {
                PlayerData_1.default.setItemNum(GlobalFunc_1.default.getDragonCannonID(this.dragonType), num);
                this.leftBullet = num;
                this.isSelf && this.btnLayer.setSurplusNum(num);
                if (num == 0 && this.isSelf) {
                    this.btnLayer.sendDragonCannonClose();
                    this.btnLayer.stopDragonCannon(FishData_1.default.mySeatIndex);
                }
            };
            DragonCannonNode.prototype.changePaoBei = function() {
                var paobei = GlobalFunc_1.default.getDragonCanPao(this.dragonType);
                this.lastPao = +this.seatPanel.text_paobei.text;
                this.seatPanel.text_paobei.text = paobei + "";
            };
            DragonCannonNode.prototype.destroy = function() {
                this.destroyed = true;
                this.roomPlayerData.isDragonCannon = -1;
                this.roomPlayerData.cur_pao = this.lastPao;
                this.isSelf && (FishData_1.default.isSelfDragonTime = false);
                this.isSelf && this.btnLayer.closeBoxSurplus();
                this.btnLayer = undefined;
                this.seatPanel.openPaoBeiUI();
                this.cannonNode.isDragonStart = false;
                this.cannonNode.changeSkin({
                    pao_item: PlayerData_1.default.equipCannon,
                    uid: this.roomPlayerData.uid
                }, true);
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return DragonCannonNode;
        }(SpecialCannonNode_1.default);
        exports.default = DragonCannonNode;
    }, {
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "./SpecialCannonNode": 119
    } ],
    112: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var SoundM_1 = require("../../common/SoundM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var DragonDiamondNode = function(_super) {
            __extends(DragonDiamondNode, _super);
            function DragonDiamondNode() {
                var _this = _super.call(this) || this;
                _this.isdestroy = false;
                _this.diamondBroken.on(Laya.Event.COMPLETE, _this, _this.destroy);
                _this.diamondBroken.on(Laya.Event.LABEL, _this, _this.brokenOnLabel);
                return _this;
            }
            DragonDiamondNode.prototype.brokenOnLabel = function(data) {
                if (data == "addBall" && this.ballNode) {
                    this.ballNode.pos(0, 0);
                    this.parent.addChild(this.ballNode);
                }
            };
            DragonDiamondNode.prototype.startShine = function(firstTime) {
                Laya.timer.once(firstTime, this, this.playShine);
            };
            DragonDiamondNode.prototype.playShine = function() {
                if (!this.isdestroy) this.diamondShine_0.play(0, false);
            };
            DragonDiamondNode.prototype.playShine1 = function() {
                if (!this.isdestroy) this.diamondShine.play(0, false);
            };
            DragonDiamondNode.prototype.playAppear = function() {
                this.diamondAppear.play(0, false);
            };
            DragonDiamondNode.prototype.playBroken = function(handler, ballNode) {
                this.ballNode = ballNode;
                this.isdestroy = true;
                this.diamondShine.gotoAndStop(0);
                this.diamondShine_0.gotoAndStop(1);
                this.diamondBroken.play(0, false);
                SoundM_1.default.playSound(globalConst_1.default.Sud_Choice_bs, 1);
                this.diamondBroken.on(Laya.Event.COMPLETE, this, function() {
                    if (handler) handler.run();
                });
            };
            DragonDiamondNode.prototype.destroy = function() {
                this.diamondShine.stop();
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
            };
            return DragonDiamondNode;
        }(layaMaxUI_1.ui.roleNodes.DragonDiamondNodeUI);
        exports.default = DragonDiamondNode;
    }, {
        "../../common/SoundM": 21,
        "../../globalConst/EventDis": 85,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    113: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var DragonSeatNode_1 = require("./DragonSeatNode");
        var DragonDiamondNode_1 = require("./DragonDiamondNode");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var DragonHelpDialog_1 = require("../../dialog/roomDlg/DragonHelpDialog");
        var TimeLineManager_1 = require("../../globalConst/TimeLineManager");
        var NetManager_1 = require("../../netWork/NetManager");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var SoundM_1 = require("../../common/SoundM");
        var CountDownNode_1 = require("../otherNodes/CountDownNode");
        var DragonInterface = function(_super) {
            __extends(DragonInterface, _super);
            function DragonInterface(seatIndex) {
                var _this = _super.call(this) || this;
                _this.ballsData = [];
                _this.StartPos = [ {
                    x: 0,
                    y: 123
                }, {
                    x: -69,
                    y: 99
                }, {
                    x: -113,
                    y: 41
                }, {
                    x: -114,
                    y: -37
                }, {
                    x: -71,
                    y: -96
                }, {
                    x: 0,
                    y: -123
                }, {
                    x: 70,
                    y: -96
                }, {
                    x: 114,
                    y: -38
                }, {
                    x: 115,
                    y: 37
                }, {
                    x: 72,
                    y: 98
                } ];
                _this.EndPos = [ {
                    x: -570,
                    y: -89
                }, {
                    x: -403,
                    y: -182
                }, {
                    x: -316,
                    y: 8
                }, {
                    x: -208,
                    y: -121
                }, {
                    x: -82,
                    y: -4
                }, {
                    x: 560,
                    y: -145
                }, {
                    x: 423,
                    y: 14
                }, {
                    x: 348,
                    y: -180
                }, {
                    x: 218,
                    y: -34
                }, {
                    x: 61,
                    y: -126
                } ];
                _this.autoOpenOrder = [ 0, 1, 2, 3, 4, 9, 8, 7, 6, 5 ];
                _this.diamondRotation = [ 180, 216, 252, 288, 324, 360, 396, 432, 468, 504 ];
                _this.diamondMoved = {};
                _this.dragonSeat = new Array();
                _this.dragonDiamond = new Array();
                _this.lastShineIndex = 0;
                _this.dragonScore = 0;
                _this.topTimes = 1;
                _this.hasPopScoreBoard = false;
                _this.seatIndex = undefined;
                _this.isFinish = false;
                _this.isStartAuto = false;
                _this.seatIndex = seatIndex;
                BattleData_1.default.setPlayerSpecialState(true, seatIndex, "isWlxb");
                return _this;
            }
            DragonInterface.prototype.init = function(pos, ani, fishData) {
                pos = this.box_ball.globalToLocal(pos);
                ani.x = pos.x;
                ani.y = pos.y;
                this.box_ball.addChild(ani);
                Laya.Tween.to(ani, {
                    x: 0,
                    y: 0
                }, 1e3, laya.utils.Ease.quadOut, Laya.Handler.create(this, this.playDiamondBobUp));
                Laya.Tween.to(ani, {
                    scaleX: 1.2,
                    scaleY: 1.2
                }, 750);
                Laya.Tween.to(ani, {
                    scaleX: .7,
                    scaleY: .7
                }, 750, undefined, undefined, 750);
                Laya.Tween.to(this.black_bg, {
                    alpha: .7
                }, 300);
                this.getDragonBallData(fishData);
                this.addDragonSeat();
                this.addDragonDiamond();
                this.help.on(Laya.Event.CLICK, this, function() {
                    var dialog = new DragonHelpDialog_1.default();
                    SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
                    dialog.zOrder = 10001;
                });
                this.rotateDragon.on(Laya.Event.LABEL, this, this.rotateLabel);
                this.rotateDragon.on(Laya.Event.COMPLETE, this, this.rotateComplete);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.DRAGON_BALL_BACK, this, this.isContinue);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.DRAGON_SCORE_BOARD_POP, this, this.popScoreBoard);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_SPECIAL_FISH_AUTO_END, this, this.doAutoGame);
                this.scoreBoardRam.on(Laya.Event.COMPLETE, this, this.gameFinish);
                this.countDownNode = new CountDownNode_1.default(globalConst_1.default.specialFishEndTime, true);
                this.box_dialog.addChild(this.countDownNode);
                this.countDownNode.centerX = 282;
                this.countDownNode.top = 6;
                this.countDownNode.startTiming();
            };
            DragonInterface.prototype.destroy = function() {
                BattleData_1.default.setPlayerSpecialState(false, this.seatIndex, "isWlxb");
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                Laya.Pool.clearBySign("ballShadow");
                if (this.countDownNode && !this.countDownNode.destroyed) {
                    this.countDownNode.doDestroy();
                    this.countDownNode = undefined;
                }
                this.removeChildren();
                this.removeSelf();
            };
            DragonInterface.prototype.getDragonBallData = function(data) {
                var ballData = data.wldb_chosen_dragon_ball_list;
                var multinumData = data.wldb_chosen_multinum_list;
                var length = ballData.length + multinumData.length;
                for (var index = 0; index < length; index++) {
                    var isMultium = Math.random() <= .5;
                    var type = 0;
                    var data_1 = void 0;
                    if (multinumData.length > 0 && (ballData.length == 1 || isMultium)) {
                        data_1 = multinumData.splice(0, 1)[0];
                        type = 1;
                    } else {
                        data_1 = ballData.splice(0, 1)[0];
                        type = 0;
                    }
                    this.ballsData.push(this.setDragonBallData(type, data_1));
                }
            };
            DragonInterface.prototype.setDragonBallData = function(type, data) {
                return {
                    type: type,
                    name: data
                };
            };
            DragonInterface.prototype.addDragonSeat = function() {
                for (var index = 1; index < 6; index++) {
                    var node = new DragonSeatNode_1.default(index - 1);
                    this["box_dragonSeat" + index].addChild(node);
                    this.dragonSeat[index - 1] = node;
                }
            };
            DragonInterface.prototype.addDragonDiamond = function() {
                for (var index = 1; index < 11; index++) {
                    var node = new DragonDiamondNode_1.default();
                    node.name = "diamondNode";
                    this["diamond" + index].addChild(node);
                    node.on(Laya.Event.CLICK, this, this.onMouseDown);
                    node.mouseEnabled = false;
                    this.dragonDiamond[index - 1] = node;
                    node.zOrder = 100;
                }
            };
            DragonInterface.prototype.moveBgAni = function() {
                var useTime = 1e3;
                this.deepenBg();
                Laya.Tween.to(this.bg_1, {
                    y: 0
                }, useTime, laya.utils.Ease.strongInOut);
                Laya.Tween.to(this.bg_2, {
                    y: 750
                }, useTime, laya.utils.Ease.strongInOut);
                Laya.Tween.to(this.bg_3, {
                    x: 0,
                    y: 750
                }, useTime, laya.utils.Ease.strongInOut);
                Laya.Tween.to(this.bg_4, {
                    x: 1630,
                    y: 750
                }, useTime, laya.utils.Ease.strongInOut);
                Laya.Tween.to(this.bg_5, {
                    y: 0
                }, useTime, laya.utils.Ease.strongInOut, undefined, 200);
                Laya.Tween.to(this.help, {
                    scaleX: 1,
                    scaleY: 1
                }, useTime / 2, undefined, undefined, 500);
                Laya.Tween.to(this.image_tips, {
                    scaleX: 1,
                    scaleY: 1
                }, useTime / 2, undefined, undefined, 500);
            };
            DragonInterface.prototype.deepenBg = function() {
                this.bg_black.alpha = 0;
                Laya.Tween.to(this.bg_black, {
                    alpha: 1
                }, 1e3);
            };
            DragonInterface.prototype.playDiamondBobUp = function() {
                this.box_dialog.mouseEnabled = false;
                var scale = .4;
                var laterTime = 80;
                var useTime = 80;
                var several = 0;
                for (var index = -1; index < 9; index++) {
                    var node = void 0;
                    if (index == -1) {
                        node = this["diamond1"].getChildByName("diamondNode");
                        this["diamond1"].name = "1";
                    } else {
                        node = this["diamond" + (10 - index)].getChildByName("diamondNode");
                        this["diamond" + (10 - index)].name = (10 - index).toString();
                    }
                    Laya.timer.once(several * laterTime, node, node.playAppear);
                    several++;
                }
                Laya.timer.once(laterTime * 3, this, this.playDiamondRotate);
            };
            DragonInterface.prototype.playDiamondRotate = function() {
                this.rotateDragon.play(0, false);
            };
            DragonInterface.prototype.rotateComplete = function() {
                this.box_ball.destroyChildren();
            };
            DragonInterface.prototype.rotateLabel = function(data) {
                if (data == "startBgAni") {
                    this.moveBgAni();
                    return;
                }
                if (data == "node_9") Laya.Tween.to(this.bg_6, {
                    y: 750
                }, 500, laya.utils.Ease.circOut);
                if (data == "node_10") for (var index_1 = 1; index_1 < 6; index_1++) {
                    Laya.Tween.to(this["box_dragonSeat" + index_1], {
                        alpha: 1
                    }, 300);
                    Laya.timer.once(500, this, this.startShine);
                }
                var strArray = data.split("_");
                var index = Number(strArray[1]) - 1;
                if (index >= 0 && index <= 9 && !this.diamondMoved[index]) {
                    this.diamondMoved[index] = true;
                    var node = this["diamond" + (index + 1)].removeSelf();
                    node.rotation = this.diamondRotation[index];
                    this.box_diamond.addChild(node);
                    node.pos(this.StartPos[index].x, this.StartPos[index].y);
                    var tweenData = {
                        x: this.EndPos[index].x,
                        y: this.EndPos[index].y,
                        rotation: 360,
                        scaleX: 1,
                        scaleY: 1
                    };
                    Laya.Tween.to(node, tweenData, 600, laya.utils.Ease.circOut);
                }
            };
            DragonInterface.prototype.doAutoGame = function() {
                this.isStartAuto = true;
                this.box_dialog.mouseEnabled = false;
                Laya.timer.loop(500, this, this.doAutoPlay);
            };
            DragonInterface.prototype.doAutoPlay = function() {
                if (this.ballsData.length == 0) {
                    Laya.timer.clear(this, this.doAutoPlay);
                    return;
                }
                var index = 0;
                var node;
                for (index = 0; index < this.autoOpenOrder.length; index++) {
                    node = this.dragonDiamond[this.autoOpenOrder[index]];
                    if (node && !node.isdestroy) break;
                }
                var event = new Laya.Event();
                event.target = node;
                this.onMouseDown(event);
            };
            DragonInterface.prototype.startShine = function() {
                var _this = this;
                for (var index = 0; index < this.dragonDiamond.length; index++) this.dragonDiamond[index].mouseEnabled = true;
                this.box_dialog.mouseEnabled = true;
                var laterTime = 100;
                var interval = 2500;
                this.dragonDiamond[0].startShine(0 * laterTime);
                this.dragonDiamond[1].startShine(1 * laterTime);
                this.dragonDiamond[2].startShine(2 * laterTime);
                this.dragonDiamond[3].startShine(3 * laterTime);
                this.dragonDiamond[4].startShine(4 * laterTime);
                this.dragonDiamond[5].startShine(9 * laterTime);
                this.dragonDiamond[6].startShine(8 * laterTime);
                this.dragonDiamond[7].startShine(7 * laterTime);
                this.dragonDiamond[8].startShine(6 * laterTime);
                this.dragonDiamond[9].startShine(5 * laterTime);
                Laya.timer.once(1600, this, function() {
                    _this.loopShine();
                    Laya.timer.loop(1200, _this, _this.loopShine);
                });
            };
            DragonInterface.prototype.loopShine = function() {
                var index = Math.floor(Math.random() * 10);
                if (index == this.lastShineIndex) if (index == 0) index = 9; else index = index - 1;
                this.lastShineIndex = index;
                if (this.dragonDiamond[index] && !this.dragonDiamond[index].destroyed && !this.dragonDiamond[index].isdestroy) this.dragonDiamond[index].playShine1();
            };
            DragonInterface.prototype.onMouseDown = function(event) {
                if (event.target instanceof DragonDiamondNode_1.default) {
                    var node = event.target;
                    if (!node.isdestroy) {
                        this.box_dialog.mouseEnabled = false;
                        var ballInfo = this.ballsData.splice(0, 1)[0];
                        var handler = void 0;
                        var ballEffect = void 0;
                        var diamondIndex = node.parent.name;
                        var x = this["diamond" + diamondIndex].x;
                        var y = this["diamond" + diamondIndex].y;
                        if (ballInfo.name == "all") {
                            var ballArr = new Array();
                            for (var index = 0; index < 5; index++) {
                                var color = GlobalFunc_1.default.getDragonSeatColor(index);
                                ballArr[index] = this.getBallData({
                                    type: 0,
                                    name: color
                                });
                                ballArr[index].x = x;
                                ballArr[index].y = y;
                                this.dragonSeat[ballArr[index].dragonIndex].ballFly = true;
                            }
                            handler = new Laya.Handler(this, this.ballsFallEffect, [ ballArr ]);
                            ballEffect = this.getBallNode(this.getBallData({
                                type: 0,
                                name: "all"
                            }));
                        } else {
                            var ballData = this.getBallData(ballInfo);
                            var diamondIndex_1 = node.parent.name;
                            ballData.x = x;
                            ballData.y = y;
                            if (ballInfo.type != 1) this.dragonSeat[ballData.dragonIndex].ballFly = true;
                            handler = new Laya.Handler(this, this.ballFallEffect, [ ballData ]);
                            ballEffect = this.getBallNode(ballData);
                        }
                        ballEffect.zOrder = -1;
                        node.playBroken(handler, ballEffect);
                    }
                    this.dragonDiamond[Number(node.parent.name) - 1] = undefined;
                }
            };
            DragonInterface.prototype.ballsFallEffect = function(ballDatas) {
                var _this = this;
                Laya.timer.once(500, this, function() {
                    for (var index = 0; index < ballDatas.length; index++) {
                        var inData = ballDatas[index];
                        _this.ballFallEffect(inData, index);
                    }
                });
            };
            DragonInterface.prototype.ballFallEffect = function(ballData, index) {
                if (index === void 0) index = undefined;
                var ballEffect = this.getBallNode(ballData);
                this.box_diamond.addChild(ballEffect);
                var changeData1 = {
                    scaleX: ballData.type == 0 ? 1.3 : 1.1,
                    scaleY: ballData.type == 0 ? 1.3 : 1.1,
                    x: ballData.x + (ballData.endX - ballData.x) / 2,
                    y: ballData.y + (ballData.endY - ballData.y) / 2
                };
                var changeData2 = {
                    scaleX: ballData.type == 0 ? .54 : .9,
                    scaleY: ballData.type == 0 ? .54 : .9,
                    x: ballData.endX,
                    y: ballData.endY
                };
                var timeLine = TimeLineManager_1.default.creatTimeLine();
                timeLine.addLabel("fly_1", 0).to(ballEffect, changeData1, 300, laya.utils.Ease.quadIn).addLabel("fly_2", 0).to(ballEffect, changeData2, ballData.type == 1 ? 100 : 300, ballData.type == 1 ? undefined : laya.utils.Ease.quadOut);
                timeLine.on(Laya.Event.COMPLETE, this, this.onFlyEffectComplete, [ {
                    ballData: ballData,
                    ball: ballEffect,
                    index: index
                } ]);
                timeLine.play(0, false);
                Laya.timer.frameLoop(2, this, this.addShadowEffect, [ {
                    type: ballData.type,
                    ball: ballEffect,
                    name: ballData.name
                } ]);
            };
            DragonInterface.prototype.getBallNode = function(ballData) {
                var ballEffect;
                if (ballData.type == 0) ballEffect = new Laya.Image(ballData.name); else {
                    ballEffect = new Laya.Label(ballData.name + "X");
                    ballEffect.font = globalConst_1.default.fontNum6;
                    ballEffect.height = 90;
                }
                ballEffect.anchorX = ballEffect.anchorY = .5;
                ballEffect.pos(ballData.x, ballData.y);
                ballEffect.scale(ballData.scale, ballData.scale);
                return ballEffect;
            };
            DragonInterface.prototype.onFlyEffectComplete = function(data) {
                var _this = this;
                Laya.timer.clear(this, this.addShadowEffect);
                var inData = data.ballData;
                if (inData.type == 0) {
                    var ball = data.ball.removeSelf();
                    this.dragonSeat[inData.dragonIndex].addBall(ball);
                    this.dragonSeat[inData.dragonIndex].playGet();
                    this.dragonSeat[inData.dragonIndex].playDragonBright();
                    if (data.index == undefined || data.index == 0) SoundM_1.default.playSound(globalConst_1.default.Sud_long_light, 1);
                } else {
                    SoundM_1.default.playSound(globalConst_1.default.Sud_beishu_fly, 1);
                    Laya.timer.once(50, this, function() {
                        data.ball.removeSelf();
                        data.ball.destroy();
                        _this.tipBoom.play(0, false);
                        _this.image_tips.visible = false;
                        _this.text_topTimes.visible = true;
                        _this.topTimes *= Number(inData.name);
                        _this.text_topTimes.text = _this.topTimes + "X";
                        _this.box_dialog.mouseEnabled = true;
                        _this.text_topTimes1.text = _this.text_topTimes.text;
                        _this.shineTipNum.play(0, false);
                    });
                }
            };
            DragonInterface.prototype.checkIsPair = function() {
                for (var index = 0; index < this.dragonSeat.length; index++) {
                    var seat = this.dragonSeat[index];
                    if (seat.hasBall[0] && seat.hasBall[1]) return true;
                }
                return false;
            };
            DragonInterface.prototype.isContinue = function() {
                var _this = this;
                if (this.isFinish) return;
                if (this.checkIsPair()) {
                    for (var index = 0; index < this.dragonSeat.length; index++) {
                        var seat = this.dragonSeat[index];
                        if (seat.ballFly == true) return;
                    }
                    this.isFinish = true;
                    for (var index = 0; index < this.dragonSeat.length; index++) {
                        var seat = this.dragonSeat[index];
                        seat.seatEndAni();
                        if (seat.hasBall[0] && seat.hasBall[1]) this.dragonScore += seat.score;
                    }
                    if (this.topTimes == 1) Laya.timer.once(300, this, function() {
                        Laya.Tween.to(_this.image_tips, {
                            scaleX: 0,
                            scaleY: 0
                        }, 200);
                        Laya.Tween.to(_this.bg_5, {
                            y: -100
                        }, 500);
                    });
                    Laya.Tween.to(this.box_diamond, {
                        alpha: 0
                    }, 200, undefined, Laya.Handler.create(this, function() {
                        _this.box_diamond.destroyChildren();
                    }));
                    this.text_score.text = this.dragonScore.toString();
                    this.countDownNode.stopTiming();
                } else this.box_dialog.mouseEnabled = !this.isStartAuto;
            };
            DragonInterface.prototype.addShadowEffect = function(ballData) {
                var shadow;
                if (ballData.type == 0) {
                    shadow = Laya.Pool.getItemByClass("ballShadowImage", Laya.Image);
                    shadow.skin = ballData.name;
                } else {
                    shadow = Laya.Pool.getItemByClass("ballShadowLabel", Laya.Label);
                    shadow.text = ballData.name + "X";
                    shadow.font = globalConst_1.default.fontNum6;
                    shadow.height = 90;
                }
                var ball = ballData.ball;
                shadow.anchorX = shadow.anchorY = .5;
                shadow.pos(ball.x, ball.y);
                shadow.scale(ball.scaleX, ball.scaleY);
                shadow.zOrder = ball.zOrder;
                ball.zOrder += 2;
                var changeParam = {
                    scaleX: 1.3 * shadow.scaleX,
                    scaleY: 1.3 * shadow.scaleY,
                    alpha: 0
                };
                Laya.Tween.to(shadow, changeParam, 150, undefined, Laya.Handler.create(this, this.recoverEffectImage, [ {
                    type: ballData.type,
                    shadow: shadow
                } ]));
                this.box_diamond.addChild(shadow);
            };
            DragonInterface.prototype.recoverEffectImage = function(data) {
                Laya.Tween.clearAll(data.shadow);
                data.shadow.alpha = 1;
                data.shadow.removeSelf();
                if (data.type == 0) Laya.Pool.recover("ballShadowImage", data.shadow); else Laya.Pool.recover("ballShadowLabel", data.shadow);
            };
            DragonInterface.prototype.popScoreBoard = function() {
                Laya.Tween.to(this.image_gxhd, {
                    scaleX: 1,
                    scaleY: 1
                }, 400, laya.utils.Ease.backOut);
                this.scoreBoardAppear.play(0, false);
                this.ramScoreBoard();
                SoundM_1.default.playSound(globalConst_1.default.Sud_result_MiniWin, 1);
            };
            DragonInterface.prototype.ramScoreBoard = function() {
                var _this = this;
                var pos = this.bg_5.localToGlobal(new Laya.Point(this.text_topTimes.x, this.text_topTimes.y));
                this.text_topTimes.pos(pos.x, pos.y);
                var text = this.text_topTimes.removeSelf();
                this.addChild(text);
                text.centerX = 0;
                if (this.topTimes == 1) {
                    Laya.timer.once(1500, this, this.gameFinish);
                    return;
                }
                var toBig = new Laya.Handler(this, function() {
                    var finish = new Laya.Handler(_this, _this.scoreBoardOver);
                    Laya.Tween.to(text, {
                        y: 375
                    }, 1e3, laya.utils.Ease.elasticIn, finish);
                    Laya.Tween.to(_this.box_scoreBroad, {
                        scaleX: .4,
                        scaleY: .4
                    }, 50, undefined, undefined, 950);
                    Laya.Tween.to(_this.image_gxhd, {
                        scaleX: 1,
                        scaleY: 1
                    }, 400, laya.utils.Ease.backOut, undefined, 950);
                });
                Laya.Tween.to(text, {
                    scaleX: 1.4,
                    scaleY: 1.4,
                    y: 100
                }, 1300, laya.utils.Ease.backOut, toBig, 800);
            };
            DragonInterface.prototype.scoreBoardOver = function() {
                SoundM_1.default.playSound(globalConst_1.default.Sud_storm_title, 1);
                this.text_score.text = (this.dragonScore * this.topTimes).toString();
                this.scoreBoardRam.play(0, false);
                this.text_topTimes.visible = false;
                this.text_topTimes.destroy();
            };
            DragonInterface.prototype.gameFinish = function() {
                var _this = this;
                Laya.timer.once(1e3, this, GlobalFunc_1.default.closeDialog, [ this, Laya.Handler.create(this, function() {
                    NetManager_1.default.reqWldbGameFinish();
                    _this.removeSelf();
                    _this.destroy();
                }) ]);
            };
            DragonInterface.prototype.getBallData = function(ballData) {
                var data = {
                    scale: 1,
                    endX: 0,
                    endY: 0,
                    type: ballData.type,
                    name: "",
                    x: 0,
                    y: 0,
                    dragonIndex: 0
                };
                if (ballData.type == 0) {
                    var dragonIndex = GlobalFunc_1.default.getDragonSeatindex(ballData.name);
                    data.dragonIndex = dragonIndex;
                    if (dragonIndex != -1) {
                        var pos = this.box_diamond.globalToLocal(this.dragonSeat[dragonIndex].getBallPos(0));
                        data.endX = pos.x;
                        data.endY = pos.y;
                    } else {
                        data.endX = undefined;
                        data.endY = undefined;
                    }
                    data.name = "dragonBall/image_ball_" + ballData.name + ".png";
                } else {
                    data.endX = 0;
                    data.endY = -310;
                    data.name = ballData.name;
                }
                return data;
            };
            return DragonInterface;
        }(layaMaxUI_1.ui.roomScene.DragonInterfaceUI);
        exports.default = DragonInterface;
    }, {
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/roomData/BattleData": 29,
        "../../dialog/roomDlg/DragonHelpDialog": 70,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/TimeLineManager": 95,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "../otherNodes/CountDownNode": 121,
        "./DragonDiamondNode": 112,
        "./DragonSeatNode": 114
    } ],
    114: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var ColorFilter_1 = require("../../globalConst/ColorFilter");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var EventDis_1 = require("../../globalConst/EventDis");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var FishData_1 = require("../../datas/roomData/FishData");
        var DragonSeatNode = function(_super) {
            __extends(DragonSeatNode, _super);
            function DragonSeatNode(index) {
                var _this = _super.call(this) || this;
                _this.index = 0;
                _this.hasBall = [ false, false ];
                _this.fireAni = [];
                _this.filterData = {
                    mat: undefined,
                    value: 0
                };
                _this.ballFly = false;
                _this.getAni = [];
                _this.score = 0;
                _this.index = index;
                _this.name = "dragonSeatNode" + index;
                _this.image_dragonSeat.skin = GlobalFunc_1.default.getDragonSeatSkin(index);
                _this.initDragonScore(index);
                _this.initAni();
                _this.filters = [ ColorFilter_1.default.getBlackFilter(.4) ];
                return _this;
            }
            DragonSeatNode.prototype.initAni = function() {
                for (var index = 0; index < 2; index++) {
                    var fireAni = new Laya.Animation();
                    fireAni.loadAnimation(GlobalVar_1.default.reUrl + "animation/dragonSeatFireAni.ani");
                    this.fireAni[index] = fireAni;
                    var box = this["box_ball" + (index + 1).toString()];
                    box.addChild(fireAni);
                    fireAni.visible = false;
                    fireAni.alpha = 0;
                }
                this.upAni = new Laya.Animation();
                this.upAni.alpha = 0;
                this.box_upAni.addChild(this.upAni);
            };
            DragonSeatNode.prototype.getBallPos = function(index) {
                if (!this.hasBall[0]) return this.box_ball1.localToGlobal(new laya.maths.Point(0, 0)); else return this.box_ball2.localToGlobal(new laya.maths.Point(0, 0));
            };
            DragonSeatNode.prototype.addBall = function(node) {
                node.x = node.y = 0;
                node.alpha = 0;
                var boxIndex = this.hasBall[0] ? 1 : 0;
                this["box_ball" + (boxIndex + 1)].addChild(node);
                this.fireAni[boxIndex].visible = true;
                this.fireAni[boxIndex].play(0, true, "ani1");
                Laya.Tween.to(node, {
                    alpha: 1
                }, 500);
                Laya.Tween.to(this.fireAni[boxIndex], {
                    alpha: 1
                }, 500);
            };
            DragonSeatNode.prototype.initDragonScore = function(index) {
                var playerInfo = BattleData_1.default.roomPlayerData[FishData_1.default.mySeatIndex];
                var paoNum = playerInfo.isDragonCannon == -1 ? playerInfo.cur_pao : GlobalFunc_1.default.getDragonCanPao(playerInfo.isDragonCannon);
                this.score = paoNum * GlobalFunc_1.default.getDragonSeatTimes(index);
                if (this.score > 1e4) {
                    var textScore = (this.score / 1e4).toString().split(".");
                    this.dragonScore.text = textScore[0] + "W" + textScore[1];
                } else this.dragonScore.text = this.score.toString();
            };
            DragonSeatNode.prototype.playGet = function() {
                var _this = this;
                var boxIndex = this.hasBall[0] ? 1 : 0;
                this.hasBall[boxIndex] = true;
                this.getAni[boxIndex] = new Laya.Animation();
                this.getAni[boxIndex].loadAnimation(GlobalVar_1.default.reUrl + "animation/dragonGetAni.ani");
                this.getAni[boxIndex].visible = true;
                this.getAni[boxIndex].play(0, false);
                this["box_ball" + (boxIndex + 1)].addChild(this.getAni[boxIndex]);
                this.getAni[boxIndex].zOrder = 200;
                this.getAni[boxIndex].on(Laya.Event.COMPLETE, this, function() {
                    _this.getAni[boxIndex].removeSelf();
                    _this.getAni[boxIndex].destroy();
                });
            };
            DragonSeatNode.prototype.seatEndAni = function() {
                GlobalFunc_1.default.log(this.index);
                if (this.hasBall[0] && this.hasBall[1]) this.playUpAni(); else this.playFadeOut();
            };
            DragonSeatNode.prototype.playDragonBright = function() {
                this.filters = [ ColorFilter_1.default.getBlackFilter(1) ];
                var dragon = new Laya.Image(this.image_dragonSeat.skin);
                var scale = this.image_dragonSeat.scaleX;
                dragon.scale(scale * 1.1, scale * 1.1);
                dragon.anchorX = dragon.anchorY = .5;
                dragon.blendMode = "lighter";
                dragon.alpha = .5;
                dragon.centerX = dragon.centerY = 0;
                this.image_dragonSeat.addChild(dragon);
                Laya.Tween.to(dragon, {
                    scaleX: scale,
                    scaleY: scale,
                    alpha: 0
                }, 800, undefined, Laya.Handler.create(this, this.brightOver));
            };
            DragonSeatNode.prototype.brightOver = function() {
                this.image_dragonSeat.destroyChildren();
                this.ballFly = false;
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.DRAGON_BALL_BACK);
            };
            DragonSeatNode.prototype.playUpAni = function() {
                var _this = this;
                this.filters = [ ColorFilter_1.default.getWhiteFilter(0) ];
                var handler = new Laya.Handler(this, this.stopUpdateFilter);
                var finish = new Laya.Handler(this, function() {
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.DRAGON_SCORE_BOARD_POP);
                });
                Laya.timer.once(500, this, function() {
                    _this.upAni.play(0, true);
                    Laya.timer.once(1200, _this, function() {
                        Laya.Tween.to(_this.filterData, {
                            value: 8
                        }, 600, laya.utils.Ease.cubicIn, handler);
                        Laya.Tween.to(_this.box_all, {
                            scaleX: .4
                        }, 600, undefined, undefined);
                        Laya.Tween.to(_this.box_all, {
                            y: _this.y - 750,
                            scaleX: .3
                        }, 300, laya.utils.Ease.quadIn, finish, 450);
                        Laya.timer.frameLoop(3, _this, _this.updateWhiteFilter);
                    });
                });
            };
            DragonSeatNode.prototype.updateWhiteFilter = function() {
                this.box_seat.filters = [ ColorFilter_1.default.getWhiteFilter(this.filterData.value / 10) ];
            };
            DragonSeatNode.prototype.playFadeOut = function() {
                this.filterData.value = 10;
                this.filters = [ ColorFilter_1.default.getBlackFilter(1) ];
                this.filters = [ ColorFilter_1.default.getBlackFilter(.2) ];
                Laya.Tween.to(this, {
                    alpha: 0
                }, 1e3, undefined, undefined, 500);
            };
            DragonSeatNode.prototype.stopUpdateFilter = function() {
                Laya.timer.clear(this, this.updateWhiteFilter);
            };
            DragonSeatNode.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return DragonSeatNode;
        }(layaMaxUI_1.ui.roleNodes.DragonSeatNodeUI);
        exports.default = DragonSeatNode;
    }, {
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/ColorFilter": 82,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../ui/layaMaxUI": 151
    } ],
    115: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var EventDis_1 = require("../../globalConst/EventDis");
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var FishLineData_1 = require("../../datas/roomData/FishLineData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var FishData_1 = require("../../datas/roomData/FishData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GuideManager_1 = require("../../common/GuideManager");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var BattleFunc_1 = require("../../globalConst/BattleFunc");
        var SceneM_1 = require("../../common/SceneM");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var HongYunNode_1 = require("./HongYunNode");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var TreasureBoxDialog_1 = require("./TreasureBoxDialog");
        var TimeLineManager_1 = require("../../globalConst/TimeLineManager");
        var DialVIew_1 = require("./DialVIew");
        var SpecialView_1 = require("../../common/SpecialView");
        var OnOffManager_1 = require("../../globalConst/OnOffManager");
        var PearlDialog_1 = require("./PearlDialog");
        var SoundM_1 = require("../../common/SoundM");
        var GlobalUI_1 = require("../../globalConst/GlobalUI");
        var GameData_1 = require("../../datas/hallData/GameData");
        var NetManager_1 = require("../../netWork/NetManager");
        var SpecialFishType;
        (function(SpecialFishType) {
            SpecialFishType[SpecialFishType["fish_type_special_zuantou"] = 21] = "fish_type_special_zuantou";
            SpecialFishType[SpecialFishType["fish_type_special_hongyun"] = 22] = "fish_type_special_hongyun";
            SpecialFishType[SpecialFishType["fish_type_special_hwbz"] = 23] = "fish_type_special_hwbz";
            SpecialFishType[SpecialFishType["fish_type_special_xyzp"] = 24] = "fish_type_special_xyzp";
            SpecialFishType[SpecialFishType["fish_type_special_zshy"] = 25] = "fish_type_special_zshy";
            SpecialFishType[SpecialFishType["fish_type_special_wlxb"] = 26] = "fish_type_special_wlxb";
        })(SpecialFishType = exports.SpecialFishType || (exports.SpecialFishType = {}));
        var DropData = function() {
            function DropData() {}
            return DropData;
        }();
        var TransformFilter = function() {
            function TransformFilter(target) {
                var _this = this;
                this.otherColmax = 0;
                this.aniIsPlay = false;
                this.filterIndex = 0;
                this.otherColVal = {
                    value: 1
                };
                this.useTime = 200;
                if (!target) return;
                this.target = target;
                this.timeLine = TimeLineManager_1.default.creatTimeLine();
                this.timeLine.on(Laya.Event.COMPLETE, this, function() {
                    _this.aniIsPlay = false;
                });
                Laya.timer.frameLoop(2, this, this.setFilter);
            }
            TransformFilter.prototype.doFilter = function() {
                this.aniIsPlay = true;
                if (this.timeLine) this.timeLine.reset(); else this.timeLine = TimeLineManager_1.default.creatTimeLine();
                var redTime = this.useTime * Math.floor((this.otherColVal.value - this.otherColmax) * 1e3) / 1e3;
                this.timeLine.addLabel("red", 0).to(this.otherColVal, {
                    value: this.otherColmax
                }, redTime, Laya.Ease.quadOut).addLabel("end", 0).to(this.otherColVal, {
                    value: 1
                }, this.useTime, Laya.Ease.quadIn);
                this.timeLine.play(0, false);
            };
            TransformFilter.prototype.setFilter = function() {
                var filter = this.getFilter(this.otherColVal.value);
                this.target.filters = [ filter ];
            };
            TransformFilter.prototype.getFilter = function(value) {
                var red = 1;
                var green = 1 - (1 - value) / 5 * 3;
                var obj = [ red, 0, 0, 0, 0, 0, green, 0, 0, 0, 0, 0, value, 0, 0, 0, 0, 0, 1, 0 ];
                return new Laya.ColorFilter(obj);
            };
            return TransformFilter;
        }();
        var FishNode = function(_super) {
            __extends(FishNode, _super);
            function FishNode() {
                var _this = _super.call(this) || this;
                _this.lockPsOutside = [];
                _this.canDaoDan = false;
                _this.isInScreen = false;
                _this.updateNum = 0;
                _this.isBitHitting = false;
                _this.isInHitting = false;
                _this._showScale = 1;
                return _this;
            }
            FishNode.prototype.destroy = function() {
                this.isNotLeaving = false;
                this.filterTrans && Laya.timer.clearAll(this.filterTrans);
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                Laya.Tween.clearAll(this);
                this.destroyChildren();
                this.removeSelf();
                this.hasDead = this.beginDead = true;
            };
            FishNode.prototype.initFish = function(param) {
                this.isNotLeaving = true;
                this.visible = false;
                this.fishUniqId = param.fishUniqId;
                this.name = "fish" + this.fishUniqId;
                this.type = Number(param.oneFishInfo.FishID);
                this.lineIdx = param.oneFishInfo.PathID;
                this.lineSpeed = 20;
                this.hasDead = this.beginDead = false;
                this.deadPos = new Laya.Point();
                this.lastPos = new Laya.Point();
                this.lockPsInside = ConfigerHelper_1.default.getCachedValueByKey("fishlocker", [ "lock", this.type, "lock" ]);
                this.configInfo = ConfigerHelper_1.default.getCachedValue("fish", "FishTypeID", this.type, "fish");
                if (!this.configInfo || !this.configInfo.top || !this.lockPsInside) return;
                this.startFrame = Number(this.configInfo.startFrame) || 0;
                this.endFrame = Number(this.configInfo.endFrame) || 0;
                this.shift = Number(this.configInfo.shift) || 1;
                this.totalFrame = Number(this.configInfo.FrameCount);
                this.characterType = Number(this.configInfo.type);
                this.canDaoDan = this.configInfo.dantou == "1";
                if (this.type == 32) this._showScale = 1.43; else if (this.type == 30 || this.type == 31) this._showScale = 2;
                this.scale(this._showScale, this._showScale);
                this.zOrder = this.configInfo.top * 10;
                this.frameName = this.configInfo.Res;
                this.interval = Number(this.configInfo.framespeed);
                this.isVer = this.configInfo.fishver == "1";
                this.pointItem = FishLineData_1.default.fishLineObj[this.lineIdx];
                if (this.pointItem.length == 0) return;
                this.diffX = Number(param.oneFishInfo.XDiff) / 1334 * globalConst_1.default.stageW;
                this.diffY = Number(param.oneFishInfo.YDiff) / 750 * globalConst_1.default.stageH;
                this._x0 = this.pointItem[0][0] * globalConst_1.default.stageW + this.diffX;
                this._y0 = this.pointItem[0][1] * globalConst_1.default.stageH + this.diffY;
                this.rotaAngle = Number(param.oneFishInfo.Angle);
                this.formationId = param.oneFishInfo.FormationID;
                this.lineSpeed = Number(param.lineSpeed) * 1e3;
                var shiftFrame = Math.abs(this.endFrame - this.startFrame) || 0;
                this.frameRate = (this.lineSpeed / this.shift * shiftFrame + this.lineSpeed * (this.totalFrame - shiftFrame)) / this.totalFrame;
                var startDiff = param.startDiff || 0;
                var indexDelay = Number(param.indexDelay);
                this.curStep = Math.floor(Math.max(0, startDiff - indexDelay) / this.frameRate);
                if (this.curStep > this.pointItem.length) return;
                this.fishShow(!startDiff);
                this.initTime = BattleData_1.default.FishSceneTime;
                this.startDelay = Math.max(0, indexDelay - startDiff);
                if (this.startDelay > 0) Laya.timer.loop(1e3, this, this.checkStatus); else this.readyGoLine();
                FishData_1.default.isInEditer && this.testLabel();
                EventDis_1.default.addEvntListener("leave_room", this, this.destroy);
            };
            FishNode.prototype.testLabel = function() {
                var label = new Laya.Label();
                label.text = this.fishUniqId.toString();
                label.color = "green";
                label.fontSize = 30;
                this.addChild(label);
            };
            FishNode.prototype.checkStatus = function() {
                var checkTime = BattleData_1.default.FishSceneTime - this.initTime - this.startDelay;
                if (checkTime > 0) {
                    this.curStep = Math.floor(checkTime / this.frameRate);
                    this.readyGoLine();
                    Laya.timer.clear(this, this.checkStatus);
                }
            };
            FishNode.prototype.readyGoLine = function() {
                var _this = this;
                if (this.type == 40) if (PlayerData_1.default.guideStep == 6 - 1 && !GuideManager_1.default.isDisFreeze) {
                    GuideManager_1.default.isDisFreeze = true;
                    Laya.timer.once(FishData_1.default.skillCd[0], this, function() {
                        EventDis_1.default.dispatchEvent("ticket_fish", _this);
                    });
                } else if (PlayerData_1.default.guideStep == 5 - 1 && !GuideManager_1.default.isDisLock) {
                    GuideManager_1.default.isDisLock = true;
                    EventDis_1.default.dispatchEvent("ticket_fish", this);
                }
                FishData_1.default.fishNodesObj[this.fishUniqId] = this;
                SceneM_1.default.addToLayer(this, globalConst_1.default.roLayer);
                this.keepOnLine();
                Laya.timer.once(this.lineSpeed * 2, this, function() {
                    this.visible = true;
                });
                if (GlobalVar_1.default.isWx) {
                    EventDis_1.default.addEvntListener(GlobalVar_1.default.WX_ONSHOW, this, this.updateFishLine);
                    EventDis_1.default.addEvntListener(GlobalVar_1.default.WX_ONHIDE, this, this.updateFishLine);
                }
            };
            FishNode.prototype.getFishUniqId = function() {
                return this.fishUniqId;
            };
            FishNode.prototype.fishShow = function(isTween) {
                this.body = new Laya.Animation();
                this.addChild(this.body);
                this.startPlay();
                if (isTween) {
                    this.scale(.1, .1);
                    Laya.Tween.to(this, {
                        scaleX: this._showScale,
                        scaleY: this._showScale
                    }, 400);
                }
                this.addAniToFish();
            };
            FishNode.prototype.addAniToFish = function() {
                if (this.characterType == 22) {
                    var ani = GlobalFunc_1.default.getAni("hongYunFireBg");
                    ani.play(0, true);
                    GlobalFunc_1.default.globalSetZorder(ani, -10);
                    this.addChild(ani);
                } else if (this.characterType == 40) {
                    var configName = this.configInfo.Name;
                    var ticketLvl = +configName.split("X")[1];
                    var label = new Laya.Label();
                    label.fontSize = 40;
                    label.color = "#ffffff";
                    label.strokeColor = "#0b3170";
                    label.stroke = 6.4;
                    label.width = this.width;
                    label.height = this.height;
                    label.font = globalConst_1.default.fontNum2;
                    label.scale(.7, .7);
                    label.bottom = -50;
                    label.text = "x" + ticketLvl;
                    label.anchorX = label.anchorY = .5;
                    label.x = 8;
                    this.addChild(label);
                } else if (this.characterType == 50) {
                    var flyFireAni = GlobalFunc_1.default.getAni("bitTrailFire");
                    this.addChild(flyFireAni);
                    flyFireAni.pos(-115, 10);
                    flyFireAni.play(0, true);
                    flyFireAni.rotation = 90;
                    GlobalFunc_1.default.globalSetZorder(flyFireAni, -10);
                }
            };
            FishNode.prototype.startPlay = function() {
                this.setInterVal(this.interval);
                if (!this.selfW) {
                    var bound = this.body.getBounds();
                    this.selfW = bound.width;
                    this.selfH = bound.height;
                    this.body.pivot(this.selfW / 2, this.selfH / 2);
                    this.body.pos(0, 0);
                }
            };
            FishNode.prototype.setInterVal = function(interval) {
                if (!this.body || !this.body.interval || interval == this.body.interval) return;
                this.body.interval = interval;
                this.body.play(this.body.index, true, this.frameName);
                this.interval = interval;
            };
            FishNode.prototype.updateFishLine = function() {
                var isOnShow = GlobalVar_1.default.isWx ? GameData_1.default.isWxOnshow : Laya.stage.isVisibility;
                if (this.isOnHide && !isOnShow) return;
                !isOnShow && !this.isOnHide && this.fishOnHide();
                this.isOnHide && isOnShow && this.fishOnShow();
                var curStep = this.getLineStep();
                if (!curStep || curStep >= this.pointItem.length) {
                    EventDis_1.default.dispatchEvent("fishDead", this.fishUniqId);
                    this.deadPos.x = this.x;
                    this.deadPos.y = this.y;
                    this.destroy();
                    return;
                }
                var item = this.pointItem[curStep];
                var pos = {
                    x: item[0],
                    y: item[1]
                };
                this.transPos(pos);
                !this.isVer && this.getFishDir(pos, this.lastPos);
                this.lastPos.x = pos.x;
                this.lastPos.y = pos.y;
                this.pos(pos.x, pos.y);
                this.updateLockP();
            };
            FishNode.prototype.getLineStep = function() {
                if (this.body && this.body.index > this.startFrame && this.body.index < this.endFrame) this.curStep += this.shift; else this.curStep++;
                return this.curStep;
            };
            FishNode.prototype.transPos = function(pos) {
                pos.x = pos.x * globalConst_1.default.stageW;
                pos.y = (1 - pos.y) * globalConst_1.default.stageH;
                pos.x += this.diffX;
                pos.y += this.diffY;
                if (this.rotaAngle != 0) {
                    var sin = Math.sin(GlobalFunc_1.default.angleToRad(this.rotaAngle));
                    var cos = Math.cos(GlobalFunc_1.default.angleToRad(this.rotaAngle));
                    var x = (pos.x - this._x0) * cos - (pos.y - this._y0) * sin + this._x0;
                    var y = (pos.x - this._x0) * sin + (pos.y - this._y0) * cos + this._y0;
                    pos.x = x;
                    pos.y = y;
                }
                if (BattleData_1.default.isFlip) pos.y = 750 - pos.y;
            };
            FishNode.prototype.getFishDir = function(pos, lastPos) {
                if (!this.lastPos) return;
                this.rotation = GlobalFunc_1.default.radToangle(Math.atan2(pos.y - lastPos.y, pos.x - lastPos.x));
            };
            FishNode.prototype.fishOnShow = function() {
                this.isOnHide = false;
                var nowTime = GlobalFunc_1.default.getClientTime();
                var deltaTime = nowTime - this.hideTime;
                this.curStep = this.curStep + Math.floor(deltaTime / this.frameRate);
                this.keepOnLine();
                this.visible = true;
            };
            FishNode.prototype.fishOnHide = function() {
                this.isOnHide = true;
                this.hideTime = GlobalFunc_1.default.getClientTime();
                this.visible = false;
            };
            FishNode.prototype.updateLockP = function() {
                var rad = GlobalFunc_1.default.angleToRad(this.rotation);
                var cos = Math.cos(rad);
                var sin = Math.sin(rad);
                this.isInScreen = false;
                for (var i = 0; i < this.lockPsInside.length; i++) {
                    var indexp = this.lockPsInside[i][0];
                    var ox = indexp[1] * cos - indexp[2] * sin + this.x;
                    var oy = indexp[1] * sin + indexp[2] * cos + this.y;
                    !this.isInScreen && ox > 0 && oy > 0 && ox < globalConst_1.default.stageW && oy < globalConst_1.default.stageH && (this.isInScreen = true);
                    this.lockPsOutside[i] = {
                        x: ox,
                        y: oy,
                        r: Number(indexp[3])
                    };
                }
            };
            FishNode.prototype.getLockP = function() {
                return this.lockPsOutside;
            };
            FishNode.prototype.deadAction = function(callBack, seatIndex) {
                var _this = this;
                if (!this.body) return;
                this.setInterVal(30);
                var attribute = {
                    alpha: 0,
                    scaleX: .3,
                    scaleY: .3,
                    rotation: 540
                };
                EventDis_1.default.dispatchEvent("fishDead", this.fishUniqId);
                Laya.timer.once(1200, this, function() {
                    _this.stopInterval();
                });
                Laya.Tween.to(this, attribute, 1200, laya.utils.Ease.cubicIn, Laya.Handler.create(this, function() {
                    this.removeSelf();
                    this.destroy();
                }), 600);
                !!callBack && callBack.run();
            };
            FishNode.prototype.serverHit = function(serverData) {
                var _this = this;
                var seatIndex = BattleData_1.default.getUserSeatByUid(serverData.uid);
                var isSelf = seatIndex == FishData_1.default.mySeatIndex;
                if (isSelf) {
                    GameData_1.default.shakeFish++;
                    GameData_1.default.shakeFish = GameData_1.default.shakeFish % 10;
                    GameData_1.default.shakeFish == 0 && GameData_1.default.shakeTimes < 5 && NetManager_1.default.reqAddYao();
                }
                var dropData = GlobalFunc_1.default.transGoldItem(serverData.drops.items);
                var gold, ticket, debris = 0;
                var specialFishInfo = serverData.special_fish_info;
                var playerState = BattleData_1.default.roomPlayerData[seatIndex];
                var dropKeyMap = BattleFunc_1.default.getDropMapByItems(dropData);
                this.pauseLine();
                this.specialFishData = undefined;
                this.playFishDeadSound(seatIndex);
                if (dropKeyMap) {
                    gold = dropKeyMap[globalConst_1.default.goldKey];
                    ticket = dropKeyMap[globalConst_1.default.ticket];
                    debris = dropKeyMap[+globalConst_1.default.DebrisID];
                }
                if (!!specialFishInfo) if (specialFishInfo.fish_type == SpecialFishType.fish_type_special_hongyun) EventDis_1.default.dispatchEvent(GlobalVar_1.default.HONG_YUN_SCORE_UPDATE, {
                    score: specialFishInfo.data.hongyun_total_gold,
                    seat: seatIndex
                }); else if (specialFishInfo.fish_type == SpecialFishType.fish_type_special_zuantou) EventDis_1.default.dispatchEvent("update_zuantou_score", {
                    num: specialFishInfo.data.zuantou_fly_gold,
                    seatIndex: seatIndex
                });
                if (!!specialFishInfo && this.characterType >= 20 && this.characterType < 30) {
                    var isfilter = specialFishInfo.fish_type != SpecialFishType.fish_type_special_hongyun && specialFishInfo.fish_type != SpecialFishType.fish_type_special_zuantou;
                    if (FishData_1.default.mySeatIndex != seatIndex && OnOffManager_1.default.isSpceialView && isfilter) {
                        var view = new SpecialView_1.SpecialView(this.characterType, seatIndex);
                        var seat = FishData_1.default.seatNodes[seatIndex];
                        var isNotFlip = FishData_1.default.mySeatIndex + seatIndex == 3 || FishData_1.default.mySeatIndex + seatIndex == 7;
                        view.y = !isNotFlip ? -30 : -60;
                        view.centerX = 0;
                        view.boxContent.rotation = !isNotFlip ? 180 : 0;
                        seat.addChild(view);
                    }
                    var seatNode = FishData_1.default.seatNodes[seatIndex];
                    seatNode.numPanel.mouseEnabled = false;
                    switch (specialFishInfo.fish_type) {
                      case SpecialFishType.fish_type_special_hongyun:
                        if (!playerState.isHongYun) {
                            var hongYunNode = new HongYunNode_1.default(seatIndex, specialFishInfo.data);
                            var pos = new Laya.Point(this.x, this.y);
                            hongYunNode.cannonFlyAni(pos);
                            seatNode.numPanel.closePaoBeiUI();
                        }
                        break;

                      case SpecialFishType.fish_type_special_hwbz:
                        if (seatIndex == FishData_1.default.mySeatIndex) {
                            var haiWangNode = new TreasureBoxDialog_1.default(seatIndex);
                            SceneM_1.default.addToMiddLayer(haiWangNode, globalConst_1.default.dialogLayer);
                            seatNode.numPanel.closePaoBeiUI();
                        } else ;
                        break;

                      case SpecialFishType.fish_type_special_xyzp:
                        if (seatIndex == FishData_1.default.mySeatIndex) {
                            specialFishInfo.data && new DialVIew_1.DialView(specialFishInfo.data);
                            seatNode.numPanel.closePaoBeiUI();
                        }
                        break;

                      case SpecialFishType.fish_type_special_zshy:
                        if (seatIndex == FishData_1.default.mySeatIndex && specialFishInfo.data) {
                            Laya.timer.once(500, this, function() {
                                new PearlDialog_1.default(specialFishInfo.data);
                            });
                            seatNode.numPanel.closePaoBeiUI();
                        }
                        break;

                      case SpecialFishType.fish_type_special_zuantou:
                        !playerState.isBitting && EventDis_1.default.dispatchEvent("bit_play_begin", {
                            pos: {
                                x: this.x,
                                y: this.y
                            },
                            seatIndex: seatIndex
                        });
                        break;

                      case SpecialFishType.fish_type_special_wlxb:
                        if (seatIndex == FishData_1.default.mySeatIndex && specialFishInfo.data) {
                            this.specialFishData = specialFishInfo.data;
                            seatNode.numPanel.closePaoBeiUI();
                        }

                      default:
                        break;
                    }
                    GlobalUI_1.default.shockScreenEff();
                } else if (this.configInfo.tray > 0 && this.configInfo.tray != 2) {
                    var data = {
                        fishData: {
                            fishID: this.type,
                            goldNum: gold,
                            tray: this.configInfo.tray,
                            fishInfo: this.configInfo
                        },
                        seatIndex: seatIndex
                    };
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.PLAY_ROOM_TRAY_ANI, data);
                    GlobalUI_1.default.shockScreenEff();
                }
                this.beginDead = true;
                if (!!!specialFishInfo || specialFishInfo.fish_type != SpecialFishType.fish_type_special_wlxb) this.deadAction(); else if (!!specialFishInfo && specialFishInfo.fish_type == SpecialFishType.fish_type_special_wlxb) this.deadAction(undefined, seatIndex);
                var seatInfo = FishData_1.default.seatNodes[seatIndex].seatInfoNode;
                var fishTray = FishData_1.default.seatNodes[seatIndex].trayNode;
                var fishInfo = BattleData_1.default.fishData[this.type.toString()];
                GlobalUI_1.default.setFishNum(isSelf, gold, this.x, this.y);
                BattleFunc_1.default.resChangeFunc(seatIndex, serverData);
                if (isSelf) {
                    var gun = BattleData_1.default.roomData[BattleData_1.default.room_type].Guns[0];
                    if (serverData.gold >= +gun) EventDis_1.default.dispatchEvent("endHelping");
                }
                var startPoint = new Laya.Point(this.x, this.y);
                var endPoint = PlayerData_1.default.getItemFlyPos(globalConst_1.default.itemFlyRoomCoin, seatIndex);
                if (gold && gold > 0 && this.isNotLeaving) {
                    if (OnOffManager_1.default.isTomorrom && isSelf && GameData_1.default.tomrrowState == 0) {
                        GameData_1.default.tomrrowGold >= 0 && (GameData_1.default.tomrrowGold -= gold);
                        if (GameData_1.default.tomrrowGold <= 0 && !GameData_1.default.tomrrowFlag) {
                            GameData_1.default.tomrrowFlag = true;
                            NetManager_1.default.reqSetMing();
                        }
                    }
                    var aniName_1 = isSelf ? "goldCoinAni" : "sliverCoinAni";
                    Laya.timer.once(600, this, function() {
                        var param = {
                            characterType: _this.characterType,
                            startPoint: startPoint,
                            endPoint: endPoint,
                            aniName: aniName_1,
                            seat: seatInfo,
                            isCommon: false
                        };
                        GlobalFunc_1.default.doItemFlyAni(param);
                    });
                }
                if ((this.characterType == 10 || this.characterType == 30) && this.isNotLeaving) Laya.timer.once(600, this, function() {
                    var sp = GlobalFunc_1.default.getGoldFishBoomEffect(new Laya.Point(_this.x, _this.y), 1.8, isSelf);
                    SceneM_1.default.addToLayer(sp, globalConst_1.default.effectTopLayer);
                });
                if (ticket && this.isNotLeaving) {
                    var param = {
                        itemId: +globalConst_1.default.TicketID,
                        itemNum: ticket,
                        flyPos: globalConst_1.default.itemFlyRoomTicket,
                        seatIndex: seatIndex,
                        startPos: startPoint
                    };
                    GlobalFunc_1.default.roomItemsFlyAni(param);
                }
                if (debris && this.isNotLeaving) {
                    var param = {
                        itemId: +globalConst_1.default.DebrisID,
                        itemNum: debris,
                        flyPos: globalConst_1.default.itemFlyCannon,
                        seatIndex: seatIndex,
                        startPos: startPoint
                    };
                    GlobalFunc_1.default.roomItemsFlyAni(param);
                }
                for (var d in dropData) {
                    var id = dropData[d].item_id;
                    if (id == 11 || id == 12 || id == 13 || id == 14) {
                        var pos = GlobalFunc_1.default.changeLockP(this);
                        var daodanNum = dropData[d].count || dropData[d].item_count;
                        GlobalUI_1.default.dropDaoDanEff(id, daodanNum, seatIndex, pos.x, pos.y);
                        if (isSelf) {
                            PlayerData_1.default.addItemNum(id, daodanNum);
                            EventDis_1.default.dispatchEvent("add_daodan_num");
                        }
                        break;
                    }
                }
            };
            FishNode.prototype.onCaught = function(isSelf) {
                if (isSelf) this.body && !this.body.destroyed && this.redFilterEffect();
            };
            FishNode.prototype.onTouchFish = function() {
                EventDis_1.default.dispatchEvent("fishClick", this);
            };
            FishNode.prototype.isClickInSelf = function(pos) {};
            FishNode.prototype.pauseLine = function() {
                Laya.timer.clear(this, this.updateFishLine);
                this.stopInterval();
            };
            FishNode.prototype.resumeLine = function() {
                this.resumeInterval();
                this.keepOnLine();
            };
            FishNode.prototype.keepOnLine = function() {
                var isOnShow = GlobalVar_1.default.isWx ? GameData_1.default.isWxOnshow : Laya.stage.isVisibility;
                if (!isOnShow) this.fishOnHide();
                this.updateFishLine();
                Laya.timer.loop(this.lineSpeed, this, this.updateFishLine);
            };
            FishNode.prototype.stopInterval = function() {
                this.setTmpInterval(1e6);
            };
            FishNode.prototype.resumeInterval = function() {
                this.setInterVal(this.interval);
            };
            FishNode.prototype.setTmpInterval = function(interval) {
                if (!this.body || !this.body.interval || interval == this.body.interval) return;
                this.body.interval = interval;
                this.body.play(this.body.index, true, this.frameName);
            };
            FishNode.prototype.isPointInSelf = function(pos) {
                var isIn = 0;
                isIn = !!this.body && !this.body.destroyed ? +this.body.hitTestPoint(pos.x, pos.y) : 0;
                var dis = 0;
                dis = isIn > 0 ? GlobalFunc_1.default.pGetDistance(this, pos) : 0;
                return [ isIn, dis ];
            };
            FishNode.prototype.redFilterEffect = function() {
                !this.filterTrans && (this.filterTrans = new TransformFilter(this));
                this.filterTrans.doFilter();
            };
            FishNode.prototype.playFishDeadSound = function(seatIndex) {
                if (seatIndex != FishData_1.default.mySeatIndex) return;
                var soundRandom = Math.floor(Math.random() * 7);
                var isPlay = Math.random() > .8 ? true : false;
                if (soundRandom == 7) soundRandom = 0;
                isPlay && SoundM_1.default.playSound(globalConst_1.default["Sud_fishDead_" + soundRandom], 1);
            };
            return FishNode;
        }(Laya.Sprite);
        exports.default = FishNode;
    }, {
        "../../common/GuideManager": 13,
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../common/SpecialView": 22,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../datas/roomData/FishLineData": 31,
        "../../globalConst/BattleFunc": 81,
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalUI": 89,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/OnOffManager": 93,
        "../../globalConst/TimeLineManager": 95,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "./DialVIew": 109,
        "./HongYunNode": 116,
        "./PearlDialog": 117,
        "./TreasureBoxDialog": 120
    } ],
    116: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var SpecialCannonNode_1 = require("./SpecialCannonNode");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var FishData_1 = require("../../datas/roomData/FishData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var SoundM_1 = require("../../common/SoundM");
        var NetManager_1 = require("../../netWork/NetManager");
        var HongYunNode = function(_super) {
            __extends(HongYunNode, _super);
            function HongYunNode(seat, data) {
                var _this = _super.call(this, seat) || this;
                _this.score = {
                    score: 0
                };
                _this.isPlaySound = false;
                _this.seatIndex = seat;
                _this.isPlaySound = seat == FishData_1.default.mySeatIndex;
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.HY_CHANGE);
                _this.startAni = GlobalFunc_1.default.getAni("hongYunStart");
                _this.overAni = GlobalFunc_1.default.getAni("hongYunOver");
                _this.body = GlobalFunc_1.default.getAni("HongYunCannon");
                _this.seatPanel.openHyPanel();
                _this.seatPanel.closePaoBeiUI();
                if (_this.seat == FishData_1.default.mySeatIndex) EventDis_1.default.dispatchEvent(GlobalVar_1.default.LAST_BULLET_VIEW_OPEN, {
                    name: "鸿运子弹",
                    bulletNum: data.hongyun_left_pao,
                    node: _this,
                    timing: globalConst_1.default.specialFishEndTime
                });
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.ADD_NOTICE_TO_LIST);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.HONG_YUN_SCORE_UPDATE, _this, _this.updateScore);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_SPECIAL_FISH_AUTO_END, _this, _this.sendGameOver);
                _this.score.score = _this.roomPlayerData.hyScore = data.hongyun_total_gold;
                _this.leftBullet = _this.roomPlayerData.leftHyBullet = data.hongyun_left_pao ? data.hongyun_left_pao : 0;
                BattleData_1.default.setPlayerSpecialState(true, seat, "isHongYun");
                _this.seatPanel.text_hyNum.text = _this.score.score;
                _this.cannonNode.hongYunNode = _this;
                if (seat == FishData_1.default.mySeatIndex) {
                    FishData_1.default.isSelfHyTime = true;
                    FishData_1.default.hyCanFire = false;
                }
                Laya.timer.frameLoop(3, _this, _this.refreshScore);
                _this.listenAniEvent();
                return _this;
            }
            HongYunNode.prototype.destroy = function() {
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
                if (this.body) {
                    this.body.removeSelf();
                    this.body.destroy();
                    this.body = undefined;
                }
                this.seatPanel.closeHyPanel();
                this.seatPanel.openPaoBeiUI();
                this.seat == FishData_1.default.mySeatIndex && this.btnLayer.closeBoxSurplus();
                this.btnLayer = undefined;
                if (this.seat == FishData_1.default.mySeatIndex) FishData_1.default.isSelfHyTime = false;
                this.cannonNode.onOrdinaryCannon();
                this.cannonNode.deleteHongYun();
                this.cannonNode.hongYunNode = undefined;
                if (this.startAni) {
                    this.startAni.removeSelf();
                    this.startAni.destroy();
                    this.startAni = undefined;
                }
                if (this.overAni) {
                    this.overAni.removeSelf();
                    this.overAni.destroy();
                    this.overAni = undefined;
                }
                if (this.rotationNode) {
                    this.rotationNode.removeSelf();
                    this.rotationNode.destroy();
                    this.rotationNode = undefined;
                }
            };
            HongYunNode.prototype.listenAniEvent = function() {
                var _this = this;
                this.body.on(Laya.Event.LABEL, this, function(label) {
                    if (label == "fireOver") _this.body.play(0, true, "hy_wait");
                });
                this.startAni.on(Laya.Event.LABEL, this, function(label) {
                    if (label == "startFinish") {
                        _this.startAni.removeSelf();
                        _this.startAni.destroy();
                        _this.startAni = undefined;
                        _this.gameStart();
                    }
                });
                this.overAni.on(Laya.Event.LABEL, this, function(label) {
                    if (label == "overFinish") {
                        _this.overAni.removeSelf();
                        _this.overAni.destroy();
                        _this.overAni = undefined;
                        _this.destroy();
                    }
                });
            };
            HongYunNode.prototype.initBody = function() {};
            HongYunNode.prototype.cannonFlyAni = function(pos) {
                var _this = this;
                this.rotationNode = new layaMaxUI_1.ui.roomScene.hongYunRotationUI();
                this.rotationNode.pos(pos.x, pos.y);
                this.rotationNode.ani1.on(Laya.Event.LABEL, this, this.playflyAni);
                this.rotationNode.ani1.on(Laya.Event.COMPLETE, this, this.readyStart);
                SceneM_1.default.addToLayer(this.rotationNode, globalConst_1.default.effectLayer);
                var _loop_1 = function(index) {
                    Laya.timer.once(index * 20, this_1, function() {
                        var ani = new Laya.Animation();
                        ani.loadAnimation(GlobalVar_1.default.reUrl + "animation/hongYunFire.ani");
                        ani.pos(61, 70);
                        ani.scale(1.3, 1.3);
                        ani.alpha = 1;
                        _this.rotationNode["box_zi_" + index].addChild(ani);
                        ani.play(0, true);
                    });
                };
                var this_1 = this;
                for (var index = 0; index < 4; index++) _loop_1(index);
                this.rotationNode.ani1.play(0, false);
                this.rotationNode.ani1.on(Laya.Event.LABEL, this, this.playStromSound);
            };
            HongYunNode.prototype.playStromSound = function(label) {
                if (label == "hyStormSound" && this.isPlaySound) SoundM_1.default.playSound(globalConst_1.default.Sud_get_Firestorm, 1);
            };
            HongYunNode.prototype.playflyAni = function(label) {
                if (label == "startFly") {
                    var pos = GlobalFunc_1.default.getCannonPos()[this.seat];
                    Laya.Tween.to(this.rotationNode, {
                        x: pos.x,
                        y: pos.y - 100
                    }, 500, Laya.Ease.quadOut);
                }
            };
            HongYunNode.prototype.addCannon = function() {
                this.cannonNode.offOrdinaryCannon();
                this.cannonNode.addSpecialCannon(this.body);
                if (this.body) this.body.play(0, true, "hy_wait"); else if (!BattleData_1.default.roomPlayerData[this.seat].isInRoom) return -1;
                if (this.isPlaySound) SoundM_1.default.playSound(globalConst_1.default.Sud_storm_addgun, 1);
            };
            HongYunNode.prototype.readyStart = function() {
                if (this.rotationNode) {
                    this.rotationNode.removeSelf();
                    this.rotationNode.destroyChildren();
                    this.rotationNode.destroy();
                    this.rotationNode = undefined;
                }
                if (this.addCannon() == -1) {
                    this.destroy();
                    return;
                }
                this.startAni.x = 100;
                this.overAni.x = 100;
                this.seatPanel.addChild(this.startAni);
                this.startAni.play(0, false);
            };
            HongYunNode.prototype.gameStart = function() {
                if (this.seat == FishData_1.default.mySeatIndex) FishData_1.default.hyCanFire = true;
            };
            HongYunNode.prototype.fireStop = function() {
                if (this.seat == FishData_1.default.mySeatIndex) FishData_1.default.hyCanFire = false;
            };
            HongYunNode.prototype.sendGameOver = function() {
                NetManager_1.default.reqHydtGameFinish();
            };
            HongYunNode.prototype.hyTimeFinish = function() {
                Laya.timer.clear(this, this.refreshScore);
                this.seatPanel.addChild(this.overAni);
                this.overAni.play(0, false);
                BattleData_1.default.setPlayerSpecialState(false, this.seat, "isHongYun");
                this.roomPlayerData.leftHyBullet = 0;
            };
            HongYunNode.prototype.setLeftButtle = function(num) {
                this.leftBullet = num;
                this.seat == FishData_1.default.mySeatIndex && this.btnLayer.setSurplusNum(num);
                this.roomPlayerData.leftHyBullet = num;
            };
            HongYunNode.prototype.updateScore = function(data) {
                if (data.seat == this.seat) Laya.Tween.to(this.score, {
                    score: data.score
                }, 300);
            };
            HongYunNode.prototype.refreshScore = function() {
                this.seatPanel.text_hyNum.text = Math.floor(this.score.score).toString();
                if (this.leftBullet <= 0) this.fireStop();
            };
            HongYunNode.prototype.sceneBuild = function() {
                this.addCannon();
            };
            return HongYunNode;
        }(SpecialCannonNode_1.default);
        exports.default = HongYunNode;
    }, {
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "./SpecialCannonNode": 119
    } ],
    117: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var ShellNode_1 = require("./ShellNode");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var globalConst_1 = require("../../globalConst/globalConst");
        var SceneM_1 = require("../../common/SceneM");
        var NetManager_1 = require("../../netWork/NetManager");
        var PopRewardView_1 = require("../../common/PopRewardView");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var FishData_1 = require("../../datas/roomData/FishData");
        var SoundM_1 = require("../../common/SoundM");
        var CountDownNode_1 = require("../otherNodes/CountDownNode");
        var PearlDialog = function(_super) {
            __extends(PearlDialog, _super);
            function PearlDialog(fishData) {
                var _this = _super.call(this) || this;
                _this.shellNodes = [];
                _this.lastShakeIndex = 0;
                _this.goldAddNum = 0;
                _this.goldScore = 0;
                _this.autoArray = [ 0, 1, 2, 3, 4, 5, 6, 7, 8 ];
                GlobalFunc_1.default.openDialog(_this);
                _this.text_score.text = "0";
                _this.fishData = fishData.zshy_chosen_bekei_list;
                _this.unClosenData = fishData.zshy_unchosen_bekei_list_;
                BattleData_1.default.setPlayerSpecialState(true, FishData_1.default.mySeatIndex, "isZshy");
                _this.fishData.push(0);
                _this.initShell();
                _this.initUI();
                _this.gameOverAni.on(Laya.Event.LABEL, _this, _this.listenGameOverEvent);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.PEARL_MOUSE_DOWN, _this, _this.onMouseDown);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.PEARL_ANI_COMPLETE, _this, _this.startAniFinish);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.PEARL_OPEN_ANI_COMPLETE, _this, _this.openMouseEnabled);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.PEARL_ANI_POP_COMPLETE, _this, _this.goldFlyToScore);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_SPECIAL_FISH_AUTO_END, _this, _this.doAutoGame);
                SceneM_1.default.addToMiddLayer(_this, globalConst_1.default.dialogLayer);
                _this.countDownNode = new CountDownNode_1.default(globalConst_1.default.specialFishEndTime, true);
                _this.box_dialog.addChild(_this.countDownNode);
                _this.countDownNode.left = 70;
                _this.countDownNode.bottom = 30;
                _this.countDownNode.startTiming();
                return _this;
            }
            PearlDialog.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                for (var index = 0; index < this.shellNodes.length; index++) {
                    var shellNode = this.shellNodes[index];
                    shellNode && shellNode.destroy();
                }
                this.shellNodes = undefined;
                if (this.countDownNode && !this.countDownNode.destroyed) {
                    this.countDownNode.doDestroy();
                    this.countDownNode = undefined;
                }
                this.removeChildren();
                this.removeSelf();
            };
            PearlDialog.prototype.doClose = function() {
                var _this = this;
                BattleData_1.default.setPlayerSpecialState(false, FishData_1.default.mySeatIndex, "isZshy");
                GlobalFunc_1.default.closeDialog(this, Laya.Handler.create(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            PearlDialog.prototype.initUI = function() {
                this.text_tips_0.text = " ";
                var spaceWidth = this.text_tips_0.width;
                this.text_tips_0.text = "开启贝壳后若出现";
                this.text_tips_1.x = this.text_tips_0.displayWidth + 43;
                this.text_tips_0.text += GlobalFunc_1.default.getInterval(this.text_tips_1.displayWidth);
                this.text_tips_0.text += "则游戏结束";
            };
            PearlDialog.prototype.listenGameOverEvent = function(label) {
                if (label == "gameClose") this.showGetGoldView();
            };
            PearlDialog.prototype.showGetGoldView = function() {
                var _this = this;
                var callBack = new Laya.Handler(this, function() {
                    _this.doClose();
                    NetManager_1.default.reqZshyGameFinish();
                });
                var view = new PopRewardView_1.PopRewardView(this.goldScore, callBack);
            };
            PearlDialog.prototype.doAutoGame = function() {
                this.box_dialog.mouseEnabled = false;
                Laya.timer.loop(500, this, this.doAutoPlay);
            };
            PearlDialog.prototype.doAutoPlay = function() {
                if (this.fishData.length == 0) {
                    Laya.timer.clear(this, this.doAutoPlay);
                    return;
                }
                var index = 0;
                for (index = 0; index < this.shellNodes.length; index++) {
                    var node = this.shellNodes[index];
                    if (!node.isOpen) break;
                }
                this.onMouseDown(index);
            };
            PearlDialog.prototype.startAniFinish = function() {
                if (!this.destroyed && this.tipsShine && !this.tipsShine.destroyed) this.tipsShine.play(0, true);
                this.loopToPlayJump();
            };
            PearlDialog.prototype.openMouseEnabled = function(index) {
                if (this.shellNodes[index].goldNum == 0 || this.shellNodes[index].goldNum == undefined) return;
                for (var index1 = 0; index1 < this.shellNodes.length; index1++) {
                    var node = this.shellNodes[index1];
                    if (node.isOpen) continue;
                    node.mouseEnabled = true;
                }
            };
            PearlDialog.prototype.initShell = function() {
                for (var index = 0; index < 9; index++) {
                    var shellNode = new ShellNode_1.default(index);
                    this["box_shell_" + index].addChild(shellNode);
                    this.shellNodes[index] = shellNode;
                    shellNode.playAppear(500 + 100 * index);
                    if (index == 8) shellNode.listenAniEvent();
                }
                this.scoreBoardDown.play(0, false);
            };
            PearlDialog.prototype.onMouseDown = function(nodeIndex) {
                var goldNum = this.fishData.splice(0, 1)[0];
                if (goldNum == 0) {
                    Laya.timer.clear(this, this.playJump);
                    EventDis_1.default.delEventName(GlobalVar_1.default.PEARL_MOUSE_DOWN, this);
                }
                for (var index = 0; index < this.shellNodes.length; index++) {
                    var node = this.shellNodes[index];
                    node.mouseEnabled = false;
                }
                this.shellNodes[nodeIndex].setItemAndPlay(goldNum);
                this.goldAddNum = goldNum;
            };
            PearlDialog.prototype.getRandomIndex = function() {
                var index = Math.floor(Math.random() * this.shellNodes.length);
                if (index == this.lastShakeIndex) if (index == 0) index = this.shellNodes.length - 1; else index = index - 1;
                if (this.shellNodes[index].isOpen) return undefined;
                this.lastShakeIndex = index;
                return index;
            };
            PearlDialog.prototype.loopToPlayJump = function() {
                Laya.timer.loop(1e3, this, this.playJump);
            };
            PearlDialog.prototype.playJump = function() {
                var index = this.getRandomIndex();
                if (index == undefined) return;
                this.shellNodes[index].shellJump.play(0, false);
            };
            PearlDialog.prototype.goldFlyToScore = function(data) {
                var _this = this;
                var shellnode = this.shellNodes[data.index];
                if (shellnode.goldNum == 0 || shellnode.goldNum == undefined) {
                    EventDis_1.default.delEventName(GlobalVar_1.default.PEARL_ANI_POP_COMPLETE, this);
                    this.countDownNode.stopTiming();
                    Laya.timer.once(1e3, this, this.openAllUnclosenPearl);
                    return;
                }
                if (this.goldAddNum == 0) return;
                var endPos = this.img_goldCoin.localToGlobal(new Laya.Point(33, 32));
                var _loop_1 = function(goldIndex) {
                    var x = shellnode.image_item.width / 2 + (goldIndex % 2 == 0 ? 30 : -30) * Math.ceil(goldIndex / 2);
                    var y = shellnode.image_item.height / 2 - 50 + (Math.random() - .5) * 100;
                    var point = new Laya.Point(x, y);
                    var startPos = shellnode.image_item.localToGlobal(point);
                    var handler;
                    if (goldIndex == 0) handler = new Laya.Handler(this_1, this_1.playGoldSound); else if (goldIndex < 2) handler = undefined; else if (goldIndex == 2) handler = new Laya.Handler(this_1, this_1.updateScoreBoard, [ data.index ]);
                    Laya.timer.once(goldIndex * 10, this_1, function() {
                        var image = GlobalFunc_1.default.goldCoinAni(startPos, endPos, handler, goldIndex * 100);
                        _this.box_dialog.addChild(image);
                    });
                };
                var this_1 = this;
                for (var goldIndex = 0; goldIndex < 3; goldIndex++) _loop_1(goldIndex);
            };
            PearlDialog.prototype.playGoldSound = function() {
                SoundM_1.default.playSound(globalConst_1.default.Sud_getGold, 1, 10, undefined, undefined, true);
            };
            PearlDialog.prototype.updateScoreBoard = function(index) {
                this.goldScore += this.shellNodes[index].goldNum;
                this.text_score.text = this.goldScore.toString();
                var text = new Laya.Label(this.text_score.text);
                text.anchorX = text.anchorY = .5;
                text.font = globalConst_1.default.fontNum1;
                text.height = 81;
                text.x = this.text_score.width / 2;
                text.y = 40;
                text.alpha = .6;
                this.text_score.addChild(text);
                Laya.Tween.to(text, {
                    scaleX: 1.5,
                    scaleY: 1.5,
                    alpha: 0
                }, 750, laya.utils.Ease.quartOut, Laya.Handler.create(this, function() {
                    text.destroy();
                }, [ text ]));
            };
            PearlDialog.prototype.openAllUnclosenPearl = function() {
                var _this = this;
                var closenPearl = [];
                for (var index = 0; index < this.shellNodes.length; index++) if (!this.shellNodes[index].isOpen) closenPearl.push(index);
                for (var index = 0; index < this.unClosenData.length; index++) {
                    var goldNum = this.unClosenData[index];
                    this.shellNodes[closenPearl[index]].setItemAndPlay(goldNum);
                }
                Laya.timer.once(2e3, this, function() {
                    _this.gameOverAni.play(0, false);
                });
            };
            return PearlDialog;
        }(layaMaxUI_1.ui.roomScene.PearlDialogUI);
        exports.default = PearlDialog;
    }, {
        "../../common/PopRewardView": 18,
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "../otherNodes/CountDownNode": 121,
        "./ShellNode": 118
    } ],
    118: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var SoundM_1 = require("../../common/SoundM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var ShellNode = function(_super) {
            __extends(ShellNode, _super);
            function ShellNode(index) {
                var _this = _super.call(this) || this;
                _this.nodeIndex = 0;
                _this.isOpen = false;
                _this.goldNum = 0;
                _this.nodeIndex = index;
                _this.name = "shellNode" + index;
                _this.mouseEnabled = false;
                _this.shellPop.on(Laya.Event.LABEL, _this, _this.aniCompleteEvent);
                _this.shellPop.on(Laya.Event.COMPLETE, _this, _this.aniCompleteEvent);
                _this.on(Laya.Event.CLICK, _this, function() {
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.PEARL_MOUSE_DOWN, _this.nodeIndex);
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.PEARL_ANI_COMPLETE, _this, function() {
                    _this.mouseEnabled = true;
                });
                return _this;
            }
            ShellNode.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                this.removeChildren();
                this.removeSelf();
            };
            ShellNode.prototype.listenAniEvent = function() {
                this.shellAppear.on(Laya.Event.COMPLETE, this, function() {
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.PEARL_ANI_COMPLETE);
                });
            };
            ShellNode.prototype.playAppear = function(delay) {
                var _this = this;
                if (delay > 0) Laya.timer.once(delay, this, function() {
                    _this.shellAppear.play(0, false);
                }); else this.shellAppear.play(0, false);
            };
            ShellNode.prototype.setItemAndPlay = function(goldNum) {
                this.shellJump.stop();
                this.isOpen = true;
                var itemSkin = "";
                var soundName;
                this.goldNum = goldNum;
                if (goldNum != undefined && goldNum > 0) {
                    this.text_goldNum.text = goldNum.toString();
                    this.text_goldNum.visible = true;
                    itemSkin = "pearl/image_gold.png";
                    soundName = globalConst_1.default.Sud_click_shell;
                } else {
                    this.text_goldNum.visible = false;
                    itemSkin = "pearl/image_boom.png";
                    soundName = globalConst_1.default.Sud_pearl_bomb;
                }
                this.image_item.skin = itemSkin;
                this.shellPop.play(0, false);
                this.mouseEnabled = false;
                SoundM_1.default.playSound(soundName, 1);
            };
            ShellNode.prototype.aniCompleteEvent = function(label) {
                if (label == "appearGold") EventDis_1.default.dispatchEvent(GlobalVar_1.default.PEARL_ANI_POP_COMPLETE, {
                    index: this.nodeIndex,
                    gold: this.goldNum
                }); else if (label == "aniEnd") EventDis_1.default.dispatchEvent(GlobalVar_1.default.PEARL_OPEN_ANI_COMPLETE, [ this.nodeIndex ]);
            };
            return ShellNode;
        }(layaMaxUI_1.ui.roleNodes.ShellNodeUI);
        exports.default = ShellNode;
    }, {
        "../../common/SoundM": 21,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    119: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var FishData_1 = require("../../datas/roomData/FishData");
        var SpecialCannonNode = function() {
            function SpecialCannonNode(seat) {
                this.seat = 0;
                this.isSelf = false;
                this.destroyed = false;
                this.seat = seat;
                this.isSelf = seat == FishData_1.default.mySeatIndex;
                this.roomPlayerData = BattleData_1.default.getSitInfo(seat);
                this.seatNode = FishData_1.default.seatNodes[seat];
                this.seatPanel = this.seatNode.numPanel;
                this.cannonNode = this.seatNode.cannonNode;
            }
            return SpecialCannonNode;
        }();
        exports.default = SpecialCannonNode;
    }, {
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30
    } ],
    120: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var spineNode_1 = require("../otherNodes/spineNode");
        var PopRewardView_1 = require("../../common/PopRewardView");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var globalConst_1 = require("../../globalConst/globalConst");
        var TimeLineManager_1 = require("../../globalConst/TimeLineManager");
        var NetManager_1 = require("../../netWork/NetManager");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var SoundM_1 = require("../../common/SoundM");
        var CountDownNode_1 = require("../otherNodes/CountDownNode");
        var TreasureBoxDialog = function(_super) {
            __extends(TreasureBoxDialog, _super);
            function TreasureBoxDialog(seatIndex) {
                var _this = _super.call(this) || this;
                _this.boxAni = true;
                _this.isBoxClick = true;
                _this.boxState = 0;
                _this.scoreNum = {
                    maxScore: 0,
                    changeScore: 0
                };
                _this.leftTime = {
                    time: 150
                };
                _this.isAddScore = false;
                _this.seatIndex = 0;
                _this.isPlayCoinAni = true;
                GlobalFunc_1.default.openDialog(_this);
                _this.seatIndex = seatIndex;
                _this.text_score.text = "0";
                BattleData_1.default.setPlayerSpecialState(true, seatIndex, "isHwbz");
                _this.loadTreasureSpine();
                _this.box_treasureBox.on(Laya.Event.CLICK, _this, _this.onBoxClick);
                _this.readyStart.on(Laya.Event.LABEL, _this, _this.listenLabel);
                _this.readyStart.on(Laya.Event.COMPLETE, _this, _this.gameStart);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.SPINE_SEND, _this, _this.spineReady);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.HWBZ_START_GAME, _this, _this.s2cStartGame);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.HWBZ_CLICK_EVENT, _this, _this.s2cClickBox);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_SPECIAL_FISH_AUTO_END, _this, _this.doAutoGame);
                _this.countDownNode = new CountDownNode_1.default(globalConst_1.default.specialFishStartTime, true);
                _this.box_dialog.addChild(_this.countDownNode);
                _this.countDownNode.left = 70;
                _this.countDownNode.bottom = 30;
                _this.countDownNode.startTiming();
                return _this;
            }
            TreasureBoxDialog.prototype.doClose = function() {
                var _this = this;
                BattleData_1.default.setPlayerSpecialState(false, this.seatIndex, "isHwbz");
                GlobalFunc_1.default.closeDialog(this, new Laya.Handler(this, function() {
                    _this.destroy();
                    _this.close();
                }));
            };
            TreasureBoxDialog.prototype.destroy = function() {
                Laya.Pool.clearBySign("treasureBoxClick");
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
                if (this.countDownNode && !this.countDownNode.destroyed) {
                    this.countDownNode.doDestroy();
                    this.countDownNode = undefined;
                }
                Laya.Tween.clearAll(this.leftTime);
                this.balance && this.balance.destroyed && this.balance.destroy();
                this.balance = undefined;
                this.timeCallBackHandler = undefined;
                Laya.Tween.clearAll(this.leftTime);
                this.removeChildren();
                this.removeSelf();
            };
            TreasureBoxDialog.prototype.doAutoGame = function() {
                this.sendStartGame();
                this.box_dialog.mouseEnabled = false;
                this.boxState = 1;
            };
            TreasureBoxDialog.prototype.sendStartGame = function() {
                NetManager_1.default.reqStartHaiWangFish();
            };
            TreasureBoxDialog.prototype.s2cStartGame = function() {
                this.readyStart.play(0, false);
                this.countDownNode.stopTiming();
            };
            TreasureBoxDialog.prototype.sendClickBox = function() {
                NetManager_1.default.reqHaiWangFishClick();
            };
            TreasureBoxDialog.prototype.s2cClickBox = function(data) {
                if (data.reward_gold && data.reward_gold != 0) this.setMaxScore(data.reward_gold, data.total_reward_gold);
            };
            TreasureBoxDialog.prototype.listenLabel = function(label) {
                if (label == "playSound") SoundM_1.default.playSound(globalConst_1.default.Sud_count_down, 1);
            };
            TreasureBoxDialog.prototype.gameStart = function() {
                this.box_dialog.mouseEnabled = true;
                this.timeCallBackHandler = new Laya.Handler(this, this.TimeCallBack);
                this.leftTime.time = globalConst_1.default.haiWangTime / 100;
                Laya.Tween.to(this.leftTime, {
                    time: 0
                }, globalConst_1.default.haiWangTime, undefined, this.timeCallBackHandler);
                Laya.timer.frameLoop(3, this, this.refreshMaxScore);
                Laya.timer.frameLoop(3, this, this.refreshTime);
            };
            TreasureBoxDialog.prototype.gameOver = function() {
                Laya.Tween.to(this.img_scoreBg, {
                    alpha: 0
                }, 100);
                Laya.Tween.to(this.img_tipText, {
                    alpha: 0
                }, 100);
                Laya.Tween.to(this.img_topLight, {
                    alpha: 0
                }, 100);
                BattleData_1.default.isInRoom && (this.balance = new PopRewardView_1.PopRewardView(parseInt(this.scoreNum.maxScore), Laya.Handler.create(this, this.doClose)));
            };
            TreasureBoxDialog.prototype.TimeCallBack = function() {
                Laya.timer.clear(this, this.refreshTime);
                Laya.Tween.to(this.text_time, {
                    alpha: 0
                }, 300);
                this.boxState = 2;
                if (!this.isAddScore) this.gameOver();
            };
            TreasureBoxDialog.prototype.onBoxClick = function() {
                var _this = this;
                if (this.boxState == 0) {
                    this.sendStartGame();
                    this.box_dialog.mouseEnabled = false;
                    this.boxState = 1;
                } else if (this.boxState == 1) {
                    this.sendClickBox();
                    this.boxAni = false;
                    this.isBoxClick = false;
                    this.clickBox();
                    this.topLightAni();
                    Laya.timer.once(globalConst_1.default.haiWangJiange, this, function() {
                        _this.isBoxClick = true;
                    });
                    var clickAni = GlobalFunc_1.default.getAni("treasureBoxClick");
                    this.box_treasureBox.addChild(clickAni);
                    var point = this.box_treasureBox.globalToLocal(new Laya.Point(Laya.stage.width / 2, Laya.stage.height / 2));
                    clickAni.pos(point.x, point.y);
                    clickAni.on(Laya.Event.COMPLETE, this, function(ani) {
                        ani.removeSelf();
                        Laya.Pool.recover("treasureBoxClick", ani);
                    }, [ clickAni ]);
                    clickAni.play(0, false);
                }
            };
            TreasureBoxDialog.prototype.topLightAni = function() {
                this.lightAni = undefined;
                this.lightAni = TimeLineManager_1.default.creatTimeLine();
                this.lightAni.addLabel("bright", 0).to(this.img_topLight, {
                    alpha: 1
                }, (1 - this.img_topLight.alpha) * 500).addLabel("dark", 150).to(this.img_topLight, {
                    alpha: 0
                }, 500);
                this.lightAni.play(0, false);
            };
            TreasureBoxDialog.prototype.startAni = function() {
                var _this = this;
                Laya.Tween.to(this.box_tipName, {
                    scaleX: 1,
                    scaleY: 1
                }, 750, Laya.Ease.backOut);
                Laya.Tween.to(this.img_tipText, {
                    x: this.box_dialog.width / 2
                }, 1e3, Laya.Ease.backOut);
                Laya.Tween.to(this.box_treasureBox, {
                    scaleX: 1,
                    scaleY: 1
                }, 1e3, Laya.Ease.elasticOut, Laya.Handler.create(this, function() {
                    _this.guideClick.play(0, true);
                    Laya.Tween.to(_this.text_time, {
                        alpha: 1
                    }, 400);
                }));
            };
            TreasureBoxDialog.prototype.loadTreasureSpine = function() {
                this.boxSpine = new spineNode_1.default();
                this.boxSpine.layer = this.box_treasureBox;
                this.boxSpine.fileName = "treasureBox";
                this.boxSpine.x = this.box_treasureBox.width / 2;
                this.boxSpine.y = this.box_treasureBox.height / 2 - 50;
                this.boxSpine.isPlay = false;
                this.boxSpine.loadSpine();
            };
            TreasureBoxDialog.prototype.spineReady = function(data) {
                var _this = this;
                this.boxSpine.body.on(Laya.Event.LABEL, this, function(event) {
                    if (event.name == "ggg") _this.boxAni = true;
                });
                this.boxSpine.body.on(Laya.Event.STOPPED, this, function() {
                    _this.replayLight();
                });
                this.startAni();
                this.replayLight();
            };
            TreasureBoxDialog.prototype.clickBox = function() {
                this.boxSpine.body.play(0, false, true, 0, 1e3, false);
            };
            TreasureBoxDialog.prototype.replayLight = function() {
                this.boxSpine.body.play(0, false, true, 500, 1e3, false);
            };
            TreasureBoxDialog.prototype.setMaxScore = function(changeValue, allValue) {
                var _this = this;
                this.addFloatNum(changeValue);
                this.playGetGoldEffect();
                this.scoreNum.changeScore = changeValue;
                Laya.Tween.clearAll(this.scoreNum);
                var maxScore = allValue;
                Laya.Tween.to(this.scoreNum, {
                    maxScore: maxScore
                }, 200, undefined, Laya.Handler.create(this, function() {
                    if (_this.boxState == 2) {
                        Laya.timer.clear(_this, _this.refreshMaxScore);
                        _this.refreshMaxScore();
                        _this.gameOver();
                    }
                    _this.isAddScore = false;
                }));
                this.isAddScore = true;
            };
            TreasureBoxDialog.prototype.refreshMaxScore = function() {
                this.scoreNum.maxScore = parseInt(this.scoreNum.maxScore);
                this.text_score.text = this.scoreNum.maxScore.toLocaleString();
            };
            TreasureBoxDialog.prototype.refreshTime = function() {
                var time = (Math.floor(this.leftTime.time) / 10).toString();
                var length = Math.floor(this.leftTime.time).toString().length;
                this.text_time.text = "倒计时 " + time + (time.length < length ? ".0 秒" : " 秒");
            };
            TreasureBoxDialog.prototype.addFloatNum = function(num) {
                var text = new Laya.Label();
                text.text = "+" + Math.floor(num);
                text.anchorX = text.anchorY = .5;
                text.scale(.5, .5);
                text.alpha = 0;
                text.font = globalConst_1.default.fontNum1;
                var x = this.box_treasureBox.width / 2 + (Math.random() - .5) * 100;
                var y = this.box_treasureBox.height / 2 - 35 + (Math.random() - .5) * 50;
                text.pos(x, y);
                this.box_treasureBox.addChild(text);
                Laya.Tween.to(text, {
                    alpha: 1
                }, 200);
                Laya.Tween.to(text, {
                    alpha: 0
                }, 800, Laya.Ease.strongOut, undefined, 200);
                Laya.Tween.to(text, {
                    y: text.y - 200
                }, 1e3, undefined, Laya.Handler.create(this, function(textNum) {
                    textNum.removeSelf();
                    textNum.destroy();
                }, [ text ]));
            };
            TreasureBoxDialog.prototype.playGetGoldEffect = function() {
                var _this = this;
                SoundM_1.default.playSound(globalConst_1.default.Sud_click, 1);
                if (!this.isPlayCoinAni) return;
                for (var index = 0; index < 10; index++) {
                    var goldCoin = GlobalFunc_1.default.getAni("goldCoinAni");
                    goldCoin.x = Math.random() * this.box_effectCoin.width;
                    goldCoin.y = 350;
                    goldCoin.rotation = Math.random() * 360;
                    goldCoin.alpha = 1;
                    var up = 300 - Math.random() * 100;
                    var down = 200 + Math.random() * 300;
                    var left = goldCoin.x + (Math.random() - .5) * 400;
                    var rotation = Math.random() * 360;
                    this.box_effectCoin.addChild(goldCoin);
                    goldCoin.play(0, true);
                    Laya.Tween.to(goldCoin, {
                        x: left,
                        rotation: rotation
                    }, 1e3);
                    var timeLine = TimeLineManager_1.default.creatTimeLine();
                    timeLine.addLabel("up", 0).to(goldCoin, {
                        y: up
                    }, 400, Laya.Ease.quadOut).addLabel("down", 0).to(goldCoin, {
                        y: down,
                        alpha: 0
                    }, 600, Laya.Ease.quadIn);
                    timeLine.on(Laya.Event.COMPLETE, this, function(coin) {
                        coin.removeSelf();
                        Laya.Pool.recover("goldCoinAni", coin);
                    }, [ goldCoin ]);
                    timeLine.play(0, false);
                }
                this.isPlayCoinAni = false;
                Laya.timer.once(200, this, function() {
                    _this.isPlayCoinAni = true;
                });
            };
            return TreasureBoxDialog;
        }(layaMaxUI_1.ui.roomScene.TreasureBoxDialogUI);
        exports.default = TreasureBoxDialog;
    }, {
        "../../common/PopRewardView": 18,
        "../../common/SoundM": 21,
        "../../datas/roomData/BattleData": 29,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/TimeLineManager": 95,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151,
        "../otherNodes/CountDownNode": 121,
        "../otherNodes/spineNode": 129
    } ],
    121: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var CircularMaskProgressBar_1 = require("../../common/CircularMaskProgressBar");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var CountDownNode = function(_super) {
            __extends(CountDownNode, _super);
            function CountDownNode(lastTime, withAni) {
                if (withAni === void 0) withAni = false;
                var _this = _super.call(this) || this;
                _this.maskNode = new CircularMaskProgressBar_1.CircularMaskProgressBar();
                _this.lastTime = 0;
                _this.withAni = false;
                _this.minTime = 5;
                _this.timeStop = false;
                _this.lastTime = lastTime;
                _this.minTime = lastTime > 30 ? 10 : 5;
                _this.withAni = withAni;
                var width = _this.img_countDown_time.width;
                var len = width / Math.sqrt(2);
                _this.setUI();
                return _this;
            }
            CountDownNode.prototype.startTiming = function() {
                Laya.timer.loop(1e3, this, this._CurrentSecondTiming);
            };
            CountDownNode.prototype._CurrentSecondTiming = function() {
                if (this.lastTime == 1) Laya.timer.clearAll(this);
                this.playtimeAni();
            };
            CountDownNode.prototype.playtimeAni = function() {
                this.lastTime--;
                this.setUI();
                if (this.lastTime <= 0) {
                    this.playDestroyAni();
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.ROOM_SPECIAL_FISH_AUTO_END);
                    return;
                }
                if (this.lastTime > this.minTime) this.ani_0.play(0, false); else this.ani_1.play(0, false);
            };
            CountDownNode.prototype.setUI = function() {
                this.text_lastTime.text = this.text_lastTime_light.text = this.lastTime.toString();
                if (this.lastTime == 0) return;
            };
            CountDownNode.prototype.playDestroyAni = function() {
                this.timeStop = true;
                Laya.timer.clearAll(this);
                Laya.Tween.to(this, {
                    alpha: 0
                }, 500, undefined, new Laya.Handler(this, this.doDestroy));
                this.doDestroy();
            };
            CountDownNode.prototype.doDestroy = function() {
                Laya.timer.clearAll(this);
                this.destroy();
            };
            CountDownNode.prototype.stopTiming = function() {
                if (!!!this || this.destroyed || this.lastTime <= 0 || this.timeStop) return;
                this.playDestroyAni();
            };
            return CountDownNode;
        }(layaMaxUI_1.ui.roleNodes.CountDownViewUI);
        exports.default = CountDownNode;
    }, {
        "../../common/CircularMaskProgressBar": 6,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalVar": 90,
        "../../ui/layaMaxUI": 151
    } ],
    122: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var FishData_1 = require("../../datas/roomData/FishData");
        var TrackBulletNode_1 = require("../bulletNodes/TrackBulletNode");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var SoundM_1 = require("../../common/SoundM");
        var BulletFactory_1 = require("../../secens/roomScenes/BulletFactory");
        var DaoDanNode = function() {
            function DaoDanNode(data) {
                this.updateView(data);
            }
            DaoDanNode.prototype.updateView = function(data) {
                var fishNode = data.fishNode;
                var specialButtle;
                switch (data.item_id) {
                  case 11:
                  case 15:
                    specialButtle = "img_zid_10";
                    break;

                  case 12:
                  case 16:
                    specialButtle = "img_zid_11";
                    break;

                  case 13:
                  case 17:
                    specialButtle = "img_zid_12";
                    break;

                  case 14:
                  case 18:
                    specialButtle = "img_zid_13";
                    break;
                }
                this.bomb = new TrackBulletNode_1.default();
                var seat = FishData_1.default.seatNodes[data.seatIndex];
                if (!seat) return;
                var cannonPos = seat.cannonNode.node_cannon.localToGlobal(new Laya.Point(0, 0));
                var ratio = seat.isSeatFlip ? 1 : -1;
                var ptFrom = new Laya.Point(cannonPos.x, cannonPos.y + ratio * 34);
                if (!fishNode) return;
                var angle = GlobalFunc_1.default.vecToAngle(ptFrom, GlobalFunc_1.default.changeLockP(fishNode));
                this.bomb.lockFishId = fishNode.fishUniqId;
                this.bomb.daoDanHandler = data.callBack;
                this.bomb.initBullet({
                    seatIndex: data.seatIndex,
                    sprcialButtle: specialButtle,
                    angle: angle
                });
                this.bomb.pos(ptFrom.x, ptFrom.y);
                this.bomb.doTrackFire(fishNode);
                SceneM_1.default.addToLayer(this.bomb, globalConst_1.default.bulletLayer, ptFrom.x, ptFrom.y);
                seat.cannonNode.rotateAndFire(angle, BulletFactory_1.BulletType.bullet_type_daoDan);
                if (data.seatIndex == FishData_1.default.mySeatIndex) SoundM_1.default.playSound(globalConst_1.default.Sud_cannon_bomb, 1);
            };
            return DaoDanNode;
        }();
        exports.default = DaoDanNode;
    }, {
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/globalConst": 97,
        "../../secens/roomScenes/BulletFactory": 143,
        "../bulletNodes/TrackBulletNode": 105
    } ],
    123: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var globalConst_1 = require("../../globalConst/globalConst");
        var ItemNode = function() {
            function ItemNode() {
                this.itemName = "";
                this.type = 0;
                this.itemNumber = globalConst_1.default.noEquipment;
                this.itemNumOld = globalConst_1.default.noEquipment;
                this.describe = "";
                this.itemID = -2;
                this.skin = "";
                this.sortId = 0;
                this.needDiamond = -1;
                this.buyVip = 0;
                this.giveVip = 0;
                this.giveMinLimit = 0;
                this.isGive = 0;
                this.cycleTime = 0;
                this.operation = "";
                this.speed = 0;
                this.effectTime = "";
                this.hit = 0;
                this.useGold = 0;
                this.qiWang = 0;
                this.itemState = 0;
                this.itemTerm = 0;
                this.isShow = false;
            }
            return ItemNode;
        }();
        exports.ItemNode = ItemNode;
    }, {
        "../../globalConst/globalConst": 97
    } ],
    124: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var TimeLineManager_1 = require("../../globalConst/TimeLineManager");
        var globalConst_1 = require("../../globalConst/globalConst");
        var JackpotNode = function(_super) {
            __extends(JackpotNode, _super);
            function JackpotNode(index, roomData) {
                var _this = _super.call(this) || this;
                _this.rewardPool = {
                    num: 0
                };
                _this.lastNum = 0;
                _this.index = index;
                _this.name = "jackpotpool" + index;
                _this.roomData = roomData;
                var dao = BattleData_1.default.jackpotNum;
                _this.rewardPool.num = BattleData_1.default.jackpotNum[_this.index].num;
                _this.initJackpot();
                return _this;
            }
            JackpotNode.prototype.initJackpot = function() {
                this.text_jackpot.font = globalConst_1.default.fontNum1;
                this.text_jackpot.text = this.rewardPool.num.toLocaleString();
            };
            JackpotNode.prototype.updatePoolNum = function() {
                this.rewardPool.num = BattleData_1.default.jackpotNum[this.index].num;
                this.currectPercent = BattleData_1.default.jackpotPercent[this.index];
                this.lastNum++;
                if (this.lastNum >= 10) this.lastNum = 0;
                var newNum;
                if (Number(this.currectPercent) < 80) {
                    var num = Math.round(this.rewardPool.num);
                    var newNum_1 = Math.floor(num / 10);
                    this.text_jackpot.text = (newNum_1 * 10 + this.lastNum).toLocaleString();
                } else this.text_jackpot.text = Math.round(this.rewardPool.num).toLocaleString();
            };
            JackpotNode.prototype.startCoin = function() {
                Laya.timer.frameLoop(5, this, this.playGetGoldEffect, [ 2 ]);
                Laya.timer.frameLoop(1, this, this.updatePoolNum);
            };
            JackpotNode.prototype.playGetGoldEffect = function(num) {
                for (var index = 0; index < num; index++) {
                    var goldCoin = GlobalFunc_1.default.getAni("goldCoinAni");
                    var randomNum = Math.random();
                    var scale = Math.random() / 10 + .4;
                    goldCoin.x = randomNum * this.box_coin.width;
                    goldCoin.y = 165;
                    goldCoin.rotation = Math.random() * 360;
                    goldCoin.alpha = 1;
                    goldCoin.scale(scale, scale);
                    var up = 130 - Math.random() * 50;
                    var down = 170;
                    var left = goldCoin.x + (Math.random() - .5) * 300;
                    var rotation = Math.random() * 360;
                    this.box_coin.addChild(goldCoin);
                    goldCoin.play(0, true);
                    Laya.Tween.to(goldCoin, {
                        x: left,
                        rotation: rotation
                    }, 1e3);
                    var timeLine = TimeLineManager_1.default.creatTimeLine();
                    timeLine.addLabel("up", 0).to(goldCoin, {
                        y: up
                    }, 400, Laya.Ease.quadOut).addLabel("down", 0).to(goldCoin, {
                        y: down,
                        alpha: 0
                    }, 600, Laya.Ease.quadIn);
                    timeLine.on(Laya.Event.COMPLETE, this, function(coin) {
                        coin.removeSelf();
                        Laya.Pool.recover("goldCoinAni", coin);
                    }, [ goldCoin ]);
                    timeLine.play(0, false);
                }
            };
            JackpotNode.prototype.destroy = function() {
                Laya.timer.clearAll(this);
                Laya.Tween.clearAll(this.rewardPool);
                EventDis_1.default.delAllEvnt(this);
                this.removeSelf();
            };
            return JackpotNode;
        }(layaMaxUI_1.ui.hallScene.JackpotNodeUI);
        exports.default = JackpotNode;
    }, {
        "../../datas/roomData/BattleData": 29,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/TimeLineManager": 95,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    125: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var globalConst_1 = require("../../globalConst/globalConst");
        var MarqueeManager_1 = require("../../globalConst/MarqueeManager");
        var MarqueeNode = function(_super) {
            __extends(MarqueeNode, _super);
            function MarqueeNode() {
                var _this = _super.call(this) || this;
                _this.isPlaying = false;
                _this.x = globalConst_1.default.stageW / 2 - 563;
                _this.y = 122;
                _this.alpha = 0;
                _this.mouseEnabled = false;
                _this.box_marquee.x = 800;
                _this.isPlaying = false;
                return _this;
            }
            MarqueeNode.prototype.setAndPlayMarquee = function(contents, useTime) {
                this.isPlaying = true;
                this.box_marquee.x = 800;
                this.addtextFromColor(contents);
                useTime = 800 + this.text_marquee.displayWidth * 10;
                var width = this.box_marquee.displayWidth;
                Laya.Tween.clearAll(this);
                Laya.Tween.to(this, {
                    alpha: 1
                }, 500);
                Laya.Tween.to(this.box_marquee, {
                    x: -width
                }, useTime, Laya.Ease.linearNone, new Laya.Handler(this, this.doHide), 500);
            };
            MarqueeNode.prototype.doHide = function() {
                Laya.Tween.to(this, {
                    alpha: 0
                }, 500);
                this.box_marquee.x = 800;
                this.text_marquee.removeChildren();
                this.isPlaying = false;
                MarqueeManager_1.default.loopToPlay();
            };
            MarqueeNode.prototype.addtextFromColor = function(contents) {
                var textWidth = 0;
                for (var index = 0; index < contents.length; index++) {
                    var data = contents[index];
                    var color = GlobalFunc_1.default.getMarqueeColor(data.color);
                    var content = GlobalFunc_1.default.getColorText(data.text, 26, color.color, color.strokeColor);
                    this.text_marquee.addChild(content);
                    content.x = textWidth;
                    textWidth += content.width;
                }
            };
            MarqueeNode.prototype.destroy = function() {
                this.removeSelf();
            };
            return MarqueeNode;
        }(layaMaxUI_1.ui.common.MarqueeNodeUI);
        exports.default = MarqueeNode;
    }, {
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/MarqueeManager": 91,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    126: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var ChangeCannonDlg_1 = require("../../dialog/roomDlg/ChangeCannonDlg");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var FishData_1 = require("../../datas/roomData/FishData");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var GameData_1 = require("../../datas/hallData/GameData");
        var WarningMessage_1 = require("../../common/WarningMessage");
        var DialogManager_1 = require("../../common/DialogManager");
        var RoomHelpNode = function(_super) {
            __extends(RoomHelpNode, _super);
            function RoomHelpNode() {
                var _this = _super.call(this) || this;
                _this.viewState = 0;
                _this.isChange = false;
                _this.init();
                _this.btn_autoPao.on(Laya.Event.CLICK, _this, _this.doMonthClick);
                _this.btn_changeCann.on(Laya.Event.CLICK, _this, _this.changeCannon);
                _this.up.on(Laya.Event.COMPLETE, _this, _this.finishChange);
                _this.down.on(Laya.Event.COMPLETE, _this, _this.finishChange);
                _this.mouseEnabled = false;
                _this.up.on(Laya.Event.COMPLETE, _this, function() {
                    _this.mouseEnabled = true;
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.CHANGE_ROOM_HELP_STATE, _this, _this.changeState);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.CHANGE_AUTO_PAO_STATE, _this, _this.doAuto);
                _this.changeState();
                GlobalFunc_1.default.globalSetZorder(_this, 10);
                return _this;
            }
            RoomHelpNode.prototype.init = function() {
                var pos = GlobalFunc_1.default.getRoomHelpPos()[FishData_1.default.mySeatIndex];
                this.pos(pos.x, pos.y);
            };
            RoomHelpNode.prototype.doMonthClick = function() {
                if (!GlobalFunc_1.default.isIos()) if (!GameData_1.default.monthEndDay) {
                    new WarningMessage_1.WarningMessage("购买月卡即可享受自动开炮");
                    DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_MONTHCARD);
                    return;
                }
                this.doAuto();
            };
            RoomHelpNode.prototype.doAuto = function() {
                if (FishData_1.default.isAutoButtonOn) {
                    this.lightRotate.stop();
                    this.img_light.visible = false;
                    FishData_1.default.isAutoButtonOn = false;
                } else if (GlobalFunc_1.default.checkVipToFire()) {
                    this.lightRotate.play(0, true);
                    this.img_light.visible = true;
                    FishData_1.default.isAutoButtonOn = true;
                }
            };
            RoomHelpNode.prototype.changeCannon = function() {
                if (this.checkIsInDragonState()) {
                    var str = GlobalFunc_1.default.getColorText("当前正在使用龙炮，无法更换炮台");
                    var common = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                    SceneM_1.default.addToMiddLayer(common, globalConst_1.default.dialogLayer);
                    return;
                }
                this.changeState();
                var dialog = new ChangeCannonDlg_1.default();
                SceneM_1.default.addToMiddLayer(dialog, globalConst_1.default.dialogLayer);
            };
            RoomHelpNode.prototype.checkIsInDragonState = function() {
                var dragonState = BattleData_1.default.roomPlayerData[FishData_1.default.mySeatIndex].isDragonCannon;
                return dragonState != -1;
            };
            RoomHelpNode.prototype.changeState = function() {
                if (BattleData_1.default.room_type == 0) return;
                if (FishData_1.default.isInDaoDan) return;
                if (this.isChange) return;
                if (FishData_1.default.isDragonCannonOn) return;
                this.isChange = true;
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.CLOSE_FISH_SCENE_VIEW, [ "fuZhu" ]);
                if (this.viewState == 0) this.playUp(); else {
                    this.mouseEnabled = false;
                    this.playDown();
                }
            };
            RoomHelpNode.prototype.finishChange = function() {
                this.isChange = false;
            };
            RoomHelpNode.prototype.playDown = function() {
                this.viewState = 0;
                Laya.timer.clear(this, this.playDown);
                this.down.play(0, false);
            };
            RoomHelpNode.prototype.playUp = function() {
                this.viewState = 1;
                this.up.play(0, false);
                Laya.timer.once(5e3, this, this.playDown);
            };
            RoomHelpNode.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                this.timer.clearAll(this);
            };
            return RoomHelpNode;
        }(layaMaxUI_1.ui.roleNodes.RoomHelpNodeUI);
        exports.default = RoomHelpNode;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/DialogManager": 9,
        "../../common/SceneM": 19,
        "../../common/WarningMessage": 25,
        "../../datas/hallData/GameData": 26,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../dialog/roomDlg/ChangeCannonDlg": 69,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    127: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var ColorFilter_1 = require("../../globalConst/ColorFilter");
        var GlobalObj_1 = require("../../globalConst/GlobalObj");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var RoomJackpotNode = function(_super) {
            __extends(RoomJackpotNode, _super);
            function RoomJackpotNode(roomIndex) {
                var _this = _super.call(this) || this;
                _this.listDown = false;
                _this.roomIndex = 0;
                _this.lastNum = 0;
                _this.rankingArray = [];
                _this.isMask = false;
                _this.centerX = 0;
                _this.y = 0;
                _this.roomIndex = roomIndex;
                _this.roomData = BattleData_1.default.roomData[roomIndex];
                _this.jackpotMinPao = Number(_this.roomData.jackpotPao);
                _this.playerRanking.scrollBar.showButtons = false;
                _this.playerRanking.scrollBar.scaleBar = true;
                _this.text_failTips.text = _this.jackpotMinPao + "炮倍以上\n激活彩金";
                _this.black_bg.mouseEnabled = false;
                _this.btn_jackpot.on(Laya.Event.CLICK, _this, _this.doListAni);
                _this.black_bg.on(Laya.Event.CLICK, _this, _this.closeRanking);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.JACKPOT_CHANGE_PAO, _this, _this.checkJackpotTip);
                Laya.timer.frameLoop(1, _this, _this.updatePoolNum);
                return _this;
            }
            RoomJackpotNode.prototype.checkJackpotTip = function(data) {
                var node = undefined;
                if (data.currentPao >= this.jackpotMinPao && data.lastPao < this.jackpotMinPao) {
                    node = this.img_pass;
                    this.btn_jackpot.filters = undefined;
                    this.isMask = false;
                } else if (data.currentPao < this.jackpotMinPao) {
                    node = this.img_fail;
                    this.btn_jackpot.filters = [ ColorFilter_1.default.getBlackFilter(.4) ];
                    this.isMask = true;
                }
                node && this.doTipsAni(node);
            };
            RoomJackpotNode.prototype.doTipsAni = function(node) {
                this.clearTip(this.img_fail);
                this.clearTip(this.img_pass);
                node.visible = true;
                node.alpha = 1;
                Laya.Tween.to(node, {
                    alpha: 0,
                    visible: false
                }, 300, undefined, undefined, 1e3);
            };
            RoomJackpotNode.prototype.clearTip = function(node) {
                Laya.Tween.clearAll(node);
                node.visible = false;
                node.alpha = 0;
            };
            RoomJackpotNode.prototype.doListAni = function() {
                this.btn_jackpot.mouseEnabled = false;
                if (this.isMask) {
                    this.doTipsAni(this.img_fail);
                    this.btn_jackpot.mouseEnabled = true;
                    return;
                }
                if (this.listDown) this.closeRanking(); else this.openRanking();
            };
            RoomJackpotNode.prototype.closeRanking = function() {
                var _this = this;
                if (this.listDown) {
                    Laya.Tween.clearAll(this.img_listBg);
                    Laya.Tween.to(this.img_listBg, {
                        height: 100,
                        alpha: 0
                    }, 500, Laya.Ease.backIn, Laya.Handler.create(this, function() {
                        _this.btn_jackpot.mouseEnabled = true;
                    }));
                    this.black_bg.mouseEnabled = false;
                    this.listDown = false;
                }
            };
            RoomJackpotNode.prototype.openRanking = function() {
                if (!this.listDown) {
                    this.img_listBg.alpha = 0;
                    this.img_listBg.height = 100;
                    Laya.Tween.clearAll(this.img_listBg);
                    this.getRanking();
                }
            };
            RoomJackpotNode.prototype.updatePoolNum = function() {
                var rewardPool = BattleData_1.default.jackpotNum[this.roomIndex - 1].num;
                var currectPercent = BattleData_1.default.jackpotPercent[this.roomIndex - 1];
                this.lastNum++;
                if (this.lastNum >= 10) this.lastNum = 0;
                var newNum;
                if (Number(currectPercent) < 80) {
                    var num = Math.round(rewardPool);
                    var newNum_1 = Math.floor(num / 10);
                    this.text_jackpotNum.text = (newNum_1 * 10 + this.lastNum).toLocaleString();
                } else this.text_jackpotNum.text = Math.round(rewardPool).toLocaleString();
            };
            RoomJackpotNode.prototype.getRanking = function() {
                var rankingArray = new Array();
                for (var index = 0; index < 13; index++) {
                    var element = GlobalObj_1.default.createJackpotRanking({
                        headUrl: "firstPic/img_item_bg.png",
                        name: "玩家" + index,
                        num: Math.floor(Math.random() * 1e7),
                        vip_level: 0,
                        timeStamp: GlobalFunc_1.default.getClientTime()
                    });
                    rankingArray.push(element);
                }
                rankingArray.sort(function(a, b) {
                    return a.timeStamp > b.timeStamp ? -1 : 1;
                });
                this.setRanking(rankingArray);
            };
            RoomJackpotNode.prototype.setRanking = function(data) {
                var _this = this;
                this.rankingArray = data;
                this.playerRanking.array = data;
                var boxNum = data.length < 5 ? data.length : 5;
                var bgHeight = 87 + boxNum * 63;
                this.playerRanking.height = boxNum * 63;
                if (data.length <= 5) this.playerRanking.scrollBar.hide = true; else this.playerRanking.scrollBar.hide = false;
                Laya.Tween.to(this.img_listBg, {
                    height: bgHeight,
                    alpha: 1
                }, 500, Laya.Ease.backOut, Laya.Handler.create(this, function() {
                    _this.btn_jackpot.mouseEnabled = true;
                }));
                this.black_bg.mouseEnabled = true;
                this.listDown = true;
            };
            RoomJackpotNode.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                this.removeSelf();
            };
            return RoomJackpotNode;
        }(layaMaxUI_1.ui.roomScene.RoomJackpotNodeUI);
        exports.default = RoomJackpotNode;
    }, {
        "../../datas/roomData/BattleData": 29,
        "../../globalConst/ColorFilter": 82,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalObj": 88,
        "../../globalConst/GlobalVar": 90,
        "../../ui/layaMaxUI": 151
    } ],
    128: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var SoundNode = function() {
            function SoundNode() {
                this.isFinished = true;
                this.sound = "";
                this.playTimes = 1;
                this.name = "";
            }
            SoundNode.prototype.playSound = function() {
                this.isFinished = false;
                if (this.playTimes == 1) Laya.SoundManager.playSound(this.sound, this.playTimes, new Laya.Handler(this, this.runCallBackFunc)); else Laya.SoundManager.playSound(this.sound, this.playTimes);
            };
            SoundNode.prototype.stopSound = function() {
                this.isFinished = true;
                Laya.SoundManager.stopSound(this.sound);
            };
            SoundNode.prototype.playMusic = function() {
                this.isFinished = false;
                Laya.SoundManager.playMusic(this.sound, this.playTimes);
            };
            SoundNode.prototype.stopMusic = function() {
                this.isFinished = true;
                Laya.SoundManager.stopMusic();
            };
            SoundNode.prototype.keepPlayMusic = function() {
                if (BattleData_1.default.isInRoom) GlobalFunc_1.default.playRoomMusic(); else Laya.SoundManager.playMusic(this.sound);
            };
            SoundNode.prototype.replay = function() {
                this.sound = GlobalVar_1.default.reUrl + this.fileName + GlobalVar_1.default.soundType;
                Laya.SoundManager.playSound(this.sound, this.playTimes);
            };
            SoundNode.prototype.onlyPlay = function() {
                if (this.sound) Laya.SoundManager.playSound(this.sound, this.playTimes);
            };
            SoundNode.prototype.getIsFinish = function() {
                return this.isFinished;
            };
            SoundNode.prototype.runCallBackFunc = function() {
                this.isFinished = true;
                this.sound = undefined;
            };
            return SoundNode;
        }();
        exports.default = SoundNode;
    }, {
        "../../datas/roomData/BattleData": 29,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90
    } ],
    129: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var globalConst_1 = require("../../globalConst/globalConst");
        var SceneM_1 = require("../../common/SceneM");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var EventDis_1 = require("../../globalConst/EventDis");
        var spineManager_1 = require("../../globalConst/spineManager");
        var SpineNode = function(_super) {
            __extends(SpineNode, _super);
            function SpineNode() {
                var _this = _super.call(this) || this;
                _this.fileName = "";
                _this.overTurn = false;
                _this.layer = globalConst_1.default.btnsLayer;
                _this.isPlay = true;
                _this.mFactory = new Laya.Templet();
                _this.isLoopPlay = true;
                _this.isDestroySelf = false;
                _this.x = 0;
                _this.y = 0;
                return _this;
            }
            SpineNode.prototype.loadSpine = function() {
                if (typeof this.layer == "string") SceneM_1.default.addToLayer(this, this.layer); else if (typeof this.layer != "number" && this.layer != undefined) this.layer.addChild(this);
                this.mFactory.on(Laya.Event.COMPLETE, this, this.init);
                this.mFactory.loadAni(GlobalVar_1.default.reUrl + "spine/" + this.fileName + "/skeleton.sk");
                this.name = this.fileName + spineManager_1.default.getLoadNum(this.fileName);
            };
            SpineNode.prototype.init = function() {
                this.body = this.mFactory.buildArmature(0);
                this.addChild(this.body);
                this.width = this.body.width;
                this.height = this.body.height;
                this.pivotX = this.width / 2;
                this.pivotY = this.height / 2;
                if (this.overTurn) this.scaleX = -1;
                if (this.mouseEnabled) this.on(Laya.Event.CLICK, this, this.runHandler);
                this.body.play(0, this.isLoopPlay);
                if (!this.isPlay) this.body.paused();
                if (this.isDestroySelf && !this.isLoopPlay) this.body.on(Laya.Event.COMPLETE, this, this.destroy);
                var data = {
                    name: this.fileName,
                    data: this.body,
                    x: this.x,
                    y: this.y,
                    mFactory: this.mFactory
                };
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.SPINE_SEND, data);
            };
            SpineNode.prototype.runHandler = function() {
                if (this.mouseHandler) if (this.handlerParam) this.mouseHandler.runWith(this.handlerParam); else this.mouseHandler.run();
            };
            SpineNode.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                !!this.body && this.body.destroy();
                this.removeSelf();
            };
            return SpineNode;
        }(Laya.Sprite);
        exports.default = SpineNode;
    }, {
        "../../common/SceneM": 19,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../globalConst/spineManager": 98
    } ],
    130: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var EventDis_1 = require("../../globalConst/EventDis");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var SoundM_1 = require("../../common/SoundM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var SoundNode_1 = require("./SoundNode");
        var WxSoundNode = function(_super) {
            __extends(WxSoundNode, _super);
            function WxSoundNode(isMusic) {
                if (isMusic === void 0) isMusic = false;
                var _this = _super.call(this) || this;
                _this.lastPlayed = 0;
                _this.isMusic = isMusic;
                if (_this.isMusic) {
                    _this.node = wx.createInnerAudioContext();
                    _this.node.autoplay = true;
                    _this.node.loop = true;
                    EventDis_1.default.addEvntListener(GlobalVar_1.default.WX_ONSHOW, _this, _this.keepPlayMusic);
                    wx.onAudioInterruptionEnd(_this.keepPlayMusic);
                }
                return _this;
            }
            WxSoundNode.prototype.playSound = function() {
                if (this.node) this.deleteNode();
                this.newNode();
                this.sound = GlobalVar_1.default.reUrl + this.fileName + GlobalVar_1.default.soundType;
                this.node.src = this.sound;
                this.node.loop = this.playTimes == 0;
                this.node.play();
                this.playTime = GlobalFunc_1.default.getClientTime();
            };
            WxSoundNode.prototype.stopSound = function() {
                if (this.node) {
                    this.node.stop();
                    this.deleteNode();
                }
            };
            WxSoundNode.prototype.playMusic = function() {
                this.node.stop();
                this.node.src = this.sound;
                Laya.timer.once(500, this, this.laterPlay);
            };
            WxSoundNode.prototype.stopMusic = function() {
                this.node.stop();
            };
            WxSoundNode.prototype.keepPlayMusic = function() {
                if (BattleData_1.default.isInRoom) GlobalFunc_1.default.playRoomMusic(); else SoundM_1.default.playMusic(globalConst_1.default.Sud_bg_hall);
            };
            WxSoundNode.prototype.replay = function() {
                if (!this.node) {
                    this.newNode();
                    this.node.src = this.sound;
                    this.node.loop = false;
                }
                this.node.stop();
                this.onlyPlay();
            };
            WxSoundNode.prototype.onlyPlay = function() {
                if (!this.node) {
                    this.newNode();
                    this.node.src = this.sound;
                    this.node.loop = this.isMusic;
                }
                this.node.stop();
                if (this.isMusic) Laya.timer.once(500, this, this.laterPlay); else this.node.play();
            };
            WxSoundNode.prototype.laterPlay = function() {
                if (!this.node) {
                    this.newNode();
                    this.node.src = this.sound;
                    this.node.loop = this.isMusic;
                }
                this.node.play();
            };
            WxSoundNode.prototype.newNode = function() {
                this.node = wx.createInnerAudioContext();
            };
            WxSoundNode.prototype.deleteNode = function() {
                if (this.node) {
                    this.node.destroy();
                    this.node = undefined;
                }
            };
            WxSoundNode.prototype.getIsFinish = function() {
                if (!this.node) return true;
                var nowTime1 = GlobalFunc_1.default.getClientTime();
                var soundLength = this.node.duration * 1e3;
                var endTime = this.playTime + soundLength + (soundLength == 0 ? 2e3 : 0);
                if (endTime > nowTime1) return false;
                if (this.node.paused && soundLength != 0) return true; else if (!this.node.paused && endTime < nowTime1 && this.node.duration == 0) {
                    this.deleteNode();
                    return true;
                }
                return false;
            };
            WxSoundNode.prototype.destroy = function() {
                this.deleteNode();
            };
            return WxSoundNode;
        }(SoundNode_1.default);
        exports.default = WxSoundNode;
    }, {
        "../../common/SoundM": 21,
        "../../datas/roomData/BattleData": 29,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "./SoundNode": 128
    } ],
    131: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var FishData_1 = require("../../datas/roomData/FishData");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var BulletFactory_1 = require("../../secens/roomScenes/BulletFactory");
        var globalConst_1 = require("../../globalConst/globalConst");
        var TimeLineManager_1 = require("../../globalConst/TimeLineManager");
        var SoundM_1 = require("../../common/SoundM");
        var CannonNode = function(_super) {
            __extends(CannonNode, _super);
            function CannonNode(seatIndex) {
                var _this = _super.call(this) || this;
                _this.isCloseCannon = false;
                _this.cannonRotation = 0;
                _this.gCannonAngle = 90;
                _this.isDragonStart = false;
                _this.name = "cannonNode" + seatIndex;
                _this.image_cannon.on(Laya.Event.CLICK, _this, _this.openHelpView);
                _this.image_turret.on(Laya.Event.CLICK, _this, _this.openHelpView);
                return _this;
            }
            CannonNode.prototype.destroy = function() {
                if (this.hongYunNode) this.hongYunNode.destroy();
                if (this.dragonCannonNode) this.dragonCannonNode.destroy();
                this.destroyEvent();
                this.removeChildren();
                this.removeSelf();
            };
            CannonNode.prototype.init = function(seatData, seatIndex) {
                this.seatIndex = seatIndex;
                this.uid = BattleData_1.default.roomPlayerData[this.seatIndex].uid;
                this.changeSkin({
                    uid: this.uid,
                    pao_item: seatData.cur_pao_item
                });
                this.rotateCannon = this.image_cannon;
                var pos = GlobalFunc_1.default.getCannonPos();
                this.pos(pos[this.seatIndex].x, pos[this.seatIndex].y);
                this.initEvent();
                this.image_cannon.mouseEnabled = true;
                this.image_turret.mouseEnabled = true;
                if (seatIndex != FishData_1.default.mySeatIndex) this.mouseEnabled = false; else this.mouseEnabled = true;
            };
            CannonNode.prototype.openHelpView = function() {
                if (PlayerData_1.default.guideStep != 0) return;
                var seatData = BattleData_1.default.getSitInfo(this.seatIndex);
                if (this.seatIndex == FishData_1.default.mySeatIndex && !seatData.isSpecialFishTime()) EventDis_1.default.dispatchEvent(GlobalVar_1.default.CHANGE_ROOM_HELP_STATE);
            };
            CannonNode.prototype.initEvent = function() {
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_SKIN_CHANGE_BROAD, this, this.changeSkin);
            };
            CannonNode.prototype.destroyEvent = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                Laya.Tween.clearAll(this.image_cannon);
                Laya.Tween.clearAll(this.image_turret);
            };
            CannonNode.prototype.resetUI = function() {
                this.onOrdinaryCannon();
                if (this.hongYunNode) {
                    this.hongYunNode.destroy();
                    this.hongYunNode = undefined;
                }
                if (this.dragonCannonNode) {
                    this.dragonCannonNode.destroy();
                    this.dragonCannonNode = undefined;
                }
                this.isDragonStart = false;
                this.specialCannon.destroyChildren();
            };
            CannonNode.prototype.changeSkin = function(data, fromDragonCannon) {
                if (data === void 0) data = undefined;
                if (fromDragonCannon === void 0) fromDragonCannon = false;
                if (!data) return;
                var seatIndex = BattleData_1.default.getUserSeatByUid(data.uid);
                if (seatIndex != this.seatIndex) return;
                if (!data.pao_item) return;
                this.cannonID = data.pao_item;
                PlayerData_1.default.changeCannon(this.cannonID);
                BattleData_1.default.roomPlayerData[this.seatIndex].cur_pao_item = this.cannonID;
                var headUrl = "iconAndSkin/skin_";
                if (PlayerData_1.default.guideStep != 0) headUrl = "firstPic/skin_";
                this.image_cannon.skin = headUrl + PlayerData_1.default.items[this.cannonID.toString()].skin;
                this.image_turret.skin = "iconAndSkin/skin_Turret_1.png";
                if (fromDragonCannon) {
                    this.dragonCannonNode = undefined;
                    this.isDragonStart = false;
                }
            };
            CannonNode.prototype.offOrdinaryCannon = function(withAni, handler) {
                var _this = this;
                if (withAni === void 0) withAni = false;
                if (handler === void 0) handler = undefined;
                if (withAni) Laya.Tween.to(this.image_cannon, {
                    scaleX: 0,
                    scaleY: 0,
                    visible: false
                }, 300, Laya.Ease.backIn, new Laya.Handler(this, function(handler) {
                    _this.rotateCannon = undefined;
                    _this.isCloseCannon = true;
                    _this.image_cannon.scale(1, 1);
                    if (handler) handler.run();
                }, [ handler ])); else {
                    this.image_cannon.visible = false;
                    this.rotateCannon = undefined;
                    this.isCloseCannon = true;
                }
            };
            CannonNode.prototype.onOrdinaryCannon = function(withAni, handler) {
                if (withAni === void 0) withAni = false;
                if (handler === void 0) handler = undefined;
                this.image_cannon.visible = true;
                this.rotateCannon = this.image_cannon;
                this.isCloseCannon = false;
                if (withAni) {
                    this.image_cannon.scale(0, 0);
                    Laya.Tween.to(this.image_cannon, {
                        scaleX: 1,
                        scaleY: 1
                    }, 300, Laya.Ease.backOut, new Laya.Handler(this, function(handler) {
                        if (handler) handler.run();
                    }, [ handler ]));
                }
            };
            CannonNode.prototype.addSpecialCannon = function(cannon) {
                this.specialCannon.visible = true;
                this.specialCannon.addChild(cannon);
                this.specialCannon.rotation = this.box_cannon.rotation;
                this.rotateCannon = this.specialCannon;
            };
            CannonNode.prototype.closeSpecialCannon = function() {
                this.specialCannon.visible = false;
                this.box_cannon.rotation = this.cannonRotation;
                this.specialCannon.destroyChildren();
                this.specialCannon.rotation = 0;
                this.specialCannon = undefined;
            };
            CannonNode.prototype.isOrdinaryCannon = function() {
                return !this.isCloseCannon;
            };
            CannonNode.prototype.startHongYun = function() {
                this.image_HongYun.visible = true;
                this.HongYunRotation.play(0, true);
            };
            CannonNode.prototype.stopHongYun = function() {
                this.image_HongYun.visible = false;
                this.HongYunRotation.stop();
            };
            CannonNode.prototype.deleteHongYun = function() {
                this.hongYunNode = undefined;
            };
            CannonNode.prototype.rotateAndFire = function(angle, bulletType) {
                this.justRotate(angle);
                this.justFire(bulletType);
            };
            CannonNode.prototype.justRotate = function(angle) {
                this.gCannonAngle = angle;
                angle = this.rotation == 180 ? angle - 90 : 90 - angle;
                this.box_cannon.rotation = angle;
                this.image_turret.rotation = angle / 3;
                this.cannonRotation = angle;
                if (this.rotateCannon && this.rotateCannon != this.image_cannon && this.rotateCannon !== this.image_cannon) this.rotateCannon.rotation = this.box_cannon.rotation;
            };
            CannonNode.prototype.justFire = function(type) {
                if (type === void 0) type = undefined;
                var playerData = BattleData_1.default.roomPlayerData[this.seatIndex];
                if (type === BulletFactory_1.BulletType.bullet_type_normal || type >= BulletFactory_1.BulletType.bullet_type_qinglongpao) {
                    this.doFire.play(0, false);
                    if (this.isDragonStart && this.dragonCannonNode && this.dragonCannonNode.isSelf) this.dragonCannonNode.setLeftButtle(this.dragonCannonNode.leftBullet - 1);
                    if (this.seatIndex == FishData_1.default.mySeatIndex) SoundM_1.default.playFireSound(globalConst_1.default.Sud_fire);
                } else if (type === BulletFactory_1.BulletType.bullet_type_hongyuan && playerData.isHongYun) {
                    this.hongYunNode.body.stop();
                    this.hongYunNode.body.play(0, false, "hy_fire");
                    if (this.hongYunNode.leftBullet > 0) {
                        this.hongYunNode.setLeftButtle(this.hongYunNode.leftBullet - 1);
                        if (this.seatIndex == FishData_1.default.mySeatIndex) SoundM_1.default.playFireSound(globalConst_1.default.Sud_storm_shoot);
                    }
                }
            };
            CannonNode.prototype.changeSpecialSkin = function(cannonSkin, turretSkin) {
                var _this = this;
                if (cannonSkin === void 0) cannonSkin = undefined;
                if (turretSkin === void 0) turretSkin = undefined;
                if (cannonSkin) this.cannonAni(this.image_cannon, new Laya.Handler(this, function() {
                    _this.image_cannon.skin = cannonSkin;
                }));
                if (turretSkin) this.cannonAni(this.image_turret, new Laya.Handler(this, function() {
                    _this.image_turret.skin = turretSkin;
                }));
            };
            CannonNode.prototype.cannonAni = function(node, handler) {
                var timeLine = TimeLineManager_1.default.creatTimeLine();
                timeLine.addLabel("small", 0).to(node, {
                    scaleX: 0,
                    scaleY: 0
                }, 200, Laya.Ease.backIn).addLabel("bag", 0).to(node, {
                    scaleX: 1,
                    scaleY: 1
                }, 200, Laya.Ease.backOut);
                timeLine.on(Laya.Event.LABEL, this, function(label) {
                    if (label == "bag") handler.run();
                });
                timeLine.play(0, false);
            };
            return CannonNode;
        }(layaMaxUI_1.ui.roleNodes.CannonNodeUI);
        exports.default = CannonNode;
    }, {
        "../../common/SoundM": 21,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/TimeLineManager": 95,
        "../../globalConst/globalConst": 97,
        "../../secens/roomScenes/BulletFactory": 143,
        "../../ui/layaMaxUI": 151
    } ],
    132: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var FishNode_1 = require("../fishNodes/FishNode");
        var RoomPlayerInfoNode = function() {
            function RoomPlayerInfoNode() {
                this.gold = 0;
                this.ticket = 0;
                this.cur_pao = 10;
                this.lvl = 1;
                this.cur_pao_item = 201101;
                this.vip_level = 0;
                this.nick_name = "";
                this.head_image = "";
                this.isHongYun = false;
                this.isBitting = false;
                this.isDial = false;
                this.isHwbz = false;
                this.isZshy = false;
                this.isWlxb = false;
                this.hyScore = 0;
                this.leftHyBullet = 0;
                this.isDragonCannon = -1;
                this.dragonCannon = undefined;
                this.dragonCannonId = 0;
                this.sex = 0;
            }
            RoomPlayerInfoNode.prototype.initPlayerInfo = function(data) {
                this.isInRoom = true;
                this.uid = data.uid;
                this.room_pos = data.room_pos + 1;
                this.gold = data.gold;
                this.ticket = data.liquan;
                this.nick_name = data.nick_name;
                this.sex = data.sex;
                this.head_image = data.head_image;
                this.cur_pao = data.cur_pao;
                this.dragonCannonId = data.cur_long_pao;
                this.cur_pao_item = !!!data.cur_pao_item ? 101 : data.cur_pao_item;
                this.vip_level = data.vip_level;
                var fishInfo = data.special_fish_info;
                if (fishInfo && fishInfo.fish_type != 0) switch (fishInfo.fish_type) {
                  case FishNode_1.SpecialFishType.fish_type_special_hongyun:
                    this.leftHyBullet = fishInfo.data.hongyun_left_pao;
                    this.hyScore = fishInfo.data.hongyun_total_gold;
                    break;

                  case FishNode_1.SpecialFishType.fish_type_special_zuantou:
                    this.isBitting = true;
                    break;
                }
            };
            RoomPlayerInfoNode.prototype.setPlayerInfo = function(obj, addMod) {
                if (addMod === void 0) addMod = false;
                if (addMod) for (var k in obj) (this[k] || this[k] == 0) && (this[k] += obj[k]); else for (var k in obj) (this[k] || this[k] == 0) && (this[k] = obj[k]);
            };
            RoomPlayerInfoNode.prototype.isSpecialFishTime = function() {
                if (this.isHongYun || this.isBitting || this.isDial || this.isHwbz || this.isZshy || this.isWlxb) return true;
                return false;
            };
            return RoomPlayerInfoNode;
        }();
        exports.default = RoomPlayerInfoNode;
    }, {
        "../fishNodes/FishNode": 115
    } ],
    133: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var SeatNumNode_1 = require("./SeatNumNode");
        var CannonNode_1 = require("./CannonNode");
        var SeatWaitNode_1 = require("./SeatWaitNode");
        var SeatNodeInfo_1 = require("./SeatNodeInfo");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var FishTray_1 = require("../../common/FishTray");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var HongYunNode_1 = require("../fishNodes/HongYunNode");
        var FishNode_1 = require("../fishNodes/FishNode");
        var FishData_1 = require("../../datas/roomData/FishData");
        var DragonCannonNode_1 = require("../fishNodes/DragonCannonNode");
        var SeatNode = function(_super) {
            __extends(SeatNode, _super);
            function SeatNode(seatIndex) {
                var _this = _super.call(this) || this;
                _this.numPanel = undefined;
                _this.cannonNode = undefined;
                _this.waitNode = undefined;
                _this.seatInfoNode = undefined;
                _this.trayNode = undefined;
                _this.seatIndex = 0;
                _this.isSeatFlip = false;
                _this.seatIndex = seatIndex;
                _this.name = "seat" + seatIndex;
                _this.waitNode = new SeatWaitNode_1.default(seatIndex);
                _this.numPanel = new SeatNumNode_1.default(seatIndex);
                _this.cannonNode = new CannonNode_1.default(seatIndex);
                _this.seatInfoNode = new SeatNodeInfo_1.default(seatIndex);
                _this.trayNode = new FishTray_1.default(seatIndex);
                _this.trayNode.zOrder = 100;
                _this.box_wait.addChild(_this.waitNode);
                _this.box_numPanel.addChild(_this.numPanel);
                SceneM_1.default.addToLayer(_this.trayNode, globalConst_1.default.effectTopLayer);
                SceneM_1.default.addToLayer(_this.cannonNode, globalConst_1.default.cannonLayer);
                SceneM_1.default.addToLayer(_this.seatInfoNode, globalConst_1.default.btnsLayer);
                if (_this.seatIndex > 2 && !BattleData_1.default.isFlip || _this.seatIndex <= 2 && BattleData_1.default.isFlip) {
                    _this.rotation = 180;
                    _this.isSeatFlip = true;
                    _this.numPanel.initFlip();
                    _this.cannonNode.rotation = 180;
                    _this.waitNode.image_invite.rotation = 180;
                }
                var cannonPos = GlobalFunc_1.default.getCannonPos();
                _this.pos(cannonPos[_this.seatIndex].x, cannonPos[_this.seatIndex].y);
                _this.initEvent();
                _this.updateSeatUI();
                _this.zOrder = 3100;
                return _this;
            }
            SeatNode.prototype.initFlyPos = function() {
                var seatPos = this.cannonNode.box_cannon.localToGlobal(new Laya.Point(0, 0));
                var coinPos = this.seatInfoNode.img_coin.localToGlobal(new Laya.Point(17, 16));
                var ticketPos = this.seatInfoNode.img_ticket.localToGlobal(new Laya.Point(21, 21));
                PlayerData_1.default.setRoomFlyPos(seatPos, globalConst_1.default.itemFlyCannon, this.seatIndex);
                PlayerData_1.default.setRoomFlyPos(coinPos, globalConst_1.default.itemFlyRoomCoin, this.seatIndex);
                PlayerData_1.default.setRoomFlyPos(ticketPos, globalConst_1.default.itemFlyRoomTicket, this.seatIndex);
            };
            SeatNode.prototype.initEvent = function() {
                EventDis_1.default.addEvntListener(GlobalVar_1.default.PLAY_ROOM_TRAY_ANI, this, this.playTrayAni);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_SPECIAL_FISH_END, this, this.specialFishTimeEnd);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.CLOSE_MYSEAT_ANI, this, this.destroyMySeatAni);
            };
            SeatNode.prototype.updateSeatUI = function() {
                var seatData = BattleData_1.default.getSitInfo(this.seatIndex);
                if (!seatData.isInRoom) {
                    GlobalFunc_1.default.uiClose(this.numPanel);
                    GlobalFunc_1.default.uiClose(this.cannonNode);
                    GlobalFunc_1.default.uiClose(this.seatInfoNode);
                    GlobalFunc_1.default.uiOpen(this.waitNode);
                    this.numPanel.destroyEvent();
                    this.cannonNode.destroyEvent();
                    this.cannonNode.resetUI();
                    this.seatInfoNode.destroyEvent();
                } else {
                    GlobalFunc_1.default.uiOpen(this.numPanel);
                    GlobalFunc_1.default.uiOpen(this.cannonNode);
                    GlobalFunc_1.default.uiOpen(this.seatInfoNode);
                    GlobalFunc_1.default.uiClose(this.waitNode);
                    this.waitNode.destroyEvent();
                    this.updateNewUI(seatData);
                }
            };
            SeatNode.prototype.updateNewUI = function(seatData) {
                this.numPanel.init(this.seatIndex);
                this.cannonNode.init(seatData, this.seatIndex);
                this.seatInfoNode.init(this.seatIndex, this.isSeatFlip);
                this.trayNode.init(this.seatIndex);
                Laya.timer.once(100, this, this.initFlyPos);
                this.isSelfSeat();
            };
            SeatNode.prototype.isSelfSeat = function() {
                if (this.seatIndex == FishData_1.default.mySeatIndex) {
                    this.mySeatAni = GlobalFunc_1.default.getAni("mySeat");
                    this.mySeatAni.pos(this.cannonNode.x, this.cannonNode.y);
                    this.mySeatAni.play(0, true);
                    GlobalFunc_1.default.globalSetZorder(this.mySeatAni, 2900);
                    SceneM_1.default.addToLayer(this.mySeatAni, globalConst_1.default.bulletLayer);
                }
            };
            SeatNode.prototype.destroyMySeatAni = function() {
                if (this.seatIndex == FishData_1.default.mySeatIndex && !!this.mySeatAni) {
                    this.mySeatAni.removeSelf();
                    this.mySeatAni.destroy();
                }
            };
            SeatNode.prototype.buildSpecialFish = function() {
                var seatData = BattleData_1.default.getSitInfo(this.seatIndex);
                if (seatData.leftHyBullet > 0) {
                    var hyData = {
                        hongyun_total_gold: seatData.hyScore,
                        hongyun_left_pao: seatData.leftHyBullet
                    };
                    var hongYunNode = new HongYunNode_1.default(this.seatIndex, hyData);
                    hongYunNode.readyStart();
                    return true;
                }
                return false;
            };
            SeatNode.prototype.bulidDragonCannonState = function() {
                var seatData = BattleData_1.default.getSitInfo(this.seatIndex);
                if (seatData.dragonCannonId > 0) {
                    var dragonCannon = new DragonCannonNode_1.default(this.seatIndex, seatData.dragonCannonId);
                    seatData.dragonCannon = dragonCannon;
                }
            };
            SeatNode.prototype.playTrayAni = function(data) {
                if (data === void 0) data = {
                    fishData: undefined,
                    seatIndex: 0
                };
                if (data.seatIndex == this.seatIndex && data.fishData) this.trayNode.startPlayAni(data.fishData);
            };
            SeatNode.prototype.specialFishTimeEnd = function(data) {
                var seatIndex = BattleData_1.default.getUserSeatByUid(data.uid);
                var fishType = 0;
                var tray = 2;
                var fishInfo = data.special_fish_info;
                var fishTotalNum = 0;
                EventDis_1.default.dispatchEvent("delSpView", seatIndex);
                if (seatIndex == this.seatIndex) {
                    var seatNode = FishData_1.default.seatNodes[seatIndex];
                    if (seatIndex == FishData_1.default.mySeatIndex) {
                        seatNode.numPanel.mouseEnabled = true;
                        BattleData_1.default.roomPlayerData[seatIndex].isDragonCannon == -1 && seatNode.numPanel.openPaoBeiUI();
                    }
                    var delayTime = 1e3;
                    switch (fishInfo.fish_type) {
                      case FishNode_1.SpecialFishType.fish_type_special_hongyun:
                        if (this.cannonNode.hongYunNode) this.cannonNode.hongYunNode.hyTimeFinish();
                        fishType = globalConst_1.default.HongYunId;
                        fishTotalNum = fishInfo.data.hongyun_total_gold;
                        break;

                      case FishNode_1.SpecialFishType.fish_type_special_hwbz:
                        fishType = globalConst_1.default.hwbzId;
                        fishTotalNum = fishInfo.data.hwbz_total_gold;
                        break;

                      case FishNode_1.SpecialFishType.fish_type_special_xyzp:
                        EventDis_1.default.dispatchEvent("dialDead");
                        fishType = globalConst_1.default.xyzpId;
                        fishTotalNum = fishInfo.data.xyzp_total_gold;
                        break;

                      case FishNode_1.SpecialFishType.fish_type_special_zshy:
                        fishType = globalConst_1.default.zshyId;
                        fishTotalNum = fishInfo.data.zshy_total_gold_;
                        break;

                      case FishNode_1.SpecialFishType.fish_type_special_zuantou:
                        delayTime = 2e3;
                        fishType = globalConst_1.default.zuanTouId;
                        fishTotalNum = fishInfo.data.zuantou_fly_gold + fishInfo.data.zuantou_bomb_gold;
                        BattleData_1.default.setPlayerSpecialState(false, this.seatIndex, "isBitting");
                        break;

                      case FishNode_1.SpecialFishType.fish_type_special_wlxb:
                        fishType = globalConst_1.default.wlxbId;
                        fishTotalNum = fishInfo.data.wldb_total_gold;
                        break;

                      default:
                        break;
                    }
                    var fishJsonData = BattleData_1.default.fishData[fishType];
                    var fishData = {
                        fishData: {
                            fishID: fishType,
                            goldNum: fishTotalNum,
                            tray: fishJsonData.tray,
                            fishInfo: fishJsonData,
                            fish_type: fishInfo.fish_type
                        },
                        seatIndex: this.seatIndex
                    };
                    Laya.timer.once(delayTime, this, this.playTrayAni, [ fishData ]);
                    BattleData_1.default.roomPlayerData[seatIndex].gold = fishInfo.data.total_gold;
                    BattleData_1.default.roomPlayerData[seatIndex].ticket = fishInfo.data.total_diamond;
                    if (seatIndex == FishData_1.default.mySeatIndex) PlayerData_1.default.setItemNum(globalConst_1.default.goldKey, fishInfo.data.total_gold);
                    this.seatInfoNode.updateGold(this.seatIndex == FishData_1.default.mySeatIndex);
                }
            };
            SeatNode.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                this.cannonNode.destroy();
                this.numPanel.destroy();
                this.waitNode.destroy();
                this.seatInfoNode.destroy();
                this.removeChildren();
                this.removeSelf();
            };
            return SeatNode;
        }(layaMaxUI_1.ui.roleNodes.SeatNodeUI);
        exports.default = SeatNode;
    }, {
        "../../common/FishTray": 11,
        "../../common/SceneM": 19,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151,
        "../fishNodes/DragonCannonNode": 111,
        "../fishNodes/FishNode": 115,
        "../fishNodes/HongYunNode": 116,
        "./CannonNode": 131,
        "./SeatNodeInfo": 134,
        "./SeatNumNode": 135,
        "./SeatWaitNode": 136
    } ],
    134: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GameData_1 = require("../../datas/hallData/GameData");
        var FishData_1 = require("../../datas/roomData/FishData");
        var TimeLineManager_1 = require("../../globalConst/TimeLineManager");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var NetManager_1 = require("../../netWork/NetManager");
        var SeatNodeInfo = function(_super) {
            __extends(SeatNodeInfo, _super);
            function SeatNodeInfo(seatIndex) {
                var _this = _super.call(this) || this;
                _this.seatIndex = 0;
                _this.extraGold = 0;
                _this.name = "seatInfoNode" + seatIndex;
                _this.extraGold = +GlobalFunc_1.default.layaGetRes("config/global_define.json").guidelimit;
                _this.initEvent();
                return _this;
            }
            SeatNodeInfo.prototype.destroy = function() {
                Laya.timer.clearAll(this);
                Laya.Tween.clearAll(this);
                this.destroyEvent();
                this.removeChildren();
                this.removeSelf();
            };
            SeatNodeInfo.prototype.initEvent = function() {
                var _this = this;
                EventDis_1.default.addEvntListener("killFish_broad", this, this.onItemChange);
                EventDis_1.default.addEvntListener("updateSeat", this, function(isself) {
                    if (!_this.roomPlayerInfo) return;
                    _this.roomPlayerInfo.gold = PlayerData_1.default.getItemNum(globalConst_1.default.GoldCoinID);
                    _this.roomPlayerInfo.ticket = PlayerData_1.default.getItemNum(globalConst_1.default.TicketID);
                    if (isself && _this.seatIndex != FishData_1.default.mySeatIndex) return;
                    +_this.text_gold.text != _this.roomPlayerInfo.gold && _this.updateGold(!!isself);
                    +_this.text_ticket.text != _this.roomPlayerInfo.ticket && _this.updateTicket(!!isself);
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.UPDATE_ITEMS_NUM_FROM_PLAYERDATA, this, this.updateItemsNum);
            };
            SeatNodeInfo.prototype.init = function(seatIndex, doFilp) {
                var _this = this;
                this.seatIndex = seatIndex;
                if (PlayerData_1.default.guideStep == 1 && this.seatIndex == FishData_1.default.mySeatIndex) {
                    EventDis_1.default.addEvntListener("screen_guide", this, function() {
                        _this.visible = true;
                    });
                    this.visible = false;
                }
                this.getSitInfo();
                this.updateGold();
                this.updateTicket();
                if (doFilp) {
                    this.box_info.rotation = 180;
                    this.box_gold.rotation = 180;
                    this.box_ticket.rotation = 180;
                }
                var pos = GlobalFunc_1.default.getSeatInfoPos();
                this.pos(pos[this.seatIndex].x, pos[this.seatIndex].y);
                if (seatIndex == FishData_1.default.mySeatIndex) {
                    this.text_ticket.color = this.text_gold.color = "#ffde00";
                    this.text_ticket.strokeColor = this.text_gold.strokeColor = "#5e2100";
                }
            };
            SeatNodeInfo.prototype.destroyEvent = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            SeatNodeInfo.prototype.updateGold = function(isGet) {
                if (isGet === void 0) isGet = false;
                if (!!!this.roomPlayerInfo && !this.getSitInfo()) return;
                if (!!!this.text_gold || this.text_gold.destroyed) return;
                this.text_gold.align = "right";
                this.text_gold.valign = "middle";
                this.text_gold.text = Math.max(0, this.roomPlayerInfo.gold).toString();
                if (isGet) this.playRefreshAni(1);
                if (this.seatIndex == FishData_1.default.mySeatIndex && !GameData_1.default.roomguide && BattleData_1.default.room_type == 1 && +this.text_gold.text >= +BattleData_1.default.roomData[2].mingolds + this.extraGold) {
                    GameData_1.default.roomguide = true;
                    GlobalFunc_1.default.setStorage("isJumpRoom", "true");
                    NetManager_1.default.reqGuideSend(0);
                    GlobalFunc_1.default.switchRoom(2);
                }
            };
            SeatNodeInfo.prototype.updateTicket = function(isGet) {
                if (isGet === void 0) isGet = false;
                this.text_ticket.align = "right";
                this.text_ticket.valign = "middle";
                this.text_ticket.text = (this.roomPlayerInfo.ticket ? this.roomPlayerInfo.ticket : 0).toString();
                if (isGet) this.playRefreshAni(2);
            };
            SeatNodeInfo.prototype.getSitInfo = function() {
                this.roomPlayerInfo = BattleData_1.default.getSitInfo(this.seatIndex);
                if (this.roomPlayerInfo) return true;
                return false;
            };
            SeatNodeInfo.prototype.updateItemsNum = function() {
                if (this.seatIndex == FishData_1.default.mySeatIndex) {
                    if (!!!this.roomPlayerInfo && !this.getSitInfo()) return;
                    this.roomPlayerInfo.gold = PlayerData_1.default.getItemNum(globalConst_1.default.GoldCoinID);
                    this.roomPlayerInfo.ticket = PlayerData_1.default.getItemNum(globalConst_1.default.TicketID);
                    this.updateGold(false);
                    this.updateTicket(false);
                }
            };
            SeatNodeInfo.prototype.playRefreshAni = function(index) {
                var target;
                if (index == 1) target = this.box_gold; else if (index == 2) target = this.box_ticket;
                var target1;
                if (index == 1) target1 = this.goldLight; else if (index == 2) target1 = this.ticketLight;
                if (target) {
                    var timeLine = TimeLineManager_1.default.creatTimeLine();
                    timeLine.addLabel("toBig", 0).to(target, {
                        scaleX: 1.1,
                        scaleY: 1.1
                    }, 200, Laya.Ease.quadOut).addLabel("toSmall", 0).to(target, {
                        scaleX: 1,
                        scaleY: 1
                    }, 200);
                    timeLine.play();
                }
                if (target1) {
                    var timeLine = TimeLineManager_1.default.creatTimeLine();
                    timeLine.addLabel("lightOpen", 0).to(target1, {
                        alpha: 1
                    }, 200, Laya.Ease.quadOut).addLabel("lightClose", 0).to(target1, {
                        alpha: 0
                    }, 200, Laya.Ease.quadIn);
                    timeLine.play();
                }
            };
            SeatNodeInfo.prototype.onItemChange = function(data) {
                var _this = this;
                if (this.seatIndex != FishData_1.default.mySeatIndex || data.uid != GameData_1.default.uid) return;
                Laya.timer.once(2e3, this, function() {
                    var items = data.drops.items;
                    var item = items.filter(function(item) {
                        return item.item_id == 1;
                    })[0];
                    if (!item) return;
                    var label = new Laya.Label();
                    label.width = _this.box_gold.width;
                    label.font = globalConst_1.default.fontNum1;
                    label.text = "+" + item.count;
                    label.centerX = 0;
                    label.anchorX = label.anchorY = .5;
                    label.fontSize = 20;
                    label.scale(.2, .2);
                    label.align = "center";
                    label.alpha = .5;
                    label.centerY = -10;
                    _this.addChild(label);
                    Laya.Tween.to(label, {
                        centerY: -160,
                        alpha: 1
                    }, 1e3);
                    Laya.Tween.to(label, {
                        scaleX: .4,
                        scaleY: .4
                    }, 500, null, null);
                    Laya.Tween.to(label, {
                        scaleX: .2,
                        scaleY: .2
                    }, 500, null, null, 500);
                    Laya.timer.once(1e3, _this, _this.destroyLabel, [ label ], false);
                });
            };
            SeatNodeInfo.prototype.destroyLabel = function(label) {
                label.removeSelf();
                label.destroy();
            };
            return SeatNodeInfo;
        }(layaMaxUI_1.ui.roleNodes.seatInfoNodeUI);
        exports.default = SeatNodeInfo;
    }, {
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/TimeLineManager": 95,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151
    } ],
    135: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var FishData_1 = require("../../datas/roomData/FishData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var NetManager_1 = require("../../netWork/NetManager");
        var GameData_1 = require("../../datas/hallData/GameData");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var SeatNumNode = function(_super) {
            __extends(SeatNumNode, _super);
            function SeatNumNode(seatIndex) {
                var _this = _super.call(this) || this;
                _this.seatIndex = 0;
                _this.name = "numPanel" + seatIndex;
                return _this;
            }
            SeatNumNode.prototype.destroy = function() {
                this.destroyEvent();
                this.removeChildren();
                this.removeSelf();
            };
            SeatNumNode.prototype.init = function(seatIndex) {
                var _this = this;
                if (this.seatIndex == FishData_1.default.mySeatIndex) EventDis_1.default.addEvntListener("paySuccess", this, function(data) {
                    NetManager_1.default.reqChangePao({
                        pao: _this.roomPlayerInfo.cur_pao
                    });
                });
                this.imgBullet.visible = this.imgFire.visible = false;
                this.boxHelp.visible = false;
                this.seatIndex = seatIndex;
                this.roomPlayerInfo = BattleData_1.default.getSitInfo(seatIndex);
                if (this.seatIndex == FishData_1.default.mySeatIndex) {
                    this.text_ztScore.font = globalConst_1.default.fontNum1;
                    this.text_ztScore.scaleX = this.text_ztScore.scaleY = .38;
                    this.text_hyNum.font = globalConst_1.default.fontNum1;
                    this.text_hyNum.scaleX = this.text_hyNum.scaleY = .38;
                    this.openPaoBeiUI();
                } else {
                    this.text_ztScore.font = globalConst_1.default.fontNum2;
                    this.text_ztScore.scaleX = this.text_ztScore.scaleY = .4;
                    this.text_hyNum.font = globalConst_1.default.fontNum2;
                    this.text_hyNum.scaleX = this.text_hyNum.scaleY = .4;
                    this.closePaoBeiUI();
                }
                this.text_paobei.text = this.roomPlayerInfo.cur_pao.toString();
                this.closeZtPanel();
                this.closeHyPanel();
                this.initEvent();
                this.initUIEvent();
            };
            SeatNumNode.prototype.initEvent = function() {};
            SeatNumNode.prototype.initUIEvent = function() {
                var _this = this;
                if (this.seatIndex == FishData_1.default.mySeatIndex) {
                    EventDis_1.default.addEvntListener("showHelp", this, this.showHelp);
                    EventDis_1.default.addEvntListener("paySuccess", this, function() {
                        if (_this.seatIndex != FishData_1.default.mySeatIndex) return;
                        _this.boxHelp.visible = false;
                        GameData_1.default.isHelping = false;
                    });
                    EventDis_1.default.addEvntListener("bombReceive", this, function() {
                        if (_this.seatIndex != FishData_1.default.mySeatIndex) return;
                        _this.boxHelp.visible = false;
                        GameData_1.default.isHelping = false;
                    });
                    EventDis_1.default.addEvntListener("helpReward", this, function() {
                        if (_this.seatIndex != FishData_1.default.mySeatIndex) return;
                        GameData_1.default.isHelping = false;
                    });
                    this.imgHelp.on(Laya.Event.CLICK, this, function() {
                        _this.boxHelp.visible = false;
                        var end = GlobalFunc_1.default.getSeatInfoPos()[_this.seatIndex];
                        var param = {
                            characterType: 2,
                            startPoint: _this.localToGlobal(new Laya.Point(_this.boxHelp.x, _this.boxHelp.y)),
                            endPoint: new Laya.Point(end.x - _this.imgHelp.width / 2, end.y - _this.imgHelp.height / 2),
                            aniName: "goldCoinAni",
                            seat: null,
                            isCommon: true
                        };
                        GlobalFunc_1.default.doItemFlyAni(param);
                        NetManager_1.default.reqGetHelp();
                    });
                }
                EventDis_1.default.addEvntListener("endHelping", this, function() {
                    _this.boxHelp.visible = false;
                });
                this.btn_plus.on(Laya.Event.CLICK, this, this.changePaoBei, [ 1 ]);
                this.btn_reduce.on(Laya.Event.CLICK, this, this.changePaoBei, [ -1 ]);
            };
            SeatNumNode.prototype.showHelp = function() {
                if (this.seatIndex != FishData_1.default.mySeatIndex) return;
                this.boxHelp.visible = true;
                this.aniHelp.play(0, true);
                this.lblHelp.text = "(剩余 " + PlayerData_1.default.left_count + " 次)";
            };
            SeatNumNode.prototype.destroyEvent = function() {
                Laya.timer.clearAll(this);
                Laya.Tween.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
            };
            SeatNumNode.prototype.initFlip = function() {
                this.text_paobei.rotation = 180;
                this.image_ztNum.rotation = 180;
                this.imgae_hyNum.rotation = 180;
                this.image_ztIcon.rotation = 180;
            };
            SeatNumNode.prototype.closePaoBeiUI = function() {
                this.btn_plus.visible = false;
                this.btn_reduce.visible = false;
            };
            SeatNumNode.prototype.openPaoBeiUI = function() {
                if (this.seatIndex == FishData_1.default.mySeatIndex) {
                    this.btn_plus.visible = true;
                    this.btn_reduce.visible = true;
                }
            };
            SeatNumNode.prototype.closeZtPanel = function() {
                this.box_zuantou.visible = false;
            };
            SeatNumNode.prototype.openZtPanel = function() {
                this.box_zuantou.visible = true;
            };
            SeatNumNode.prototype.updateZtPanel = function(num) {
                this.text_ztScore.text = num;
            };
            SeatNumNode.prototype.closeHyPanel = function() {
                this.box_hongYun.visible = false;
            };
            SeatNumNode.prototype.openHyPanel = function() {
                this.box_hongYun.visible = true;
            };
            SeatNumNode.prototype.changePaoBei = function(changeDir) {
                var roomPaoBei = BattleData_1.default.roomPaobei[BattleData_1.default.room_type];
                var currentIndex = 0;
                var currentPao = this.roomPlayerInfo.cur_pao;
                for (var index = 0; index < roomPaoBei.length; index++) {
                    var cur_pao = roomPaoBei[index];
                    if (cur_pao == currentPao) {
                        currentIndex = index;
                        break;
                    }
                }
                var maxIndex = roomPaoBei.length - 1;
                var minIndex = 0;
                var nextIndex = currentIndex + changeDir;
                nextIndex = GlobalFunc_1.default.getLoopValue(nextIndex, minIndex, maxIndex);
                var paoNum = roomPaoBei[nextIndex];
                var param = {
                    pao: paoNum
                };
                if (GlobalFunc_1.default.checkVipToFire(paoNum, false)) NetManager_1.default.reqChangePao(param);
                this.roomPlayerInfo.cur_pao = paoNum;
                this.text_paobei.text = paoNum.toString();
            };
            SeatNumNode.prototype.changePaoBack = function(data) {
                var paoNum = data.pao;
                this.roomPlayerInfo.cur_pao = paoNum;
                this.text_paobei.text = paoNum.toString();
            };
            SeatNumNode.prototype.updatePao = function() {
                this.text_paobei.text = this.roomPlayerInfo.cur_pao + "";
            };
            return SeatNumNode;
        }(layaMaxUI_1.ui.roleNodes.SeatNumNodeUI);
        exports.default = SeatNumNode;
    }, {
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151
    } ],
    136: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var SeatWaitNode = function(_super) {
            __extends(SeatWaitNode, _super);
            function SeatWaitNode(seatIndex) {
                var _this = _super.call(this) || this;
                _this.seatIndex = 0;
                _this.name = "waitNode" + seatIndex;
                return _this;
            }
            SeatWaitNode.prototype.destroy = function() {
                this.destroyEvent();
                this.removeSelf();
            };
            SeatWaitNode.prototype.init = function(seatIndex) {
                this.seatIndex = seatIndex;
                if (seatIndex > 2) this.image_invite.rotation = 180;
            };
            SeatWaitNode.prototype.initEvent = function() {};
            SeatWaitNode.prototype.destroyEvent = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return SeatWaitNode;
        }(layaMaxUI_1.ui.roleNodes.SeatWaitNodeUI);
        exports.default = SeatWaitNode;
    }, {
        "../../globalConst/EventDis": 85,
        "../../ui/layaMaxUI": 151
    } ],
    137: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var GlobalFunc_1 = require("../globalConst/GlobalFunc");
        var ButtonAni = function(_super) {
            __extends(ButtonAni, _super);
            function ButtonAni() {
                var _this = _super.call(this) || this;
                _this.aniScaleX = 1;
                _this.aniScaleY = 1;
                _this.playScaleX = 1.1;
                _this.playScaleY = 1.1;
                _this.isPlaySound = true;
                _this.isPlayAni = true;
                _this.isSetSelf = false;
                return _this;
            }
            ButtonAni.prototype.onMouseDown = function(event) {
                if (event.target instanceof Laya.Button || this.isSetSelf) {
                    if (this.isPlayAni) Laya.Tween.to(event.target, {
                        scaleX: this.aniScaleX * this.playScaleX,
                        scaleY: this.aniScaleY * this.playScaleY
                    }, 100);
                    if (this.isPlaySound) GlobalFunc_1.default.playClickSound();
                }
            };
            ButtonAni.prototype.onMouseOut = function(event) {
                if ((event.target instanceof Laya.Button || this.isSetSelf) && this.isPlayAni) Laya.Tween.to(event.target, {
                    scaleX: this.aniScaleX,
                    scaleY: this.aniScaleY
                }, 100);
            };
            ButtonAni.prototype.onMouseUp = function(event) {
                if ((event.target instanceof Laya.Button || this.isSetSelf) && this.isPlayAni) Laya.Tween.to(event.target, {
                    scaleX: this.aniScaleX,
                    scaleY: this.aniScaleY
                }, 100);
            };
            return ButtonAni;
        }(Laya.Script);
        exports.default = ButtonAni;
    }, {
        "../globalConst/GlobalFunc": 87
    } ],
    138: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var DialogManager_1 = require("../../common/DialogManager");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var spineNode_1 = require("../../rolesNodes/otherNodes/spineNode");
        var SceneM_1 = require("../../common/SceneM");
        var PlayerInfoView_1 = require("../../dialog/hallDlg/PlayerInfoView");
        var ActivityView_1 = require("../../dialog/hallDlg/ActivityView");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var OnOffManager_1 = require("../../globalConst/OnOffManager");
        var MailDialog_1 = require("../../dialog/hallDlg/MailDialog");
        var FreeFunc_1 = require("../../globalConst/FreeFunc");
        var NetManager_1 = require("../../netWork/NetManager");
        var GameData_1 = require("../../datas/hallData/GameData");
        var WarningMessage_1 = require("../../common/WarningMessage");
        var SoundM_1 = require("../../common/SoundM");
        var RewardDialog_1 = require("../../dialog/hallDlg/RewardDialog");
        var NoticeDlg_1 = require("../../common/NoticeDlg");
        var RouletteDialog_1 = require("../../dialog/hallDlg/RouletteDialog");
        var MonthCardDlg_1 = require("../../dialog/hallDlg/MonthCardDlg");
        var GiftMrDlg_1 = require("../../gift/GiftMrDlg");
        var GlobalUI_1 = require("../../globalConst/GlobalUI");
        var MarqueeManager_1 = require("../../globalConst/MarqueeManager");
        var FirstHallScene = function(_super) {
            __extends(FirstHallScene, _super);
            function FirstHallScene() {
                var _this = _super.call(this) || this;
                _this.isMenuOpen = false;
                _this.isOpening = false;
                _this.wholeStatus = [];
                _this.hbox1 = [];
                _this.hbox2 = [];
                _this.init();
                GlobalVar_1.default.isNewZipUser = false;
                return _this;
            }
            FirstHallScene.prototype.init = function() {
                var _this = this;
                EventDis_1.default.addEvntListener(GlobalVar_1.default.CHANGEDAY, this, function() {
                    _this.wholeStatus = [];
                });
                GlobalFunc_1.default.getStageBounds();
                this.listenEvents();
                this.uiEvents();
                this.addEnterSpines();
                this.hbox1 = GlobalUI_1.default.initHbox(this.box_top);
                this.hbox2 = GlobalUI_1.default.initHbox(this.box_inBottom);
                this.addBgSpines();
                this.initPlayerInfo();
                SoundM_1.default.playMusic(globalConst_1.default.Sud_bg_hall);
                NetManager_1.default.reqWholeRewardLoad();
                Laya.timer.loop(6e3, this, this.updateFreeGold);
                GlobalFunc_1.default.doLRAdapt({
                    node: this.box_bottom
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: this.box_right,
                    isRight: true
                });
                BattleData_1.default.stopAddRewardPool();
                this.clientLoadInit();
                this.loadingOpen();
                this.test_btn.visible = false;
                if (GlobalVar_1.default.isTestBtnOpen) {
                    this.test_btn.visible = true;
                    this.test_btn.on(Laya.Event.CLICK, this, function() {
                        EventDis_1.default.dispatchEvent("updateConfigNotice");
                    });
                }
                if (!OnOffManager_1.default.isChargeOn) this.box_gift.visible = this.box_shop.visible = false;
                this.box_activity.visible = OnOffManager_1.default.isActivityOn;
                this.box_tomorrow.visible = PlayerData_1.default.checkTGift();
                this.box_gift_SP.visible = PlayerData_1.default.checkSpGift();
                this.box_monthCard.visible = OnOffManager_1.default.isMonthCardOn && !GlobalFunc_1.default.isIos();
                GlobalFunc_1.default.setReset(false, this.box_inBottom, this.hbox2);
                GlobalFunc_1.default.setReset(false, this.box_top, this.hbox1);
                if (!GameData_1.default.isGameStart) {
                    MarqueeManager_1.default.getRateData();
                    GameData_1.default.isGameStart = true;
                }
                Laya.timer.once(10, this, function() {
                    _this.uiDataInit();
                });
                this.btn_menu.tag = this.btn_mail.tag = this.btn_service.tag = this.btn_notice.tag = 1;
                this.btn_freeGold.tag = 2;
                this.on(Laya.Event.CLICK, this, this.resetView);
            };
            FirstHallScene.prototype.resetView = function(e) {
                if (e.target instanceof Laya.Button) {
                    if (e.target.tag != 2) this.changeFreeState(false);
                    if (e.target.tag != 1) this.isMenuOpen && this.menuClickEvent();
                } else {
                    this.isMenuOpen && this.menuClickEvent();
                    this.changeFreeState(false);
                }
            };
            FirstHallScene.prototype.clientLoadInit = function() {
                NetManager_1.default.reqYesterDayGold();
            };
            FirstHallScene.prototype.listenEvents = function() {};
            FirstHallScene.prototype.uiEvents = function() {
                var _this = this;
                this.btn_activity.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_ACTIVITY,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isActivityOn,
                    desc: "活动暂未开启"
                } ]);
                this.btn_exchange.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_EXCHANGEDLG,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isExchangeOn,
                    desc: "兑换暂未开启"
                } ]);
                this.btn_freeGold.on(Laya.Event.CLICK, this, this.onBtnFreeGoldClick);
                this.btn_rankWar.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_RANKINGWAR,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isRankWarOn,
                    desc: "海王争霸暂未开启"
                } ]);
                this.btn_mail.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_MAIL,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isMailOn,
                    desc: "邮件暂未开启"
                } ]);
                this.btn_monthCard.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_MONTHCARD,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isMonthCardOn,
                    desc: "月卡暂未开启"
                } ]);
                this.btn_notice.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_NOTICE,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isNotice,
                    desc: "公告暂未开启"
                } ]);
                this.btn_package.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_PACKAGE,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isPackageOn,
                    desc: "背包暂未开启"
                } ]);
                this.btn_rankList.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_RANKLIST,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isRankListOn,
                    desc: "排行榜暂未开启"
                } ]);
                this.btn_service.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_SERVICE,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isService,
                    desc: "客服暂未开启"
                } ]);
                this.btn_set.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_SET,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isMenu,
                    desc: "菜单暂未开启"
                } ]);
                this.btn_share.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_SHARE,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isShare,
                    desc: "分享暂未开启"
                } ]);
                this.btn_shop.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_SHOP,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isShopOn,
                    desc: "商城暂未开启"
                } ]);
                this.btn_vip.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_VIPCHARGE,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isVipOn,
                    desc: "贵族暂未开启"
                } ]);
                this.btn_tomorrow.on(Laya.Event.CLICK, this, function() {
                    var dlg = new GiftMrDlg_1.GiftMrDlg();
                    SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
                });
                this.btn_menu.on(Laya.Event.CLICK, this, this.menuClickEvent);
                EventDis_1.default.addEvntListener("freeGold", this, this.changeFreeState);
                this.updateMailRed();
                EventDis_1.default.addEvntListener(GlobalVar_1.default.UPDATA_MAIL_NUM, this, this.updateMailRed);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.VIP_UP, this, this.updateFreeGold);
                EventDis_1.default.addEvntListener("payGiftChange", this, function(data) {
                    _this.updatePayComponets();
                });
                EventDis_1.default.addEvntListener("paySuccess", this, function(data) {
                    GlobalFunc_1.default.log("充值奖励显示");
                    var rewardDlg = new RewardDialog_1.default(data.items);
                    rewardDlg.init(null, null);
                    SceneM_1.default.addToMiddLayer(rewardDlg, globalConst_1.default.dialogLayer);
                    _this.updateFreeGold();
                });
                this.btn_gift.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_FIRSTPAY,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isGiftOn,
                    desc: "首充礼包暂未开启"
                } ]);
                this.btn_gift_SP.on(Laya.Event.CLICK, this, this.checkToOpenDialog, [ {
                    name: globalConst_1.default.DIA_PREFERENTIAL,
                    param: undefined,
                    isOpen: OnOffManager_1.default.isGiftOn,
                    desc: "特惠礼包暂未开启"
                } ]);
                EventDis_1.default.addEvntListener("wholeLoad", this, function(data) {
                    _this.updateWholeStatus(data);
                    _this.updateFreeGold();
                });
                EventDis_1.default.addEvntListener("getWholeReward", this, function(data) {
                    _this.wholeStatus[data.list_id - 1].status = 2;
                    _this.updateFreeGold();
                });
                EventDis_1.default.addEvntListener("helpLoad", this, function(data) {
                    _this.updateFreeGold();
                });
                EventDis_1.default.addEvntListener("helpReward", this, function(data) {
                    PlayerData_1.default.left_count = data;
                    _this.updateFreeGold();
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.NOTICE_YESTERDAY_GOLD, this, function(data) {
                    _this.updateFreeGold();
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.NOTICE_YESTERDAY_DONE, this, function() {
                    _this.updateFreeGold();
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.TOMORROW_GOT, this, function(data) {
                    _this.box_tomorrow.visible = false;
                    var dlg = new RewardDialog_1.default(data);
                    dlg.init(null, null);
                    SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
                    GlobalFunc_1.default.setReset(false, _this.box_top, _this.hbox1);
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.TOMORROW_SEND, this, function() {
                    _this.box_tomorrow.visible = PlayerData_1.default.checkTGift();
                    GlobalFunc_1.default.setReset(false, _this.box_top, _this.hbox1);
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.SHARE_ADD, this, function() {
                    _this.updateFreeGold();
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.SHARE_REWARD, this, function() {
                    _this.updateFreeGold();
                });
                this.updateFreeGold();
                this.box_gift.visible = !GameData_1.default.isFirstRecharge && !GlobalFunc_1.default.isIos();
            };
            FirstHallScene.prototype.uiDataInit = function() {
                this.btn_share.visible = OnOffManager_1.default.isShare;
                this.btn_rankWar.visible = OnOffManager_1.default.isRankWarOn;
                var packagePos = this.btn_package.localToGlobal(new Laya.Point(70, 60));
                PlayerData_1.default.setHallFlyPos(packagePos, globalConst_1.default.itemFlyPackage);
            };
            FirstHallScene.prototype.checkToOpenDialog = function(data) {
                if (this.lockOpen()) return;
                if (!data.isOpen) {
                    GlobalFunc_1.default.globalTip(data.desc);
                    return;
                }
                DialogManager_1.default.getDialogByName(data.name, data.param);
            };
            FirstHallScene.prototype.updateFreeGold = function() {
                this.img_TipFreeGold.visible = this.checkWholeRed() || this.checkHelp() || this.checkRebate() || PlayerData_1.default.checkInvite();
            };
            FirstHallScene.prototype.checkLuck = function() {
                var drawNumMax = 5;
                var cdTime = 20;
                var drawNum = PlayerData_1.default.freeGoldInfo.luckyDrawInfo.drawNum;
                var drawTime = PlayerData_1.default.freeGoldInfo.luckyDrawInfo.lastTime + cdTime - Math.floor(GlobalFunc_1.default.getClientTime() / 1e3);
                return drawNum == drawNumMax || drawNum > 0 && drawTime <= 0;
            };
            FirstHallScene.prototype.checkRebate = function() {
                return !GameData_1.default.isRebate && GameData_1.default.rebateNum > 0;
            };
            FirstHallScene.prototype.checkWholeRed = function() {
                return FreeFunc_1.default.checkWholeRed(this.wholeStatus);
            };
            FirstHallScene.prototype.checkHelp = function() {
                return PlayerData_1.default.left_count > 0 && PlayerData_1.default.getItemNum(globalConst_1.default.gold + "") < 1e3;
            };
            FirstHallScene.prototype.menuClickEvent = function() {
                if (this.isMenuOpen) {
                    this.menuClose.play(0, false);
                    this.isMenuOpen = false;
                } else {
                    this.menuOpen.play(0, false);
                    this.isMenuOpen = true;
                }
            };
            FirstHallScene.prototype.lockOpen = function() {
                var _this = this;
                if (this.isOpening) return true;
                this.isOpening = true;
                Laya.timer.once(200, this, function() {
                    _this.isOpening = false;
                });
                return false;
            };
            FirstHallScene.prototype.setFirstPackageDian = function() {
                var _this = this;
                var value;
                if (GlobalVar_1.default.isWx) value = wx.getStorageSync("firstPlayGameToDian"); else value = Laya.LocalStorage.getItem("firstPlayGameToDian");
                if (value == "1") this.box_gift.visible = false; else this.box_gift.visible = true && !GlobalFunc_1.default.isIos();
                EventDis_1.default.addEvntListener(GlobalVar_1.default.CLOSE_FIRSTPACKAGE_DIAN, this, function() {
                    _this.box_gift.visible = false;
                });
            };
            FirstHallScene.prototype.addEnterSpines = function() {
                var interface1 = new spineNode_1.default();
                interface1.layer = this.box_pattern1;
                interface1.fileName = "interface1";
                interface1.x = 205;
                interface1.y = 320;
                interface1.loadSpine();
                var interface2 = new spineNode_1.default();
                interface2.layer = this.box_pattern2;
                interface2.fileName = "interface2";
                interface2.x = 186;
                interface2.y = 337;
                interface2.loadSpine();
                var interface3 = new spineNode_1.default();
                interface3.layer = this.box_pattern3;
                interface3.fileName = "interface3";
                interface3.x = 152;
                interface3.y = 308;
                interface3.loadSpine();
                var img = new Laya.Image("smallPic/img_pub.png");
                img.pos(145, 262);
                this.box_pattern3.addChild(img);
                this.box_pattern1.on(Laya.Event.CLICK, this, this.enterSecondRoom);
                this.box_pattern2.on(Laya.Event.CLICK, this, function() {
                    new WarningMessage_1.WarningMessage("功能暂未开启哦");
                });
                this.box_pattern3.on(Laya.Event.CLICK, this, function() {
                    new WarningMessage_1.WarningMessage("功能暂未开启哦");
                });
            };
            FirstHallScene.prototype.addBgSpines = function() {
                var tree1 = new spineNode_1.default();
                tree1.layer = this.box_bgSpine;
                tree1.fileName = "Rtree";
                tree1.x = 1148;
                tree1.y = 478;
                tree1.mouseEnabled = false;
                tree1.loadSpine();
                var tree2 = new spineNode_1.default();
                tree2.layer = this.box_bgSpine;
                tree2.fileName = "Ltree";
                tree2.x = 47;
                tree2.y = 428;
                tree2.mouseEnabled = false;
                tree2.rotation = 10;
                tree2.loadSpine();
                var tree3 = new spineNode_1.default();
                tree3.layer = this.box_bgSpine;
                tree3.fileName = "Ltree";
                tree3.x = 51;
                tree3.y = 520;
                tree3.mouseEnabled = false;
                tree3.overTurn = true;
                tree3.rotation = -15;
                tree3.loadSpine();
            };
            FirstHallScene.prototype.enterSecondRoom = function() {
                var scene = SceneM_1.default.replaceScene("SelectRoomScene");
                scene.init();
            };
            FirstHallScene.prototype.enterMiniGame = function() {
                SceneM_1.default.replaceScene("CutFishScene");
            };
            FirstHallScene.prototype.initPlayerInfo = function() {
                this.viewInfo = new PlayerInfoView_1.PlayerInfoView();
                this.viewInfo.mouseThrough = true;
                this.addChild(this.viewInfo);
                GlobalFunc_1.default.doLRAdapt({
                    node: this.viewInfo
                });
                var coinPos = this.viewInfo.btnMoney.localToGlobal(new Laya.Point(0, 0));
                var ticketPos = this.viewInfo.btnDiamond.localToGlobal(new Laya.Point(0, 0));
                PlayerData_1.default.setHallFlyPos(coinPos, globalConst_1.default.itemFlyHallCoin);
                PlayerData_1.default.setHallFlyPos(ticketPos, globalConst_1.default.itemFlyHallTicket);
            };
            FirstHallScene.prototype.onBtnFreeGoldClick = function() {
                if (!OnOffManager_1.default.isFree) {
                    GlobalFunc_1.default.globalTip("免费金币暂未开启");
                    return;
                }
                EventDis_1.default.dispatchEvent("freeGold");
            };
            FirstHallScene.prototype.changeFreeState = function(isshow) {
                if (isshow === void 0) isshow = true;
                var view = SceneM_1.default.getLayerByName(globalConst_1.default.dialogLayer).getChildByName(globalConst_1.default.DIA_FreeGold);
                if (view && isshow) {
                    view.visible = !view.visible;
                    return;
                }
                if (!isshow) {
                    view && (view.visible = false);
                    return;
                }
                var point = new Laya.Point(50, -70);
                this.btn_freeGold.localToGlobal(point);
                var img = this.viewInfo.getChildByName("imgGold");
                view = new ActivityView_1.ActicityView(point, img, this.wholeStatus, PlayerData_1.default.left_count);
                view.name = globalConst_1.default.DIA_FreeGold;
                SceneM_1.default.addToLayer(view, globalConst_1.default.dialogLayer);
            };
            FirstHallScene.prototype.loadingOpen = function() {
                var isNotice = NoticeDlg_1.default.isShowNotice();
                var isRoatte = PlayerData_1.default.leftLoginRoulette > 0 && OnOffManager_1.default.isRotate;
                var isMonth = !GameData_1.default.isMonthToday && GameData_1.default.monthEndDay > 0 && GameData_1.default.isShowMonth && OnOffManager_1.default.isMonthCardOn;
                isNotice && NoticeDlg_1.default.resetShowFlag();
                var dlg = null;
                if (isNotice) {
                    var noticeDlg = new NoticeDlg_1.NoticeDlg();
                    DialogManager_1.default.addDlg(noticeDlg);
                    dlg = noticeDlg;
                }
                if (isRoatte) {
                    var rotate = new RouletteDialog_1.default();
                    DialogManager_1.default.addDlg(rotate, !isMonth);
                    dlg = rotate;
                }
                if (isMonth) {
                    var month = new MonthCardDlg_1.MonthCardDlg();
                    DialogManager_1.default.addDlg(month, true);
                    dlg = month;
                    GameData_1.default.isShowMonth = false;
                }
                Laya.timer.once(100, this, function() {
                    dlg && SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
                });
            };
            FirstHallScene.prototype.updateMailRed = function() {
                this.img_mailRed.visible = this.img_setRed.visible = MailDialog_1.g_mailsData.isHaveNewMail();
            };
            FirstHallScene.prototype.updateWholeStatus = function(data) {
                if (!data.info) return;
                this.wholeStatus = data.info;
                this.checkWholeRed();
            };
            FirstHallScene.prototype.updatePayComponets = function() {
                this.box_gift.visible = !GameData_1.default.isFirstRecharge && !GlobalFunc_1.default.isIos();
                this.box_gift_SP.visible = PlayerData_1.default.checkSpGift();
                GlobalFunc_1.default.setReset(false, this.box_top, this.hbox1);
            };
            FirstHallScene.prototype.destroy = function() {
                this.viewInfo.destroy();
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return FirstHallScene;
        }(layaMaxUI_1.ui.hallScene.FirstHallSceneUI);
        exports.default = FirstHallScene;
    }, {
        "../../common/DialogManager": 9,
        "../../common/NoticeDlg": 17,
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../common/WarningMessage": 25,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../dialog/hallDlg/ActivityView": 38,
        "../../dialog/hallDlg/MailDialog": 53,
        "../../dialog/hallDlg/MonthCardDlg": 54,
        "../../dialog/hallDlg/PlayerInfoView": 57,
        "../../dialog/hallDlg/RewardDialog": 60,
        "../../dialog/hallDlg/RouletteDialog": 61,
        "../../gift/GiftMrDlg": 78,
        "../../globalConst/EventDis": 85,
        "../../globalConst/FreeFunc": 86,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalUI": 89,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/MarqueeManager": 91,
        "../../globalConst/OnOffManager": 93,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../rolesNodes/otherNodes/spineNode": 129,
        "../../ui/layaMaxUI": 151
    } ],
    139: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var SceneM_1 = require("../../common/SceneM");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var FishLineData_1 = require("../../datas/roomData/FishLineData");
        var FishLoadingScene = function(_super) {
            __extends(FishLoadingScene, _super);
            function FishLoadingScene() {
                var _this = _super.call(this) || this;
                _this.loadingNum = 0;
                _this.isFishResOk = false;
                _this.isFishLineOk = false;
                _this.initEvent();
                _this.initFishLoad();
                return _this;
            }
            FishLoadingScene.prototype.initFishLoad = function() {
                this.loadingNum = 1;
                this.textLoadingNum.text = "1%";
                this.progressLoading.value = 1 / 100;
                this.label_version.text = globalConst_1.default.clientVer;
                GlobalFunc_1.default.doLRAdapt({
                    node: this.label_version
                });
                this.enterRoomOk();
            };
            FishLoadingScene.prototype.initEvent = function() {
                EventDis_1.default.addEvntListener("remove_fishLoaidng_scene", this, this.destroy);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ENTER_ROOM_FAIL, this, this.destroy);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_FISHRESOK_NOTICE, this, this.fishResOk);
                EventDis_1.default.addEvntListener("load_fish_path_over", this, this.fishLineOk);
            };
            FishLoadingScene.prototype.enterRoomOk = function() {
                GlobalFunc_1.default.log("1.网络连接完成........");
                GlobalFunc_1.default.cacheFishFrames();
                FishLineData_1.default.getFishLines();
                Laya.timer.clear(this, this.connectProgrs);
                Laya.timer.frameLoop(1, this, this.fishLoadingFunc);
            };
            FishLoadingScene.prototype.fishResOk = function() {
                this.isFishResOk = true;
                GlobalFunc_1.default.log("2.鱼资源加载完成........");
            };
            FishLoadingScene.prototype.fishLineOk = function() {
                this.isFishLineOk = true;
                GlobalFunc_1.default.log("3.鱼线加载完成........");
            };
            FishLoadingScene.prototype.connectProgrs = function() {
                this.loadingNum += 1;
                this.progressLoading.value = this.loadingNum / 100;
                this.textLoadingNum.text = String(this.loadingNum) + "%";
                this.loadingNum >= 30 && this.exitFishLoading();
            };
            FishLoadingScene.prototype.exitFishLoading = function() {
                this.destroy();
                var scene = "SelectRoomScene";
                var sceneLayer = SceneM_1.default.replaceScene(scene);
                sceneLayer.init();
                var str = GlobalFunc_1.default.getColorText("网络连接失败，请重新连接");
                var alert = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                SceneM_1.default.addToMiddLayer(alert, globalConst_1.default.dialogLayer);
            };
            FishLoadingScene.prototype.fishLoadingFunc = function() {
                this.loadingNum += 7;
                if (!this.isFishResOk) this.loadingNum = Math.min(this.loadingNum, 80); else if (!this.isFishLineOk) this.loadingNum = Math.min(this.loadingNum, 90); else if (this.loadingNum >= 100) {
                    this.loadingNum = 100;
                    Laya.timer.clearAll(this);
                    Laya.timer.frameOnce(2, this, function() {
                        SceneM_1.default.replaceScene("FishScene");
                        this.dispatchRoomEvent();
                    });
                }
                this.textLoadingNum.text = this.loadingNum + "%";
                this.progressLoading.value = this.loadingNum / 100;
            };
            FishLoadingScene.prototype.dispatchRoomEvent = function() {
                var pao = BattleData_1.default.roomPaobei[BattleData_1.default.room_type][0];
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.JACKPOT_CHANGE_PAO, {
                    lastPao: pao,
                    currentPao: pao
                });
            };
            FishLoadingScene.prototype.destroy = function() {
                this.destroyChildren();
                this.removeSelf();
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
            };
            return FishLoadingScene;
        }(layaMaxUI_1.ui.login.LoadingSceneUI);
        exports.FishLoadingScene = FishLoadingScene;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/SceneM": 19,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishLineData": 31,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151
    } ],
    140: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var GameData_1 = require("../../datas/hallData/GameData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var SceneM_1 = require("../../common/SceneM");
        var MainFunc_1 = require("../../login/MainFunc");
        var HttpManager_1 = require("../../netWork/HttpManager");
        var NetManager_1 = require("../../netWork/NetManager");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var FishLineData_1 = require("../../datas/roomData/FishLineData");
        var NoticeDlg_1 = require("../../common/NoticeDlg");
        var PcLoadingScene = function(_super) {
            __extends(PcLoadingScene, _super);
            function PcLoadingScene() {
                var _this = _super.call(this) || this;
                _this.isPngOk = false;
                _this.isTextOk = false;
                _this.isSoundOk = false;
                _this.btnLayer = null;
                _this.serverName = "";
                _this.newJson = {};
                _this.loadStep = 0;
                _this.errorOpen = false;
                _this.isQuickDoing = false;
                _this.loginOk = false;
                _this.testRet = true;
                _this.loadingTips = [ "游戏启动中...", "下载配置中...", "连接网关中...", "资源整包下载中...", "加载配置中...", "公告初始化中...", "微信授权中...", "进入游戏中...", "解压中...", "进入游戏中..." ];
                _this.serverName = "QA";
                _this.url = globalConst_1.default.loginUrl151;
                _this.sbtn1.selected = true;
                _this.sbtn1.on(Laya.Event.CLICK, _this, function() {
                    _this.sbtn1.selected = true;
                    _this.sbtn_dong.selected = false;
                    _this.sbtn_kaifa.selected = false;
                    _this.sbtn_wanmiao.selected = false;
                    _this.sbtn_jincheng.selected = false;
                    _this.serverName = "QA";
                    _this.url = globalConst_1.default.loginUrl151;
                });
                _this.sbtn_dong.on(Laya.Event.CLICK, _this, function() {
                    _this.sbtn1.selected = false;
                    _this.sbtn_dong.selected = true;
                    _this.sbtn_kaifa.selected = false;
                    _this.sbtn_wanmiao.selected = false;
                    _this.sbtn_jincheng.selected = false;
                    _this.serverName = "QA";
                    _this.url = globalConst_1.default.loginUrlDongyanan;
                });
                _this.sbtn_kaifa.on(Laya.Event.CLICK, _this, function() {
                    _this.sbtn1.selected = false;
                    _this.sbtn_dong.selected = false;
                    _this.sbtn_kaifa.selected = true;
                    _this.sbtn_wanmiao.selected = false;
                    _this.sbtn_jincheng.selected = false;
                    _this.serverName = "QA";
                    _this.url = globalConst_1.default.loginUrl152;
                });
                _this.sbtn_wanmiao.on(Laya.Event.CLICK, _this, function() {
                    _this.sbtn1.selected = false;
                    _this.sbtn_dong.selected = false;
                    _this.sbtn_kaifa.selected = false;
                    _this.sbtn_wanmiao.selected = true;
                    _this.sbtn_jincheng.selected = false;
                    _this.serverName = "QA";
                    _this.url = globalConst_1.default.loginUrlWanmiao;
                });
                _this.sbtn_jincheng.on(Laya.Event.CLICK, _this, function() {
                    _this.sbtn1.selected = false;
                    _this.sbtn_dong.selected = false;
                    _this.sbtn_kaifa.selected = false;
                    _this.sbtn_wanmiao.selected = false;
                    _this.sbtn_jincheng.selected = true;
                    _this.serverName = "QA";
                    _this.url = globalConst_1.default.loginUrlJin;
                });
                _this.enterBtn.on(Laya.Event.CLICK, _this, function() {
                    GameData_1.default.serverName = _this.serverName;
                    if (_this.labelUser.text.length > 16 || _this.labelUser.text.length < 6) return;
                    GameData_1.default.account = _this.labelUser.text;
                    Laya.LocalStorage.setItem("userAccount", GameData_1.default.account);
                    _this.beginNewLoadingWithStep(2);
                    HttpManager_1.default.connect(_this.url + "?login_type=1&device_info=" + GameData_1.default.account, function(data) {
                        GameData_1.default.setLoginInfo(data.login_info);
                        NetManager_1.default.connect();
                    });
                });
                _this.btn_editor.on(Laya.Event.CLICK, _this, function() {
                    SceneM_1.default.replaceScene("EditorScene");
                });
                var userAccount = Laya.LocalStorage.getItem("userAccount");
                GameData_1.default.account = userAccount ? userAccount : "";
                _this.labelUser.text = GameData_1.default.account;
                _this.labelUser.restrict = "a-zA-Z0-9_";
                localStorage.setItem("showWarningMsg", "0");
                EventDis_1.default.addEvntListener(GlobalVar_1.default.GATE_LOGIN_SUC_NOTICE, _this, _this.loginOkCallBack);
                EventDis_1.default.addEvntListener("loginError", _this, _this.errorMessageShow);
                EventDis_1.default.addEvntListener("switchSteps", _this, function(step) {
                    _this.loadStep = step[0];
                });
                EventDis_1.default.addEvntListener("remove_loading", _this, function() {
                    GlobalFunc_1.default.log("登录完成，进入大厅，去除遮罩层");
                    _this.delSelf();
                });
                _this.showProcess(false);
                _this.textLoadingNum.visible = false;
                _this.label_version.text = globalConst_1.default.clientVer;
                _this.log_test.text = "0";
                GlobalFunc_1.default.doLRAdapt({
                    node: _this.label_version
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: _this.state_text
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: _this.log_test
                });
                _this.state_text.visible = false;
                EventDis_1.default.addEvntListener("log_test", _this, function(logId) {
                    _this.log_test.text = logId;
                });
                _this.textLoading.font = "Arial";
                Laya.timer.once(200, _this, function() {
                    NoticeDlg_1.default.reqNotice();
                });
                return _this;
            }
            PcLoadingScene.prototype.showProcess = function(bool) {
                this.progressLoading.visible = bool;
                this.textLoading.visible = bool;
            };
            PcLoadingScene.prototype.onMouseDown = function() {};
            PcLoadingScene.prototype.loginOkCallBack = function(data) {
                GlobalFunc_1.default.log("登录后端成功 返回:");
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.DATA_VIP_INFO, {
                    vip: data.vip_level
                });
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.VIP_EXP_UP, data.vip_exp);
                PlayerData_1.default.guideStep = data.guide_step ? data.guide_step : 0;
                GameData_1.default.isFirstRecharge = !!data.shouchong_flag;
                PlayerData_1.default.lastlogintime = data.last_login_time;
                GameData_1.default.account_type = data.account_type;
                GameData_1.default.uid = data.uid;
                GameData_1.default.nickName = data.nick_name;
                PlayerData_1.default.sex = data.sex;
                PlayerData_1.default.head_image = data.head_image;
                PlayerData_1.default.create_time = data.create_time;
                PlayerData_1.default.lastlogintime = data.last_login_time;
                PlayerData_1.default.equipCannon = data.cur_pao_item;
                PlayerData_1.default.setItemNum(globalConst_1.default.GoldCoinID, data.gold);
                PlayerData_1.default.setItemNum(globalConst_1.default.DiamondID, data.diamond);
                GameData_1.default.tomrrowData = data.mingri_package_info;
                GlobalFunc_1.default.setGiftMr(GameData_1.default.tomrrowData);
                var serverTime = GameData_1.default.serverTimeStamp;
                if (data.guide_info) {
                    GameData_1.default.roomguide = data.guide_info.room_2_guide;
                    GameData_1.default.numberState = data.guide_info.public_number_state;
                }
                if (data.yaoyiyao_info && JSON.parse(data.yaoyiyao_info)) {
                    var info = JSON.parse(data.yaoyiyao_info);
                    GameData_1.default.shakeTimes = +info.chances;
                    var isMonth = new Date(+info.lastBuyTime * 1e3).getMonth() == new Date(serverTime).getMonth();
                    var isDate = new Date(+info.lastBuyTime * 1e3).getDate() == new Date(serverTime).getDate();
                    GameData_1.default.isShaked = isMonth && isDate;
                }
                if (data.yueka_info && JSON.parse(data.yueka_info)) {
                    var info = JSON.parse(data.yueka_info);
                    GameData_1.default.monthEndTime = +info.effectEndTime;
                    GlobalFunc_1.default.setMonthTime();
                    var isDate = new Date(+info.lastGetTime * 1e3).getDate() == new Date(serverTime).getDate();
                    var isMonth = new Date(+info.lastGetTime * 1e3).getMonth() == new Date(serverTime).getMonth();
                    GameData_1.default.isMonthToday = GameData_1.default.monthEndDay > 0 && isMonth && isDate;
                }
                if (data.tehui_package_info && JSON.parse(data.tehui_package_info)) {
                    var info = JSON.parse(data.tehui_package_info);
                    GameData_1.default.tehuiState1 = +info["18"];
                    GameData_1.default.tehuiState2 = +info["30"];
                }
                PlayerData_1.default.vipSkillAssign();
                var equippedCannon = 0;
                PlayerData_1.default.equipCannon = equippedCannon;
                this.loginOk = true;
                Laya.loader.load(MainFunc_1.default.getLoadPath2(), Laya.Handler.create(this, function() {
                    if (GlobalFunc_1.default.isInNewUserRoom()) {
                        GlobalFunc_1.default.cacheFishFrames();
                        FishLineData_1.default.getFishLines();
                        this.quickLoad(true);
                    } else {
                        GlobalFunc_1.default.log("加载zip2资源完成....", GlobalVar_1.default.reUrl);
                        this.quickLoad(true);
                    }
                }));
            };
            PcLoadingScene.prototype.beginNewLoadingWithStep = function(step) {
                if (step === void 0) step = 0;
                this.loadStep = step;
                this.loadingNum = 0;
                this.textLoading.text = "";
                this.progressLoading.value = 0;
                this.quickLoad(false);
            };
            PcLoadingScene.prototype.loadingFunction = function() {
                this.loadingNum++;
                var tmpNum = this.loadingNum;
                if (this.loadingNum > 99) {
                    this.progressLoading.value = .99;
                    tmpNum = 99;
                } else this.progressLoading.value = this.loadingNum / 100;
                var curStep = this.loadStep;
                var tip = this.loadingTips[curStep] || "正在载入中";
                this.textLoading.text = tip + tmpNum + "%";
                if (this.loadingNum > 120 && !this.isQuickDoing) {
                    GlobalFunc_1.default.log("load超时超过120，报错，退出程序");
                    Laya.timer.clearAll(this);
                    this.errorMessageShow();
                    return;
                }
                if (this.loadingNum >= 100 && this.isQuickDoing && this.loginOk) {
                    Laya.timer.clearAll(this);
                    if (!GlobalFunc_1.default.isInNewUserRoom()) {
                        GlobalFunc_1.default.log("进大厅");
                        SceneM_1.default.replaceScene("FirstHallScene");
                    } else {
                        GlobalFunc_1.default.log("新手进入渔场");
                        EventDis_1.default.addEvntListener(GlobalVar_1.default.ENTER_ROOM_SUCCESS, this, function() {
                            SceneM_1.default.replaceScene("FishScene", null, 500);
                        });
                        NetManager_1.default.reqEnterRoom({
                            room_type: 0,
                            enter: true
                        });
                    }
                }
            };
            PcLoadingScene.prototype.quickLoad = function(judge) {
                this.showProcess(true);
                this.isQuickDoing = judge;
                Laya.timer.clearAll(this);
                Laya.timer.loop(judge ? 50 : 250, this, this.loadingFunction);
                GlobalFunc_1.default.log(judge ? "进入快速" : "进入慢速", this.loadStep);
            };
            PcLoadingScene.prototype.errorMessageShow = function() {
                var _this = this;
                var str = GlobalFunc_1.default.getColorText("网络连接失败");
                var kickDialog = new CommonDialog_1.default(1, [ str ], null, "确定", "提示", true, Laya.Handler.create(this, function() {
                    _this.beginNewLoadingWithStep();
                }));
                SceneM_1.default.addToMiddLayer(kickDialog, globalConst_1.default.dialogLayer);
            };
            PcLoadingScene.prototype.delSelf = function() {
                this.destroyChildren();
                this.removeSelf();
                this.destroy();
            };
            PcLoadingScene.prototype.destroy = function() {
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
            };
            return PcLoadingScene;
        }(layaMaxUI_1.ui.login.PcLoadingSceneUI);
        exports.default = PcLoadingScene;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/NoticeDlg": 17,
        "../../common/SceneM": 19,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/FishLineData": 31,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../login/MainFunc": 99,
        "../../netWork/HttpManager": 100,
        "../../netWork/NetManager": 101,
        "../../ui/layaMaxUI": 151
    } ],
    141: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GameData_1 = require("../../datas/hallData/GameData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var SceneM_1 = require("../../common/SceneM");
        var NetManager_1 = require("../../netWork/NetManager");
        var FishLineData_1 = require("../../datas/roomData/FishLineData");
        var GlobalUI_1 = require("../../globalConst/GlobalUI");
        var WxLoginManager_1 = require("../../netWork/WxLoginManager");
        var WxLoadingScene = function(_super) {
            __extends(WxLoadingScene, _super);
            function WxLoadingScene() {
                var _this = _super.call(this) || this;
                _this.loadingTips = [];
                _this.loadStep = 0;
                _this.serverName = "";
                _this.isShowBtn = false;
                _this.isQuickDoing = false;
                _this.loadingNum = 0;
                _this.reSendTime = 5;
                _this.enterRoomOk = false;
                _this.isLoginOver = false;
                _this.loadingTips = [ "游戏启动中...", "下载配置中...", "游戏加载中...", "资源包检查...", "资源下载中...", "资源包2下载...", "资源包加载...", "请求微信和授权...", "公告请求...", "连接网关...", "进入游戏..." ];
                _this.initEvent();
                _this.initUi();
                Laya.timer.loop(1e3, _this, _this.checkDownOver);
                EventDis_1.default.addEvntListener("log_test", _this, function(logId) {
                    _this.log_test.text = logId;
                });
                return _this;
            }
            WxLoadingScene.prototype.initUi = function() {
                this.showProcess(false);
                this.textLoadingNum.visible = false;
                this.label_version.text = globalConst_1.default.clientVer;
                GlobalFunc_1.default.doLRAdapt({
                    node: this.label_version
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: this.state_text
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: this.log_test
                });
                this.beginNewLoadingWithStep();
                this.textLoading.font = "Arial";
            };
            WxLoadingScene.prototype.initUserInfo = function(data) {
                var equippedCannon = 0;
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.DATA_VIP_INFO, {
                    vip: data.vip_level
                });
                EventDis_1.default.dispatchEvent(GlobalVar_1.default.VIP_EXP_UP, data.vip_exp);
                PlayerData_1.default.guideStep = data.guide_step ? data.guide_step : 0;
                GameData_1.default.isFirstRecharge = !!data.shouchong_flag;
                PlayerData_1.default.yuekaaward = 0;
                PlayerData_1.default.lastlogintime = data.last_login_time;
                PlayerData_1.default.setItemNum("1", data.gold);
                PlayerData_1.default.setItemNum("2", data.diamond);
                PlayerData_1.default.setItemNum("3", 0);
                PlayerData_1.default.setVipInfo();
                PlayerData_1.default.isServerNewUser = false;
                PlayerData_1.default.vipSkillAssign();
                PlayerData_1.default.equipCannon = equippedCannon;
                GameData_1.default.tomrrowData = data.mingri_package_info;
                GlobalFunc_1.default.setGiftMr(GameData_1.default.tomrrowData);
                if (data.guide_info) {
                    GameData_1.default.roomguide = data.guide_info.room_2_guide;
                    GameData_1.default.numberState = data.guide_info.public_number_state;
                }
                var serverTime = GameData_1.default.serverTimeStamp;
                if (data.yaoyiyao_info && JSON.parse(data.yaoyiyao_info)) {
                    var info = JSON.parse(data.yaoyiyao_info);
                    GameData_1.default.shakeTimes = +info.chances;
                    var isMonth = new Date(+info.lastBuyTime * 1e3).getMonth() == new Date(serverTime).getMonth();
                    var isDate = new Date(+info.lastBuyTime * 1e3).getDate() == new Date(serverTime).getDate();
                    GameData_1.default.isShaked = isMonth && isDate;
                }
                if (data.yueka_info && JSON.parse(data.yueka_info)) {
                    var info = JSON.parse(data.yueka_info);
                    GameData_1.default.monthEndTime = +info.effectEndTime;
                    GlobalFunc_1.default.setMonthTime();
                    var isDate = new Date(+info.lastGetTime * 1e3).getDate() == new Date(serverTime).getDate();
                    var isMonth = new Date(+info.lastGetTime * 1e3).getMonth() == new Date(serverTime).getMonth();
                    GameData_1.default.isMonthToday = GameData_1.default.monthEndDay > 0 && isMonth && isDate;
                }
                if (data.tehui_package_info && JSON.parse(data.tehui_package_info)) {
                    var info = JSON.parse(data.tehui_package_info);
                    GameData_1.default.tehuiState1 = +info["18"];
                    GameData_1.default.tehuiState2 = +info["30"];
                }
            };
            WxLoadingScene.prototype.initEvent = function() {
                var _this = this;
                EventDis_1.default.addEvntListener("remove_loading", this, function() {
                    GlobalFunc_1.default.log("登录完成，进入大厅，去除遮罩层");
                    _this.destroy();
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.GATE_LOGIN_SUC_NOTICE, this, this.loginCB);
                EventDis_1.default.addEvntListener("switchSteps", this, function(step) {
                    _this.loadStep = step[0];
                });
            };
            WxLoadingScene.prototype.loadingFunction = function() {
                var _this = this;
                this.isQuickDoing ? this.loadingNum += 10 : this.loadingNum++;
                var tmpNum = this.loadingNum;
                if (this.loadingNum > 99) {
                    this.progressLoading.value = .99;
                    tmpNum = 99;
                } else this.progressLoading.value = this.loadingNum / 100;
                var curStep = this.loadStep;
                var tip = this.loadingTips[curStep] || "正在载入中";
                this.textLoading.text = tip + tmpNum + "%";
                if (this.isShowBtn) {
                    GlobalFunc_1.default.log("显示登录按钮,进度条消失");
                    this.isShowBtn = false;
                    this.showProcess(false);
                    this.progressLoading.value = 0;
                    this.textLoading.text = "";
                    this.textLoadingNum.text = "";
                    this.showFirstButton();
                    Laya.timer.clear(this, this.loadingFunction);
                    return;
                }
                if (!this.isQuickDoing && (GameData_1.default.resLoadStep == 2 || PlayerData_1.default.guideStep != 0 && GameData_1.default.resLoadStep >= 1) && this.isLoginOver) this.quickLoad(true);
                if (this.loadingNum >= 100 && this.isQuickDoing && this.isLoginOver && (GameData_1.default.resLoadStep == 2 || PlayerData_1.default.guideStep != 0 && GameData_1.default.resLoadStep >= 1)) if (!GlobalFunc_1.default.isInNewUserRoom()) {
                    Laya.timer.clear(this, this.loadingFunction);
                    GlobalFunc_1.default.remoteLog("9.2 连接和资源ok,老用户进入大厅");
                    this.enterFirstScene();
                } else {
                    console.log("新手来了....");
                    GlobalFunc_1.default.cacheFishFrames(true);
                    FishLineData_1.default.getNewUserFishLines();
                    if (this.enterRoomOk) setTimeout(function() {
                        SceneM_1.default.replaceScene("FishScene", null, 500);
                        GlobalFunc_1.default.remoteLog("9.1 连接和资源ok,进入新手渔场");
                        GlobalFunc_1.default.log("新手进入渔场1");
                        Laya.timer.clear(_this, _this.loadingFunction);
                    }, 500); else {
                        EventDis_1.default.addEvntListener(GlobalVar_1.default.ENTER_ROOM_SUCCESS, this, function() {
                            _this.enterRoomOk = true;
                            setTimeout(function() {
                                SceneM_1.default.replaceScene("FishScene", null, 500);
                                GlobalFunc_1.default.remoteLog("9.1 连接和资源ok,进入新手渔场");
                                GlobalFunc_1.default.log("新手进入渔场2");
                                Laya.timer.clear(_this, _this.loadingFunction);
                            }, 500);
                        });
                        NetManager_1.default.reqEnterRoom({
                            room_type: 0,
                            enter: true
                        });
                    }
                }
            };
            WxLoadingScene.prototype.enterFirstScene = function() {
                GlobalFunc_1.default.log("非新手进入大厅");
                Laya.timer.clear(this, this.loadingFunction);
                SceneM_1.default.replaceScene("FirstHallScene");
            };
            WxLoadingScene.prototype.beginNewLoadingWithStep = function(step) {
                if (step === void 0) step = 0;
                this.loadStep = step;
                this.loadingNum = 0;
                this.textLoading.text = "";
                this.progressLoading.value = 0;
                this.quickLoad(false);
            };
            WxLoadingScene.prototype.quickLoad = function(judge) {
                this.showProcess(true);
                this.isQuickDoing = judge;
                Laya.timer.clear(this, this.loadingFunction);
                Laya.timer.loop(judge ? 100 : 350, this, this.loadingFunction);
            };
            WxLoadingScene.prototype.showProcess = function(bool) {
                this.progressLoading.visible = bool;
                this.textLoading.visible = bool;
            };
            WxLoadingScene.prototype.loginCB = function(data) {
                var _this = this;
                GlobalFunc_1.default.log("登录后端成功");
                GlobalFunc_1.default.sendAldNewuser("_7.2 连接网关结束");
                this.initUserInfo(data);
                this.isLoginOver = true;
                GlobalFunc_1.default.remoteLog("8 网关连接成功,等待zip");
                EventDis_1.default.dispatchEvent("switchSteps", [ 10 ]);
                if (GlobalVar_1.default.isNewUserWx) GlobalFunc_1.default.remoteLog("8.1 新用户网关连接成功,等待zip"); else GlobalFunc_1.default.remoteLog("8.2 老用户网关连接成功,等待zip");
                if (GlobalFunc_1.default.isInNewUserRoom()) {
                    this.enterRoomOk = false;
                    EventDis_1.default.addEvntListener(GlobalVar_1.default.ENTER_ROOM_SUCCESS, this, function() {
                        _this.enterRoomOk = true;
                    });
                    NetManager_1.default.reqEnterRoom({
                        room_type: 0,
                        enter: true
                    });
                }
            };
            WxLoadingScene.prototype.checkDownOver = function() {
                if (GameData_1.default.resLoadStep == 0) return;
                Laya.timer.clear(this, this.checkDownOver);
                GlobalFunc_1.default.remoteLog("5 所有用户开始登陆");
                GlobalFunc_1.default.log("资源准备情况：", GameData_1.default.resLoadStep);
            };
            WxLoadingScene.prototype.errorMessageShow = function() {
                if (GlobalVar_1.default.isWx) GlobalFunc_1.default.log("报错退出,当前步骤：", this.loadStep);
            };
            WxLoadingScene.prototype.showFirstButton = function() {
                GlobalFunc_1.default.log("显示登陆按钮");
                var that = this;
                if (this.logButton) {
                    this.logButton.visible = true;
                    return;
                }
                var offLeft = 315, offTop = 240;
                try {
                    var res = wx.getSystemInfoSync();
                    if (res.windowWidth > 0) offLeft = (res.windowWidth - 151) / 2;
                    if (res.windowHeight > 0) offTop = (res.windowHeight + 170) / 2;
                } catch (e) {}
                this.logButton = wx.createUserInfoButton({
                    type: "image",
                    image: "basePic/btn1.png",
                    style: {
                        left: offLeft,
                        top: offTop,
                        width: 151,
                        height: 57,
                        lineHeight: 40,
                        backgroundColor: "#ff0000",
                        color: "#ffffff",
                        textAlign: "center",
                        fontSize: 16,
                        borderRadius: 4
                    }
                });
                this.logButton.onTap(function back(res) {
                    if (GlobalUI_1.default.WxLoadingScene.logButton) {
                        GlobalUI_1.default.WxLoadingScene.logButton.destroy();
                        GlobalUI_1.default.WxLoadingScene.logButton = undefined;
                    }
                    GlobalVar_1.default.isWxGranted = true;
                    GlobalUI_1.default.WxLoadingScene.quickLoad(false);
                    GlobalUI_1.default.WxLoadingScene.showProcess(true);
                    GlobalFunc_1.default.log("授权按钮回调");
                    GlobalFunc_1.default.sendAldNewuser("_6.12 微信请求授权和用户信息2");
                    var getWxCode = function(cb) {
                        wx.login({
                            success: function(res) {
                                GlobalFunc_1.default.log(" 登录code 获取成功 succ:", res.code);
                                cb(res.code);
                            },
                            fail: function(err) {
                                GlobalFunc_1.default.log(" 登录code 获取失败,重新获取:", err);
                                getWxCode(cb);
                            }
                        });
                    };
                    getWxCode(function(code) {
                        GlobalUI_1.default.WxLoadingScene.sendFirstReq(res, code);
                    });
                });
            };
            WxLoadingScene.prototype.sendFirstReq = function(res, code) {
                if (res.rawData == undefined) {
                    GlobalFunc_1.default.log("获取头像信息失败");
                    WxLoginManager_1.default.begin();
                    return;
                }
                var newJson = {};
                newJson.rawData = res.rawData;
                newJson.code = code;
                if (res.rawData) {
                    var jsonData = JSON.parse(res.rawData);
                    GameData_1.default.headImg = jsonData.avatarUrl;
                }
                newJson.signature = res.signature;
                if (!GlobalUI_1.default.WxLoadingScene) GlobalUI_1.default.WxLoadingScene = this;
                var channel = wx.getStorageSync("channelLocal");
                var channel1 = wx.getStorageSync("channelLocal1");
                GlobalFunc_1.default.log("----------------", channel, channel1);
                if (!channel && !channel1) {
                    GlobalFunc_1.default.log("----------------1");
                    channel = "1038";
                } else if (!channel && channel1 && GlobalVar_1.default.needSh) {
                    GlobalFunc_1.default.log("----------------2");
                    GlobalFunc_1.default.sendAld("something wrong");
                    channel = channel1;
                    wx.setStorage({
                        key: "channelLocal",
                        data: channel
                    });
                }
                GlobalFunc_1.default.log("----------------3", channel);
                newJson.channel = channel;
                this.reSendTime = 5;
                if (this.reSendTime-- < 0) {
                    EventDis_1.default.dispatchEvent("reEnterGame");
                    return;
                }
                GlobalFunc_1.default.remoteLog("6.1 新用户请求登录");
                var loginUrl = globalConst_1.default.httpUrl + "?login_type=4&channel=" + GlobalVar_1.default.channelId;
                GlobalFunc_1.default.log("send first logon request:", loginUrl);
                GlobalFunc_1.default.log("code:", newJson.code);
                wx.request({
                    url: loginUrl,
                    method: "GET",
                    data: newJson,
                    success: function(res) {
                        GlobalFunc_1.default.log("first logon request success");
                        GlobalFunc_1.default.log(res);
                        GameData_1.default.serverName = GlobalUI_1.default.WxLoadingScene.serverName;
                        GlobalUI_1.default.WxLoadingScene.beginNewLoadingWithStep(2);
                        var data = res.data;
                        var innerData = data.login_info;
                        GameData_1.default.setLoginInfo(innerData);
                        GlobalFunc_1.default.log("微信登录成功返回游戏信息，开始连接网关");
                        PlayerData_1.default.initCommodityIsBuy(innerData.shopinfo);
                        GlobalFunc_1.default.remoteLog("6.11 新用户请求登录成功");
                        EventDis_1.default.dispatchEvent("switchSteps", [ 9 ]);
                        NetManager_1.default.startWx();
                        GlobalFunc_1.default.log("授权结束，请求公告..........");
                        GlobalFunc_1.default.sendAldNewuser("_6.2 微信请求授权和用户信息成功");
                    },
                    fail: function(res) {
                        GlobalFunc_1.default.remoteLog("6.12 新用户请求登录失败,重新请求");
                        GlobalFunc_1.default.log("first logon request failed");
                        WxLoginManager_1.default.begin();
                    }
                });
            };
            WxLoadingScene.prototype.destroy = function(destroyChild) {
                if (destroyChild === void 0) destroyChild = true;
                _super.prototype.destroy.call(this);
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
            };
            return WxLoadingScene;
        }(layaMaxUI_1.ui.login.WxLoadingSceneUI);
        exports.WxLoadingScene = WxLoadingScene;
    }, {
        "../../common/SceneM": 19,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/FishLineData": 31,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalUI": 89,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../netWork/WxLoginManager": 102,
        "../../ui/layaMaxUI": 151
    } ],
    142: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var FishLoadScene_1 = require("./FishLoadScene");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var jumpLoadScene = function(_super) {
            __extends(jumpLoadScene, _super);
            function jumpLoadScene() {
                return _super.call(this) || this;
            }
            jumpLoadScene.prototype.initFishLoad = function() {
                this.loadingNum = 1;
                this.textLoadingNum.text = "1%";
                this.progressLoading.value = 1 / 100;
                this.label_version.text = globalConst_1.default.clientVer;
                GlobalFunc_1.default.doLRAdapt({
                    node: this.label_version
                });
                Laya.timer.loop(500, this, this.connectProgrs);
            };
            jumpLoadScene.prototype.initEvent = function() {
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ENTER_ROOM_SUCCESS, this, this.enterRoomOk);
                EventDis_1.default.addEvntListener("remove_fishLoaidng_scene", this, this.destroy);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ENTER_ROOM_FAIL, this, this.destroy);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_FISHRESOK_NOTICE, this, this.fishResOk);
                EventDis_1.default.addEvntListener("load_fish_path_over", this, this.fishLineOk);
            };
            return jumpLoadScene;
        }(FishLoadScene_1.FishLoadingScene);
        exports.jumpLoadScene = jumpLoadScene;
    }, {
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "./FishLoadScene": 139
    } ],
    143: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var BulletNode_1 = require("../../rolesNodes/bulletNodes/BulletNode");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var FishData_1 = require("../../datas/roomData/FishData");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var TrackBulletNode_1 = require("../../rolesNodes/bulletNodes/TrackBulletNode");
        var SceneM_1 = require("../../common/SceneM");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var BattleFunc_1 = require("../../globalConst/BattleFunc");
        var NetManager_1 = require("../../netWork/NetManager");
        var GameData_1 = require("../../datas/hallData/GameData");
        var BulletType;
        (function(BulletType) {
            BulletType[BulletType["bullet_type_normal"] = 0] = "bullet_type_normal";
            BulletType[BulletType["bullet_type_zuantou"] = 1] = "bullet_type_zuantou";
            BulletType[BulletType["bullet_type_hongyuan"] = 2] = "bullet_type_hongyuan";
            BulletType[BulletType["bullet_type_missile"] = 3] = "bullet_type_missile";
            BulletType[BulletType["bullet_type_qinglongpao"] = 4] = "bullet_type_qinglongpao";
            BulletType[BulletType["bullet_type_yinlongpao"] = 5] = "bullet_type_yinlongpao";
            BulletType[BulletType["bullet_type_jinlongpao"] = 6] = "bullet_type_jinlongpao";
            BulletType[BulletType["bullet_type_daoDan"] = 10] = "bullet_type_daoDan";
        })(BulletType = exports.BulletType || (exports.BulletType = {}));
        var BulletFactory = function() {
            function BulletFactory() {
                this.bulletNodes = [];
                this.initBullets();
                this.initEvent();
                Laya.timer.loop(globalConst_1.default.autoShootInterval, this, this.updateAutoFire);
            }
            BulletFactory.prototype.destroy = function() {
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
                this.bulletNodes = null;
                this.bulletQueue = null;
            };
            BulletFactory.prototype.initBullets = function() {
                this.bulletSCnt = 0;
                this.bulletIndex = 0;
                this.bulletNum = 0;
                this.bulletNodes = [];
                this.bulletQueue = [];
                this.canFireInterval = true;
                this.initOthersBullet();
            };
            BulletFactory.prototype.initEvent = function() {
                EventDis_1.default.addEvntListener("bulletBoom", this, this.bulletBoom);
                EventDis_1.default.addEvntListener("shoot_notice_broadCast", this, this.recShootMsg);
            };
            BulletFactory.prototype.updateAutoFire = function() {
                if (this.needStopCommonShoot()) return;
                var roomData = BattleData_1.default.roomPlayerData[FishData_1.default.mySeatIndex];
                if (!roomData) {
                    GlobalFunc_1.default.log("没有座位数据");
                    return;
                }
                this.isAutoFire = FishData_1.default.isAutoButtonOn && !this.isSpecialFish(true) || FishData_1.default.isTouching && !this.isSpecialFish(false);
                var ishy = roomData.isHongYun;
                if (!this.isAutoFire || FishData_1.default.isInDaoDan && !ishy) return;
                if (!this.enoughtGoldToFire(true)) {
                    FishData_1.default.isAutoButtonOn && EventDis_1.default.dispatchEvent(GlobalVar_1.default.CHANGE_AUTO_PAO_STATE);
                    return;
                }
                if (!GlobalFunc_1.default.checkVipToFire()) return;
                this.canFireInterval = false;
                Laya.timer.once(globalConst_1.default.autoShootInterval - 100, this, function() {
                    this.canFireInterval = true;
                });
                var myCannon = FishData_1.default.mySeatNode.cannonNode;
                var bullet_id = this.getBulletId();
                var bullet_type = this.getBulletType();
                var data = {
                    bullet_id: bullet_id,
                    bullet_type: bullet_type,
                    rotation_angle: myCannon.gCannonAngle
                };
                NetManager_1.default.reqShoot(data);
                var param = {
                    rotation_angle: myCannon.gCannonAngle,
                    fishUniqId: 0,
                    bullet_type: bullet_type,
                    bullet_id: bullet_id
                };
                this.readyShoot(param);
            };
            BulletFactory.prototype.isSpecialFish = function(isAuto) {
                var playerInfo = BattleData_1.default.roomPlayerData[FishData_1.default.mySeatIndex];
                if (playerInfo.isHwbz || playerInfo.isDial || playerInfo.isZshy || playerInfo.isWlxb || this.hyTimeCanFire(playerInfo, isAuto)) return true;
                return false;
            };
            BulletFactory.prototype.hyTimeCanFire = function(playerInfo, isAuto) {
                if (playerInfo.isHongYun && FishData_1.default.hyCanFire && isAuto) return true;
                return false;
            };
            BulletFactory.prototype.mouseFire = function(angle) {
                var _this = this;
                if (!this.canFireInterval || this.isBulletReachMax()) return;
                this.canFireInterval = false;
                Laya.timer.once(globalConst_1.default.autoShootInterval, this, function() {
                    _this.canFireInterval = true;
                });
                var bullet_type = this.getBulletType();
                var bullet_id = this.getBulletId();
                var data = {
                    bullet_id: bullet_id,
                    bullet_type: bullet_type,
                    rotation_angle: angle
                };
                NetManager_1.default.reqShoot(data);
                var param = {
                    rotation_angle: angle,
                    fishUniqId: 0,
                    bullet_type: bullet_type,
                    bullet_id: bullet_id
                };
                this.readyShoot(param);
            };
            BulletFactory.prototype.getBulletType = function() {
                var playerInfo = BattleData_1.default.roomPlayerData[FishData_1.default.mySeatIndex];
                if (playerInfo.isHongYun) return BulletType.bullet_type_hongyuan; else if (playerInfo.isDragonCannon != -1) return playerInfo.isDragonCannon; else return BulletType.bullet_type_normal;
            };
            BulletFactory.prototype.initOthersBullet = function() {
                for (var i = 1; i <= 4; i++) {
                    if (i == FishData_1.default.mySeatIndex) continue;
                    this.bulletQueue[i] = new Array();
                }
                Laya.timer.loop(globalConst_1.default.autoShootInterval, this, this.othersShoot);
            };
            BulletFactory.prototype.othersShoot = function() {
                for (var index = 1; index <= 4; index++) {
                    var bulletQ = this.bulletQueue[index];
                    if (!bulletQ || bulletQ.length == 0) continue;
                    var data = bulletQ[0];
                    if (!data) continue;
                    this.commonShoot(data);
                    this.bulletQueue[index].pop();
                }
            };
            BulletFactory.prototype.recShootMsg = function(data) {
                var bullet_type = data.bullet_type;
                if (bullet_type == BulletType.bullet_type_zuantou) {
                    EventDis_1.default.dispatchEvent("bitBackNotice", data);
                    return;
                }
                var isOnShow = GlobalVar_1.default.isWx ? GameData_1.default.isWxOnshow : Laya.stage.isVisibility;
                if (!isOnShow) return;
                var seatIndex = BattleData_1.default.getUserSeatByUid(data.uid);
                if (!seatIndex) return;
                BattleFunc_1.default.resChangeFunc(seatIndex, data);
                if (seatIndex == FishData_1.default.mySeatIndex) return;
                if ((bullet_type == 0 || bullet_type == 2 || bullet_type >= 4 && bullet_type <= 6) && seatIndex != FishData_1.default.mySeatIndex && this.bulletQueue[seatIndex]) {
                    this.bulletQueue[seatIndex].unshift({
                        uid: data.uid,
                        fishUniqId: data.fish_id,
                        bullet_type: data.bullet_type,
                        bullet_id: data.bullet_id,
                        nowgold: data.gold,
                        rotation_angle: data.rotation_angle,
                        diamond: data.diamond
                    });
                    if (this.bulletQueue[seatIndex].length > 50) {
                        GlobalFunc_1.default.log("别人子弹队列异常，进行重置", seatIndex);
                        this.initOthersBullet();
                    }
                }
                data.fishUniqId && this.commonShoot(data);
            };
            BulletFactory.prototype.readyShoot = function(param) {
                var roomPlayerInfo = BattleData_1.default.getSitInfo(FishData_1.default.mySeatIndex);
                var gold = roomPlayerInfo.gold;
                var costGold = roomPlayerInfo.cur_pao;
                if (roomPlayerInfo.isHongYun || roomPlayerInfo.isDragonCannon != -1) costGold = 0;
                param.seat = FishData_1.default.mySeatIndex;
                param.nowgold = gold - +costGold;
                this.commonShoot(param);
            };
            BulletFactory.prototype.commonShoot = function(param) {
                var fishUniqId = param.fishUniqId || 0;
                var seatIndex = param.seat || BattleData_1.default.getUserSeatByUid(param.uid);
                var seatNode = FishData_1.default.seatNodes[seatIndex];
                var bullet_type = param.bullet_type;
                var bullet_id = param.bullet_id;
                if (!seatNode) return;
                var cannon = seatNode.cannonNode;
                if (!cannon) return;
                if (seatIndex == FishData_1.default.mySeatIndex) PlayerData_1.default.setItemNum(globalConst_1.default.GoldCoinID, param.nowgold);
                if (bullet_type != BulletType.bullet_type_hongyuan) {
                    BattleData_1.default.setSitPlayerInfoByObj(seatIndex, {
                        gold: param.nowgold
                    });
                    param.diamond && BattleData_1.default.setSitPlayerInfoByObj(seatIndex, {
                        diamond: param.diamond
                    });
                }
                var seat = FishData_1.default.seatNodes[seatIndex].seatInfoNode;
                if (!seat || !seat.roomPlayerInfo) return;
                seat.roomPlayerInfo.gold = BattleData_1.default.roomPlayerData[seatIndex].gold;
                seat.roomPlayerInfo.ticket = BattleData_1.default.roomPlayerData[seatIndex].ticket;
                seat.updateGold();
                var angle = param.rotation_angle;
                var ratio1 = FishData_1.default.seatNodes[seatIndex].isSeatFlip ? 1 : -1;
                var ptFrom = new Laya.Point(cannon.x, cannon.y + ratio1 * 30);
                if (fishUniqId > 0) {
                    var fish = FishData_1.default.fishNodesObj[fishUniqId];
                    angle = GlobalFunc_1.default.vecToAngle(ptFrom, GlobalFunc_1.default.changeLockP(fish));
                }
                var params = {
                    angle: angle,
                    ptFrom: ptFrom,
                    bullet_type: bullet_type,
                    bullet_id: bullet_id,
                    seatIndex: seatIndex,
                    fishUniqId: fishUniqId,
                    shootType: 1
                };
                var shootType = 1;
                var rad = GlobalFunc_1.default.angleToRad(angle);
                var hasFlip = FishData_1.default.seatNodes[seatIndex].isSeatFlip;
                var ratio2 = hasFlip ? 1 : -1;
                ptFrom = GlobalFunc_1.default.pAddPos(ptFrom, {
                    x: 115 * Math.cos(rad),
                    y: ratio2 * 115 * Math.sin(rad)
                });
                var bulletIndex = this.getBulletIndex();
                var bltAngle = angle;
                if (hasFlip) bltAngle = -(angle + 180) % 180;
                var data = {
                    bullet_type: bullet_type,
                    bullet_id: bullet_id,
                    seatIndex: seatIndex,
                    fishUniqId: fishUniqId,
                    bulletIndex: bulletIndex,
                    angle: bltAngle
                };
                if (!fishUniqId || fishUniqId == 0) {
                    var bullet = Laya.Pool.getItemByClass("bullet", BulletNode_1.default);
                    bullet.initBullet(data);
                    bullet.pos(ptFrom.x, ptFrom.y);
                    bullet.shootTo();
                } else {
                    var bullet = Laya.Pool.getItemByClass("trackBullet", TrackBulletNode_1.default);
                    bullet.lockFishId = fishUniqId;
                    bullet.pos(ptFrom.x, ptFrom.y);
                    bullet.specialName = shootType == 2 ? "hongyun1" : "";
                    bullet.initBullet(data);
                    bullet.doTrackFire(GlobalFunc_1.default.getFishById(fishUniqId));
                }
                SceneM_1.default.addToLayer(bullet, globalConst_1.default.bulletLayer, ptFrom.x, ptFrom.y);
                if (!this.bulletNodes) return;
                this.bulletNodes[bulletIndex] = bullet;
                this.bulletNum++;
                var seatNode = FishData_1.default.seatNodes[seatIndex];
                if (!seatNode) return;
                var cannon = seatNode.cannonNode;
                if (!cannon) return;
                seatIndex != FishData_1.default.mySeatIndex && cannon.justRotate(angle);
                cannon.justFire(bullet_type);
            };
            BulletFactory.prototype.isBulletReachMax = function() {
                var isMax = this.getBulletNum() >= globalConst_1.default.maxBulletNum;
                isMax && GlobalFunc_1.default.globalTip("当前发射子弹过多,请耐心等待");
                return isMax;
            };
            BulletFactory.prototype.getBulletNum = function() {
                var num = 0;
                this.bulletNodes.forEach(function(element) {
                    num++;
                });
                return num;
            };
            BulletFactory.prototype.getBulletId = function() {
                return FishData_1.default.mySeatIndex * 1e4 + this.bulletSCnt++;
            };
            BulletFactory.prototype.getBulletIndex = function() {
                return this.bulletIndex++;
            };
            BulletFactory.prototype.needStopCommonShoot = function() {
                return FishData_1.default.isSelfHyTime && !FishData_1.default.hyCanFire || FishData_1.default.isSelfBitTime || !this.canFireInterval || this.isBulletReachMax();
            };
            BulletFactory.prototype.bulletBoom = function(bulletIndex) {
                this.bulletNum--;
                if (this.bulletNodes) delete this.bulletNodes[bulletIndex];
            };
            BulletFactory.prototype.enoughtGoldToFire = function(isShowShop) {
                if (isShowShop === void 0) isShowShop = false;
                var index = FishData_1.default.mySeatIndex;
                var sitInfo = BattleData_1.default.getSitInfo(index);
                var seat = FishData_1.default.mySeatNode;
                if (!sitInfo) return false;
                var myGold = PlayerData_1.default.getItemNum(globalConst_1.default.GoldCoinID);
                var roomData = BattleData_1.default.roomData[BattleData_1.default.room_type].Guns;
                var nowIndex = roomData.indexOf(sitInfo.cur_pao + "");
                if (myGold >= sitInfo.cur_pao || sitInfo.isDragonCannon != -1) return true; else {
                    for (var i = 0; i < nowIndex; i++) if (myGold >= +roomData[nowIndex - i - 1]) {
                        seat.numPanel.changePaoBei(-i - 1);
                        return false;
                    }
                    var isNoBullet = !GameData_1.default.isHelping && this.bulletNodes.filter(function(node) {
                        return node.seatIndex == index;
                    }).length == 0;
                    if (isNoBullet) {
                        BattleFunc_1.default.checkFishPop();
                        FishData_1.default.isTouching = false;
                        if (FishData_1.default.popindex > 4 && PlayerData_1.default.left_count == 0) FishData_1.default.popindex == 4;
                    }
                    return false;
                }
            };
            return BulletFactory;
        }();
        exports.default = BulletFactory;
    }, {
        "../../common/SceneM": 19,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/BattleFunc": 81,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../rolesNodes/bulletNodes/BulletNode": 104,
        "../../rolesNodes/bulletNodes/TrackBulletNode": 105
    } ],
    144: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var FishFactory_1 = require("./FishFactory");
        var FishData_1 = require("../../datas/roomData/FishData");
        var CutFishScene = function(_super) {
            __extends(CutFishScene, _super);
            function CutFishScene() {
                var _this = _super.call(this) || this;
                _this._effectiveFishes = [];
                _this._isInUpdate = false;
                _this._hitNum = 0;
                _this.initScene();
                _this.initEvent();
                return _this;
            }
            CutFishScene.prototype.destroy = function() {};
            CutFishScene.prototype.initScene = function() {
                this.img_bg.skin = "room_1/pangxieBoss0.jpg";
                this._cutHeadImg = new Laya.Image("battle/img_battle_0.png");
                this._cutHeadImg.anchorY = .5;
                SceneM_1.default.addToLayer(this._cutHeadImg, globalConst_1.default.effectLayer);
                GlobalFunc_1.default.cacheFishFrames();
                this.fishFct = new FishFactory_1.FishFactory();
                Laya.timer.once(500, this, this.switchTeam);
                Laya.timer.frameLoop(1, this, this.updateHit);
            };
            CutFishScene.prototype.initEvent = function() {
                Laya.timer.once(1e3, EventDis_1.default, EventDis_1.default.dispatchEvent, [ "remove_loading" ], false);
                Laya.timer.once(30 * 1e3, this, this.noMoveTip);
                this.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
                Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.onMouseMove);
                Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
                Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.onMouseOut);
                Laya.stage.on(Laya.Event.MOUSE_OVER, this, this.onMouseOver);
            };
            CutFishScene.prototype.switchTeam = function() {
                this.fishFct.firstLoad();
                this.fishFct.cur_scene_id = 41;
            };
            CutFishScene.prototype.onMouseDown = function(e) {
                if (!this._touchId) this._touchId = e.touchId; else if (this._touchId = e.touchId) return;
                this._isDown = true;
                this._cutHeadImg.pos(Laya.stage.mouseX, Laya.stage.mouseY);
                this._cutHeadImg.visible = true;
                this._cutHeadImg.rotation = -115;
                this.clearnoMoveTip();
            };
            CutFishScene.prototype.onMouseMove = function(e) {
                if (!this._isDown || this._touchId != e.touchId) return;
                this.updateTrail();
            };
            CutFishScene.prototype.onMouseUp = function(e) {
                if (this._touchId != e.touchId) return;
                this._isDown = false;
                this._touchId = null;
                this._lastX = this._lastY = null;
                this._cutHeadImg.visible = false;
                Laya.timer.once(30 * 1e3, this, this.noMoveTip);
                this.clearTiemr();
            };
            CutFishScene.prototype.onMouseOut = function(e) {
                this.onMouseUp(e);
            };
            CutFishScene.prototype.onMouseOver = function(e) {
                this.onMouseUp(e);
            };
            CutFishScene.prototype.updateHit = function() {
                if (!this._isDown) return;
                var fishes = FishData_1.default.fishNodesObj;
                for (var fishIndex in fishes) {
                    var fish = fishes[fishIndex];
                    if (!fish.isInScreen || fish.isInHitting) continue;
                    var ret = fish.body.hitTestPoint(Laya.stage.mouseX, Laya.stage.mouseY);
                    if (ret) {
                        !this._isInUpdate && this.beginTimer();
                        fish.isInHitting = true;
                        this.fishBeCutted(fish);
                        var time = 250;
                        Laya.timer.once(time, fish, function(fish) {
                            fish.isInHitting = false;
                        }, [ fish ]);
                    }
                }
            };
            CutFishScene.prototype.fishBeCutted = function(fish) {
                this._effectiveFishes.push(fish);
                this.updateHitNum();
                fish.onCaught(true);
                this.cutEffect(Laya.stage.mouseX, Laya.stage.mouseY);
            };
            CutFishScene.prototype.beginTimer = function() {
                this._isInUpdate = true;
                var time = 250;
                Laya.timer.loop(time, this, this.updateSelect);
            };
            CutFishScene.prototype.clearTiemr = function() {
                this._isInUpdate = false;
                this.updateSelect();
                Laya.timer.clear(this, this.updateSelect);
            };
            CutFishScene.prototype.updateSelect = function() {
                if (this._effectiveFishes.length > 5) {
                    GlobalFunc_1.default.log("鱼的数量超过5条，进行筛选");
                    var tmpArr = [];
                    for (var i = 0; i < 5; ++i) {
                        var rand = GlobalFunc_1.default.getRandom(0, this._effectiveFishes.length) - 1;
                        tmpArr.push(this._effectiveFishes[rand]);
                        this._effectiveFishes.splice(rand, 1);
                    }
                    this._effectiveFishes = tmpArr;
                }
                this._effectiveFishes.length > 0 && this.sendFishesToServer(this._effectiveFishes);
                this._effectiveFishes = [];
            };
            CutFishScene.prototype.sendFishesToServer = function(fishes) {
                GlobalFunc_1.default.log("xxxxxxx", fishes.length);
            };
            CutFishScene.prototype.updateTrail = function() {
                if (!this._lastX) {
                    this._lastX = Laya.stage.mouseX;
                    this._lastY = Laya.stage.mouseY;
                    return;
                }
                var mx = Laya.stage.mouseX;
                var my = Laya.stage.mouseY;
                var img = Laya.Pool.getItemByClass("img", Laya.Image);
                img.skin = "battle/img_battle_1.png";
                img.anchorX = img.anchorY = .5;
                img.width = GlobalFunc_1.default.pGetDistance({
                    x: mx,
                    y: my
                }, {
                    x: this._lastX,
                    y: this._lastY
                }) + 6;
                var x0 = (mx + this._lastX) / 2;
                var y0 = (my + this._lastY) / 2;
                img.pos(x0, y0);
                img.rotation = GlobalFunc_1.default.radToangle(Math.atan2(my - this._lastY, mx - this._lastX));
                SceneM_1.default.addToLayer(img, globalConst_1.default.effectLayer);
                this._cutHeadImg.pos(mx, my);
                this._cutHeadImg.rotation = img.rotation;
                Laya.Tween.to(img, {
                    height: 0
                }, 500, null, Laya.Handler.create(this, function() {
                    img.removeSelf();
                    img.destroy();
                }));
                this._lastX = mx;
                this._lastY = my;
            };
            CutFishScene.prototype.updateHitNum = function() {
                var nowTime = GlobalFunc_1.default.getClientTime();
                if (nowTime - this._lastHitTime < 2e3) this._hitNum++; else this._hitNum = 1;
                this._lastHitTime = nowTime;
            };
            CutFishScene.prototype.cutEffect = function(x, y) {};
            CutFishScene.prototype.seatEffect = function(seatIndex) {};
            CutFishScene.prototype.noMoveTip = function() {
                GlobalFunc_1.default.log("30秒没有操作");
            };
            CutFishScene.prototype.clearnoMoveTip = function() {
                GlobalFunc_1.default.log("清除noMoveTip");
                Laya.timer.clear(this, this.noMoveTip);
            };
            CutFishScene.prototype.timeOutTip = function() {
                GlobalFunc_1.default.log("timeout, 提出房间");
            };
            return CutFishScene;
        }(layaMaxUI_1.ui.roomScene.FishSceneUI);
        exports.default = CutFishScene;
    }, {
        "../../common/SceneM": 19,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/globalConst": 97,
        "../../ui/layaMaxUI": 151,
        "./FishFactory": 147
    } ],
    145: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var FishData_1 = require("../../datas/roomData/FishData");
        var EventDis_1 = require("../../globalConst/EventDis");
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var FishLineData_1 = require("../../datas/roomData/FishLineData");
        var FishNode_1 = require("../../rolesNodes/fishNodes/FishNode");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var MainFunc_1 = require("../../login/MainFunc");
        var EditerScene = function(_super) {
            __extends(EditerScene, _super);
            function EditerScene() {
                var _this = _super.call(this) || this;
                _this.pauseTime = 0;
                _this.initScene();
                _this.initEvent();
                return _this;
            }
            EditerScene.prototype.initScene = function() {
                this.sceneStartTime = GlobalFunc_1.default.getClientTime();
                this.TeamInfo = {};
                FishData_1.default.fishNodesObj = {};
                this.box_editerBg.zOrder = 99999999;
                this.input_sceneID.text = "";
                this.input_startTime.text = "0";
                FishData_1.default.isInEditer = true;
                this.loadFishImg();
                this.loadFishLine();
            };
            EditerScene.prototype.initEvent = function() {
                Laya.timer.once(100, EventDis_1.default, EventDis_1.default.dispatchEvent, [ "remove_loading" ]);
                EventDis_1.default.addEvntListener("fishDead", this, this.handleDeadFish);
                this.btn_load.on(Laya.Event.CLICK, this, this.reloadFish);
                this.btn_refresh.on(Laya.Event.CLICK, this, this.reload);
                this.btn_showFmt.on(Laya.Event.CLICK, this, this.showFmt);
                this.btn_x1.on(Laya.Event.CLICK, this, this.changeSpeed, [ 1 ]);
                this.btn_x2.on(Laya.Event.CLICK, this, this.changeSpeed, [ 2 ]);
                this.btn_x4.on(Laya.Event.CLICK, this, this.changeSpeed, [ 4 ]);
                this.btn_crab1.on(Laya.Event.CLICK, this, this.crabReady, [ 1 ]);
                this.btn_crab2.on(Laya.Event.CLICK, this, this.crabReady, [ 2 ]);
                this.btn_crab.on(Laya.Event.CLICK, this, this.crabReady, [ 3 ]);
                FishLineData_1.default.getFishLines();
            };
            EditerScene.prototype.showFmt = function() {};
            EditerScene.prototype.changeSpeed = function() {};
            EditerScene.prototype.crabReady = function() {};
            EditerScene.prototype.reload = function() {
                EventDis_1.default.dispatchEvent("leave_room");
                Laya.timer.clearAll(this);
                this.TeamInfo = {};
                this.clearFish();
                this.updateFishNum();
                ConfigerHelper_1.default._configCachedFile = {};
                this.clearConfigRes();
                this.reloadJson();
            };
            EditerScene.prototype.reloadJson = function() {
                Laya.loader.load([ {
                    url: GlobalVar_1.default.reUrl + "config/Formations.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/FishTeam.json",
                    type: Laya.Loader.JSON
                }, {
                    url: GlobalVar_1.default.reUrl + "config/fish.json",
                    type: Laya.Loader.JSON
                } ]);
            };
            EditerScene.prototype.clearConfigRes = function() {
                Laya.loader.clearRes("res/config/FishTeam.json");
                Laya.loader.clearRes("res/config/Formations.json");
            };
            EditerScene.prototype.reloadFish = function() {
                EventDis_1.default.dispatchEvent("leave_room");
                Laya.timer.clearAll(this);
                Laya.timer.resume();
                this.sceneStartTime = GlobalFunc_1.default.getClientTime();
                this.cur_scene_id = this.input_sceneID.text;
                this.startTime = Number(this.input_startTime.text) * 1e3 || 0;
                this.sceneStartTime -= this.startTime;
                this.pauseTime = 0;
                if (!this.cur_scene_id) return;
                this.TeamInfo = {};
                this.clearFish();
                this._lastLoadOneTime = this._lastLoadTeamTime = this._totalDelay = this._lastTeamDelay = undefined;
                this.firstLoad();
            };
            EditerScene.prototype.updateFishSceneTime = function() {
                var nowTime = GlobalFunc_1.default.getClientTime();
                this.label_nowTime.text = "当前时间：" + Math.floor((nowTime - this.sceneStartTime - this.pauseTime) / 1e3);
            };
            EditerScene.prototype.updateFishNum = function() {
                var num1 = 0;
                var num2 = 0;
                for (var i in FishData_1.default.fishNodesObj) {
                    var fish = FishData_1.default.fishNodesObj[i];
                    if (fish.isInScreen) num2++;
                    num1++;
                }
                this.label_fishNum1.text = num1.toString();
                this.label_fishNum2.text = num2.toString();
            };
            EditerScene.prototype.handleDeadFish = function(fishUniqId) {
                delete FishData_1.default.fishNodesObj[fishUniqId];
            };
            EditerScene.prototype.clearFish = function() {
                for (var index in FishData_1.default.fishNodesObj) {
                    var fish = FishData_1.default.fishNodesObj[index];
                    fish.destroy();
                }
                FishData_1.default.fishNodesObj = {};
            };
            EditerScene.prototype.firstLoad = function() {
                Laya.timer.clear(this, this.loadOneTeam);
                var scenePath = "config/FishTeam.json";
                var json = ConfigerHelper_1.default.getFileData(scenePath);
                if (!json) return;
                this.fishTeamInfos = json[this.cur_scene_id];
                this.fishTeamInfos.sort(GlobalFunc_1.default.compare("TeamDelay"));
                for (var i = 0; i < this.fishTeamInfos.length; ++i) {
                    var teamInfo = this.fishTeamInfos[i];
                    var teamDelay = teamInfo.TeamDelay * 1e3;
                    this._teamIndex = i;
                    if (teamDelay < this.startTime) {
                        var formationsIds = teamInfo.Formation;
                        var formationsIdArr = formationsIds.split(";");
                        for (var j = 0; j < formationsIdArr.length; ++j) {
                            var formationId = Number(formationsIdArr[j]);
                            this.loadFormation(formationId, teamInfo, this.startTime - teamDelay);
                        }
                    } else if (teamDelay >= this.startTime) {
                        this._lastTeamDelay = this.startTime;
                        this._lastLoadTeamTime = GlobalFunc_1.default.getClientTime();
                        this.loadAllTeams();
                        break;
                    }
                }
            };
            EditerScene.prototype.loadAllTeams = function() {
                if (this._teamIndex >= this.fishTeamInfos.length) return;
                var teamInfo = this.fishTeamInfos[this._teamIndex];
                var teamDelay = teamInfo.TeamDelay * 1e3;
                var delta = this._lastLoadOneTime - this._lastLoadTeamTime - this._totalDelay || 0;
                this._totalDelay = teamDelay - this._lastTeamDelay - delta;
                this._lastTeamDelay = teamDelay;
                this._lastLoadTeamTime = GlobalFunc_1.default.getClientTime();
                Laya.timer.once(this._totalDelay, this, this.loadOneTeam);
            };
            EditerScene.prototype.loadOneTeam = function(startDiff) {
                if (startDiff === void 0) startDiff = 0;
                var teamInfo = this.fishTeamInfos[this._teamIndex];
                var formationsIds = teamInfo.Formation;
                var formationsIdArr = formationsIds.split(";");
                if (GlobalVar_1.default.isOpenTeamLog) GlobalFunc_1.default.log("start fishteam withDiff :", teamInfo.TeamID, startDiff);
                for (var j = 0; j < formationsIdArr.length; ++j) {
                    var formationId = Number(formationsIdArr[j]);
                    if (!formationId) continue;
                    this.loadFormation(formationId, teamInfo, startDiff);
                }
                this._teamIndex++;
                this._lastLoadOneTime = GlobalFunc_1.default.getClientTime();
                this.loadAllTeams();
            };
            EditerScene.prototype.loadFormation = function(formationId, teamInfo, startDiff) {
                var formationFile = ConfigerHelper_1.default.getFileData("config/Formations.json");
                if (!formationFile) return;
                if (GlobalVar_1.default.isOpenTeamLog) GlobalFunc_1.default.log("start formation :", formationId);
                var formations = formationFile[formationId];
                if (!formations) {
                    GlobalFunc_1.default.log("can not find this formation :", formationId);
                    return;
                }
                for (var i = 0; i < formations.length; ++i) {
                    var oneFishInfo = formations[i];
                    var indexDelay = Number(oneFishInfo.IndexDelay) * 1e3;
                    var lineId = oneFishInfo.PathID;
                    var fishPath = "config/fishPaths/" + lineId + ".json";
                    var lineData = ConfigerHelper_1.default.getFileData(fishPath);
                    if (!lineData) continue;
                    FishLineData_1.default.fishLineObj[lineId] = lineData;
                    var fishUniqId = teamInfo.TeamID + "_" + formationId + "_" + oneFishInfo.FormationIndex;
                    var fishNode = Laya.Pool.getItemByClass("fishNode", FishNode_1.default);
                    var param = {
                        fishUniqId: fishUniqId,
                        oneFishInfo: oneFishInfo,
                        lineSpeed: teamInfo.TeamSpeed,
                        startDiff: startDiff,
                        indexDelay: indexDelay
                    };
                    fishNode.initFish(param);
                }
            };
            EditerScene.prototype.pauseFishLoad = function() {
                if (Laya.timer.scale == 0) return;
                this.pauseInterval = GlobalFunc_1.default.getClientTime();
                Laya.timer.pause();
            };
            EditerScene.prototype.resumeFishLoad = function() {
                if (Laya.timer.scale == 1) return;
                this.resumeInterval = GlobalFunc_1.default.getClientTime();
                this.pauseTime += this.resumeInterval - this.pauseInterval;
                Laya.timer.resume();
            };
            EditerScene.prototype.loadFishImg = function() {
                Laya.loader.load(MainFunc_1.default.getLoadPath2(), new Laya.Handler(GlobalFunc_1.default, GlobalFunc_1.default.cacheFishFrames, [ false ]));
            };
            EditerScene.prototype.loadFishLine = function() {
                FishLineData_1.default.getFishLines();
            };
            return EditerScene;
        }(layaMaxUI_1.ui.roomScene.EditerSceneUI);
        exports.default = EditerScene;
    }, {
        "../../datas/roomData/FishData": 30,
        "../../datas/roomData/FishLineData": 31,
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../login/MainFunc": 99,
        "../../rolesNodes/fishNodes/FishNode": 115,
        "../../ui/layaMaxUI": 151
    } ],
    146: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var GameData_1 = require("../../datas/hallData/GameData");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var FishData_1 = require("../../datas/roomData/FishData");
        var globalConst_1 = require("../../globalConst/globalConst");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var DragonCannonNode_1 = require("../../rolesNodes/fishNodes/DragonCannonNode");
        var DialogManager_1 = require("../../common/DialogManager");
        var SceneM_1 = require("../../common/SceneM");
        var RoomJackpotNode_1 = require("../../rolesNodes/otherNodes/RoomJackpotNode");
        var GuideManager_1 = require("../../common/GuideManager");
        var RoomHelpNode_1 = require("../../rolesNodes/otherNodes/RoomHelpNode");
        var OnOffManager_1 = require("../../globalConst/OnOffManager");
        var TimeLineManager_1 = require("../../globalConst/TimeLineManager");
        var RewardDialog_1 = require("../../dialog/hallDlg/RewardDialog");
        var BombView_1 = require("../../common/BombView");
        var GlobalUI_1 = require("../../globalConst/GlobalUI");
        var CountDownNode_1 = require("../../rolesNodes/otherNodes/CountDownNode");
        var WarningMessage_1 = require("../../common/WarningMessage");
        var GiftShakeDlg_1 = require("../../gift/GiftShakeDlg");
        var GiftMrDlg_1 = require("../../gift/GiftMrDlg");
        var NetManager_1 = require("../../netWork/NetManager");
        var ExitRoomDlg_1 = require("../../dialog/roomDlg/ExitRoomDlg");
        var FishBtnLayer = function(_super) {
            __extends(FishBtnLayer, _super);
            function FishBtnLayer(scene) {
                var _this = _super.call(this) || this;
                _this.itemId = [ "7", "8", "9" ];
                _this.isUnLock = [ false, false, false ];
                _this.isHasSkill = [ false, false, false ];
                _this.isSkillCd = [ false, false, false ];
                _this.skillName = [ "锁定", "冰冻", "狂暴" ];
                _this.selfSkillCd = [ 0, 0, 0 ];
                _this.skillOpenVip = 0;
                _this.skillFreeVip = [ 0, 0 ];
                _this.skillCost = [ 0, 0, 0 ];
                _this.masks = [];
                _this.isSelfFreeze = false;
                _this.isDraganCanOn = false;
                _this.draganCanIsOn = false;
                _this.isBulletOn = false;
                _this.bombIds = [ 11, 12, 13, 14 ];
                _this.menuFlag = false;
                _this.selectCount = 0;
                _this.isFirstShow = false;
                _this.exitRoomFlag = true;
                _this.isForce = true;
                _this.vbox1 = [];
                _this.isMenuShow = false;
                _this.fishScene = scene;
                for (var i = 0; i < _this.boxRight._children.length; i++) _this.vbox1.push(_this.boxRight._children[i]);
                _this.btnShake.visible = OnOffManager_1.default.isShake && !GlobalFunc_1.default.isIos();
                _this.btnTomorrow.visible = PlayerData_1.default.checkTGift();
                _this.btnSp.visible = PlayerData_1.default.checkSpGift();
                _this.boxDragon.visible = OnOffManager_1.default.isLongPaoOn;
                _this.boxBullet.visible = OnOffManager_1.default.isBullet && BattleData_1.default.room_type > 0;
                _this.boxRight.visible = BattleData_1.default.room_type > 0;
                if (BattleData_1.default.room_type == 0) {
                    _this.box_left.visible = false;
                    _this.btnMenu.visible = false;
                }
                _this.getSkillData();
                _this.btnShake.on(Laya.Event.CLICK, _this, _this.doShake);
                _this.img_close.on(Laya.Event.CLICK, _this, _this.openBomb);
                _this.btnCancel.on(Laya.Event.CLICK, _this, function() {
                    _this.boxSelect.visible = false;
                    _this.imgSel.visible = false;
                    _this.aniSelect.stop();
                });
                _this.btnShoot.on(Laya.Event.CLICK, _this, function() {
                    if (+_this.lblBombCount.text > 0) {
                        if (FishData_1.default.isSelfHyTime || FishData_1.default.isSelfBitTime) {
                            new WarningMessage_1.WarningMessage("特色鱼期间无法使用导弹");
                            _this.openBomb();
                            return;
                        }
                        var seat = FishData_1.default.mySeatNode.numPanel;
                        seat.btn_plus.visible = seat.btn_reduce.visible = seat.text_paobei.visible = false;
                        _this.boxSelect.visible = false;
                        _this.startBomb();
                    } else new WarningMessage_1.WarningMessage("还未选择导弹发射数量哦");
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.REFRESH_SKILL_LIST, _this, _this.updateLstData);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.HY_CHANGE, _this, _this.hyChange);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.LAST_BULLET_VIEW_OPEN, _this, _this.openLastBulletView);
                EventDis_1.default.addEvntListener("add_daodan_num", _this, _this.updateDaodan);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_CHANGE_DRAGON_CANNON_START, _this, _this.startDragonCannon);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_CHANGE_DRAGON_CANNON_END, _this, _this.stopDragonCannon);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.CLOSE_FISH_SCENE_VIEW, _this, _this.closeFishSceneView);
                EventDis_1.default.addEvntListener("GiftSc", _this, function() {
                    _this.btnRecharge.visible = false;
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.TOMORROW_GOT, _this, function() {
                    !_this.draganCanIsOn && _this.updateDragonCanNum();
                });
                var img = new Laya.Image();
                img.skin = "room_all/freeze.png";
                img.pivot(.5, .5);
                img.width = Laya.stage.width * 2.5;
                img.height = Laya.stage.height * 2.5;
                img.visible = false;
                SceneM_1.default.addToMiddLayer(img, globalConst_1.default.freezeLayer);
                _this.playerData = BattleData_1.default.roomPlayerData;
                _this.helpView = new RoomHelpNode_1.default();
                _this.addChild(_this.helpView);
                if (BattleData_1.default.roomData[BattleData_1.default.room_type].isPool != "0" && OnOffManager_1.default.isJackPotOn) {
                    _this.jackpotPool = new RoomJackpotNode_1.default(BattleData_1.default.room_type);
                    _this.addChild(_this.jackpotPool);
                }
                GlobalFunc_1.default.doLRAdapt({
                    node: _this.btnExit
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: _this.btnMap
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: _this.btnSet
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: _this.btnMenu
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: _this.imgBg
                });
                if (Laya.stage.width / Laya.stage.height > 1.9) GlobalFunc_1.default.adaptLiuHai(_this.boxRight, true); else GlobalFunc_1.default.doLRAdapt({
                    node: _this.boxRight,
                    isRight: true
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: _this.imgLeft
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: _this.imgRight,
                    isRight: true
                });
                if (PlayerData_1.default.guideStep == 0) if (Laya.stage.width / Laya.stage.height > 1.9) GlobalFunc_1.default.adaptLiuHai(_this.box_left); else GlobalFunc_1.default.doLRAdapt({
                    node: _this.box_left
                });
                GlobalFunc_1.default.doLRAdapt({
                    node: _this.helpView
                });
                _this.updateView();
                _this.btnOnMouse();
                EventDis_1.default.addEvntListener("bombReceive", _this, _this.playBomb);
                EventDis_1.default.addEvntListener("ticket_fish", _this, _this.doLockGuide);
                EventDis_1.default.addEvntListener("ticket_fish", _this, _this.doFreezeGuide);
                EventDis_1.default.addEvntListener("guide_dragon", _this, _this.doDragonGuide);
                EventDis_1.default.addEvntListener("guide_bullet", _this, _this.doBulletGuide);
                EventDis_1.default.addEvntListener("shakeTimeOut", _this, function() {
                    _this.imgShakeRed.visible = PlayerData_1.default.checkShake();
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.YAO_CHANGE, _this, function() {
                    _this.imgShakeRed.visible = PlayerData_1.default.checkShake();
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.BOMB_FIRE, _this, _this.updateBomb);
                EventDis_1.default.addEvntListener(GlobalVar_1.default.HY_CHANGE, _this, _this.hyChange);
                _this.aniOnEvent();
                _this.btnExit.mouseEnabled = _this.btnMap.mouseEnabled = _this.btnSet.mouseEnabled = false;
                EventDis_1.default.addEvntListener("paySuccess", _this, function(data) {
                    GlobalFunc_1.default.log("充值奖励显示");
                    var rewardDlg = new RewardDialog_1.default(data.items);
                    rewardDlg.isFishScene = true;
                    rewardDlg.init(null, null);
                    _this.updateDaodan();
                    SceneM_1.default.addToMiddLayer(rewardDlg, globalConst_1.default.dialogLayer);
                    _this.imgShakeRed.visible = PlayerData_1.default.checkShake();
                });
                EventDis_1.default.addEvntListener("payGiftChange", _this, function(data) {
                    _this.btnRecharge.visible = !GameData_1.default.isFirstRecharge;
                    _this.btnSp.visible = PlayerData_1.default.checkSpGift();
                    GlobalFunc_1.default.setReset(true, _this.boxRight, _this.vbox1);
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.TOMORROW_GOT, _this, function(data) {
                    _this.btnTomorrow.visible = false;
                    var dlg = new RewardDialog_1.default(data);
                    dlg.init(null, null);
                    GlobalFunc_1.default.setReset(true, _this.boxRight, _this.vbox1);
                    SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.TOMORROW_SEND, _this, function() {
                    _this.btnTomorrow.visible = true && OnOffManager_1.default.isTomorrom;
                    GlobalFunc_1.default.setReset(true, _this.boxRight, _this.vbox1);
                });
                _this.btnRecharge.visible = !GameData_1.default.isFirstRecharge;
                if (!OnOffManager_1.default.isChargeOn) _this.btnShop.visible = _this.btnRecharge.visible = false;
                _this.btnShop.visible = !!OnOffManager_1.default.isChargeOn;
                _this.imgShakeRed.visible = PlayerData_1.default.checkShake();
                _this.sliderBomb.changeHandler = new Laya.Handler(_this, function() {
                    var value = Math.ceil(_this.sliderBomb.value * .01 * _this.selectCount);
                    if (value == _this.selectCount) {
                        if (_this.sliderBomb.value == 100) _this.lblBombCount.text = value + "";
                    } else {
                        if (_this.isFirstShow) {
                            _this.isFirstShow = false;
                            return;
                        }
                        _this.lblBombCount.text = Math.max(1, Math.ceil(_this.sliderBomb.value * .01 * _this.selectCount)) + "";
                    }
                });
                EventDis_1.default.addEvntListener("today_gold_back", _this, _this.resExitRoom);
                GlobalFunc_1.default.setReset(true, _this.boxRight, _this.vbox1);
                _this.boxRight.x = _this.width - _this.boxRight.width;
                var dragonPos = _this.btn_dragonCan.localToGlobal(new Laya.Point(50, 57));
                PlayerData_1.default.setHallFlyPos(dragonPos, globalConst_1.default.itemFlyRoomDragonCannon);
                return _this;
            }
            FishBtnLayer.prototype.updateDaodan = function() {
                for (var index = 0; index < 4; index++) {
                    var btn = this["btnBullet" + index];
                    var bombId = this.bombIds[index];
                    var label = btn._children[0];
                    label.text = PlayerData_1.default.getItemNum(bombId + "") + "";
                }
            };
            FishBtnLayer.prototype.hyChange = function() {};
            FishBtnLayer.prototype.doLockGuide = function(data) {
                PlayerData_1.default.guideStep == 5 - 1 && Laya.timer.loop(2e3, this, this.checkLockFish, [ data ]);
            };
            FishBtnLayer.prototype.doFreezeGuide = function(fish) {
                PlayerData_1.default.guideStep == 6 - 1 && Laya.timer.loop(2e3, this, this.checkFreeze, [ fish ]);
            };
            FishBtnLayer.prototype.doDragonGuide = function() {
                Laya.timer.once(1e3, this, this.checkGragon);
            };
            FishBtnLayer.prototype.doBulletGuide = function() {
                Laya.timer.once(1e3, this, this.checkBullet);
            };
            FishBtnLayer.prototype.checkBullet = function() {
                var _this = this;
                if (!GuideManager_1.default.guideState[8] && this.isDraganCanOn) {
                    Laya.timer.clear(this, this.checkBullet);
                    var guideInfo = new GuideManager_1.GuideInfo();
                    guideInfo.type = 8;
                    var bullet = this.btn_dragon_0;
                    guideInfo.width = bullet.width;
                    guideInfo.height = bullet.height;
                    var guideData = GuideManager_1.default.getGuideData(guideInfo.type);
                    guideInfo.desc = guideData.desc;
                    guideInfo.isForce = guideData.isForce;
                    var box = this.btn_dragon_0.parent;
                    guideInfo.pos = box.localToGlobal(new Laya.Point(bullet.x - bullet.width / 2, bullet.y - bullet.height / 2));
                    guideInfo.handle = new Laya.Handler(this, function() {
                        _this.sendDragonCannonOpen(0);
                        Laya.timer.once(5e3, _this, function() {
                            GuideManager_1.default.showDragon();
                        });
                    });
                    GuideManager_1.default.initGuide(guideInfo.type, [ guideInfo ]);
                } else Laya.timer.clear(this, this.checkBullet);
            };
            FishBtnLayer.prototype.checkGragon = function() {
                if (!GuideManager_1.default.guideState[8] && !this.isDraganCanOn) {
                    Laya.timer.clear(this, this.checkGragon);
                    var guideInfo = new GuideManager_1.GuideInfo();
                    guideInfo.type = 7;
                    var dragon = this.boxDragon._children[4];
                    guideInfo.width = this.btn_dragonCan.width;
                    guideInfo.height = this.btn_dragonCan.height;
                    var guideData = GuideManager_1.default.getGuideData(guideInfo.type);
                    guideInfo.desc = guideData.desc;
                    guideInfo.isForce = guideData.isForce;
                    guideInfo.pos = dragon.localToGlobal(new Laya.Point(this.btn_dragonCan.x - this.btn_dragonCan.width / 2, this.btn_dragonCan.y - this.btn_dragonCan.height / 2));
                    guideInfo.handle = new Laya.Handler(this, this.doDragonCan);
                    GuideManager_1.default.initGuide(guideInfo.type, [ guideInfo ]);
                } else {
                    EventDis_1.default.dispatchEvent("guide_bullet");
                    Laya.timer.clear(this, this.checkGragon);
                }
            };
            FishBtnLayer.prototype.checkFreeze = function(fish) {};
            FishBtnLayer.prototype.checkLockFish = function(fish) {};
            FishBtnLayer.prototype.closeFishBtn = function() {
                if (this.helpView.viewState == 1) EventDis_1.default.dispatchEvent(GlobalVar_1.default.CHANGE_ROOM_HELP_STATE);
            };
            FishBtnLayer.prototype.aniOnEvent = function() {
                var _this = this;
                this.dragonClose.on(Laya.Event.COMPLETE, this, this.changeDragonCannState);
                this.dragonOpen.on(Laya.Event.COMPLETE, this, function() {
                    _this.openBtnEvent("btn_dragon_", 3);
                });
                this.ddOpen.on(Laya.Event.COMPLETE, this, function() {
                    _this.openBtnEvent("btnBullet", 4);
                });
                this.ddClose.on(Laya.Event.COMPLETE, this, function() {
                    _this.closeBtnVisible("btnBullet", 4);
                });
            };
            FishBtnLayer.prototype.btnOnMouse = function() {
                this.btnSp.on(Laya.Event.CLICK, this, function() {
                    if (FishData_1.default.isInDaoDan) return;
                    DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_PREFERENTIAL);
                });
                this.btnShop.on(Laya.Event.CLICK, this, function() {
                    if (FishData_1.default.isInDaoDan) return;
                    DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_SHOP);
                });
                this.btnRecharge.on(Laya.Event.CLICK, this, function() {
                    if (FishData_1.default.isInDaoDan) return;
                    DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_FIRSTPAY);
                });
                this.btnExit.on(Laya.Event.CLICK, this, this.reqExitRoom);
                this.btnMap.on(Laya.Event.CLICK, this, this.openFishMap);
                this.btnSet.on(Laya.Event.CLICK, this, this.openSet);
                this.btnMenu.on(Laya.Event.CLICK, this, this.showMenu);
                this.btnMenu.on(Laya.Event.MOUSE_DOWN, this, function(e) {
                    e.stopPropagation();
                });
                this.btnBullet.on(Laya.Event.CLICK, this, this.openBomb);
                this.btnBullet.on(Laya.Event.MOUSE_DOWN, this, function(e) {
                    e.stopPropagation();
                });
                this.btn_dragonCan.on(Laya.Event.CLICK, this, this.doDragonCan);
                this.btn_dragonCan.on(Laya.Event.MOUSE_DOWN, this, function(e) {
                    e.stopPropagation();
                });
                this.img_close_dragon.on(Laya.Event.CLICK, this, this.doDragonCan);
                this.img_close_dragon.on(Laya.Event.MOUSE_DOWN, this, function(e) {
                    e.stopPropagation();
                });
                this.btnTomorrow.on(Laya.Event.CLICK, this, function() {
                    var dlg = new GiftMrDlg_1.GiftMrDlg();
                    SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
                });
                for (var index = 0; index < 4; index++) {
                    var btn = this["btnBullet" + index];
                    var bombId = this.bombIds[index];
                    btn.visible = false;
                    btn.on(Laya.Event.CLICK, this, this.selectBomb, [ bombId, btn ]);
                    var label = btn._children[0];
                    label.text = PlayerData_1.default.getItemNum(bombId + "") + "";
                    btn.on(Laya.Event.MOUSE_DOWN, this, function(e) {
                        e.stopPropagation();
                    });
                }
                for (var index = 0; index < 3; index++) {
                    var btn = this["btn_dragon_" + index];
                    btn.on(Laya.Event.CLICK, this, this.sendDragonCannonOpen, [ index + 4 ]);
                    btn.on(Laya.Event.MOUSE_DOWN, this, function(e) {
                        e.stopPropagation();
                    });
                }
                this.btn_cancel.on(Laya.Event.CLICK, this, this.sendDragonCannonClose);
                this.btn_cancel.on(Laya.Event.CLICK, this, this.stopDragonCannon, [ FishData_1.default.mySeatIndex ]);
                this.btn_cancel.on(Laya.Event.MOUSE_DOWN, this, function(e) {
                    e.stopPropagation();
                });
                this.btn_cancel2.on(Laya.Event.CLICK, this, this.openBomb);
                this.btn_cancel2.on(Laya.Event.MOUSE_DOWN, this, function(e) {
                    e.stopPropagation();
                });
            };
            FishBtnLayer.prototype.openBomb = function() {
                var _this = this;
                if (this.playerData[FishData_1.default.mySeatIndex].isDragonCannon != -1) {
                    var str = GlobalFunc_1.default.getColorText("请关闭龙炮,才能发射导弹");
                    var common = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                    SceneM_1.default.addToMiddLayer(common, globalConst_1.default.dialogLayer);
                    return;
                }
                this.btn_dragonCan.mouseEnabled = false;
                Laya.timer.once(500, this.btn_dragonCan, function() {
                    _this.btn_dragonCan.mouseEnabled = true;
                });
                this.btnBullet.mouseEnabled = false;
                Laya.timer.once(500, this.btnBullet, function() {
                    _this.btnBullet.mouseEnabled = true;
                });
                if (FishData_1.default.isInDaoDan && this.isForce) return;
                !this.isBulletOn && this.closeFishSceneView("daoDan");
                !this.isForce && (this.isForce = !this.isForce);
                if (!this.isBulletOn) {
                    if (FishData_1.default.isSelfHyTime || FishData_1.default.isSelfBitTime) {
                        new WarningMessage_1.WarningMessage("特色鱼期间无法使用导弹");
                        return;
                    }
                    FishData_1.default.inDaodan = true;
                    this.updateDaodan();
                    this.ddOpen.play(0, false);
                    this.openBtnVisible("btnBullet", 4);
                } else {
                    FishData_1.default.inDaodan = false;
                    this.ddClose.play(0, false);
                    this.openBtnEvent("btnBullet", 4);
                    this.boxSelect.visible = false;
                }
                this.imgSel.visible = false;
                this.aniSelect.stop();
                Laya.timer.once(this.isBulletOn ? 500 : 1, this, function() {
                    _this.btnBullet0.visible = _this.btnBullet1.visible = _this.btnBullet2.visible = _this.btnBullet3.visible = !_this.isBulletOn;
                    _this.isBulletOn = !_this.isBulletOn;
                });
            };
            FishBtnLayer.prototype.selectBomb = function(id, btn) {
                if (FishData_1.default.isInDaoDan) {
                    new WarningMessage_1.WarningMessage("导弹发射进行中!");
                    return;
                }
                FishData_1.default.bombId = id;
                this.selectCount = PlayerData_1.default.getItemNum(id + "");
                this.lblBombCount.text = "1";
                this.imgSel.pos(btn.x, btn.y);
                this.boxSelect.visible = true;
                this.isFirstShow = true;
                this.sliderBomb.value = Math.ceil(1 / this.selectCount * 100);
                if (PlayerData_1.default.getItemNum(id + "") == 0) {
                    new WarningMessage_1.WarningMessage("您使用的弹头库存不足。");
                    this.boxSelect.visible = false;
                    return;
                }
                this.imgSel.visible = true;
                this.aniSelect.play(0, true);
            };
            FishBtnLayer.prototype.startBomb = function() {
                if (FishData_1.default.isInDaoDan) return;
                !FishData_1.default.isInDaoDan && this.aniFilter.play(0, true);
                FishData_1.default.isInDaoDan = true;
                var node = FishData_1.default.mySeatNode;
                var cannon = node.cannonNode;
                cannon.box_cannon.visible = false;
                var seat = node.numPanel;
                seat.imgBullet.visible = true;
                var layar = SceneM_1.default.getLayerByName(globalConst_1.default.effectTopLayer);
                var view = layar.getChildByName("bomb");
                if (!view) view = new BombView_1.BombView(+this.lblBombCount.text);
                view.name = "bomb";
                seat.imgBullet.skin = view.imgBullet.skin = "bullets/img_zid_" + (FishData_1.default.bombId - 1) + ".png";
                SceneM_1.default.addToMiddLayer(view, globalConst_1.default.effectTopLayer);
            };
            FishBtnLayer.prototype.updateBomb = function() {
                this.openBomb();
            };
            FishBtnLayer.prototype.showMenu = function() {
                var _this = this;
                if (FishData_1.default.isInDaoDan) return;
                if (this.menuFlag) return;
                this.menuFlag = true;
                var isRotation = this.btnMenu.rotation == 180;
                if (isRotation) {
                    Laya.Tween.to(this.imgBg, {
                        width: 300
                    }, 400);
                    Laya.Tween.to(this.imgBg, {
                        alpha: 1
                    }, 200, Laya.Ease.backOut);
                    Laya.Tween.to(this.btnSet, {
                        alpha: 1
                    }, 300, null, null, 50);
                    Laya.Tween.to(this.btnMap, {
                        alpha: 1
                    }, 300, null, null, 100);
                    Laya.Tween.to(this.btnExit, {
                        alpha: 1
                    }, 300, null, null, 150);
                } else {
                    Laya.Tween.to(this.imgBg, {
                        width: 0
                    }, 400);
                    Laya.Tween.to(this.imgBg, {
                        alpha: 0
                    }, 200, null, null, 100);
                    Laya.Tween.to(this.btnSet, {
                        alpha: 0
                    }, 100, null, null, 100);
                    Laya.Tween.to(this.btnMap, {
                        alpha: 0
                    }, 100, null, null, 50);
                    Laya.Tween.to(this.btnExit, {
                        alpha: 0
                    }, 100, null, null);
                }
                Laya.timer.once(400, this, function() {
                    this.isMenuShow = !this.isMenuShow;
                });
                this.btnExit.visible = BattleData_1.default.room_type > 0;
                this.btnMap.mouseEnabled = this.btnExit.mouseEnabled = this.btnSet.mouseEnabled = isRotation;
                Laya.Tween.to(this.btnMenu, {
                    rotation: this.btnMenu.rotation + 180
                }, 400, null, Laya.Handler.create(this, function() {
                    if (_this.btnMenu.rotation == 360) _this.btnMenu.rotation = 0;
                    _this.menuFlag = false;
                }));
            };
            FishBtnLayer.prototype.resumeFreeze = function() {
                var skillData = BattleData_1.default.skillInfo;
                if (!skillData || !skillData.freezeData || !skillData.freezeData.freezeEndTime) return;
                var freezeData = skillData.freezeData;
                var time = freezeData.freezeEndTime - GameData_1.default.serverTimeStamp;
                if (time > 0) {
                    var params = {
                        data: {
                            freezeEndTime: "" + freezeData.freezeEndTime,
                            freezeMillis: "" + freezeData.freezeMillis,
                            seat: "0"
                        }
                    };
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.ROOM_FREEZE_SHOOT_NOTICE, params);
                }
            };
            FishBtnLayer.prototype.reqExitRoom = function() {
                if (!this.exitRoomFlag) return;
                this.exitRoomFlag = false;
                NetManager_1.default.reqTodayKillGold();
            };
            FishBtnLayer.prototype.resExitRoom = function(data) {
                this.exitRoomFlag = true;
                var gold = data.today_total_kill_gold;
                if (gold == 0) EventDis_1.default.dispatchEvent("sure_leave_room"); else SceneM_1.default.addToMiddLayer(new ExitRoomDlg_1.default(gold), globalConst_1.default.dialogLayer);
            };
            FishBtnLayer.prototype.updateView = function() {};
            FishBtnLayer.prototype.updateLstData = function(data) {};
            FishBtnLayer.prototype.onLstSkillRender = function(cell, index) {};
            FishBtnLayer.prototype.setOtherFreeze = function() {};
            FishBtnLayer.prototype.freezeCd = function(index) {};
            FishBtnLayer.prototype.lockCd = function(index) {};
            FishBtnLayer.prototype.rageCd = function(index) {};
            FishBtnLayer.prototype.onLstSkillClick = function(e, index) {};
            FishBtnLayer.prototype.doSkill = function(index) {};
            FishBtnLayer.prototype.checkDiamond = function() {
                if (!GlobalFunc_1.default.isIos()) DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_SHOP, 1); else {
                    var str = GlobalFunc_1.default.getColorText("您的钻石不足");
                    var alert_1 = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                    SceneM_1.default.addToMiddLayer(alert_1, globalConst_1.default.dialogLayer);
                }
            };
            FishBtnLayer.prototype.getSkillData = function() {};
            FishBtnLayer.prototype.openBoxSurplus = function(name, num, isTiming) {
                if (name === void 0) name = "";
                if (num === void 0) num = 0;
                if (isTiming === void 0) isTiming = 0;
                this.box_surplus.visible = true;
                this.bulletName.text = name;
                this.bulletNum.text = num.toString();
                if (isTiming != 0) {
                    this.countDownNode = new CountDownNode_1.default(globalConst_1.default.specialFishEndTime, true);
                    this.box_surplus.addChild(this.countDownNode);
                    this.countDownNode.x = -17;
                    this.countDownNode.y = 20;
                    this.countDownNode.scale(.8, .8);
                    this.countDownNode.startTiming();
                }
            };
            FishBtnLayer.prototype.setSurplusNum = function(num) {
                num == 0 && this.countDownNode && this.countDownNode.stopTiming();
                this.bulletNum.text = num.toString();
            };
            FishBtnLayer.prototype.closeBoxSurplus = function() {
                var playerInfo = BattleData_1.default.roomPlayerData[FishData_1.default.mySeatIndex];
                if (playerInfo.isDragonCannon != -1) {
                    this.bulletName.text = "龙炮子弹";
                    this.bulletNum.text = playerInfo.dragonCannon.leftBullet + "";
                    return;
                }
                this.box_surplus.visible = false;
                if (this.countDownNode && !this.countDownNode.destroyed) {
                    this.countDownNode.doDestroy();
                    this.countDownNode = undefined;
                }
            };
            FishBtnLayer.prototype.doDragonCan = function() {
                !this.draganCanIsOn && this.closeFishSceneView("longPao");
                this.isDraganCanOn = !this.isDraganCanOn;
                if (this.draganCanIsOn) {
                    this.dragonClose.play(0, false);
                    this.draganCanIsOn = false;
                } else {
                    this.dragonOpen.play(0, false);
                    this.draganCanIsOn = true;
                    this.updateDragonCanNum();
                }
            };
            FishBtnLayer.prototype.sendDragonCannonOpen = function(type) {
                if (!FishData_1.default.isSelfDragonTime) {
                    if (FishData_1.default.isInDaoDan || FishData_1.default.inDaodan) {
                        var str = GlobalFunc_1.default.getColorText("请等到导弹结束，才能使用龙炮");
                        var common = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                        SceneM_1.default.addToMiddLayer(common, globalConst_1.default.dialogLayer);
                        return;
                    }
                    if (BattleData_1.default.roomPlayerData[FishData_1.default.mySeatIndex].isSpecialFishTime()) {
                        var str = GlobalFunc_1.default.getColorText("特色鱼状态不能使用龙炮");
                        var common = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                        SceneM_1.default.addToMiddLayer(common, globalConst_1.default.dialogLayer);
                        return;
                    }
                    GuideManager_1.default.guideState[8] = true;
                    this.doDragonCan();
                    var seat = FishData_1.default.mySeatIndex;
                    var playerInfo = this.playerData[seat.toString()];
                    var dragonCannonNum = PlayerData_1.default.getItemNum(GlobalFunc_1.default.getDragonCannonID(type));
                    var tips = "";
                    if (type == DragonCannonNode_1.DragonType.GREEN_CANNON) tips = "抱歉当前房间无法使用，请前往百炮房使用"; else if (type == DragonCannonNode_1.DragonType.SILVER_CANNON) tips = "抱歉当前房间无法使用，请前往千炮房使用"; else if (type == DragonCannonNode_1.DragonType.GOLD_CANNON) tips = "抱歉当前房间无法使用，请前往千炮房使用";
                    if (dragonCannonNum <= 0) {
                        var str = GlobalFunc_1.default.getColorText("当前龙炮没有子弹了,请获取更多的子弹。");
                        var common = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                        SceneM_1.default.addToMiddLayer(common, globalConst_1.default.dialogLayer);
                        return;
                    }
                    var a = BattleData_1.default.room_type;
                    var b = BattleData_1.default.dragonCannonInfo;
                    var dragonCannonData = BattleData_1.default.dragonCannonInfo[type];
                    var canStart = false;
                    for (var index = 0; index < dragonCannonData.ROOM_TYPE.length; index++) {
                        var data = dragonCannonData.ROOM_TYPE[index];
                        if (data == BattleData_1.default.room_type) canStart = true;
                    }
                    if (!canStart) {
                        var str = GlobalFunc_1.default.getColorText(tips);
                        var common = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                        SceneM_1.default.addToMiddLayer(common, globalConst_1.default.dialogLayer);
                        return;
                    }
                    NetManager_1.default.reqChangeDragonState(1, type);
                }
            };
            FishBtnLayer.prototype.startDragonCannon = function(data) {
                if (this.isBulletOn) this.openBomb();
                this.closeFishBtn();
                if (FishData_1.default.isAutoButtonOn) this.helpView.doAuto();
                if (this.helpView.viewState == 1) this.helpView.changeState();
                FishData_1.default.isDragonCannonOn = true;
                var type = data.longpao_id;
                var seatIndex = BattleData_1.default.getUserSeatByUid(data.uid);
                if (this.playerData[seatIndex].isDragonCannon == -1) {
                    var dragonCannon = new DragonCannonNode_1.default(seatIndex, type);
                    this.playerData[seatIndex].dragonCannon = dragonCannon;
                }
                if (seatIndex == FishData_1.default.mySeatIndex) {
                    this.btn_cancel.mouseEnabled = this.btn_dragonCan.mouseEnabled = this.img_close_dragon.mouseEnabled = false;
                    GlobalFunc_1.default.changeUI(this.btn_dragonCan, this.btn_cancel, new Laya.Handler(this, this.changeDragonCannState));
                }
            };
            FishBtnLayer.prototype.sendDragonCannonClose = function() {
                var seat = FishData_1.default.mySeatIndex;
                var playerdata = this.playerData[seat];
                if (playerdata.isSpecialFishTime()) {
                    var str = GlobalFunc_1.default.getColorText("特色鱼期间无法取消龙炮");
                    var common = new CommonDialog_1.default(1, [ str ], null, "确认", "提示", true);
                    SceneM_1.default.addToMiddLayer(common, globalConst_1.default.dialogLayer);
                    return;
                }
                if (playerdata.isDragonCannon != -1 && playerdata.dragonCannon != undefined) NetManager_1.default.reqChangeDragonState(0, playerdata.isDragonCannon);
            };
            FishBtnLayer.prototype.stopDragonCannon = function(seatIndex) {
                FishData_1.default.isDragonCannonOn = false;
                var playerdata = this.playerData[seatIndex];
                if (playerdata.isSpecialFishTime()) return;
                if (playerdata.dragonCannon && !playerdata.dragonCannon.destroyed) playerdata.dragonCannon.destroy(); else return;
                FishData_1.default.seatNodes[seatIndex].numPanel.text_paobei.text = playerdata.cur_pao.toString();
                playerdata.dragonCannon = undefined;
                if (seatIndex == FishData_1.default.mySeatIndex) {
                    this.btn_cancel.mouseEnabled = this.btn_dragonCan.mouseEnabled = this.img_close_dragon.mouseEnabled = false;
                    GlobalFunc_1.default.changeUI(this.btn_cancel, this.btn_dragonCan, new Laya.Handler(this, this.changeDragonCannState));
                }
            };
            FishBtnLayer.prototype.changeDragonCannState = function() {
                this.closeBtnVisible("btn_dragon_", 3);
                if (FishData_1.default.isSelfDragonTime) {
                    this.btn_dragonCan.mouseEnabled = false;
                    this.img_close_dragon.mouseEnabled = false;
                    this.btn_cancel.mouseEnabled = true;
                } else {
                    this.btn_dragonCan.mouseEnabled = true;
                    this.img_close_dragon.mouseEnabled = true;
                    this.btn_cancel.mouseEnabled = false;
                }
            };
            FishBtnLayer.prototype.closeBtnEvent = function(name, number) {
                for (var index = 0; index < number; index++) {
                    this[name + index].mouseEnabled = false;
                    this[name + index].visible = false;
                }
            };
            FishBtnLayer.prototype.openBtnEvent = function(name, number) {
                for (var index = 0; index < number; index++) this[name + index].mouseEnabled = true;
            };
            FishBtnLayer.prototype.closeBtnVisible = function(name, number) {
                for (var index = 0; index < number; index++) this[name + index].visible = false;
            };
            FishBtnLayer.prototype.openBtnVisible = function(name, number) {
                for (var index = 0; index < number; index++) this[name + index].visible = true;
            };
            FishBtnLayer.prototype.playGetJackpot = function(seat) {
                var ani = new layaMaxUI_1.ui.common.JackpotAccAniUI();
                ani.text_goldNum.text = 8645e6.toLocaleString();
                var pos = GlobalFunc_1.default.getBigFishPos()[seat];
                ani.zOrder = 1e4;
                ani.scale(0, 0);
                ani.pos(pos.x, pos.y);
                SceneM_1.default.addToLayer(ani, globalConst_1.default.effectTopLayer);
                var timeLine = TimeLineManager_1.default.creatTimeLine();
                timeLine.addLabel("appear", 0).to(ani, {
                    scaleX: .5,
                    scaleY: .5
                }, 500, Laya.Ease.backOut).addLabel("close", 0).to(ani, {
                    scaleX: 0,
                    scaleY: 0
                }, 500, Laya.Ease.backIn, 2e3);
                timeLine.on(Laya.Event.COMPLETE, this, function(ani) {
                    ani.removeSelf();
                    ani.destroy();
                }, [ ani ]);
                timeLine.play(0, false);
            };
            FishBtnLayer.prototype.openFishMap = function() {
                if (FishData_1.default.isInDaoDan) return;
                DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_FISHMAP);
            };
            FishBtnLayer.prototype.openSet = function() {
                if (FishData_1.default.isInDaoDan) return;
                DialogManager_1.default.getDialogByName(globalConst_1.default.DIA_SET);
            };
            FishBtnLayer.prototype.openLastBulletView = function(data) {
                this.openBoxSurplus(data.name, data.bulletNum, data.timing);
                data.node.btnLayer = this;
            };
            FishBtnLayer.prototype.playBomb = function(data) {
                var _this = this;
                if (data === void 0) data = [];
                this.isForce = false;
                this.openBomb();
                this.imgSel.visible = this.boxSelect.visible = false;
                this.aniSelect.stop();
                for (var index = 0; index < 4; index++) {
                    var btn = this["btnBullet" + index];
                    var bombId = this.bombIds[index];
                    var label = btn._children[0];
                    label.text = PlayerData_1.default.getItemNum(bombId + "") + "";
                }
                var layar = SceneM_1.default.getLayerByName(globalConst_1.default.effectTopLayer);
                var view = layar.getChildByName("bomb");
                var node = FishData_1.default.mySeatNode;
                var cannon = node.cannonNode;
                var seat = node.numPanel;
                Laya.timer.once(1e3, this, function() {
                    _this.aniFilter.stop();
                    _this.aniFilter.resetNodes();
                });
                seat.aniBullet.play(0, true);
                seat.imgFire.visible = true;
                seat.aniFire.play(0, false);
                Laya.timer.once(1600, this, function() {
                    seat.imgBullet.visible = false;
                    seat.imgFire.visible = false;
                    cannon.box_cannon.visible = true;
                    GlobalUI_1.default.showBombEffect(new Laya.Point(view.x, view.y));
                    view.destroy();
                    seat.text_paobei.visible = seat.btn_plus.visible = seat.btn_reduce.visible = true;
                });
            };
            FishBtnLayer.prototype.doShake = function() {
                if (GameData_1.default.isShaked) {
                    new WarningMessage_1.WarningMessage("今日已购买");
                    return;
                }
                if (GameData_1.default.shakeTimes <= 0) {
                    GlobalFunc_1.default.globalTip("摇一摇次数不足，在渔场捕获一定数量的鱼即可获得次数");
                    return;
                }
                var dlg = new GiftShakeDlg_1.GiftShakeDlg();
                SceneM_1.default.addToMiddLayer(dlg, globalConst_1.default.dialogLayer);
            };
            FishBtnLayer.prototype.updateDragonCanNum = function() {
                !this.text_dragonCan_num_0.destroyed && (this.text_dragonCan_num_0.text = PlayerData_1.default.getItemNum("34") + "");
                !this.text_dragonCan_num_1.destroyed && (this.text_dragonCan_num_1.text = PlayerData_1.default.getItemNum("35") + "");
                !this.text_dragonCan_num_2.destroyed && (this.text_dragonCan_num_2.text = PlayerData_1.default.getItemNum("36") + "");
            };
            FishBtnLayer.prototype.closeFishSceneView = function(type) {
                if (this.isBulletOn && type != "daoDan") {
                    Laya.timer.clearAll(this.btnBullet);
                    this.openBomb();
                }
                type != "fuZhu" && this.closeFishBtn();
                if (this.draganCanIsOn && type != "longPao") this.doDragonCan();
            };
            FishBtnLayer.prototype.destroy = function() {
                Laya.timer.clearAll(this.btnBullet);
                Laya.timer.clearAll(this.btn_dragonCan);
                this.helpView && this.helpView.destroy();
                this.jackpotPool && this.jackpotPool.destroy();
                FishData_1.default.isAutoButtonOn = false;
                this.masks.forEach(function(mask) {});
                Laya.Tween.clearAll(this);
                this.removeSelf();
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
            };
            return FishBtnLayer;
        }(layaMaxUI_1.ui.roomScene.FishBtnLayerUI);
        exports.default = FishBtnLayer;
    }, {
        "../../common/BombView": 4,
        "../../common/CommonDialog": 7,
        "../../common/DialogManager": 9,
        "../../common/GuideManager": 13,
        "../../common/SceneM": 19,
        "../../common/WarningMessage": 25,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../dialog/hallDlg/RewardDialog": 60,
        "../../dialog/roomDlg/ExitRoomDlg": 71,
        "../../gift/GiftMrDlg": 78,
        "../../gift/GiftShakeDlg": 80,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalUI": 89,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/OnOffManager": 93,
        "../../globalConst/TimeLineManager": 95,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../rolesNodes/fishNodes/DragonCannonNode": 111,
        "../../rolesNodes/otherNodes/CountDownNode": 121,
        "../../rolesNodes/otherNodes/RoomHelpNode": 126,
        "../../rolesNodes/otherNodes/RoomJackpotNode": 127,
        "../../ui/layaMaxUI": 151
    } ],
    147: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var EventDis_1 = require("../../globalConst/EventDis");
        var FishData_1 = require("../../datas/roomData/FishData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var FishLineData_1 = require("../../datas/roomData/FishLineData");
        var FishNode_1 = require("../../rolesNodes/fishNodes/FishNode");
        var CrabNode_1 = require("../../rolesNodes/fishNodes/CrabNode");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var DragonBallFishNode_1 = require("../../rolesNodes/fishNodes/DragonBallFishNode");
        var FishFactory = function() {
            function FishFactory() {
                this._teamIndex = 0;
                this._lastTeamDelay = 0;
                this.initData();
                this.initEvent();
            }
            FishFactory.prototype.destroy = function() {
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                FishData_1.default.fishNodesObj = {};
            };
            FishFactory.prototype.initData = function() {
                FishData_1.default.fishNodesObj = {};
                this.sceneStartTime = GlobalFunc_1.default.getClientTime();
            };
            FishFactory.prototype.initEvent = function() {
                EventDis_1.default.addEvntListener("fishDead", this, this.handleDeadFish);
                EventDis_1.default.addEvntListener("rebornFish", this, this.reBornFish);
            };
            FishFactory.prototype.handleDeadFish = function(fishUniqId) {
                delete FishData_1.default.fishNodesObj[fishUniqId];
            };
            FishFactory.prototype.lastSceneLoad = function() {
                if (BattleData_1.default.FishSceneTime > 30 * 1e3) return;
                var json = ConfigerHelper_1.default.getFileData("config/FishTeam.json");
                var last_scene_id = BattleData_1.default.last_scene_id;
                var fishTeamInfos = json[last_scene_id];
                var sceneInfo = ConfigerHelper_1.default.getCachedValue("allfishScript", "SceneID", last_scene_id, BattleData_1.default.room_type);
                var last_scene_time = sceneInfo.endtime * 1e3;
                var allTime = BattleData_1.default.FishSceneTime + last_scene_time;
                for (var i = 0; i < fishTeamInfos.length; ++i) {
                    var teamInfo = fishTeamInfos[i];
                    var teamDelay = teamInfo.TeamDelay * 1e3;
                    var formationsIds = teamInfo.Formation;
                    var formationsIdArr = formationsIds.split(";");
                    for (var j = 0; j < formationsIdArr.length; ++j) {
                        var formationId = Number(formationsIdArr[j]);
                        this.loadFormation(formationId, teamInfo, allTime - teamDelay);
                    }
                }
            };
            FishFactory.prototype.firstLoad = function() {
                GlobalFunc_1.default.log("testFish first load", BattleData_1.default.FishSceneTime, BattleData_1.default.cur_scene_id);
                GlobalFunc_1.default.testFish(1);
                BattleData_1.default.scene_type == 0 && !!BattleData_1.default.last_scene_id && this.lastSceneLoad();
                this.cur_scene_id = BattleData_1.default.cur_scene_id;
                var json = ConfigerHelper_1.default.getFileData("config/FishTeam.json");
                if (!json) return;
                this.fishTeamInfos = json[this.cur_scene_id];
                GlobalFunc_1.default.testFish(2);
                this.fishTeamInfos.sort(GlobalFunc_1.default.compare("TeamDelay"));
                GlobalFunc_1.default.testFish(3);
                var FishSceneTime = BattleData_1.default.FishSceneTime;
                for (var i = 0; i < this.fishTeamInfos.length; ++i) {
                    var teamInfo = this.fishTeamInfos[i];
                    var teamDelay = teamInfo.TeamDelay * 1e3;
                    this._teamIndex = i;
                    if (teamDelay < FishSceneTime) {
                        var formationsIds = teamInfo.Formation;
                        var formationsIdArr = formationsIds.split(";");
                        for (var j = 0; j < formationsIdArr.length; ++j) {
                            var formationId = Number(formationsIdArr[j]);
                            this.loadFormation(formationId, teamInfo, FishSceneTime - teamDelay);
                        }
                    } else if (teamDelay >= FishSceneTime) {
                        this._lastTeamDelay = FishSceneTime;
                        this._lastLoadTeamTime = GlobalFunc_1.default.getClientTime();
                        this.loadAllTeams();
                        break;
                    }
                }
                BattleData_1.default.die_fish_ids = null;
            };
            FishFactory.prototype.switchFishTeam = function(cur_scene_id) {
                GlobalFunc_1.default.log("切换场景：", this.cur_scene_id, cur_scene_id);
                this.cur_scene_id = cur_scene_id;
                Laya.timer.clear(this, this.loadOneTeam);
                this._lastLoadOneTime = this._lastLoadTeamTime = this._totalDelay = this._lastTeamDelay = 0;
                this._teamIndex = 0;
                var scenePath = "config/FishTeam.json";
                var json = ConfigerHelper_1.default.getFileData(scenePath);
                if (!json) return;
                this.fishTeamInfos = json[this.cur_scene_id];
                this.fishTeamInfos.sort(GlobalFunc_1.default.compare("TeamDelay"));
                this.loadAllTeams();
            };
            FishFactory.prototype.loadAllTeams = function() {
                if (this._teamIndex >= this.fishTeamInfos.length) return;
                var teamInfo = this.fishTeamInfos[this._teamIndex];
                var teamDelay = teamInfo.TeamDelay * 1e3;
                var delta = this._lastLoadOneTime - this._lastLoadTeamTime - this._totalDelay || 0;
                this._totalDelay = teamDelay - this._lastTeamDelay - delta;
                this._lastTeamDelay = teamDelay;
                this._lastLoadTeamTime = GlobalFunc_1.default.getClientTime();
                if (this._totalDelay > 0) Laya.timer.once(this._totalDelay, this, this.loadOneTeam); else this.loadOneTeam(-this._totalDelay);
            };
            FishFactory.prototype.loadOneTeam = function(startDiff) {
                if (startDiff === void 0) startDiff = 0;
                var teamInfo = this.fishTeamInfos[this._teamIndex];
                var formationsIds = teamInfo.Formation;
                var formationsIdArr = formationsIds.split(";");
                if (GlobalVar_1.default.isOpenTeamLog) GlobalFunc_1.default.log("start fishteam withDiff :", teamInfo.TeamID, startDiff);
                for (var j = 0; j < formationsIdArr.length; ++j) {
                    var formationId = Number(formationsIdArr[j]);
                    if (!formationId) continue;
                    this.loadFormation(formationId, teamInfo, startDiff);
                }
                this._teamIndex++;
                this._lastLoadOneTime = GlobalFunc_1.default.getClientTime();
                this.loadAllTeams();
            };
            FishFactory.prototype.loadFormation = function(formationId, teamInfo, startDiff) {
                var formationFile = ConfigerHelper_1.default.getFileData("config/Formations.json");
                if (!formationFile) return;
                if (GlobalVar_1.default.isOpenTeamLog) GlobalFunc_1.default.log("start formation :", formationId);
                var formations = formationFile[formationId];
                if (!formations) {
                    GlobalFunc_1.default.log("can not find this formation :", formationId);
                    return;
                }
                for (var i = 0; i < formations.length; ++i) {
                    var oneFishInfo = formations[i];
                    if (oneFishInfo.FishID == "27" || oneFishInfo.FishID == "30" || oneFishInfo.FishID == "32") continue;
                    var indexDelay = Number(oneFishInfo.IndexDelay) * 1e3;
                    var lineId = oneFishInfo.PathID;
                    var isFirstLine = FishLineData_1.default.newUserFishLines.filter(function(line) {
                        return line == lineId + ".json";
                    }).length != 0;
                    var fileName = !isFirstLine ? "config2" : "config";
                    var fishPath = fileName + "/fishPaths/" + lineId + ".json";
                    var lineData = ConfigerHelper_1.default.getFileData(fishPath);
                    if (!lineData) {
                        GlobalFunc_1.default.log("can not find lineData");
                        continue;
                    }
                    FishLineData_1.default.fishLineObj[lineId] = lineData;
                    var fishUniqId = teamInfo.TeamID + "_" + formationId + "_" + oneFishInfo.FormationIndex;
                    var dieFishes = BattleData_1.default.die_fish_ids;
                    if (!!dieFishes) {
                        var flag = false;
                        for (var index = 0; index < dieFishes.length; ++index) if (dieFishes[index].fish_id == fishUniqId) {
                            flag = true;
                            break;
                        }
                        if (flag) {
                            GlobalFunc_1.default.log("跳过已死亡的鱼：", fishUniqId);
                            continue;
                        }
                    }
                    GlobalFunc_1.default.testFish(fishUniqId);
                    var fishNode;
                    if (oneFishInfo.FishID == "290" || oneFishInfo.FishID == "390" || oneFishInfo.FishID == "490") fishNode = new DragonBallFishNode_1.default(); else fishNode = Laya.Pool.getItemByClass("fishNode", FishNode_1.default);
                    var param = {
                        fishUniqId: fishUniqId,
                        oneFishInfo: oneFishInfo,
                        lineSpeed: teamInfo.TeamSpeed,
                        startDiff: startDiff,
                        indexDelay: indexDelay
                    };
                    fishNode.initFish(param);
                }
            };
            FishFactory.prototype.pauseFishLoad = function() {
                this._freezeTime = GlobalFunc_1.default.getClientTime();
                Laya.timer.clear(this, this.loadAllTeams);
            };
            FishFactory.prototype.resumeFishLoad = function() {
                if (this._teamIndex < this.fishTeamInfos.length) {
                    this._totalDelay -= this._freezeTime - this._lastLoadTeamTime;
                    this._lastLoadTeamTime = GlobalFunc_1.default.getClientTime();
                    Laya.timer.once(this._totalDelay, this, this.loadOneTeam);
                }
                for (var index in FishData_1.default.fishNodesObj) FishData_1.default.fishNodesObj[index].resumeLine();
            };
            FishFactory.prototype.reBornFish = function(data) {
                if (BattleData_1.default.scene_type != 1) return;
                var fishes = data.fishs;
                for (var i = 0; i < fishes.length; ++i) {
                    var fish = fishes[i];
                    var fish_id = fish.fish_id;
                    this.checkFish(fish_id);
                    var reborn_msec_offset = fish.reborn_msec_offset || 0;
                    var fishInfo = GlobalFunc_1.default.getFishCfgIds(fish_id);
                    var formationId = fishInfo.formationId;
                    var formationIndex = fishInfo.formationIndex;
                    var teamId = fishInfo.teamId;
                    var formations = ConfigerHelper_1.default.getCachedValueByKey("Formations", [ formationId ]);
                    var _loop_1 = function(j) {
                        var formation = formations[j];
                        if (formation.FormationIndex != formationIndex) return "continue";
                        var fishType = formation.FishID;
                        var lineId = formation.PathID;
                        var isFirstLine = FishLineData_1.default.newUserFishLines.filter(function(line) {
                            return line == lineId + ".json";
                        }).length != 0;
                        var fileName = !isFirstLine ? "config2" : "config";
                        fishPath = fileName + "/fishPaths/" + lineId + ".json";
                        var fishLine = ConfigerHelper_1.default.getFileData(fishPath);
                        if (!fishLine) return "continue";
                        var fish_1 = void 0;
                        var param = void 0;
                        FishLineData_1.default.fishLineObj[lineId] = fishLine;
                        if (fishType == "27") {
                            fish_1 = new CrabNode_1.default();
                            param = {
                                fishUniqId: fish_id,
                                startDiff: reborn_msec_offset,
                                lineId: formationIndex % 2
                            };
                        } else if (fishType == "30" || fishType == "32") {
                            fish_1 = Laya.Pool.getItemByClass("fishNode", FishNode_1.default);
                            var teamSpeed = 60;
                            for (var i_1 = 0; i_1 < this_1.fishTeamInfos.length; ++i_1) if (teamId == this_1.fishTeamInfos[i_1].TeamID) {
                                teamSpeed = this_1.fishTeamInfos[i_1].TeamSpeed;
                                break;
                            }
                            param = {
                                fishUniqId: fish_id,
                                oneFishInfo: formation,
                                lineSpeed: teamSpeed,
                                startDiff: reborn_msec_offset,
                                indexDelay: 0
                            };
                        }
                        if (!fish_1) return "continue";
                        fish_1.initFish(param);
                        return "break";
                    };
                    var this_1 = this, fishPath;
                    for (var j = 0; j < formations.length; ++j) {
                        var state_1 = _loop_1(j);
                        if (state_1 === "break") break;
                    }
                }
            };
            FishFactory.prototype.checkFish = function(fish_id) {
                var fishs = FishData_1.default.fishNodesObj;
                for (var i in fishs) {
                    var fish = fishs[i];
                    if (fish.fishUniqId == fish_id) {
                        EventDis_1.default.dispatchEvent("fishDead", fish_id);
                        fish.destroy();
                    }
                }
            };
            return FishFactory;
        }();
        exports.FishFactory = FishFactory;
    }, {
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../datas/roomData/FishLineData": 31,
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalVar": 90,
        "../../rolesNodes/fishNodes/CrabNode": 107,
        "../../rolesNodes/fishNodes/DragonBallFishNode": 110,
        "../../rolesNodes/fishNodes/FishNode": 115
    } ],
    148: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var EventDis_1 = require("../../globalConst/EventDis");
        var FishFactory_1 = require("./FishFactory");
        var FishData_1 = require("../../datas/roomData/FishData");
        var BulletFactory_1 = require("./BulletFactory");
        var SeatFactory_1 = require("./SeatFactory");
        var FishBtnLayer_1 = require("./FishBtnLayer");
        var globalConst_1 = require("../../globalConst/globalConst");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var SceneM_1 = require("../../common/SceneM");
        var NewGuideView_1 = require("../../common/NewGuideView");
        var GuideManager_1 = require("../../common/GuideManager");
        var DaoDanNode_1 = require("../../rolesNodes/otherNodes/DaoDanNode");
        var BubbleEff_1 = require("../../dialog/roomDlg/BubbleEff");
        var CommonDialog_1 = require("../../common/CommonDialog");
        var ConfigerHelper_1 = require("../../globalConst/ConfigerHelper");
        var NetManager_1 = require("../../netWork/NetManager");
        var PlayerData_1 = require("../../datas/hallData/PlayerData");
        var SoundM_1 = require("../../common/SoundM");
        var BitPlayNode_1 = require("../../rolesNodes/fishNodes/BitPlayNode");
        var BossComingDlg_1 = require("../../dialog/roomDlg/BossComingDlg");
        var FishTeamComingDlg_1 = require("../../dialog/roomDlg/FishTeamComingDlg");
        var GameData_1 = require("../../datas/hallData/GameData");
        var GlobalUI_1 = require("../../globalConst/GlobalUI");
        var TimeLineManager_1 = require("../../globalConst/TimeLineManager");
        var BattleFunc_1 = require("../../globalConst/BattleFunc");
        var FishScene = function(_super) {
            __extends(FishScene, _super);
            function FishScene() {
                var _this = _super.call(this) || this;
                _this.isFirstClick = true;
                _this.bombs = [];
                _this.initScene();
                _this.initEvent();
                _this.initGuide();
                BattleFunc_1.default.setPopIndex();
                BattleData_1.default.isInRoom = true;
                GlobalFunc_1.default.playRoomMusic();
                return _this;
            }
            FishScene.prototype.destroy = function() {
                FishData_1.default.popindex = 0;
                FishData_1.default.isTouching = false;
                GameData_1.default.isHelping = false;
                TimeLineManager_1.default.clearTimeLines();
                BattleData_1.default.updateSelfInfoByLeave();
                EventDis_1.default.dispatchEvent("leave_room", BattleData_1.default.room_type);
                BattleData_1.default.isInRoom = false;
                EventDis_1.default.delAllEvnt(this);
                Laya.stage.offAllCaller(this);
                Laya.timer.clearAll(this);
                this.fishFct.destroy();
                this.btnLayer.destroy();
                this.bulletFct.destroy();
                this.seatFactory.destroy();
                this.bombs.forEach(function(bomb) {
                    Laya.Tween.clearAll(bomb.bomb);
                    Laya.timer.clearAll(bomb.bomb);
                    EventDis_1.default.delAllEvnt(bomb.bomb);
                    bomb.bomb.body = null;
                    bomb.bomb.destroyChildren();
                    bomb.bomb.removeSelf();
                });
                NetManager_1.default.reqEnterRoom({
                    room_type: BattleData_1.default.room_type,
                    enter: false
                });
                _super.prototype.destroy.call(this);
                SoundM_1.default.stopAllSound(true);
            };
            FishScene.prototype.doExit = function() {
                if (FishData_1.default.isInDaoDan) return;
                this.destroy();
                var scene = SceneM_1.default.replaceScene("SelectRoomScene");
                scene.init();
            };
            FishScene.prototype.initGuide = function() {
                if (PlayerData_1.default.guideStep == 1) {
                    var view = new NewGuideView_1.NewGuideView();
                    Laya.stage.addChild(view);
                } else if (PlayerData_1.default.guideStep == 2) EventDis_1.default.dispatchEvent("screen_guide"); else if (PlayerData_1.default.guideStep == 3) EventDis_1.default.dispatchEvent("bei_guide"); else if (PlayerData_1.default.guideStep == 4) EventDis_1.default.dispatchEvent("bullet_guide");
            };
            FishScene.prototype.initScene = function() {
                this.seatFactory = new SeatFactory_1.default();
                this.bulletFct = new BulletFactory_1.default();
                this.fishFct = new FishFactory_1.FishFactory();
                this.btnLayer = new FishBtnLayer_1.default(this);
                GlobalFunc_1.default.globalSetZorder(this.btnLayer, 3e3);
                SceneM_1.default.addToMiddLayer(this.btnLayer, globalConst_1.default.btnsLayer);
                this.initPangxieBg();
                this.setSceneBg();
                this.fishFct.firstLoad();
                Laya.timer.frameLoop(1, this, this.updateGame);
                BattleData_1.default.room_type = BattleData_1.default.room_type;
                this.resumeScene();
                Laya.timer.once(100, this, this.delayResumeScene1);
                Laya.timer.once(1e3, this, this.delayResumeScene2);
            };
            FishScene.prototype.initMouseEvent = function() {
                this.on(Laya.Event.MOUSE_DOWN, this, this.onMouseDown);
                Laya.stage.on(Laya.Event.MOUSE_UP, this, this.onMouseUp);
                Laya.stage.on(Laya.Event.MOUSE_MOVE, this, this.onMouseMove);
                Laya.stage.on(Laya.Event.MOUSE_OVER, this, this.onMouseOver);
                Laya.stage.on(Laya.Event.MOUSE_OUT, this, this.onMouseOut);
            };
            FishScene.prototype.initEvent = function() {
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ROOM_FREEZE_STOP_NOTICE, this.fishFct, this.fishFct.resumeFishLoad);
                EventDis_1.default.addEvntListener("screen_guide", this, function() {
                    GuideManager_1.default.doScreenGuide();
                });
                EventDis_1.default.addEvntListener("bei_guide", this, function() {
                    GuideManager_1.default.doBeiGuide();
                });
                EventDis_1.default.addEvntListener("bullet_guide", this, function() {
                    GuideManager_1.default.doBulletGuide();
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.DAO_DAN_BOMB, this, this.s2cBomb);
                EventDis_1.default.addEvntListener("switchSceneId", this, this.switchTeam);
                EventDis_1.default.addEvntListener("killFish_broad", this, this.onServerKillFish);
                EventDis_1.default.addEvntListener("roomOverTime", this, this.serverOverTime);
                EventDis_1.default.addEvntListener("socket_closed", this, this.kickOutRoom);
                EventDis_1.default.addEvntListener("bit_play_begin", this, this.bitPlayBegin);
                EventDis_1.default.addEvntListener("sure_leave_room", this, this.doExit);
            };
            FishScene.prototype.resumeScene = function() {
                if (!!BattleData_1.default.reborn_fishs.length) {
                    var data = {};
                    data.fishs = BattleData_1.default.reborn_fishs;
                    GlobalFunc_1.default.log("boss恢复");
                    EventDis_1.default.dispatchEvent("rebornFish", data);
                }
                BattleData_1.default.reborn_fishs = [];
            };
            FishScene.prototype.delayResumeScene1 = function() {
                this.btnLayer.resumeFreeze();
            };
            FishScene.prototype.delayResumeScene2 = function() {
                this.initMouseEvent();
                EventDis_1.default.dispatchEvent("remove_fishLoaidng_scene");
            };
            FishScene.prototype.s2cBomb = function(data) {
                var bomb = new DaoDanNode_1.default(data);
                this.bombs.push(bomb);
            };
            FishScene.prototype.serverOverTime = function() {
                var str = GlobalFunc_1.default.getColorText("由于您长时间没有开炮，自动离开房间！");
                var kickDialog = new CommonDialog_1.default(1, [ str ], null, "确定", "提示", true, Laya.Handler.create(this, function() {
                    SceneM_1.default.replaceScene("FirstHallScene");
                }));
                SceneM_1.default.addToMiddLayer(kickDialog, globalConst_1.default.dialogLayer);
            };
            FishScene.prototype.kickOutRoom = function() {
                if (GlobalUI_1.default.isCommonDialogShow) return;
                var str = GlobalFunc_1.default.getColorText("网络 连接失败，请重新连接！");
                var callBack = new Laya.Handler(this, function() {
                    if (PlayerData_1.default.guideStep != 0) {
                        var sceneLayer = SceneM_1.default.pushMaskScene("jumpLoadScene");
                        FishData_1.default.initFishData();
                        NetManager_1.default.reqEnterRoom({
                            room_type: 0,
                            enter: true
                        });
                    } else SceneM_1.default.replaceScene("FirstHallScene");
                });
                var kickDialog = new CommonDialog_1.default(1, [ str ], null, "确定", "提示", true, callBack);
                SceneM_1.default.addToMiddLayer(kickDialog, globalConst_1.default.dialogLayer);
            };
            FishScene.prototype.setSceneBg = function() {
                this.pausePangxieAni();
                Laya.timer.clear(this, this.checkFishTeamComing);
                var type = BattleData_1.default.scene_type;
                GlobalFunc_1.default.playRoomMusic();
                switch (BattleData_1.default.room_type) {
                  case 0:
                    this.img_bg.skin = "firstPic/rongyanBigBoss1.jpg";
                    break;

                  case 1:
                    if (type != 1) this.img_bg.skin = "room_1/pangxieBoss0.jpg"; else {
                        this.img_bg.skin = "room_1/pangxieBoss1.jpg";
                        this.playPangxieAni();
                    }
                    break;

                  case 2:
                    if (type != 1) this.img_bg.skin = "room_2/rongyanBigBoss0.jpg"; else this.img_bg.skin = "firstPic/rongyanBigBoss1.jpg";
                    break;

                  case 3:
                    if (type != 1) this.img_bg.skin = "room_3/shayuBoss0.jpg"; else this.img_bg.skin = "room_3/shayuBoss1.jpg";
                    break;
                }
                var sceneTime = BattleData_1.default.FishSceneTime;
                var playTime = 3e3;
                if (type == 1) {
                    if (sceneTime < playTime) Laya.timer.once(playTime - sceneTime, this, function() {
                        var bossComing = new BossComingDlg_1.default(BattleData_1.default.room_type);
                        SceneM_1.default.addToMiddLayer(bossComing, globalConst_1.default.maskLayer);
                    });
                    Laya.timer.loop(1e3, this, this.checkFishTeamComing);
                }
            };
            FishScene.prototype.checkFishTeamComing = function() {
                var nowTime = BattleData_1.default.FishSceneTime;
                var endTime = BattleData_1.default.scene_end_time;
                if (endTime - nowTime <= 5 * 1e3) {
                    Laya.timer.clear(this, this.checkFishTeamComing);
                    var fishTeamComing = new FishTeamComingDlg_1.default();
                    SceneM_1.default.addToMiddLayer(fishTeamComing, globalConst_1.default.maskLayer);
                }
            };
            FishScene.prototype.initPangxieBg = function() {
                this.pangxieImg = this.addChild(new Laya.Image("room_1/pangxieBoss2.png"));
                this.pangxieImg.scale(1.36, 1.36);
                this.pangxieImg.anchorX = this.pangxieImg.anchorY = .5;
                this.pangxieImg.pos(this.img_bg.width / 2, this.img_bg.height / 2);
                this.pxTimeLine = TimeLineManager_1.default.creatTimeLine(true);
                this.pxTimeLine.addLabel("px_bg_1", 0).to(this.pangxieImg, {
                    scaleX: 1.5,
                    scaleY: 1.5
                }, 1700).addLabel("px_bg_2", 0).to(this.pangxieImg, {
                    scaleX: 1.36,
                    scaleY: 1.36
                }, 1700);
                this.pxTimeLine.play(0, true);
            };
            FishScene.prototype.playPangxieAni = function() {
                this.pangxieImg.visible = true;
                this.pxTimeLine.resume();
            };
            FishScene.prototype.pausePangxieAni = function() {
                this.pangxieImg.visible = false;
                this.pxTimeLine.pause();
            };
            FishScene.prototype.switchTeam = function(data) {
                BattleData_1.default.cur_scene_id = data.scene_id;
                var sceneInfo = ConfigerHelper_1.default.getCachedValue("allfishScript", "SceneID", BattleData_1.default.cur_scene_id, BattleData_1.default.room_type);
                BattleData_1.default.scene_type = Number(sceneInfo.type);
                BattleData_1.default.scene_end_time = sceneInfo.endtime * 1e3;
                this.fishFct.switchFishTeam(BattleData_1.default.cur_scene_id);
                if (BattleData_1.default.scene_type == 1 || BattleData_1.default.scene_type == 2) this.clearGround();
            };
            FishScene.prototype.clearGround = function() {
                new BubbleEff_1.default();
                var oldFishNodes = FishData_1.default.fishNodesObj;
                FishData_1.default.fishNodesObj = {};
                Laya.timer.once(1200, this, function() {
                    this.setSceneBg();
                    for (var i in oldFishNodes) {
                        var fish = oldFishNodes[i];
                        fish.destroy();
                    }
                    oldFishNodes = {};
                });
            };
            FishScene.prototype.onMouseDown = function() {
                this.btnLayer.closeFishBtn();
                if (!this.canTouchFire()) return;
                if (!this.bulletFct.enoughtGoldToFire(true)) return;
                if (!GlobalFunc_1.default.checkVipToFire()) return;
                if (this.isFirstClick) {
                    EventDis_1.default.dispatchEvent(GlobalVar_1.default.CLOSE_MYSEAT_ANI);
                    this.isFirstClick = false;
                }
                if (this.btnLayer.isMenuShow) this.btnLayer.showMenu();
                var angle = GlobalFunc_1.default.getMyCannonAngle();
                if (!angle) return;
                var myCannon = FishData_1.default.mySeatNode.cannonNode;
                myCannon.justRotate(angle);
                FishData_1.default.isTouching = true;
                this.bulletFct.mouseFire(angle);
            };
            FishScene.prototype.onMouseUp = function() {
                FishData_1.default.isFiring = false;
                FishData_1.default.isTouching = false;
            };
            FishScene.prototype.onMouseMove = function(e) {
                if (!FishData_1.default.isTouching || FishData_1.default.isSelfBitTime || FishData_1.default.isSelfHyTime && !FishData_1.default.hyCanFire) return;
                var angle = GlobalFunc_1.default.getMyCannonAngle();
                if (!angle) return;
                var myCannon = FishData_1.default.mySeatNode.cannonNode;
                myCannon.justRotate(angle);
            };
            FishScene.prototype.onMouseOver = function() {
                this.onMouseUp();
            };
            FishScene.prototype.onMouseOut = function() {
                this.onMouseUp();
            };
            FishScene.prototype.updateGame = function() {
                var bullets = this.bulletFct.bulletNodes;
                for (var bulletIndex in bullets) {
                    var bullet = bullets[bulletIndex];
                    if (bullet.lockFishId > 0) continue;
                    if (bullet.isCaught) continue;
                    var isCaught = false;
                    for (var fishIndex in FishData_1.default.fishNodesObj) {
                        var fish = FishData_1.default.fishNodesObj[fishIndex];
                        if (!fish.isInScreen) continue;
                        if (fish.beginDead) continue;
                        if (GlobalFunc_1.default.isBulletHitFish(bullet, fish)) {
                            isCaught = true;
                            var isSelf = bullet.seatIndex == FishData_1.default.mySeatIndex;
                            fish.onCaught(isSelf);
                            if (!isSelf) break;
                            var data = {
                                bulletId: bullet.bullet_id,
                                fishUniqId: fish.fishUniqId
                            };
                            NetManager_1.default.reqHit(data);
                            break;
                        }
                    }
                    if (isCaught) {
                        bullet.showNet();
                        break;
                    }
                }
            };
            FishScene.prototype.onServerKillFish = function(data) {
                var fishUniqId = data.fish_id;
                var fish = FishData_1.default.fishNodesObj[fishUniqId];
                if (!fish) {
                    GlobalFunc_1.default.log("没找到后端hit的鱼", fishUniqId);
                    return;
                }
                fish.serverHit(data);
            };
            FishScene.prototype.canTouchFire = function() {
                var b1 = FishData_1.default.isSelfHyTime;
                var b2 = FishData_1.default.hyCanFire;
                if (FishData_1.default.isInDaoDan || FishData_1.default.isSelfBitTime || !FishData_1.default.mySeatNode || FishData_1.default.isSelfHyTime && !FishData_1.default.hyCanFire) return false;
                return true;
            };
            FishScene.prototype.bitPlayBegin = function(data) {
                var bitPlay = new BitPlayNode_1.default();
                bitPlay.beginBitPlay(data.pos, data.seatIndex);
            };
            return FishScene;
        }(layaMaxUI_1.ui.roomScene.FishSceneUI);
        exports.FishScene = FishScene;
    }, {
        "../../common/CommonDialog": 7,
        "../../common/GuideManager": 13,
        "../../common/NewGuideView": 15,
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/hallData/GameData": 26,
        "../../datas/hallData/PlayerData": 27,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../dialog/roomDlg/BossComingDlg": 67,
        "../../dialog/roomDlg/BubbleEff": 68,
        "../../dialog/roomDlg/FishTeamComingDlg": 73,
        "../../globalConst/BattleFunc": 81,
        "../../globalConst/ConfigerHelper": 84,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalUI": 89,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/TimeLineManager": 95,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../rolesNodes/fishNodes/BitPlayNode": 106,
        "../../rolesNodes/otherNodes/DaoDanNode": 122,
        "../../ui/layaMaxUI": 151,
        "./BulletFactory": 143,
        "./FishBtnLayer": 146,
        "./FishFactory": 147,
        "./SeatFactory": 149
    } ],
    149: [ function(require, module, exports) {
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var SeatNode_1 = require("../../rolesNodes/seatNodes/SeatNode");
        var EventDis_1 = require("../../globalConst/EventDis");
        var SceneM_1 = require("../../common/SceneM");
        var globalConst_1 = require("../../globalConst/globalConst");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var FishData_1 = require("../../datas/roomData/FishData");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var SeatFactory = function() {
            function SeatFactory() {
                this.initCannons();
                this.initEvent();
            }
            SeatFactory.prototype.destroy = function() {
                Laya.timer.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
                for (var index = 0; index < this.seatNodes.length; index++) {
                    var seatNode = this.seatNodes[index];
                    if (seatNode) {
                        seatNode.destroy();
                        seatNode.removeSelf();
                        seatNode.removeChildren();
                    }
                }
                this.seatNodes = undefined;
            };
            SeatFactory.prototype.initCannons = function() {
                this.seatNodes = new Array();
                for (var index = 1; index <= 4; index++) {
                    this.seatNodes[index] = new SeatNode_1.default(index);
                    SceneM_1.default.addToLayer(this.seatNodes[index], globalConst_1.default.btnsLayer);
                }
                FishData_1.default.seatNodes = this.seatNodes;
                FishData_1.default.mySeatNode = FishData_1.default.seatNodes[FishData_1.default.mySeatIndex];
                for (var index = 1; index < this.seatNodes.length; index++) {
                    var node = this.seatNodes[index];
                    node.buildSpecialFish() || node.bulidDragonCannonState();
                }
            };
            SeatFactory.prototype.initEvent = function() {
                EventDis_1.default.addEvntListener("player_enter_room", this, this.updateSeat);
                EventDis_1.default.addEvntListener("player_leave_room", this, this.updateSeat);
                EventDis_1.default.addEvntListener("change_paobei_notice", this, this.updatePaoBei);
                EventDis_1.default.addEvntListener("update_zuantou_score", this, this.updateZtPanel);
            };
            SeatFactory.prototype.updateSeat = function(data) {
                this.seatNodes[data.room_pos + 1].updateSeatUI();
            };
            SeatFactory.prototype.updatePaoBei = function(data) {
                GlobalFunc_1.default.log("当前炮倍", data.pao);
                var seat = BattleData_1.default.getUserSeatByUid(data.uid);
                if (!this || !this.seatNodes) return;
                this.seatNodes[seat].numPanel.changePaoBack(data);
            };
            SeatFactory.prototype.updateZtPanel = function(data) {
                var seat = data.seatIndex;
                var num = data.num;
                this.seatNodes[seat].numPanel.updateZtPanel(num);
            };
            return SeatFactory;
        }();
        exports.default = SeatFactory;
    }, {
        "../../common/SceneM": 19,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/globalConst": 97,
        "../../rolesNodes/seatNodes/SeatNode": 133
    } ],
    150: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var layaMaxUI_1 = require("../../ui/layaMaxUI");
        var spineNode_1 = require("../../rolesNodes/otherNodes/spineNode");
        var JackpotNode_1 = require("../../rolesNodes/otherNodes/JackpotNode");
        var BattleData_1 = require("../../datas/roomData/BattleData");
        var PlayerInfoView_1 = require("../../dialog/hallDlg/PlayerInfoView");
        var SceneM_1 = require("../../common/SceneM");
        var GlobalFunc_1 = require("../../globalConst/GlobalFunc");
        var GlobalObj_1 = require("../../globalConst/GlobalObj");
        var globalConst_1 = require("../../globalConst/globalConst");
        var EventDis_1 = require("../../globalConst/EventDis");
        var NetManager_1 = require("../../netWork/NetManager");
        var SoundM_1 = require("../../common/SoundM");
        var FishData_1 = require("../../datas/roomData/FishData");
        var OnOffManager_1 = require("../../globalConst/OnOffManager");
        var RewardDialog_1 = require("../../dialog/hallDlg/RewardDialog");
        var GlobalVar_1 = require("../../globalConst/GlobalVar");
        var SelectRoomScene = function(_super) {
            __extends(SelectRoomScene, _super);
            function SelectRoomScene() {
                var _this = _super.call(this) || this;
                _this.roomSpine = [];
                _this.jackpotNodes = [];
                _this.fishBox = [];
                _this.spineBoxWidth = 444;
                _this.isConnected = false;
                return _this;
            }
            SelectRoomScene.prototype.init = function() {
                var _this = this;
                this.roomData = BattleData_1.default.roomData;
                this.roomNum = BattleData_1.default.roomNum;
                this.initInfoView();
                this.initSelf();
                this.initFishBox();
                this.initSpine();
                OnOffManager_1.default.isJackPotOn && this.initJackpot();
                globalConst_1.default.enterRoomFlag = true;
                this.initList();
                this.btnReturn.on(Laya.Event.CLICK, this, function() {
                    SceneM_1.default.replaceScene("FirstHallScene");
                    _this.destroy();
                });
                (!BattleData_1.default.roomData || BattleData_1.default.roomData.length == 0) && BattleData_1.default.loadRoomJson();
                this.lstRoom.renderHandler = new Laya.Handler(this, this.onRender);
                this.lstRoom.mouseHandler = new Laya.Handler(this, this.onMouse);
                BattleData_1.default.startAddRewardPool();
                SoundM_1.default.playMusic(globalConst_1.default.Sud_bg_hall);
                EventDis_1.default.addEvntListener("paySuccess", this, function(data) {
                    var rewardDlg = new RewardDialog_1.default(data.items);
                    rewardDlg.init(null, null);
                    SceneM_1.default.addToMiddLayer(rewardDlg, globalConst_1.default.dialogLayer);
                });
                EventDis_1.default.addEvntListener(GlobalVar_1.default.ENTER_ROOM_SUCCESS, this, this.enterBattle);
            };
            SelectRoomScene.prototype.initInfoView = function() {
                this.viewInfo = new PlayerInfoView_1.PlayerInfoView();
                this.viewInfo.left = -130;
                this.viewInfo.mouseThrough = true;
                this.viewInfo.closePlayerInfo();
                this.addChild(this.viewInfo);
                GlobalFunc_1.default.doLRAdapt({
                    node: this.viewInfo
                });
            };
            SelectRoomScene.prototype.initSelf = function() {
                var width = Laya.stage.width;
                this.lstRoom.width = width;
                this.spineBoxWidth = Math.floor(width / 3);
                this.lstRoom.x = 0;
            };
            SelectRoomScene.prototype.initSpine = function() {
                for (var index = 1; index < this.roomNum; index++) {
                    this.lstRoom.getCell(index - 1);
                    var spine = new spineNode_1.default();
                    spine.layer = undefined;
                    spine.fileName = "erjirukou" + index;
                    spine.loadSpine();
                    this.roomSpine[index - 1] = spine;
                }
            };
            SelectRoomScene.prototype.initJackpot = function() {
                for (var index = 1; index < this.roomNum; index++) if (this.roomData[index].isPool == "1") {
                    var jackpotNode = new JackpotNode_1.default(index - 1, this.roomData[index]);
                    this.jackpotNodes[index - 1] = jackpotNode;
                    jackpotNode.startCoin();
                } else this.jackpotNodes[index - 1] = undefined;
            };
            SelectRoomScene.prototype.initFishBox = function() {
                for (var index = 1; index < this.roomNum; index++) {
                    var fishData = this.roomData[index].specialfish;
                    var box = this.getSpecialFish(fishData);
                    this.fishBox[index - 1] = box;
                }
            };
            SelectRoomScene.prototype.initList = function() {
                var roomObj = [];
                for (var index = 1; index < this.roomNum; index++) {
                    roomObj[index - 1] = GlobalObj_1.default.createRoomObj(this.roomSpine[index - 1], this.jackpotNodes[index - 1], this.roomData[index], this.fishBox[index - 1]);
                    roomObj[index - 1].width = this.spineBoxWidth;
                }
                this.lstRoom.array = roomObj;
            };
            SelectRoomScene.prototype.onRender = function(box, index) {
                var data = box.dataSource;
                box.width = data.width;
                box.x = data.width * index;
                var roomSpine = box.getChildByName("box_spine").getChildByName("room_spine");
                var text_jackpot = box.getChildByName("box_jackpot").getChildByName("text_jackpot");
                var box_jackpot = box.getChildByName("box_jackpot");
                var box_specialFish = box.getChildByName("box_specialFish");
                var img_getTicket = box.getChildByName("box_ticket").getChildByName("img_getTicket");
                img_getTicket.skin = "selectRoom/img_roomName_" + index + ".png";
                var img_goldNum = box.getChildByName("box_ticket").getChildByName("img_goldNum");
                var mingolds = +this.roomData[index + 1].mingolds;
                if (mingolds == 5e4) img_goldNum.skin = "selectRoom/img_5w.png"; else if (mingolds == 1e5) img_goldNum.skin = "selectRoom/img_10w.png"; else if (mingolds == 2e5) img_goldNum.skin = "selectRoom/img_20w.png"; else if (mingolds == 0) img_goldNum.skin = "selectRoom/img_wxz.png"; else img_goldNum.skin = "selectRoom/img_3w.png";
                roomSpine.removeChildren();
                roomSpine.addChild(data.spine);
                if (!!data.jackpotNode) box_jackpot.addChild(data.jackpotNode);
                if (!!data.fishBox) box_specialFish.addChild(data.fishBox);
            };
            SelectRoomScene.prototype.onMouse = function(e, index) {
                if (e.type == Laya.Event.CLICK && globalConst_1.default.enterRoomFlag == true) {
                    globalConst_1.default.enterRoomFlag = false;
                    NetManager_1.default.reqEnterRoom({
                        room_type: index + 1,
                        enter: true
                    });
                }
            };
            SelectRoomScene.prototype.enterBattle = function(data) {
                this.enterFishLoading();
                FishData_1.default.initFishData();
            };
            SelectRoomScene.prototype.enterFishLoading = function() {
                var sceneLayer = SceneM_1.default.pushMaskScene("FishLoadingScene");
            };
            SelectRoomScene.prototype.getSpecialFish = function(fishData) {
                var box = new Laya.Box();
                var width = 0;
                for (var index = 0; index < fishData.length; index++) {
                    var fish = new Laya.Box();
                    fish.width = fish.height = 100;
                    fish.x = index * 112;
                    width += 100;
                    if (index != 0) width += 12;
                    var bg = new Laya.Image("firstPic/img_item_bg.png");
                    var fishIcon = GlobalFunc_1.default.getFishIcon(fishData[index]);
                    if (fishIcon.height > 120) {
                        var scale = 120 / fishIcon.height;
                        fishIcon.scale(scale, scale);
                    }
                    bg.centerX = fishIcon.centerX = fishIcon.centerY = 0;
                    bg.centerY = 2;
                    fishIcon.zOrder = 1;
                    fish.addChild(bg);
                    fish.addChild(fishIcon);
                    box.addChild(fish);
                }
                box.width = width;
                box.centerX = box.centerY = 0;
                return box;
            };
            SelectRoomScene.prototype.destroy = function() {
                if (this.viewInfo) this.viewInfo.destroy();
                if (this.jackpotNodes) for (var index = 0; index < this.jackpotNodes.length; index++) {
                    var jackpotNode = this.jackpotNodes[index];
                    jackpotNode && jackpotNode.destroy();
                }
                Laya.Tween.clearAll(this);
                EventDis_1.default.delAllEvnt(this);
                Laya.timer.clearAll(this);
                this.removeSelf();
            };
            return SelectRoomScene;
        }(layaMaxUI_1.ui.hallScene.SelectRoomSceneUI);
        exports.SelectRoomScene = SelectRoomScene;
    }, {
        "../../common/SceneM": 19,
        "../../common/SoundM": 21,
        "../../datas/roomData/BattleData": 29,
        "../../datas/roomData/FishData": 30,
        "../../dialog/hallDlg/PlayerInfoView": 57,
        "../../dialog/hallDlg/RewardDialog": 60,
        "../../globalConst/EventDis": 85,
        "../../globalConst/GlobalFunc": 87,
        "../../globalConst/GlobalObj": 88,
        "../../globalConst/GlobalVar": 90,
        "../../globalConst/OnOffManager": 93,
        "../../globalConst/globalConst": 97,
        "../../netWork/NetManager": 101,
        "../../rolesNodes/otherNodes/JackpotNode": 124,
        "../../rolesNodes/otherNodes/spineNode": 129,
        "../../ui/layaMaxUI": 151
    } ],
    151: [ function(require, module, exports) {
        var __extends = this && this.__extends || function() {
            var extendStatics = Object.setPrototypeOf || {
                __proto__: []
            } instanceof Array && function(d, b) {
                d.__proto__ = b;
            } || function(d, b) {
                for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
            };
            return function(d, b) {
                extendStatics(d, b);
                function __() {
                    this.constructor = d;
                }
                d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
            };
        }();
        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var REG = Laya.ClassUtils.regClass;
        var ui;
        (function(ui) {
            var battle;
            (function(battle) {
                var netAniUI = function(_super) {
                    __extends(netAniUI, _super);
                    function netAniUI() {
                        return _super.call(this) || this;
                    }
                    netAniUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(netAniUI.uiView);
                    };
                    netAniUI.uiView = {
                        type: "View",
                        props: {
                            y: 100,
                            x: 100,
                            width: 200,
                            height: 200,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 100,
                                x: 100,
                                var: "img_net",
                                skin: "nets/img_net1.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 3
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 15
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 3
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 15
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 15
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "nets/img_net1.png" ],
                        loadList3D: []
                    };
                    return netAniUI;
                }(Laya.View);
                battle.netAniUI = netAniUI;
                REG("ui.battle.netAniUI", netAniUI);
                var SpecialViewUI = function(_super) {
                    __extends(SpecialViewUI, _super);
                    function SpecialViewUI() {
                        return _super.call(this) || this;
                    }
                    SpecialViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(SpecialViewUI.uiView);
                    };
                    SpecialViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 300,
                            height: 300
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 150,
                                width: 300,
                                var: "boxContent",
                                pivotY: 150,
                                pivotX: 150,
                                height: 300,
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 9,
                            child: [ {
                                type: "Image",
                                props: {
                                    var: "imgType",
                                    skin: "fishIcon/img_sp21.png",
                                    scaleY: .65,
                                    scaleX: .65,
                                    centerX: 0,
                                    bottom: 24,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 3
                            }, {
                                type: "Image",
                                props: {
                                    var: "imgLabel",
                                    skin: "battle/text_sp21.png",
                                    scaleY: .65,
                                    scaleX: .65,
                                    centerX: 0,
                                    bottom: 24,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 10
                            }, {
                                type: "Box",
                                props: {
                                    y: 219,
                                    width: 235,
                                    height: 46,
                                    centerX: 0
                                },
                                compId: 4,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        width: 22,
                                        skin: "battle/text_sp1.png",
                                        scaleY: 1,
                                        scaleX: 1,
                                        left: 72,
                                        height: 24,
                                        centerY: 1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 5
                                }, {
                                    type: "Image",
                                    props: {
                                        skin: "battle/text_sp2.png",
                                        scaleY: 1,
                                        scaleX: 1,
                                        left: 95,
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 6
                                }, {
                                    type: "Image",
                                    props: {
                                        skin: "battle/text_sp3.png",
                                        scaleY: 1,
                                        scaleX: 1,
                                        right: 95,
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 7
                                }, {
                                    type: "Image",
                                    props: {
                                        skin: "battle/text_sp4.png",
                                        scaleY: 1,
                                        scaleX: 1,
                                        right: 72,
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 8
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 5,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "alpha",
                                        index: 10
                                    } ]
                                }
                            }, {
                                target: 6,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 20
                                    } ]
                                }
                            }, {
                                target: 7,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 30
                                    } ]
                                }
                            }, {
                                target: 8,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "alpha",
                                        index: 35
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "alpha",
                                        index: 40
                                    } ]
                                }
                            } ],
                            name: "aniAlpha",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 5,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 20
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 25
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 30
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 20
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 25
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 30
                                    } ]
                                }
                            }, {
                                target: 6,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 25
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 30
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 35
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 25
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 30
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 35
                                    } ]
                                }
                            }, {
                                target: 7,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 30
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 35
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 40
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 30
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 35
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 40
                                    } ]
                                }
                            }, {
                                target: 8,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 35
                                    }, {
                                        value: 2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 40
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 45
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 35
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 40
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 45
                                    } ]
                                }
                            }, {
                                target: 10,
                                keyframes: {
                                    x: [ {
                                        value: 150,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "x",
                                        index: 0
                                    } ],
                                    scaleX: [ {
                                        value: .65,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .69,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: .65,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 20
                                    }, {
                                        value: .69,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 30
                                    }, {
                                        value: .65,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 40
                                    } ]
                                }
                            } ],
                            name: "aniScale",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "fishIcon/img_sp21.png", "battle/text_sp21.png", "battle/text_sp1.png", "battle/text_sp2.png", "battle/text_sp3.png", "battle/text_sp4.png" ],
                        loadList3D: []
                    };
                    return SpecialViewUI;
                }(Laya.View);
                battle.SpecialViewUI = SpecialViewUI;
                REG("ui.battle.SpecialViewUI", SpecialViewUI);
            })(battle = ui.battle || (ui.battle = {}));
        })(ui = exports.ui || (exports.ui = {}));
        (function(ui) {
            var common;
            (function(common) {
                var BombViewUI = function(_super) {
                    __extends(BombViewUI, _super);
                    function BombViewUI() {
                        return _super.call(this) || this;
                    }
                    BombViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(BombViewUI.uiView);
                    };
                    BombViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 203,
                            height: 203
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 101.5,
                                x: 100,
                                var: "redLight",
                                skin: "battle/img_daod_1.png",
                                scaleY: 1.12,
                                scaleX: 1.12,
                                rotation: 117,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: 103,
                                x: 101,
                                var: "yellowLight",
                                skin: "battle/img_daod_0.png",
                                scaleY: 1,
                                scaleX: 1,
                                rotation: -234,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 7
                        }, {
                            type: "Image",
                            props: {
                                y: -207,
                                x: 131,
                                skin: "smallPic/zuantouTail_1.png",
                                scaleY: .5,
                                scaleX: .5,
                                rotation: 180
                            },
                            compId: 9
                        }, {
                            type: "Image",
                            props: {
                                y: -200,
                                visible: false,
                                var: "imgBullet",
                                scaleY: .5,
                                scaleX: .5,
                                rotation: 180,
                                centerX: 2,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 1
                            },
                            compId: 8
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 6,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1.12,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 3
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 17
                                    }, {
                                        value: .88,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 20
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 23
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 37
                                    }, {
                                        value: 1.12,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 40
                                    } ],
                                    scaleX: [ {
                                        value: 1.12,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 3
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 17
                                    }, {
                                        value: .88,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 20
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 23
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 37
                                    }, {
                                        value: 1.12,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 40
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 117,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 40
                                    } ]
                                }
                            }, {
                                target: 7,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.02,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 3
                                    }, {
                                        value: 1.25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 17
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 20
                                    }, {
                                        value: 1.25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 23
                                    }, {
                                        value: 1.02,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 37
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 40
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.02,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 3
                                    }, {
                                        value: 1.25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 17
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 20
                                    }, {
                                        value: 1.25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 23
                                    }, {
                                        value: 1.02,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 37
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 40
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: -234,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "rotation",
                                        index: 40
                                    } ]
                                }
                            } ],
                            name: "lockFish",
                            id: 1,
                            frameRate: 36,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 9,
                                keyframes: {
                                    y: [ {
                                        value: -207,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 9,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 87.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 9,
                                        key: "y",
                                        index: 12
                                    } ],
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 9,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 9,
                                        key: "visible",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 8,
                                keyframes: {
                                    y: [ {
                                        value: -200,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 100,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "y",
                                        index: 12
                                    } ]
                                }
                            } ],
                            name: "aniBomb",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 9,
                                keyframes: {
                                    skin: [ {
                                        value: "smallPic/zuantouTail_1.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 9,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "smallPic/zuantouTail_2.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 9,
                                        key: "skin",
                                        index: 1
                                    }, {
                                        value: "smallPic/zuantouTail_3.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 9,
                                        key: "skin",
                                        index: 2
                                    }, {
                                        value: "smallPic/zuantouTail_4.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 9,
                                        key: "skin",
                                        index: 3
                                    } ]
                                }
                            } ],
                            name: "aniFire",
                            id: 3,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [],
                            name: "aniFinger",
                            id: 4,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "battle/img_daod_1.png", "battle/img_daod_0.png", "smallPic/zuantouTail_1.png", "smallPic/zuantouTail_2.png", "smallPic/zuantouTail_3.png", "smallPic/zuantouTail_4.png" ],
                        loadList3D: []
                    };
                    return BombViewUI;
                }(Laya.View);
                common.BombViewUI = BombViewUI;
                REG("ui.common.BombViewUI", BombViewUI);
                var BubbleIconViewUI = function(_super) {
                    __extends(BubbleIconViewUI, _super);
                    function BubbleIconViewUI() {
                        return _super.call(this) || this;
                    }
                    BubbleIconViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(BubbleIconViewUI.uiView);
                    };
                    BubbleIconViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 115,
                            height: 118
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 115,
                                height: 118
                            },
                            compId: 3,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    var: "imgBg",
                                    skin: "activitys/img_hd_bg7.png",
                                    scaleY: .8,
                                    scaleX: .8
                                },
                                compId: 4
                            }, {
                                type: "Image",
                                props: {
                                    y: 59,
                                    x: 58,
                                    width: 66,
                                    var: "imgIcon",
                                    skin: "iconAndSkin/icon_goldCoin.png",
                                    height: 63,
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 5
                            }, {
                                type: "Label",
                                props: {
                                    y: 92,
                                    x: 10.5,
                                    width: 101,
                                    var: "lblCount",
                                    valign: "middle",
                                    text: "10000",
                                    strokeColor: "#0b3170",
                                    stroke: 3,
                                    mouseEnabled: false,
                                    height: 26,
                                    fontSize: 26,
                                    font: "黑体",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "center"
                                },
                                compId: 6
                            } ]
                        } ],
                        loadList: [ "activitys/img_hd_bg7.png", "iconAndSkin/icon_goldCoin.png" ],
                        loadList3D: []
                    };
                    return BubbleIconViewUI;
                }(Laya.View);
                common.BubbleIconViewUI = BubbleIconViewUI;
                REG("ui.common.BubbleIconViewUI", BubbleIconViewUI);
                var CommonDialogUI = function(_super) {
                    __extends(CommonDialogUI, _super);
                    function CommonDialogUI() {
                        return _super.call(this) || this;
                    }
                    CommonDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(CommonDialogUI.uiView);
                    };
                    CommonDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 2445,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1125,
                                centerY: 0,
                                centerX: 0,
                                alpha: .7
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 12,
                            child: [ {
                                type: "Image",
                                props: {
                                    width: 680,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "40,40,59,51",
                                    height: 480,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 8,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 29,
                                        x: 0,
                                        width: 680,
                                        var: "box_notice",
                                        height: 423
                                    },
                                    compId: 17,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 135,
                                            x: 340,
                                            width: 0,
                                            var: "box_text1",
                                            rotation: 0,
                                            height: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 39
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 221,
                                            x: 340,
                                            var: "box_text2",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 40
                                    }, {
                                        type: "Button",
                                        props: {
                                            width: 228,
                                            var: "btn_ok",
                                            stateNum: 1,
                                            skin: "basePic/btn_yellow.png",
                                            sizeGrid: "0,45,0,45",
                                            right: 85,
                                            pivotY: 46.5,
                                            pivotX: 114,
                                            labelStrokeColor: "#70200b",
                                            labelStroke: 4,
                                            labelSize: 32,
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            label: "购买",
                                            height: 93,
                                            bottom: 30
                                        },
                                        compId: 13,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                isSetSelf: false,
                                                isPlaySound: true,
                                                isPlayAni: true,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 41
                                        } ]
                                    }, {
                                        type: "Button",
                                        props: {
                                            width: 228,
                                            var: "btn_cancle",
                                            stateNum: 1,
                                            skin: "noZip/btn_green.png",
                                            sizeGrid: "0,45,0,45",
                                            pivotY: 46.5,
                                            pivotX: 114,
                                            left: 85,
                                            labelStrokeColor: "#226306",
                                            labelStroke: 4,
                                            labelSize: 32,
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            label: "取消",
                                            height: 93,
                                            bottom: 30
                                        },
                                        compId: 15,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                isSetSelf: false,
                                                isPlaySound: true,
                                                isPlayAni: true,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 42
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 100,
                                        x: 60,
                                        var: "box_help"
                                    },
                                    compId: 21
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 13,
                                        x: 666,
                                        var: "img_back",
                                        skin: "firstPic/btn_close.png",
                                        right: -19,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 11,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 43
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 125,
                                    skin: "noZip/img_title_2.png",
                                    centerX: 0
                                },
                                compId: 5,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 14,
                                        x: 79,
                                        width: 235,
                                        var: "label_top",
                                        valign: "middle",
                                        text: "购买技能",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 40,
                                        fontSize: 40,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 9
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "basePic/btn_yellow.png", "noZip/btn_green.png", "firstPic/btn_close.png", "noZip/img_title_2.png" ],
                        loadList3D: []
                    };
                    return CommonDialogUI;
                }(Laya.Dialog);
                common.CommonDialogUI = CommonDialogUI;
                REG("ui.common.CommonDialogUI", CommonDialogUI);
                var commonWaitingNodeUI = function(_super) {
                    __extends(commonWaitingNodeUI, _super);
                    function commonWaitingNodeUI() {
                        return _super.call(this) || this;
                    }
                    commonWaitingNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(commonWaitingNodeUI.uiView);
                    };
                    commonWaitingNodeUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 6
                        }, {
                            type: "Box",
                            props: {
                                var: "box1",
                                centerY: 85,
                                centerX: 8,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 7
                        }, {
                            type: "Box",
                            props: {
                                x: 816,
                                width: 189,
                                var: "box2",
                                height: 98,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 18
                        }, {
                            type: "Box",
                            props: {
                                width: 165,
                                var: "box3",
                                height: 139,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 16,
                            child: [ {
                                type: "Image",
                                props: {
                                    skin: "basePic/waiting.png",
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 25
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 25,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 25,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 25,
                                        key: "rotation",
                                        index: 25
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [],
                            name: "ani2",
                            id: 2,
                            frameRate: 24,
                            action: 2
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "basePic/waiting.png" ],
                        loadList3D: []
                    };
                    return commonWaitingNodeUI;
                }(Laya.View);
                common.commonWaitingNodeUI = commonWaitingNodeUI;
                REG("ui.common.commonWaitingNodeUI", commonWaitingNodeUI);
                var DragonGuideViewUI = function(_super) {
                    __extends(DragonGuideViewUI, _super);
                    function DragonGuideViewUI() {
                        return _super.call(this) || this;
                    }
                    DragonGuideViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(DragonGuideViewUI.uiView);
                    };
                    DragonGuideViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                width: 5e3,
                                skin: "basePic/img_black_bg.png",
                                mouseThrough: false,
                                mouseEnabled: true,
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                height: 750
                            },
                            compId: 6,
                            child: [ {
                                type: "Button",
                                props: {
                                    y: 661,
                                    x: 815,
                                    width: 248,
                                    var: "btnShare",
                                    stateNum: 1,
                                    skin: "basePic/btn_yellow.png",
                                    sizeGrid: "40,46,50,54",
                                    labelStrokeColor: "#70200b",
                                    labelStroke: 3.8,
                                    labelSize: 32,
                                    labelFont: "黑体",
                                    labelColors: "#ffffff",
                                    labelBold: true,
                                    labelAlign: "center",
                                    label: "分享领取",
                                    height: 94,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 4,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: 1,
                                        aniScaleX: 1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 5
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 342,
                                    x: 815,
                                    skin: "firstPic/img_share_0.png",
                                    scaleY: .1,
                                    scaleX: .1,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 9
                            }, {
                                type: "Image",
                                props: {
                                    y: 255,
                                    x: 1649,
                                    skin: "firstPic/img_share_2.png"
                                },
                                compId: 10,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 34,
                                        x: 208,
                                        skin: "firstPic/img_share_3.png"
                                    },
                                    compId: 12
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 424,
                                    x: -231,
                                    skin: "firstPic/img_share_1.png"
                                },
                                compId: 11
                            }, {
                                type: "Button",
                                props: {
                                    y: 222.5,
                                    x: 1185,
                                    var: "btnBack",
                                    stateNum: 1,
                                    skin: "firstPic/btn_close.png",
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 13,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 14
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 9,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "elasticOut",
                                        tween: true,
                                        target: 9,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 9,
                                        key: "scaleY",
                                        index: 25
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "elasticOut",
                                        tween: true,
                                        target: 9,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 9,
                                        key: "scaleX",
                                        index: 25
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 9,
                                        key: "alpha",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 11,
                                keyframes: {
                                    y: [ {
                                        value: 424,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 11,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 296.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "y",
                                        index: 10
                                    } ],
                                    x: [ {
                                        value: -221,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 11,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 596,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "x",
                                        index: 10
                                    } ]
                                }
                            }, {
                                target: 10,
                                keyframes: {
                                    y: [ {
                                        value: 255,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 341,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 10
                                    } ],
                                    x: [ {
                                        value: 1649,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 10,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 639,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "x",
                                        index: 10
                                    } ]
                                }
                            }, {
                                target: 4,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 25
                                    } ]
                                }
                            }, {
                                target: 3,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .7,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 3
                                    } ]
                                }
                            }, {
                                target: 2,
                                keyframes: {
                                    sceneColor: [ {
                                        value: "#000000",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 2,
                                        key: "sceneColor",
                                        index: 0
                                    }, {
                                        value: "#ffffff",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 2,
                                        key: "sceneColor",
                                        index: 25
                                    } ]
                                }
                            }, {
                                target: 13,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 13,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 13,
                                        key: "alpha",
                                        index: 25
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [],
                            name: "ani2",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "basePic/btn_yellow.png", "firstPic/img_share_0.png", "firstPic/img_share_2.png", "firstPic/img_share_3.png", "firstPic/img_share_1.png", "firstPic/btn_close.png" ],
                        loadList3D: []
                    };
                    return DragonGuideViewUI;
                }(Laya.View);
                common.DragonGuideViewUI = DragonGuideViewUI;
                REG("ui.common.DragonGuideViewUI", DragonGuideViewUI);
                var GuideFingerViewUI = function(_super) {
                    __extends(GuideFingerViewUI, _super);
                    function GuideFingerViewUI() {
                        return _super.call(this) || this;
                    }
                    GuideFingerViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(GuideFingerViewUI.uiView);
                    };
                    GuideFingerViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 300,
                            height: 300
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 130,
                                skin: "firstPic/img_xins_3.png",
                                height: 130,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .9
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                width: 320,
                                skin: "firstPic/img_xins_3.png",
                                height: 320,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                skin: "firstPic/img_xins_2.png",
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 7
                        }, {
                            type: "Image",
                            props: {
                                y: 236.5,
                                x: 237,
                                skin: "firstPic/img_xins_1.png",
                                scaleY: 1,
                                scaleX: 1,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 8
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 7,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .6,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 20
                                    } ]
                                }
                            } ],
                            name: "ani_alpha",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 5,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 2.8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 15
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 20
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 2.8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 20
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "alpha",
                                        index: 20
                                    } ]
                                }
                            } ],
                            name: "ani_img1",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 6,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 10
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 10
                                    } ],
                                    alpha: [ {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 20
                                    } ]
                                }
                            } ],
                            name: "ani_img2",
                            id: 3,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 8,
                                keyframes: {
                                    y: [ {
                                        value: 236,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 204,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "y",
                                        index: 5
                                    }, {
                                        value: 236,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "y",
                                        index: 10
                                    } ],
                                    x: [ {
                                        value: 236,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 207,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "x",
                                        index: 5
                                    }, {
                                        value: 236,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "x",
                                        index: 10
                                    } ]
                                }
                            } ],
                            name: "ani_img3",
                            id: 4,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "firstPic/img_xins_3.png", "firstPic/img_xins_2.png", "firstPic/img_xins_1.png" ],
                        loadList3D: []
                    };
                    return GuideFingerViewUI;
                }(Laya.View);
                common.GuideFingerViewUI = GuideFingerViewUI;
                REG("ui.common.GuideFingerViewUI", GuideFingerViewUI);
                var GuideTipViewUI = function(_super) {
                    __extends(GuideTipViewUI, _super);
                    function GuideTipViewUI() {
                        return _super.call(this) || this;
                    }
                    GuideTipViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(GuideTipViewUI.uiView);
                    };
                    GuideTipViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 518,
                            height: 124
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                width: 518,
                                height: 124
                            },
                            compId: 3,
                            child: [ {
                                type: "Image",
                                props: {
                                    width: 518,
                                    skin: "firstPic/img_xins_0.png",
                                    sizeGrid: "8,30,13,127",
                                    height: 124
                                },
                                compId: 4
                            }, {
                                type: "Image",
                                props: {
                                    y: -23,
                                    x: -14,
                                    skin: "firstPic/img_xins_4.png",
                                    name: "imgFish"
                                },
                                compId: 5
                            }, {
                                type: "Label",
                                props: {
                                    x: 138,
                                    wordWrap: true,
                                    width: 340,
                                    var: "lblDesc",
                                    valign: "middle",
                                    height: 70,
                                    fontSize: 22,
                                    font: "黑体",
                                    color: "#006c9e",
                                    centerY: 0,
                                    bold: true,
                                    align: "left"
                                },
                                compId: 6
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 27,
                                x: 137,
                                width: 340,
                                visible: false,
                                var: "boxTicket",
                                height: 70
                            },
                            compId: 14,
                            child: [ {
                                type: "Label",
                                props: {
                                    x: 0,
                                    wordWrap: true,
                                    width: 102,
                                    valign: "middle",
                                    text: "恭喜获得",
                                    height: 30,
                                    fontSize: 22,
                                    font: "黑体",
                                    color: "#006c9e",
                                    centerY: -20,
                                    bold: true,
                                    align: "left"
                                },
                                compId: 17
                            }, {
                                type: "Label",
                                props: {
                                    x: 0,
                                    wordWrap: true,
                                    width: 56,
                                    valign: "middle",
                                    text: "还差",
                                    height: 30,
                                    fontSize: 22,
                                    font: "黑体",
                                    color: "#006c9e",
                                    centerY: 15,
                                    bold: true,
                                    align: "left"
                                },
                                compId: 18
                            }, {
                                type: "Label",
                                props: {
                                    x: 140,
                                    wordWrap: true,
                                    width: 102,
                                    valign: "middle",
                                    text: "即可兑换",
                                    height: 23,
                                    fontSize: 22,
                                    font: "黑体",
                                    color: "#006c9e",
                                    centerY: 15,
                                    bold: true,
                                    align: "left"
                                },
                                compId: 19
                            }, {
                                type: "Label",
                                props: {
                                    x: 234,
                                    width: 102,
                                    var: "lblTarget",
                                    valign: "middle",
                                    strokeColor: "#e22f00",
                                    stroke: 3.5,
                                    height: 23,
                                    fontSize: 22,
                                    font: "黑体",
                                    color: "#fffc00",
                                    centerY: 15,
                                    bold: true,
                                    align: "center"
                                },
                                compId: 20
                            }, {
                                type: "Label",
                                props: {
                                    x: 47,
                                    width: 87,
                                    var: "lblNeed",
                                    valign: "middle",
                                    strokeColor: "#e22f00",
                                    stroke: 3.5,
                                    height: 23,
                                    fontSize: 22,
                                    font: "黑体",
                                    color: "#fffc00",
                                    centerY: 15,
                                    bold: true,
                                    align: "center"
                                },
                                compId: 21
                            }, {
                                type: "Label",
                                props: {
                                    x: 98,
                                    width: 102,
                                    var: "lblTicket",
                                    valign: "middle",
                                    strokeColor: "#e22f00",
                                    stroke: 3.5,
                                    height: 23,
                                    fontSize: 22,
                                    font: "黑体",
                                    color: "#fffc00",
                                    centerY: -21,
                                    bold: true,
                                    align: "left"
                                },
                                compId: 22
                            } ]
                        } ],
                        loadList: [ "firstPic/img_xins_0.png", "firstPic/img_xins_4.png" ],
                        loadList3D: []
                    };
                    return GuideTipViewUI;
                }(Laya.View);
                common.GuideTipViewUI = GuideTipViewUI;
                REG("ui.common.GuideTipViewUI", GuideTipViewUI);
                var JackpotAccAniUI = function(_super) {
                    __extends(JackpotAccAniUI, _super);
                    function JackpotAccAniUI() {
                        return _super.call(this) || this;
                    }
                    JackpotAccAniUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(JackpotAccAniUI.uiView);
                    };
                    JackpotAccAniUI.uiView = {
                        type: "View",
                        props: {
                            width: 600,
                            height: 350,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                var: "img_light",
                                skin: "smallPic/currencyLight1.png",
                                scaleY: 2,
                                scaleX: 2,
                                centerY: -27,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 31
                        }, {
                            type: "Image",
                            props: {
                                y: 12,
                                skin: "jackpotPool/img_jackpot_13.png",
                                centerX: 0
                            },
                            compId: 32,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 237,
                                    x: 153,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 35
                            }, {
                                type: "Image",
                                props: {
                                    y: 261,
                                    x: 200,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 36
                            }, {
                                type: "Image",
                                props: {
                                    y: 283,
                                    x: 243,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 37
                            }, {
                                type: "Image",
                                props: {
                                    y: 299,
                                    x: 296,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 38
                            }, {
                                type: "Image",
                                props: {
                                    y: 285,
                                    x: 346,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 39
                            }, {
                                type: "Image",
                                props: {
                                    y: 262,
                                    x: 391,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 40
                            }, {
                                type: "Image",
                                props: {
                                    y: 240,
                                    x: 436,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 41
                            }, {
                                type: "Image",
                                props: {
                                    y: 215,
                                    x: 486,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 42
                            }, {
                                type: "Image",
                                props: {
                                    y: 192,
                                    x: 531,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 43
                            }, {
                                type: "Image",
                                props: {
                                    y: 160,
                                    x: 569,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 44
                            }, {
                                type: "Image",
                                props: {
                                    y: 129,
                                    x: 532,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 45
                            }, {
                                type: "Image",
                                props: {
                                    y: 105,
                                    x: 486,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 46
                            }, {
                                type: "Image",
                                props: {
                                    y: 83,
                                    x: 438,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 47
                            }, {
                                type: "Image",
                                props: {
                                    y: 59,
                                    x: 392,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 48
                            }, {
                                type: "Image",
                                props: {
                                    y: 37,
                                    x: 344,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 49
                            }, {
                                type: "Image",
                                props: {
                                    y: 23,
                                    x: 296,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 50
                            }, {
                                type: "Image",
                                props: {
                                    y: 37,
                                    x: 245,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 51
                            }, {
                                type: "Image",
                                props: {
                                    y: 60,
                                    x: 198,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 52
                            }, {
                                type: "Image",
                                props: {
                                    y: 82,
                                    x: 153,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 53
                            }, {
                                type: "Image",
                                props: {
                                    y: 106,
                                    x: 107,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 54
                            }, {
                                type: "Image",
                                props: {
                                    y: 128,
                                    x: 63,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 55
                            }, {
                                type: "Image",
                                props: {
                                    y: 160,
                                    x: 24,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 56
                            }, {
                                type: "Image",
                                props: {
                                    y: 192,
                                    x: 63,
                                    skin: "jackpotPool/img_jackpot_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 57
                            }, {
                                type: "Image",
                                props: {
                                    y: 215,
                                    x: 106,
                                    skin: "jackpotPool/img_jackpot_12.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 58
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: -32,
                                skin: "jackpotPool/img_jackpot_10.png",
                                centerX: 0
                            },
                            compId: 33
                        }, {
                            type: "Label",
                            props: {
                                y: 174,
                                x: 300,
                                var: "text_goldNum",
                                text: "89,000,000",
                                scaleY: 1.3,
                                scaleX: 1.3,
                                height: 80,
                                font: "numberFont1",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 34
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 35,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 35,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 35,
                                        key: "skin",
                                        index: 4
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 35,
                                        key: "skin",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 36,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 36,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 36,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 37,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 37,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 37,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 38,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 38,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 38,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 39,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 39,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 39,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 40,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 40,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 40,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 41,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 41,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 41,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 42,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 42,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 42,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 43,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 43,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 43,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 44,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 44,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 44,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 45,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 45,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 45,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 46,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 46,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 46,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 47,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 47,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 47,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 48,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 48,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 48,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 49,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 49,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 49,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 50,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 50,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 50,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 51,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 51,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 51,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 52,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 52,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 52,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 53,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 53,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 53,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 54,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 54,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 54,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 55,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 55,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 55,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 56,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 56,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 56,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 57,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 57,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 57,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 58,
                                keyframes: {
                                    skin: [ {
                                        value: "jackpotPool/img_jackpot_12.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 58,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "jackpotPool/img_jackpot_11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 58,
                                        key: "skin",
                                        index: 4
                                    } ]
                                }
                            } ],
                            name: "lightShine",
                            id: 1,
                            frameRate: 24,
                            action: 2
                        }, {
                            nodes: [ {
                                target: 31,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 31,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 31,
                                        key: "rotation",
                                        index: 160
                                    } ]
                                }
                            } ],
                            name: "lightRotation",
                            id: 2,
                            frameRate: 24,
                            action: 2
                        } ],
                        loadList: [ "smallPic/currencyLight1.png", "jackpotPool/img_jackpot_13.png", "jackpotPool/img_jackpot_11.png", "jackpotPool/img_jackpot_12.png", "jackpotPool/img_jackpot_10.png" ],
                        loadList3D: []
                    };
                    return JackpotAccAniUI;
                }(Laya.View);
                common.JackpotAccAniUI = JackpotAccAniUI;
                REG("ui.common.JackpotAccAniUI", JackpotAccAniUI);
                var MarqueeNodeUI = function(_super) {
                    __extends(MarqueeNodeUI, _super);
                    function MarqueeNodeUI() {
                        return _super.call(this) || this;
                    }
                    MarqueeNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(MarqueeNodeUI.uiView);
                    };
                    MarqueeNodeUI.uiView = {
                        type: "View",
                        props: {
                            width: 1126,
                            height: 47
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 1126,
                                skin: "noZip/img_bg_3.png",
                                sizeGrid: "1,45,1,45",
                                height: 47
                            },
                            compId: 3,
                            child: [ {
                                type: "Panel",
                                props: {
                                    width: 800,
                                    height: 47,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 10,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 800,
                                        var: "box_marquee",
                                        height: 47
                                    },
                                    compId: 7,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            x: 8,
                                            skin: "common/img_marguee.png",
                                            centerY: 0
                                        },
                                        compId: 8
                                    }, {
                                        type: "Box",
                                        props: {
                                            x: 60,
                                            var: "text_marquee",
                                            height: 26,
                                            centerY: 0
                                        },
                                        compId: 9
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "noZip/img_bg_3.png", "common/img_marguee.png" ],
                        loadList3D: []
                    };
                    return MarqueeNodeUI;
                }(Laya.View);
                common.MarqueeNodeUI = MarqueeNodeUI;
                REG("ui.common.MarqueeNodeUI", MarqueeNodeUI);
                var NewGuideViewUI = function(_super) {
                    __extends(NewGuideViewUI, _super);
                    function NewGuideViewUI() {
                        return _super.call(this) || this;
                    }
                    NewGuideViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(NewGuideViewUI.uiView);
                    };
                    NewGuideViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1685,
                                width: 5e3,
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 15
                        }, {
                            type: "Box",
                            props: {
                                y: 750,
                                x: 815,
                                width: 1630,
                                rotation: 0,
                                height: 750,
                                centerX: -1331,
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 3,
                            child: [ {
                                type: "Box",
                                props: {
                                    x: 402,
                                    width: 131,
                                    var: "boxBubble_1",
                                    height: 500,
                                    centerY: 360,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 43
                            }, {
                                type: "Box",
                                props: {
                                    x: 1173,
                                    width: 96,
                                    var: "boxBubble_2",
                                    height: 500,
                                    centerY: 675
                                },
                                compId: 44
                            }, {
                                type: "Box",
                                props: {
                                    y: 375,
                                    x: 815,
                                    width: 1045,
                                    var: "boxContent",
                                    height: 700,
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 17,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 26,
                                        x: 285,
                                        skin: "firstPic/img_qih_bg.png",
                                        centerY: 0,
                                        centerX: 0
                                    },
                                    compId: 4
                                }, {
                                    type: "Box",
                                    props: {
                                        x: -495,
                                        width: 1045,
                                        visible: false,
                                        var: "boxBoard",
                                        height: 700,
                                        centerY: 0,
                                        centerX: 28
                                    },
                                    compId: 42,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            y: 619,
                                            x: 523,
                                            width: 248,
                                            visible: false,
                                            var: "btnGet",
                                            stateNum: 1,
                                            skin: "basePic/btn_yellow.png",
                                            sizeGrid: "40,46,50,54",
                                            labelStrokeColor: "#70200b",
                                            labelStroke: 3.8,
                                            labelSize: 32,
                                            labelFont: "黑体",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "继续赢奖券",
                                            height: 94,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: 1
                                        },
                                        compId: 9,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                aniScaleY: 1,
                                                aniScaleX: 1,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 16
                                        } ]
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 311,
                                            x: 523,
                                            width: 443,
                                            scaleY: 1,
                                            scaleX: 1,
                                            height: 41,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 50,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                x: 338,
                                                var: "imgType",
                                                skin: "firstPic/title_hf.png",
                                                centerY: 0,
                                                alpha: 0
                                            },
                                            compId: 41
                                        }, {
                                            type: "Image",
                                            props: {
                                                x: 37,
                                                width: 298,
                                                skin: "firstPic/img_qih_1.png",
                                                height: 37,
                                                centerY: -2,
                                                alpha: 0
                                            },
                                            compId: 8
                                        } ]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 401,
                                            x: 610,
                                            width: 221,
                                            var: "lblMoney",
                                            valign: "middle",
                                            scaleY: .2,
                                            scaleX: .2,
                                            height: 78,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: 0,
                                            align: "center"
                                        },
                                        compId: 51
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 248,
                                        x: 546,
                                        width: 458,
                                        skin: "firstPic/img_title_6.png",
                                        scaleY: 1,
                                        scaleX: 1,
                                        height: 104,
                                        centerX: 23,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 7,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 5,
                                            skin: "firstPic/img_qih_2.png",
                                            centerX: 0,
                                            alpha: 1
                                        },
                                        compId: 6
                                    } ]
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 8,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "alpha",
                                        index: 15
                                    } ]
                                }
                            }, {
                                target: 41,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 41,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 41,
                                        key: "alpha",
                                        index: 15
                                    } ]
                                }
                            }, {
                                target: 9,
                                keyframes: {
                                    x: [ {
                                        value: 523,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 9,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 523,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 9,
                                        key: "x",
                                        index: 15
                                    } ],
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 9,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 9,
                                        key: "visible",
                                        index: 13
                                    } ],
                                    mouseEnabled: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 9,
                                        key: "mouseEnabled",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 9,
                                        key: "mouseEnabled",
                                        index: 15
                                    } ]
                                }
                            }, {
                                target: 51,
                                keyframes: {
                                    scaleY: [ {
                                        value: .2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 51,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 51,
                                        key: "scaleY",
                                        index: 6
                                    }, {
                                        value: .7,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 51,
                                        key: "scaleY",
                                        index: 9
                                    } ],
                                    scaleX: [ {
                                        value: .2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 51,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 51,
                                        key: "scaleX",
                                        index: 6
                                    }, {
                                        value: .7,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 51,
                                        key: "scaleX",
                                        index: 9
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 51,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 51,
                                        key: "alpha",
                                        index: 10
                                    } ]
                                }
                            } ],
                            name: "aniScale",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    y: [ {
                                        value: 750,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 750,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 20
                                    }, {
                                        value: 720,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 24
                                    }, {
                                        value: 770,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 28
                                    }, {
                                        value: 750,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 31
                                    } ],
                                    x: [ {
                                        value: -516,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 815,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "x",
                                        index: 20
                                    } ]
                                }
                            }, {
                                target: 17,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "rotation",
                                        index: 20
                                    }, {
                                        value: -2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "rotation",
                                        index: 22
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "rotation",
                                        index: 26
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "rotation",
                                        index: 28
                                    } ]
                                }
                            } ],
                            name: "aniSport",
                            id: 3,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 50,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleY",
                                        index: 25
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleY",
                                        index: 29
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleY",
                                        index: 33
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleY",
                                        index: 37
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleY",
                                        index: 39
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleX",
                                        index: 25
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleX",
                                        index: 29
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleX",
                                        index: 33
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleX",
                                        index: 37
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 50,
                                        key: "scaleX",
                                        index: 39
                                    } ]
                                }
                            } ],
                            name: "aniLabel",
                            id: 4,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "firstPic/img_qih_bg.png", "basePic/btn_yellow.png", "firstPic/title_hf.png", "firstPic/img_qih_1.png", "firstPic/img_title_6.png", "firstPic/img_qih_2.png" ],
                        loadList3D: []
                    };
                    return NewGuideViewUI;
                }(Laya.View);
                common.NewGuideViewUI = NewGuideViewUI;
                REG("ui.common.NewGuideViewUI", NewGuideViewUI);
                var PlayerInfoViewUI = function(_super) {
                    __extends(PlayerInfoViewUI, _super);
                    function PlayerInfoViewUI() {
                        return _super.call(this) || this;
                    }
                    PlayerInfoViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(PlayerInfoViewUI.uiView);
                    };
                    PlayerInfoViewUI.uiView = {
                        type: "View",
                        props: {
                            y: 0,
                            x: 0,
                            width: 1630,
                            top: 0,
                            mouseThrough: true,
                            left: 0,
                            height: 150
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 6,
                                x: 0,
                                var: "img_playerInfo",
                                skin: "hall/img_wanj_0.png",
                                bold: true,
                                bgColor: "#ffffff",
                                alpha: 1
                            },
                            compId: 2,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 64.5,
                                    x: 99.14453125,
                                    width: 90,
                                    var: "imgHead1",
                                    valign: "middle",
                                    skin: "common/img_toux.png",
                                    pivotY: 45,
                                    pivotX: 80,
                                    layoutEnabled: true,
                                    height: 90,
                                    fontSize: 9,
                                    color: "#000000",
                                    bold: true,
                                    bgColor: "#12f5ff",
                                    align: "center"
                                },
                                compId: 5,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        skin: "hall/img_wanj_1.png",
                                        renderType: "mask"
                                    },
                                    compId: 6
                                }, {
                                    type: "Script",
                                    props: {
                                        isSetSelf: true,
                                        isPlaySound: true,
                                        isPlayAni: false,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 48
                                } ]
                            }, {
                                type: "Label",
                                props: {
                                    y: 20,
                                    x: 122,
                                    width: 164,
                                    var: "lblName",
                                    valign: "middle",
                                    text: "捕鱼使我快乐",
                                    strokeColor: "#004485",
                                    stroke: 4,
                                    overflow: "scroll",
                                    height: 24,
                                    fontSize: 24,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "left"
                                },
                                compId: 7
                            }, {
                                type: "Box",
                                props: {
                                    y: 97,
                                    x: 22
                                },
                                compId: 8,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        width: 81,
                                        skin: "hall/img_wanj_3.png",
                                        height: 37
                                    },
                                    compId: 9
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 3,
                                        x: 15,
                                        skin: "common/img_vip.png",
                                        scaleY: .22,
                                        scaleX: .22
                                    },
                                    compId: 10
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 4,
                                        x: 51,
                                        width: 91,
                                        var: "lblVip",
                                        text: "10",
                                        scaleY: .21,
                                        scaleX: .21,
                                        height: 78,
                                        font: "numberFont1"
                                    },
                                    compId: 11
                                } ]
                            }, {
                                type: "Label",
                                props: {
                                    y: 61,
                                    x: 123,
                                    text: "ID:",
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "center"
                                },
                                compId: 12
                            }, {
                                type: "Label",
                                props: {
                                    y: 61,
                                    x: 158,
                                    width: 120,
                                    var: "lblId",
                                    text: "000000899",
                                    height: 25,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "left"
                                },
                                compId: 13
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 17,
                                x: 315,
                                width: 216,
                                skin: "hall/img_wanj_2.png",
                                name: "imgGold",
                                height: 43,
                                color: "#000000",
                                bgColor: "#00ff14",
                                alpha: 1
                            },
                            compId: 3,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 2,
                                    x: 39,
                                    width: 161,
                                    var: "lblMoney",
                                    valign: "middle",
                                    text: "88888888900",
                                    strokeColor: "#004485",
                                    stroke: 4,
                                    height: 37,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "right"
                                },
                                compId: 15
                            }, {
                                type: "Button",
                                props: {
                                    y: 22,
                                    x: 17,
                                    width: 80,
                                    var: "btnMoney",
                                    stateNum: 1,
                                    skin: "firstPic/icon_goldCoin.png",
                                    scaleY: .65,
                                    scaleX: .65,
                                    mouseEnabled: false,
                                    height: 75,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 45,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 30,
                                        x: 40,
                                        visible: false,
                                        var: "img_plusGold",
                                        skin: "hall/img_hall_4.png",
                                        scaleY: 1.53,
                                        scaleX: 1.53
                                    },
                                    compId: 46
                                }, {
                                    type: "Script",
                                    props: {
                                        aniScaleY: .65,
                                        aniScaleX: .65,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 47
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 17,
                                x: 560,
                                width: 181,
                                skin: "hall/img_wanj_2.png",
                                height: 43,
                                color: "#000000",
                                bgColor: "#00ff14",
                                alpha: 1
                            },
                            compId: 4,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 8,
                                    x: 44,
                                    width: 121,
                                    var: "lblDiamond",
                                    valign: "middle",
                                    text: "8888900",
                                    strokeColor: "#004485",
                                    stroke: 4,
                                    height: 26,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "right"
                                },
                                compId: 23
                            }, {
                                type: "Button",
                                props: {
                                    y: 22,
                                    x: 10.5,
                                    width: 80,
                                    var: "btnDiamond",
                                    stateNum: 1,
                                    skin: "firstPic/ticket.png",
                                    mouseEnabled: false,
                                    height: 75,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 42,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 30,
                                        x: 40,
                                        visible: false,
                                        var: "img_plusDmd",
                                        skin: "hall/img_hall_4.png",
                                        scaleY: 1.53,
                                        scaleX: 1.53
                                    },
                                    compId: 43
                                }, {
                                    type: "Script",
                                    props: {
                                        aniScaleY: .65,
                                        aniScaleX: .65,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 44
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 17,
                                x: 772,
                                width: 181,
                                visible: false,
                                skin: "hall/img_wanj_2.png",
                                mouseEnabled: false,
                                height: 43,
                                color: "#000000",
                                bgColor: "#00ff14",
                                alpha: 1
                            },
                            compId: 31,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 8,
                                    x: 44,
                                    width: 121,
                                    var: "lblZibi",
                                    valign: "middle",
                                    text: "8888900",
                                    strokeColor: "#004485",
                                    stroke: 4,
                                    height: 26,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "right"
                                },
                                compId: 32
                            }, {
                                type: "Button",
                                props: {
                                    y: -2.5,
                                    x: -19,
                                    width: 80,
                                    stateNum: 1,
                                    skin: "iconAndSkin/icon_zibi.png",
                                    scaleY: .65,
                                    scaleX: .65,
                                    height: 75
                                },
                                compId: 40,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 30,
                                        x: 40,
                                        var: "img_plusZibi",
                                        skin: "hall/img_hall_4.png",
                                        scaleY: 1.53,
                                        scaleX: 1.53
                                    },
                                    compId: 35
                                }, {
                                    type: "Script",
                                    props: {
                                        aniScaleY: .65,
                                        aniScaleX: .65,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 41
                                } ]
                            } ]
                        } ],
                        loadList: [ "hall/img_wanj_0.png", "common/img_toux.png", "hall/img_wanj_1.png", "hall/img_wanj_3.png", "common/img_vip.png", "hall/img_wanj_2.png", "firstPic/icon_goldCoin.png", "hall/img_hall_4.png", "firstPic/ticket.png", "iconAndSkin/icon_zibi.png" ],
                        loadList3D: []
                    };
                    return PlayerInfoViewUI;
                }(Laya.View);
                common.PlayerInfoViewUI = PlayerInfoViewUI;
                REG("ui.common.PlayerInfoViewUI", PlayerInfoViewUI);
                var RewardDialogUI = function(_super) {
                    __extends(RewardDialogUI, _super);
                    function RewardDialogUI() {
                        return _super.call(this) || this;
                    }
                    RewardDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(RewardDialogUI.uiView);
                    };
                    RewardDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isPopupCenter: false,
                            isModal: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                width: 2445,
                                skin: "basePic/img_black_bg.png",
                                name: "black_bg",
                                height: 1125,
                                centerY: 0,
                                centerX: 0,
                                alpha: .7
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 1334,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Button",
                                props: {
                                    y: 379.5,
                                    var: "btn_left",
                                    stateNum: 1,
                                    skin: "common/btn_jiant.png",
                                    sizeGrid: "40,46,50,54",
                                    labelStrokeColor: "#70200b",
                                    labelStroke: 3.8,
                                    labelSize: 32,
                                    labelFont: "SimHei",
                                    labelColors: "#ffffff",
                                    labelBold: true,
                                    labelAlign: "center",
                                    centerX: -533,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 70,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        isPlaySound: true,
                                        isPlayAni: true,
                                        aniScaleY: 1,
                                        aniScaleX: 1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 71
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 379.5,
                                    var: "btn_right",
                                    stateNum: 1,
                                    skin: "common/btn_jiant.png",
                                    sizeGrid: "40,46,50,54",
                                    scaleX: -1,
                                    labelStrokeColor: "#70200b",
                                    labelStroke: 3.8,
                                    labelSize: 32,
                                    labelFont: "SimHei",
                                    labelColors: "#ffffff",
                                    labelBold: true,
                                    labelAlign: "center",
                                    centerX: 533,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 72,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        isPlaySound: true,
                                        isPlayAni: true,
                                        aniScaleY: 1,
                                        aniScaleX: -1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 73
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 603,
                                    x: 667,
                                    width: 247,
                                    var: "btn_receive",
                                    stateNum: 1,
                                    skin: "basePic/btn_yellow.png",
                                    sizeGrid: "40,46,50,54",
                                    labelStrokeColor: "#70200b",
                                    labelStroke: 3.8,
                                    labelSize: 32,
                                    labelFont: "SimHei",
                                    labelColors: "#ffffff",
                                    labelBold: true,
                                    labelAlign: "center",
                                    label: "领取",
                                    height: 93,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 79,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        isPlaySound: true,
                                        isPlayAni: true,
                                        aniScaleY: 1,
                                        aniScaleX: 1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 80
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 376,
                                    width: 660,
                                    var: "box_items",
                                    spaceX: 40,
                                    repeatY: 1,
                                    repeatX: 5,
                                    height: 100,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 84
                            }, {
                                type: "Label",
                                props: {
                                    var: "text_message",
                                    valign: "middle",
                                    text: "获得奖励提示",
                                    strokeColor: "#70200b",
                                    stroke: 3,
                                    fontSize: 30,
                                    font: "SimHei",
                                    color: "#fff000",
                                    centerY: 103,
                                    centerX: 0,
                                    bold: true,
                                    align: "center"
                                },
                                compId: 82
                            }, {
                                type: "Image",
                                props: {
                                    y: 163,
                                    var: "img_title",
                                    skin: "common/img_title_4.png",
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 83,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 38,
                                        var: "img_titleText",
                                        skin: "common/img_huod_0.png",
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 87
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 83,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 83,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 83,
                                        key: "scaleY",
                                        index: 36
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 83,
                                        key: "scaleY",
                                        index: 72
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 83,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 83,
                                        key: "scaleX",
                                        index: 36
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 83,
                                        key: "scaleX",
                                        index: 72
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 2
                        }, {
                            nodes: [ {
                                target: 101,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 101,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 101,
                                        key: "rotation",
                                        index: 120
                                    } ]
                                }
                            }, {
                                target: 102,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 102,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: -360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 102,
                                        key: "rotation",
                                        index: 120
                                    } ]
                                }
                            } ],
                            name: "ani2",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "common/btn_jiant.png", "basePic/btn_yellow.png", "common/img_title_4.png", "common/img_huod_0.png" ],
                        loadList3D: []
                    };
                    return RewardDialogUI;
                }(Laya.Dialog);
                common.RewardDialogUI = RewardDialogUI;
                REG("ui.common.RewardDialogUI", RewardDialogUI);
                var SetDialogUI = function(_super) {
                    __extends(SetDialogUI, _super);
                    function SetDialogUI() {
                        return _super.call(this) || this;
                    }
                    SetDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(SetDialogUI.uiView);
                    };
                    SetDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            autoDestroyAtClosed: true
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                alpha: .7
                            },
                            compId: 28
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 144,
                                    width: 680,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "37,40,58,50",
                                    rotation: 0,
                                    height: 480,
                                    centerX: 0
                                },
                                compId: 5,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 66,
                                        x: 24,
                                        width: 633,
                                        skin: "noZip/img_bg_15.png",
                                        sizeGrid: "25,72,31,75",
                                        height: 389
                                    },
                                    compId: 6
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 372,
                                        x: 342,
                                        width: 228,
                                        var: "btn_define",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,50,0,46",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 4,
                                        labelSize: 32,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "确定",
                                        height: 93,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 7,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 36
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 144,
                                        x: 133,
                                        text: "音乐：",
                                        fontSize: 31,
                                        font: "SimHei",
                                        color: "#0b3170",
                                        bold: true
                                    },
                                    compId: 8
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 234,
                                        x: 133,
                                        text: "音效：",
                                        fontSize: 31,
                                        font: "SimHei",
                                        color: "#0b3170",
                                        bold: true
                                    },
                                    compId: 9
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 138,
                                        x: 237,
                                        var: "img_music",
                                        skin: "common/img_shez_1.png"
                                    },
                                    compId: 11
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 229,
                                        x: 237,
                                        var: "img_sound",
                                        skin: "common/img_shez_1.png"
                                    },
                                    compId: 12
                                }, {
                                    type: "ViewStack",
                                    props: {
                                        y: 161,
                                        x: 351,
                                        width: 250,
                                        var: "checkMusic",
                                        selectedIndex: 1,
                                        height: 60,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 19,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 30,
                                            x: 125,
                                            width: 250,
                                            name: "item0",
                                            height: 60,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 13,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 4,
                                                x: 117,
                                                skin: "common/img_shez_3.png"
                                            },
                                            compId: 15
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 17,
                                                x: 36,
                                                width: 68,
                                                text: "开启",
                                                strokeColor: "#226306",
                                                stroke: 2.5,
                                                height: 25,
                                                fontSize: 22,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 17
                                        } ]
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 30,
                                            x: 125,
                                            width: 250,
                                            name: "item1",
                                            height: 60,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 14,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 4,
                                                x: 7,
                                                skin: "common/img_shez_2.png"
                                            },
                                            compId: 16
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 28,
                                                x: 178,
                                                width: 68,
                                                text: "不开启",
                                                strokeColor: "#0b3170",
                                                stroke: 2.5,
                                                height: 25,
                                                fontSize: 22,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "center"
                                            },
                                            compId: 18
                                        } ]
                                    }, {
                                        type: "Script",
                                        props: {
                                            isSetSelf: true,
                                            isPlaySound: true,
                                            isPlayAni: false,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 33
                                    } ]
                                }, {
                                    type: "ViewStack",
                                    props: {
                                        y: 251,
                                        x: 351,
                                        width: 250,
                                        var: "checkSound",
                                        selectedIndex: 1,
                                        height: 60,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 20,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 30,
                                            x: 125,
                                            width: 250,
                                            name: "item0",
                                            height: 60,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 21,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 4,
                                                x: 117,
                                                skin: "common/img_shez_3.png"
                                            },
                                            compId: 22
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 17,
                                                x: 36,
                                                width: 68,
                                                text: "开启",
                                                strokeColor: "#226306",
                                                stroke: 2.5,
                                                height: 25,
                                                fontSize: 22,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 23
                                        } ]
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 30,
                                            x: 125,
                                            width: 250,
                                            name: "item1",
                                            height: 60,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 24,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 4,
                                                x: 7,
                                                skin: "common/img_shez_2.png"
                                            },
                                            compId: 25
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 16,
                                                x: 178,
                                                width: 68,
                                                text: "不开启",
                                                strokeColor: "#0b3170",
                                                stroke: 2.5,
                                                height: 25,
                                                fontSize: 22,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                anchorX: .5
                                            },
                                            compId: 26
                                        } ]
                                    }, {
                                        type: "Script",
                                        props: {
                                            isSetSelf: true,
                                            isPlaySound: true,
                                            isPlayAni: false,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 34
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 13,
                                        x: 667,
                                        var: "returnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 27,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 35
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -10,
                                        skin: "noZip/img_title_2.png",
                                        centerX: 0
                                    },
                                    compId: 30,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 13,
                                            x: 146,
                                            width: 100,
                                            valign: "middle",
                                            text: "设置",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            height: 42,
                                            fontSize: 40,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 32
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_bg_15.png", "basePic/btn_yellow.png", "common/img_shez_1.png", "common/img_shez_3.png", "common/img_shez_2.png", "firstPic/btn_close.png", "noZip/img_title_2.png" ],
                        loadList3D: []
                    };
                    return SetDialogUI;
                }(Laya.Dialog);
                common.SetDialogUI = SetDialogUI;
                REG("ui.common.SetDialogUI", SetDialogUI);
                var TicketTipUI = function(_super) {
                    __extends(TicketTipUI, _super);
                    function TicketTipUI() {
                        return _super.call(this) || this;
                    }
                    TicketTipUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(TicketTipUI.uiView);
                    };
                    TicketTipUI.uiView = {
                        type: "View",
                        props: {
                            width: 600,
                            height: 100
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 500,
                                skin: "firstPic/img_ticket_bg.png",
                                sizeGrid: "0,45,0,42",
                                height: 104,
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                width: 500,
                                height: 100,
                                centerX: 0
                            },
                            compId: 9,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 16,
                                    width: 123,
                                    text: "恭喜你捕获",
                                    strokeColor: "#70200b",
                                    stroke: 3.4,
                                    height: 30,
                                    fontSize: 24,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerX: -62,
                                    align: "center"
                                },
                                compId: 4
                            }, {
                                type: "Label",
                                props: {
                                    y: 50,
                                    x: 36,
                                    width: 429,
                                    text: "( 奖券 = 鱼分X炮倍 ÷ 10 )",
                                    strokeColor: "#70200b",
                                    stroke: 3.4,
                                    height: 30,
                                    fontSize: 24,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerX: 0,
                                    bold: false,
                                    align: "center"
                                },
                                compId: 5
                            }, {
                                type: "Label",
                                props: {
                                    y: 8,
                                    x: 250.5,
                                    width: 217,
                                    var: "lblTicket",
                                    valign: "middle",
                                    text: "1",
                                    scaleY: .3,
                                    scaleX: .3,
                                    height: 96,
                                    align: "left"
                                },
                                compId: 6
                            }, {
                                type: "Label",
                                props: {
                                    y: 16,
                                    x: 246,
                                    width: 54,
                                    var: "lblRight",
                                    text: "奖券",
                                    strokeColor: "#70200b",
                                    stroke: 3.4,
                                    height: 30,
                                    fontSize: 24,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: false,
                                    align: "center"
                                },
                                compId: 30
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 3,
                                x: 87,
                                var: "img0",
                                skin: "firstPic/img_light.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 10
                        }, {
                            type: "Image",
                            props: {
                                y: 90,
                                x: 87,
                                var: "img18",
                                skin: "firstPic/img_light.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 11
                        }, {
                            type: "Image",
                            props: {
                                y: 90,
                                x: 513,
                                var: "img10",
                                skin: "firstPic/img_light.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 12
                        }, {
                            type: "Image",
                            props: {
                                y: 3,
                                x: 511,
                                var: "img8",
                                skin: "firstPic/img_light.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 13
                        }, {
                            type: "Image",
                            props: {
                                y: 91,
                                x: 133,
                                var: "img17",
                                skin: "firstPic/img_light.png",
                                scaleY: .5,
                                scaleX: .5,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 14
                        }, {
                            type: "Image",
                            props: {
                                y: 3,
                                x: 133,
                                var: "img1",
                                skin: "firstPic/img_light.png",
                                scaleY: .5,
                                scaleX: .5,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 15
                        }, {
                            type: "Image",
                            props: {
                                y: 90,
                                x: 184,
                                var: "img16",
                                skin: "firstPic/img_light.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 16
                        }, {
                            type: "Image",
                            props: {
                                y: 3,
                                x: 184,
                                width: 34,
                                var: "img2",
                                skin: "firstPic/img_light.png",
                                height: 33,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 17
                        }, {
                            type: "Image",
                            props: {
                                y: 91,
                                x: 234,
                                var: "img15",
                                skin: "firstPic/img_light.png",
                                scaleY: .5,
                                scaleX: .5,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 18
                        }, {
                            type: "Image",
                            props: {
                                y: 3,
                                x: 234,
                                width: 34,
                                var: "img3",
                                skin: "firstPic/img_light.png",
                                scaleY: .5,
                                scaleX: .5,
                                pivotY: 17,
                                pivotX: 17,
                                height: 33,
                                alpha: 0
                            },
                            compId: 19
                        }, {
                            type: "Image",
                            props: {
                                y: 90,
                                x: 399,
                                var: "img12",
                                skin: "firstPic/img_light.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 20
                        }, {
                            type: "Image",
                            props: {
                                y: 3,
                                x: 291,
                                var: "img4",
                                skin: "firstPic/img_light.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 21
                        }, {
                            type: "Image",
                            props: {
                                y: 90,
                                x: 291,
                                var: "img14",
                                skin: "firstPic/img_light.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 22
                        }, {
                            type: "Image",
                            props: {
                                y: 3,
                                x: 399,
                                var: "img6",
                                skin: "firstPic/img_light.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 23
                        }, {
                            type: "Image",
                            props: {
                                y: 3,
                                x: 348,
                                width: 34,
                                var: "img5",
                                skin: "firstPic/img_light.png",
                                scaleY: .5,
                                scaleX: .5,
                                height: 33,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 24
                        }, {
                            type: "Image",
                            props: {
                                y: 91,
                                x: 348,
                                var: "img13",
                                skin: "firstPic/img_light.png",
                                scaleY: .5,
                                scaleX: .5,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 25
                        }, {
                            type: "Image",
                            props: {
                                y: 91,
                                x: 455,
                                var: "img11",
                                skin: "firstPic/img_light.png",
                                scaleY: .5,
                                scaleX: .5,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 26
                        }, {
                            type: "Image",
                            props: {
                                y: 3,
                                x: 455,
                                var: "img7",
                                skin: "firstPic/img_light.png",
                                scaleY: .5,
                                scaleX: .5,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 27
                        }, {
                            type: "Image",
                            props: {
                                y: 49,
                                x: 542,
                                var: "img9",
                                skin: "firstPic/img_light.png",
                                scaleY: .5,
                                scaleX: .5,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 28
                        }, {
                            type: "Image",
                            props: {
                                y: 49,
                                x: 58,
                                var: "img19",
                                skin: "firstPic/img_light.png",
                                scaleY: .5,
                                scaleX: .5,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 29
                        } ],
                        loadList: [ "firstPic/img_ticket_bg.png", "firstPic/img_light.png" ],
                        loadList3D: []
                    };
                    return TicketTipUI;
                }(Laya.View);
                common.TicketTipUI = TicketTipUI;
                REG("ui.common.TicketTipUI", TicketTipUI);
                var waitForDialogUI = function(_super) {
                    __extends(waitForDialogUI, _super);
                    function waitForDialogUI() {
                        return _super.call(this) || this;
                    }
                    waitForDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(waitForDialogUI.uiView);
                    };
                    waitForDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -212,
                                x: -407,
                                width: 2445,
                                skin: "basePic/img_black_bg.png",
                                height: 1125,
                                centerY: 0,
                                centerX: 0,
                                alpha: .7
                            },
                            compId: 86
                        }, {
                            type: "Image",
                            props: {
                                skin: "noZip/img_bg_14.png",
                                sizeGrid: "0,286,0,286",
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 84
                        }, {
                            type: "Label",
                            props: {
                                y: 0,
                                x: 0,
                                width: 648,
                                var: "message",
                                valign: "middle",
                                text: "目标必须是黄金鱼哦",
                                strokeColor: "#0b3170",
                                stroke: 4,
                                height: 54,
                                fontSize: 36,
                                font: "SimHei",
                                color: "#c2e7ff",
                                centerY: 0,
                                centerX: 0,
                                bold: true,
                                anchorY: .5,
                                anchorX: .5,
                                align: "center"
                            },
                            compId: 85
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_14.png" ],
                        loadList3D: []
                    };
                    return waitForDialogUI;
                }(Laya.Dialog);
                common.waitForDialogUI = waitForDialogUI;
                REG("ui.common.waitForDialogUI", waitForDialogUI);
                var warningMessageUI = function(_super) {
                    __extends(warningMessageUI, _super);
                    function warningMessageUI() {
                        return _super.call(this) || this;
                    }
                    warningMessageUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(warningMessageUI.uiView);
                    };
                    warningMessageUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            mouseThrough: true,
                            mouseEnabled: false,
                            hitTestPrior: false,
                            height: 750
                        },
                        compId: 1,
                        child: [ {
                            type: "Box",
                            props: {
                                width: 748,
                                scaleY: 1,
                                mouseEnabled: false,
                                height: 77,
                                centerY: -25,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 3,
                            child: [ {
                                type: "Image",
                                props: {
                                    skin: "noZip/img_bg_14.png",
                                    sizeGrid: "0,286,0,286",
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 2
                            }, {
                                type: "Label",
                                props: {
                                    width: 1027,
                                    var: "message",
                                    valign: "middle",
                                    text: "目标必须是黄金鱼哦",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    height: 54,
                                    fontSize: 36,
                                    font: "SimHei",
                                    color: "#c2e7ff",
                                    centerY: 0,
                                    centerX: 0,
                                    bold: true,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 4
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 12
                                    } ],
                                    centerY: [ {
                                        value: -25,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "centerY",
                                        index: 0
                                    }, {
                                        value: -25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "centerY",
                                        index: 30
                                    }, {
                                        value: -75,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "centerY",
                                        index: 40
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 30
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 40
                                    } ]
                                }
                            } ],
                            name: "shortMessage",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 12
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 12
                                    } ],
                                    centerY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "centerY",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            } ],
                            name: "ani2",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "noZip/img_bg_14.png" ],
                        loadList3D: []
                    };
                    return warningMessageUI;
                }(Laya.Dialog);
                common.warningMessageUI = warningMessageUI;
                REG("ui.common.warningMessageUI", warningMessageUI);
            })(common = ui.common || (ui.common = {}));
        })(ui = exports.ui || (exports.ui = {}));
        (function(ui) {
            var gift;
            (function(gift) {
                var BubbleViewUI = function(_super) {
                    __extends(BubbleViewUI, _super);
                    function BubbleViewUI() {
                        return _super.call(this) || this;
                    }
                    BubbleViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(BubbleViewUI.uiView);
                    };
                    BubbleViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 150,
                            height: 150
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 156,
                                height: 156,
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 3,
                            child: [ {
                                type: "Image",
                                props: {
                                    var: "imgBubble",
                                    skin: "gift/img_bubble.png",
                                    centerY: -8,
                                    centerX: 0
                                },
                                compId: 4
                            }, {
                                type: "Image",
                                props: {
                                    var: "imgItem",
                                    centerY: 1,
                                    centerX: 6
                                },
                                compId: 5
                            }, {
                                type: "Label",
                                props: {
                                    y: 117,
                                    width: 110,
                                    var: "lblItem",
                                    strokeColor: "#70200b",
                                    stroke: 4,
                                    height: 30,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerX: 0,
                                    align: "center"
                                },
                                compId: 6
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    centerY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "centerY",
                                        index: 0
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "centerY",
                                        index: 10
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "centerY",
                                        index: 30
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "centerY",
                                        index: 40
                                    } ]
                                }
                            } ],
                            name: "aniMove",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "gift/img_bubble.png" ],
                        loadList3D: []
                    };
                    return BubbleViewUI;
                }(Laya.View);
                gift.BubbleViewUI = BubbleViewUI;
                REG("ui.gift.BubbleViewUI", BubbleViewUI);
                var GiftKyDlgUI = function(_super) {
                    __extends(GiftKyDlgUI, _super);
                    function GiftKyDlgUI() {
                        return _super.call(this) || this;
                    }
                    GiftKyDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(GiftKyDlgUI.uiView);
                    };
                    GiftKyDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1685,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 87
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 89,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 904,
                                    height: 482,
                                    centerY: -14,
                                    centerX: 0
                                },
                                compId: 137,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 93,
                                        x: 96,
                                        width: 356,
                                        skin: "gift/img_bottom1.png"
                                    },
                                    compId: 91
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 93,
                                        x: 807,
                                        width: 356,
                                        skin: "gift/img_bottom1.png",
                                        scaleX: -1
                                    },
                                    compId: 92
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 28,
                                        x: 546,
                                        skin: "gift/img_star1.png"
                                    },
                                    compId: 130
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 35,
                                        x: 215,
                                        skin: "gift/img_star2.png"
                                    },
                                    compId: 131
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 83,
                                        x: 298,
                                        var: "img_type",
                                        skin: "gift/title_ky.png"
                                    },
                                    compId: 94
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 80,
                                        x: 438,
                                        skin: "gift/title_lb.png"
                                    },
                                    compId: 95
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 370,
                                        x: 347,
                                        text: "现价:",
                                        strokeColor: "#0f5180",
                                        stroke: 4,
                                        fontSize: 28,
                                        font: "黑体",
                                        color: "#ffffff"
                                    },
                                    compId: 115
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 370,
                                        x: 523,
                                        text: "元",
                                        strokeColor: "#0f5180",
                                        stroke: 4,
                                        fontSize: 28,
                                        font: "黑体",
                                        color: "#ffffff"
                                    },
                                    compId: 116
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 404,
                                        x: 389,
                                        text: "原价：",
                                        strokeColor: "#0f5180",
                                        stroke: 4,
                                        fontSize: 24,
                                        font: "黑体",
                                        color: "#24cab6"
                                    },
                                    compId: 117
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 416,
                                        x: 486,
                                        var: "lblPrice",
                                        text: "30",
                                        strokeColor: "#0f5180",
                                        stroke: 4,
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        fontSize: 24,
                                        font: "黑体",
                                        color: "#24cab6",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 118
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 358,
                                        x: 417,
                                        width: 210,
                                        var: "lblDiscount",
                                        scaleY: .5,
                                        scaleX: .5,
                                        height: 75,
                                        align: "center"
                                    },
                                    compId: 126,
                                    child: [ {
                                        type: "Line",
                                        props: {
                                            y: 117,
                                            x: -75,
                                            toY: 181.42471855823734,
                                            toX: 214.10197381163923,
                                            rotation: -40,
                                            lineWidth: 5,
                                            lineColor: "#24cab6"
                                        },
                                        compId: 138
                                    } ]
                                }, {
                                    type: "List",
                                    props: {
                                        y: 206,
                                        width: 509,
                                        var: "lstBubble",
                                        spaceX: 20,
                                        repeatY: 1,
                                        repeatX: 3,
                                        renderType: "render",
                                        height: 155,
                                        centerX: -8
                                    },
                                    compId: 132,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 156,
                                            name: "render",
                                            height: 156
                                        },
                                        compId: 136
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        width: 226,
                                        var: "btnBuy",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,45,0,45",
                                        pivotY: 46.5,
                                        pivotX: 114,
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 4,
                                        labelSize: 32,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        label: "立即购买",
                                        height: 93,
                                        centerX: -11,
                                        bottom: -53
                                    },
                                    compId: 96
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 59,
                                        x: 790,
                                        var: "btnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 128,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 129
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "gift/img_bottom1.png", "gift/img_star1.png", "gift/img_star2.png", "gift/title_ky.png", "gift/title_lb.png", "basePic/btn_yellow.png", "firstPic/btn_close.png" ],
                        loadList3D: []
                    };
                    return GiftKyDlgUI;
                }(Laya.Dialog);
                gift.GiftKyDlgUI = GiftKyDlgUI;
                REG("ui.gift.GiftKyDlgUI", GiftKyDlgUI);
                var GiftMrDlgUI = function(_super) {
                    __extends(GiftMrDlgUI, _super);
                    function GiftMrDlgUI() {
                        return _super.call(this) || this;
                    }
                    GiftMrDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(GiftMrDlgUI.uiView);
                    };
                    GiftMrDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1685,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 87
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 89,
                            child: [ {
                                type: "Image",
                                props: {
                                    skin: "gift/img_bg2.png",
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 90,
                                child: [ {
                                    type: "List",
                                    props: {
                                        y: 104,
                                        width: 444,
                                        var: "lstBubble",
                                        spaceX: 12,
                                        repeatY: 1,
                                        renderType: "render",
                                        height: 161,
                                        centerX: 78
                                    },
                                    compId: 92,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 13,
                                            x: 15,
                                            width: 127,
                                            name: "render",
                                            height: 145
                                        },
                                        compId: 93,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                skin: "gift/img_bg4.png"
                                            },
                                            compId: 94
                                        } ]
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 297,
                                        x: 398,
                                        width: 200,
                                        var: "lblCost",
                                        text: "总价值 600 元",
                                        strokeColor: "#033253",
                                        stroke: 3,
                                        height: 30,
                                        fontSize: 30,
                                        font: "SimHei",
                                        color: "#f4ba25",
                                        bold: true
                                    },
                                    compId: 95
                                }, {
                                    type: "Button",
                                    props: {
                                        width: 242,
                                        var: "btnGet",
                                        stateNum: 1,
                                        skin: "noZip/btn_green.png",
                                        sizeGrid: "0,45,0,45",
                                        labelStrokeColor: "#033253",
                                        labelStroke: 4,
                                        labelSize: 32,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        label: "领取",
                                        height: 94,
                                        centerX: -39,
                                        bottom: -63,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 98,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 99
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 105,
                                        x: 878,
                                        var: "btnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 96,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 97
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -21,
                                        x: 622,
                                        skin: "gift/img_star1.png"
                                    },
                                    compId: 101
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -12,
                                        x: 270,
                                        skin: "gift/img_star2.png"
                                    },
                                    compId: 102
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 6,
                                        x: 357,
                                        skin: "gift/title_mrlb.png"
                                    },
                                    compId: 91
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "gift/img_bg2.png", "gift/img_bg4.png", "noZip/btn_green.png", "firstPic/btn_close.png", "gift/img_star1.png", "gift/img_star2.png", "gift/title_mrlb.png" ],
                        loadList3D: []
                    };
                    return GiftMrDlgUI;
                }(Laya.Dialog);
                gift.GiftMrDlgUI = GiftMrDlgUI;
                REG("ui.gift.GiftMrDlgUI", GiftMrDlgUI);
                var GiftScDlgUI = function(_super) {
                    __extends(GiftScDlgUI, _super);
                    function GiftScDlgUI() {
                        return _super.call(this) || this;
                    }
                    GiftScDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(GiftScDlgUI.uiView);
                    };
                    GiftScDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1685,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 87
                        }, {
                            type: "Box",
                            props: {
                                y: 375,
                                x: 815,
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 89,
                            child: [ {
                                type: "Image",
                                props: {
                                    skin: "gift/img_bg1.png",
                                    scaleY: 1,
                                    scaleX: 1,
                                    centerY: 43,
                                    centerX: 2,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 90
                            }, {
                                type: "Box",
                                props: {
                                    y: 221.5,
                                    width: 470,
                                    scaleY: 1,
                                    scaleX: 1,
                                    height: 122,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 1
                                },
                                compId: 115,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 13,
                                        x: 382,
                                        skin: "gift/img_star1.png"
                                    },
                                    compId: 96
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -9,
                                        x: 15,
                                        skin: "gift/img_star2.png"
                                    },
                                    compId: 97
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 35,
                                        x: 88,
                                        skin: "gift/title_sclb.png"
                                    },
                                    compId: 93
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 449,
                                    height: 173,
                                    centerY: 4,
                                    centerX: 53,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 1
                                },
                                compId: 113,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 52,
                                        x: 117,
                                        skin: "gift/title_jx.png"
                                    },
                                    compId: 100
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 34,
                                        x: 203,
                                        width: 6,
                                        var: "lblMoney",
                                        skewX: -10,
                                        scaleY: .7,
                                        scaleX: .7,
                                        height: 12
                                    },
                                    compId: 99
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 52,
                                        x: 233,
                                        skin: "gift/title_y.png"
                                    },
                                    compId: 101
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 96,
                                        x: 156,
                                        skin: "gift/title_hdjb.png"
                                    },
                                    compId: 102
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 74,
                                        x: 303,
                                        width: 12,
                                        var: "lblBei",
                                        skewX: -10,
                                        scaleY: .7,
                                        scaleX: .7,
                                        height: 12
                                    },
                                    compId: 103
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 189,
                                    x: 1150,
                                    var: "btnBack",
                                    stateNum: 1,
                                    skin: "firstPic/btn_close.png",
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 107,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: 1,
                                        aniScaleX: 1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 108
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 600,
                                    x: 817,
                                    width: 255,
                                    var: "btnBuy",
                                    stateNum: 1,
                                    skin: "noZip/btn_green.png",
                                    sizeGrid: "0,45,0,45",
                                    scaleY: 0,
                                    scaleX: 0,
                                    labelStrokeColor: "#70200b",
                                    labelStroke: 4,
                                    labelSize: 32,
                                    labelFont: "SimHei",
                                    labelColors: "#ffffff",
                                    labelBold: true,
                                    label: "6 元 抢购",
                                    height: 94,
                                    centerX: 2,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 92,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: 1,
                                        aniScaleX: 1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 109
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 90,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 90,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 90,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 90,
                                        key: "scaleY",
                                        index: 7
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 90,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 90,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 90,
                                        key: "scaleX",
                                        index: 7
                                    } ]
                                }
                            }, {
                                target: 113,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 113,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 113,
                                        key: "scaleY",
                                        index: 7
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 113,
                                        key: "scaleY",
                                        index: 12
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 113,
                                        key: "scaleY",
                                        index: 14
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 113,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 113,
                                        key: "scaleX",
                                        index: 7
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 113,
                                        key: "scaleX",
                                        index: 12
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 113,
                                        key: "scaleX",
                                        index: 14
                                    } ]
                                }
                            }, {
                                target: 92,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 92,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 92,
                                        key: "scaleY",
                                        index: 12
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 92,
                                        key: "scaleY",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 92,
                                        key: "scaleY",
                                        index: 16
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 92,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 92,
                                        key: "scaleX",
                                        index: 12
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 92,
                                        key: "scaleX",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 92,
                                        key: "scaleX",
                                        index: 16
                                    } ],
                                    labelStrokeColor: [ {
                                        value: "#70200b",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 92,
                                        key: "labelStrokeColor",
                                        index: 0
                                    }, {
                                        value: "#226306",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 92,
                                        key: "labelStrokeColor",
                                        index: 17
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 92,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 92,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 92,
                                        key: "alpha",
                                        index: 14
                                    } ]
                                }
                            }, {
                                target: 107,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 107,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 107,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 107,
                                        key: "alpha",
                                        index: 17
                                    } ]
                                }
                            }, {
                                target: 115,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 115,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 115,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 115,
                                        key: "scaleY",
                                        index: 9
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 115,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 115,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 115,
                                        key: "scaleX",
                                        index: 9
                                    } ]
                                }
                            } ],
                            name: "aniBg",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "gift/img_bg1.png", "gift/img_star1.png", "gift/img_star2.png", "gift/title_sclb.png", "gift/title_jx.png", "gift/title_y.png", "gift/title_hdjb.png", "firstPic/btn_close.png", "noZip/btn_green.png" ],
                        loadList3D: []
                    };
                    return GiftScDlgUI;
                }(Laya.Dialog);
                gift.GiftScDlgUI = GiftScDlgUI;
                REG("ui.gift.GiftScDlgUI", GiftScDlgUI);
                var GiftShakeDlgUI = function(_super) {
                    __extends(GiftShakeDlgUI, _super);
                    function GiftShakeDlgUI() {
                        return _super.call(this) || this;
                    }
                    GiftShakeDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(GiftShakeDlgUI.uiView);
                    };
                    GiftShakeDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1685,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 87
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 89,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 350,
                                    height: 354,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 138,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        skin: "gift/img_bg3.png",
                                        scaleX: -1,
                                        right: 175
                                    },
                                    compId: 93
                                }, {
                                    type: "Image",
                                    props: {
                                        skin: "gift/img_bg3.png",
                                        left: 1
                                    },
                                    compId: 92
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 198,
                                    x: 638,
                                    width: 354,
                                    height: 354,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 129,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 7,
                                        x: 91,
                                        skin: "gift/img_light.png",
                                        alpha: 1
                                    },
                                    compId: 130
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -9.5,
                                        x: 160,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 147
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 10,
                                        x: 234,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 148
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 42,
                                        x: 281,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 149
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 97,
                                        x: 317,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 150
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 162.5,
                                        x: 327,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 151
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 228,
                                        x: 313,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 152
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 282,
                                        x: 275,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 153
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 316,
                                        x: 222,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 154
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 331.5,
                                        x: 161,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 155
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 314,
                                        x: 91,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 156
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 282,
                                        x: 43,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 157
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 227,
                                        x: 8,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 158
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 162.5,
                                        x: -6,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 159
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 97,
                                        x: 8,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 160
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 44,
                                        x: 42,
                                        skin: "gift/img_light.png",
                                        alpha: 0
                                    },
                                    compId: 161
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 375,
                                    x: 815,
                                    width: 354,
                                    var: "boxRotate",
                                    height: 354,
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 123,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        x: 20,
                                        skin: "gift/imgAni.png",
                                        centerY: 0
                                    },
                                    compId: 124
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 338,
                                        skin: "gift/imgAni.png",
                                        scaleX: -1,
                                        centerY: 0
                                    },
                                    compId: 125
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 375,
                                    x: 815,
                                    width: 1023,
                                    var: "boxShake",
                                    height: 750,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 100,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 650,
                                        x: 419,
                                        width: 214,
                                        text: "你还有   次机会！",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        height: 24,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#baebf8",
                                        bold: true
                                    },
                                    compId: 97
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 650,
                                        x: 492,
                                        width: 38,
                                        var: "lblTimes",
                                        valign: "middle",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        height: 30,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#e2ca1e",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 98
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 278,
                                        x: 350.359375,
                                        skin: "gift/img_shake2.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 96
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 148,
                                        x: 523,
                                        var: "imgTop",
                                        skin: "gift/title_xyyyy.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 101
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 500,
                                        x: 603.5,
                                        width: 271,
                                        skin: "gift/img_shake.png",
                                        rotation: -45,
                                        pivotY: 330,
                                        pivotX: 136,
                                        height: 330
                                    },
                                    compId: 94
                                }, {
                                    type: "Button",
                                    props: {
                                        width: 227,
                                        var: "btnShake",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,45,0,45",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 4,
                                        labelSize: 32,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        label: "点我摇奖",
                                        height: 93,
                                        centerX: 0,
                                        bottom: 106,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 95,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 99
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 377,
                                    x: 815,
                                    width: 1044,
                                    visible: false,
                                    var: "boxReward",
                                    height: 750,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 1
                                },
                                compId: 102,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 143,
                                        x: 292,
                                        skin: "common/img_title_4.png"
                                    },
                                    compId: 113
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 330,
                                        skin: "gift/img_bottom2.png",
                                        centerX: -81
                                    },
                                    compId: 108
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 330,
                                        skin: "gift/img_bottom2.png",
                                        scaleX: -1,
                                        centerX: 81
                                    },
                                    compId: 109
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 213,
                                        x: 304,
                                        skin: "dial/img_boxmoney.png",
                                        scaleY: .7,
                                        scaleX: .7
                                    },
                                    compId: 110
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 477,
                                        x: 469,
                                        var: "lblBefore",
                                        strokeColor: "#70200b",
                                        stroke: 4,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 111
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 427,
                                        x: 436,
                                        width: 155,
                                        var: "lblNow",
                                        strokeColor: "#70200b",
                                        stroke: 4,
                                        height: 37,
                                        fontSize: 33,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 112
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 606,
                                        x: 972,
                                        width: 230,
                                        var: "btnBuy",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,45,0,45",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 4,
                                        labelSize: 32,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        label: "购买",
                                        height: 94,
                                        centerX: 157,
                                        bottom: 97,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 103,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 104
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        width: 230,
                                        var: "btnCancel",
                                        stateNum: 1,
                                        skin: "noZip/btn_green.png",
                                        sizeGrid: "0,45,0,45",
                                        labelStrokeColor: "#033253",
                                        labelStroke: 4,
                                        labelSize: 32,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        label: "取消",
                                        height: 94,
                                        centerX: -144,
                                        bottom: 93,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 105,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 106
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 145,
                                        x: 427,
                                        skin: "gift/title_yzl.png"
                                    },
                                    compId: 116
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 488,
                                        x: 592,
                                        width: 266,
                                        skin: "gift/img_label.png",
                                        scaleY: .5,
                                        scaleX: -.5,
                                        rotation: 3,
                                        height: 12
                                    },
                                    compId: 117
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 657,
                                        x: 583,
                                        text: "限时购买：",
                                        strokeColor: "#033253",
                                        stroke: 4,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#a1dcf4",
                                        bold: true
                                    },
                                    compId: 118
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 657,
                                        x: 711,
                                        var: "lblTime",
                                        strokeColor: "#033253",
                                        stroke: 4,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#e3ce3b",
                                        bold: true
                                    },
                                    compId: 119
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 389,
                                        x: 595,
                                        width: 442,
                                        var: "lblMoney",
                                        text: "1111",
                                        scaleY: .3,
                                        scaleX: .3,
                                        height: 84,
                                        fontSize: 22,
                                        font: "goldNum",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 107
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 209,
                                    var: "btnBack",
                                    stateNum: 1,
                                    skin: "firstPic/btn_close.png",
                                    centerX: 242,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 90,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: 1,
                                        aniScaleX: 1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 91
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 409,
                                    x: 784.5,
                                    skin: "gift/imgWave.png",
                                    rotation: -15,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 127
                            }, {
                                type: "Image",
                                props: {
                                    y: 344,
                                    x: 845.5,
                                    skin: "gift/imgWave.png",
                                    rotation: 165,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 128
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 101,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 101,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 101,
                                        key: "rotation",
                                        index: 3
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 101,
                                        key: "rotation",
                                        index: 6
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 101,
                                        key: "rotation",
                                        index: 9
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 101,
                                        key: "rotation",
                                        index: 12
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 101,
                                        key: "rotation",
                                        index: 15
                                    } ]
                                }
                            } ],
                            name: "aniTop",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 96,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 96,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 96,
                                        key: "rotation",
                                        index: 3
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 96,
                                        key: "rotation",
                                        index: 6
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 96,
                                        key: "rotation",
                                        index: 9
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 96,
                                        key: "rotation",
                                        index: 12
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 96,
                                        key: "rotation",
                                        index: 15
                                    } ]
                                }
                            } ],
                            name: "aniShake",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 123,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 123,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 123,
                                        key: "rotation",
                                        index: 90
                                    } ]
                                }
                            } ],
                            name: "aniRotate",
                            id: 3,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 127,
                                keyframes: {
                                    y: [ {
                                        value: 410,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 127,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 463,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 127,
                                        key: "y",
                                        index: 30
                                    } ],
                                    x: [ {
                                        value: 784.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 127,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 699,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 127,
                                        key: "x",
                                        index: 30
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 127,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 127,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 127,
                                        key: "alpha",
                                        index: 30
                                    } ]
                                }
                            }, {
                                target: 128,
                                keyframes: {
                                    y: [ {
                                        value: 344,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 128,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 266,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 128,
                                        key: "y",
                                        index: 30
                                    } ],
                                    x: [ {
                                        value: 845.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 128,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 913,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 128,
                                        key: "x",
                                        index: 30
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 128,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 128,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 128,
                                        key: "alpha",
                                        index: 30
                                    } ]
                                }
                            } ],
                            name: "aniWave",
                            id: 4,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 94,
                                keyframes: {
                                    rotation: [ {
                                        value: -45,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 94,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: -35,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 94,
                                        key: "rotation",
                                        index: 1
                                    }, {
                                        value: -55,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 94,
                                        key: "rotation",
                                        index: 3
                                    }, {
                                        value: -35,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 94,
                                        key: "rotation",
                                        index: 6
                                    }, {
                                        value: -55,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 94,
                                        key: "rotation",
                                        index: 9
                                    }, {
                                        value: -35,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 94,
                                        label: null,
                                        key: "rotation",
                                        index: 12
                                    }, {
                                        value: -55,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 94,
                                        label: null,
                                        key: "rotation",
                                        index: 15
                                    }, {
                                        value: -45,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 94,
                                        label: null,
                                        key: "rotation",
                                        index: 16
                                    } ]
                                }
                            } ],
                            name: "aniFinger",
                            id: 5,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 100,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 100,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 100,
                                        key: "scaleY",
                                        index: 8
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 100,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 100,
                                        key: "scaleX",
                                        index: 8
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 100,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 100,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 102,
                                keyframes: {
                                    scaleY: [ {
                                        value: .1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 102,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 102,
                                        key: "scaleY",
                                        index: 8
                                    } ],
                                    scaleX: [ {
                                        value: .1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 102,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 102,
                                        key: "scaleX",
                                        index: 8
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 102,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 102,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            } ],
                            name: "aniScale",
                            id: 6,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 107,
                                keyframes: {
                                    scaleY: [ {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 107,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 107,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: .67,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 107,
                                        key: "scaleY",
                                        index: 8
                                    } ],
                                    scaleX: [ {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 107,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 107,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: .67,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 107,
                                        key: "scaleX",
                                        index: 8
                                    } ]
                                }
                            } ],
                            name: "aniMoney",
                            id: 8,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 130,
                                keyframes: {
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 130,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 130,
                                        key: "alpha",
                                        index: 2
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 130,
                                        key: "alpha",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 130,
                                        key: "alpha",
                                        index: 36
                                    } ]
                                }
                            }, {
                                target: 147,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 147,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 147,
                                        key: "alpha",
                                        index: 2
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 147,
                                        key: "alpha",
                                        index: 4
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 147,
                                        key: "alpha",
                                        index: 6
                                    } ]
                                }
                            }, {
                                target: 148,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 148,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 148,
                                        key: "alpha",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 148,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 148,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 149,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 149,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 149,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 149,
                                        key: "alpha",
                                        index: 8
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 149,
                                        key: "alpha",
                                        index: 10
                                    } ]
                                }
                            }, {
                                target: 150,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 150,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 150,
                                        key: "alpha",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 150,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 150,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 151,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 151,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 151,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 151,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 151,
                                        key: "alpha",
                                        index: 14
                                    } ]
                                }
                            }, {
                                target: 152,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 152,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 152,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 152,
                                        key: "alpha",
                                        index: 14
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 152,
                                        key: "alpha",
                                        index: 16
                                    } ]
                                }
                            }, {
                                target: 153,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 153,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 153,
                                        key: "alpha",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 153,
                                        key: "alpha",
                                        index: 16
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 153,
                                        key: "alpha",
                                        index: 18
                                    } ]
                                }
                            }, {
                                target: 154,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 154,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 154,
                                        key: "alpha",
                                        index: 16
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 154,
                                        key: "alpha",
                                        index: 18
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 154,
                                        key: "alpha",
                                        index: 20
                                    } ]
                                }
                            }, {
                                target: 155,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 155,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 155,
                                        key: "alpha",
                                        index: 18
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 155,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 155,
                                        key: "alpha",
                                        index: 22
                                    } ]
                                }
                            }, {
                                target: 156,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 156,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 156,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 156,
                                        key: "alpha",
                                        index: 22
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 156,
                                        key: "alpha",
                                        index: 24
                                    } ]
                                }
                            }, {
                                target: 157,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 157,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 157,
                                        key: "alpha",
                                        index: 22
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 157,
                                        key: "alpha",
                                        index: 24
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 157,
                                        key: "alpha",
                                        index: 26
                                    } ]
                                }
                            }, {
                                target: 158,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 158,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 158,
                                        key: "alpha",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 158,
                                        key: "alpha",
                                        index: 26
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 158,
                                        key: "alpha",
                                        index: 28
                                    } ]
                                }
                            }, {
                                target: 159,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 159,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 159,
                                        key: "alpha",
                                        index: 26
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 159,
                                        key: "alpha",
                                        index: 28
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 159,
                                        key: "alpha",
                                        index: 30
                                    } ]
                                }
                            }, {
                                target: 160,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 160,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 160,
                                        key: "alpha",
                                        index: 28
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 160,
                                        key: "alpha",
                                        index: 30
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 160,
                                        key: "alpha",
                                        index: 32
                                    } ]
                                }
                            }, {
                                target: 161,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 161,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 161,
                                        key: "alpha",
                                        index: 30
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 161,
                                        key: "alpha",
                                        index: 32
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 161,
                                        key: "alpha",
                                        index: 34
                                    } ]
                                }
                            } ],
                            name: "aniBorder",
                            id: 9,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "gift/img_bg3.png", "gift/img_light.png", "gift/imgAni.png", "gift/img_shake2.png", "gift/title_xyyyy.png", "gift/img_shake.png", "basePic/btn_yellow.png", "common/img_title_4.png", "gift/img_bottom2.png", "dial/img_boxmoney.png", "noZip/btn_green.png", "gift/title_yzl.png", "gift/img_label.png", "firstPic/btn_close.png", "gift/imgWave.png" ],
                        loadList3D: []
                    };
                    return GiftShakeDlgUI;
                }(Laya.Dialog);
                gift.GiftShakeDlgUI = GiftShakeDlgUI;
                REG("ui.gift.GiftShakeDlgUI", GiftShakeDlgUI);
            })(gift = ui.gift || (ui.gift = {}));
        })(ui = exports.ui || (exports.ui = {}));
        (function(ui) {
            var hallScene;
            (function(hallScene) {
                var ActivityDialogUI = function(_super) {
                    __extends(ActivityDialogUI, _super);
                    function ActivityDialogUI() {
                        return _super.call(this) || this;
                    }
                    ActivityDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ActivityDialogUI.uiView);
                    };
                    ActivityDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            popupCenter: true,
                            layoutEnabled: true,
                            height: 750,
                            centerY: 0,
                            centerX: 0,
                            alpha: 1
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 10,
                                x: 10,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 2
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3,
                            child: [ {
                                type: "Box",
                                props: {
                                    presetID: 1,
                                    centerY: 26,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    y: 0,
                                    x: 0,
                                    width: 1099,
                                    name: "dialogTitle",
                                    isPresetRoot: true,
                                    height: 621
                                },
                                compId: 279,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        presetID: 2,
                                        y: 0,
                                        x: 0,
                                        width: 1099,
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "0,42,0,53",
                                        height: 621
                                    },
                                    compId: 9
                                }, {
                                    type: "Image",
                                    props: {
                                        presetID: 3,
                                        y: -5,
                                        x: -8,
                                        width: 1115,
                                        skin: "noZip/img_title_3.png",
                                        sizeGrid: "0,261,0,256",
                                        height: 83
                                    },
                                    compId: 10
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 1099,
                                    height: 621,
                                    centerY: 26,
                                    centerX: 0
                                },
                                compId: 280,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -11,
                                        x: 316,
                                        width: 467,
                                        skin: "noZip/img_title_2.png",
                                        sizeGrid: "0,185,0,185"
                                    },
                                    compId: 282
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 0,
                                        x: 468,
                                        text: "精彩活动",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        fontSize: 40,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true
                                    },
                                    compId: 283
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 86,
                                        x: 27,
                                        width: 225,
                                        skin: "noZip/img_bg_8.png",
                                        sizeGrid: "21,20,24,17",
                                        height: 512
                                    },
                                    compId: 284
                                }, {
                                    type: "List",
                                    props: {
                                        y: 85,
                                        x: 139,
                                        width: 230,
                                        var: "list_tabs",
                                        vScrollBarSkin: "comp/vscrollbar_slider.png",
                                        spaceY: -23,
                                        repeatY: 10,
                                        height: 508,
                                        anchorX: .5
                                    },
                                    compId: 285,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 230,
                                            renderType: "render",
                                            height: 106
                                        },
                                        compId: 286,
                                        child: [ {
                                            type: "Button",
                                            props: {
                                                width: 202,
                                                stateNum: 1,
                                                skin: "noZip/btn_1.png",
                                                sizeGrid: "0,35,0,21",
                                                name: "btn_tabs",
                                                labelStrokeColor: "#70200b",
                                                labelStroke: 4,
                                                labelSize: 30,
                                                labelPadding: "0,0,3,0",
                                                labelFont: "SimHei",
                                                labelColors: "#ffffff",
                                                labelBold: true,
                                                labelAlign: "center",
                                                label: "每日活动",
                                                height: 75,
                                                centerY: 0,
                                                centerX: 0,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 287,
                                            child: [ {
                                                type: "Script",
                                                props: {
                                                    runtime: "script/ButtonAni.ts"
                                                },
                                                compId: 288
                                            } ]
                                        } ]
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 86,
                                        x: 269,
                                        width: 801,
                                        skin: "noZip/img_bg_8.png",
                                        sizeGrid: "21,23,26,21",
                                        height: 512
                                    },
                                    compId: 290,
                                    child: [ {
                                        type: "ViewStack",
                                        props: {
                                            y: 1,
                                            x: 3,
                                            width: 796,
                                            var: "stack_activity",
                                            height: 505
                                        },
                                        compId: 292
                                    } ]
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 103,
                                    var: "returnBack",
                                    stateNum: 1,
                                    skin: "firstPic/btn_close.png",
                                    centerX: 536,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 296,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 297
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "prefab/dialogTitle.prefab", "noZip/img_title_2.png", "noZip/img_bg_8.png", "comp/vscrollbar_slider.png", "noZip/btn_1.png", "firstPic/btn_close.png" ],
                        loadList3D: []
                    };
                    return ActivityDialogUI;
                }(Laya.Dialog);
                hallScene.ActivityDialogUI = ActivityDialogUI;
                REG("ui.hallScene.ActivityDialogUI", ActivityDialogUI);
                var ActivityIntegerDlgUI = function(_super) {
                    __extends(ActivityIntegerDlgUI, _super);
                    function ActivityIntegerDlgUI() {
                        return _super.call(this) || this;
                    }
                    ActivityIntegerDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ActivityIntegerDlgUI.uiView);
                    };
                    ActivityIntegerDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1334,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1833,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 100
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 71,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 1099,
                                    height: 644,
                                    centerY: 13,
                                    centerX: 0
                                },
                                compId: 72,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 19,
                                        x: 0,
                                        width: 1096,
                                        visible: true,
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "219,54,212,39",
                                        name: "bg1",
                                        height: 621
                                    },
                                    compId: 73
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 97,
                                        x: 34,
                                        width: 1025,
                                        skin: "noZip/img_bg_13.png",
                                        sizeGrid: "39,42,36,31",
                                        height: 90
                                    },
                                    compId: 95
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 14,
                                        x: -8,
                                        width: 1112,
                                        skin: "noZip/img_title_3.png",
                                        sizeGrid: "0,265,0,265",
                                        name: "title1",
                                        height: 83
                                    },
                                    compId: 74
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 8,
                                        x: 291,
                                        width: 523,
                                        skin: "noZip/img_title_2.png",
                                        name: "title2",
                                        height: 69
                                    },
                                    compId: 75,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 13,
                                            x: 179,
                                            text: "整点奖励",
                                            styleSkin: "common/label.png",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            name: "title3",
                                            height: 42,
                                            fontSize: 40,
                                            font: "黑体",
                                            color: "#ffffff",
                                            centerX: 0,
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 76
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 97,
                                        x: 66,
                                        width: 233,
                                        valign: "middle",
                                        text: "时间",
                                        styleSkin: "common/label.png",
                                        strokeColor: "#0b3170",
                                        stroke: 3.4,
                                        height: 36,
                                        fontSize: 30,
                                        font: "黑体",
                                        color: "#ffffff",
                                        align: "center"
                                    },
                                    compId: 77
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 97,
                                        x: 433,
                                        width: 233,
                                        valign: "middle",
                                        text: "奖励",
                                        styleSkin: "common/label.png",
                                        strokeColor: "#0b3170",
                                        stroke: 3.4,
                                        height: 36,
                                        fontSize: 30,
                                        font: "黑体",
                                        color: "#ffffff",
                                        align: "center"
                                    },
                                    compId: 93
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 97,
                                        x: 855,
                                        width: 176,
                                        valign: "middle",
                                        text: "状态",
                                        styleSkin: "common/label.png",
                                        strokeColor: "#0b3170",
                                        stroke: 3.4,
                                        height: 36,
                                        fontSize: 30,
                                        font: "黑体",
                                        color: "#ffffff",
                                        align: "center"
                                    },
                                    compId: 94
                                }, {
                                    type: "List",
                                    props: {
                                        y: 133,
                                        x: 25,
                                        width: 1054,
                                        var: "listMain",
                                        vScrollBarSkin: "comp/vscrollbar_slider.png",
                                        spaceY: 10,
                                        repeatY: 6,
                                        repeatX: 1,
                                        renderType: "render",
                                        height: 463
                                    },
                                    compId: 78,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 1038,
                                            renderType: "render",
                                            name: "render",
                                            height: 100
                                        },
                                        compId: 79,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 3,
                                                x: 9,
                                                width: 1030,
                                                skin: "noZip/img_bg_11.png",
                                                sizeGrid: "43,69,55,69",
                                                name: "imgBg",
                                                height: 100
                                            },
                                            compId: 80
                                        }, {
                                            type: "Label",
                                            props: {
                                                x: 80,
                                                width: 337,
                                                valign: "middle",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 4,
                                                name: "lblText",
                                                height: 37,
                                                fontSize: 30,
                                                font: "黑体",
                                                color: "#d6e3e3",
                                                centerY: 5,
                                                align: "left"
                                            },
                                            compId: 83
                                        }, {
                                            type: "List",
                                            props: {
                                                y: 24,
                                                x: 494,
                                                width: 330,
                                                spaceX: 20,
                                                repeatY: 1,
                                                renderType: "render",
                                                name: "lstItem",
                                                height: 65
                                            },
                                            compId: 99,
                                            child: [ {
                                                type: "Box",
                                                props: {
                                                    width: 65,
                                                    name: "render",
                                                    height: 65
                                                },
                                                compId: 85,
                                                child: [ {
                                                    type: "Image",
                                                    props: {
                                                        y: 0,
                                                        x: 0,
                                                        width: 65,
                                                        name: "imgItem",
                                                        height: 65
                                                    },
                                                    compId: 87
                                                }, {
                                                    type: "Label",
                                                    props: {
                                                        x: 0,
                                                        width: 65,
                                                        valign: "bottom",
                                                        styleSkin: "common/label.png",
                                                        strokeColor: "#0b3170",
                                                        stroke: 5,
                                                        name: "lblCount",
                                                        height: 23,
                                                        fontSize: 20,
                                                        font: "Arial",
                                                        color: "#ffffff",
                                                        bottom: 0,
                                                        align: "center"
                                                    },
                                                    compId: 88
                                                } ]
                                            } ]
                                        }, {
                                            type: "Button",
                                            props: {
                                                y: 58,
                                                x: 965,
                                                width: 228,
                                                stateNum: 1,
                                                skin: "noZip/btn_gray.png",
                                                sizeGrid: "0,51,0,57",
                                                scaleY: .8,
                                                scaleX: .8,
                                                name: "btnGet",
                                                labelStrokeColor: "#0b3170",
                                                labelStroke: 4,
                                                labelSize: 42,
                                                labelPadding: "-1,0,0,0",
                                                labelFont: "SimHei",
                                                labelColors: "#ffffff",
                                                labelBold: true,
                                                height: 93,
                                                centerX: 397,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 102,
                                            child: [ {
                                                type: "Script",
                                                props: {
                                                    aniScaleY: "0.8",
                                                    aniScaleX: "0.8",
                                                    runtime: "script/ButtonAni.ts"
                                                },
                                                compId: 103
                                            } ]
                                        } ]
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    var: "btnBack",
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 101
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_bg_13.png", "noZip/img_title_3.png", "noZip/img_title_2.png", "common/label.png", "comp/vscrollbar_slider.png", "noZip/img_bg_11.png", "noZip/btn_gray.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return ActivityIntegerDlgUI;
                }(Laya.Dialog);
                hallScene.ActivityIntegerDlgUI = ActivityIntegerDlgUI;
                REG("ui.hallScene.ActivityIntegerDlgUI", ActivityIntegerDlgUI);
                var ActivityInviteDlgUI = function(_super) {
                    __extends(ActivityInviteDlgUI, _super);
                    function ActivityInviteDlgUI() {
                        return _super.call(this) || this;
                    }
                    ActivityInviteDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ActivityInviteDlgUI.uiView);
                    };
                    ActivityInviteDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1334,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1833,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 102
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: 63,
                                    width: 1099,
                                    height: 644,
                                    centerX: 0
                                },
                                compId: 7,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 19,
                                        x: 0,
                                        width: 1096,
                                        visible: true,
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "219,54,212,39",
                                        name: "bg1",
                                        height: 621
                                    },
                                    compId: 12
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 14,
                                        x: -8,
                                        width: 1112,
                                        skin: "noZip/img_title_3.png",
                                        sizeGrid: "0,265,0,265",
                                        name: "title1",
                                        height: 83
                                    },
                                    compId: 53
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 8,
                                        x: 291,
                                        width: 523,
                                        skin: "noZip/img_title_2.png",
                                        name: "title2",
                                        height: 69
                                    },
                                    compId: 54
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 21,
                                        x: 471,
                                        text: "邀请有礼",
                                        styleSkin: "common/label.png",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        name: "title3",
                                        height: 42,
                                        fontSize: 40,
                                        font: "黑体",
                                        color: "#ffffff",
                                        centerX: 0,
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 55
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 97,
                                        width: 1030,
                                        skin: "noZip/img_bg_8.png",
                                        sizeGrid: "22,20,27,23",
                                        height: 461,
                                        centerX: 0
                                    },
                                    compId: 109
                                }, {
                                    type: "List",
                                    props: {
                                        y: 156,
                                        x: 44,
                                        width: 1003,
                                        var: "lstInvite",
                                        vScrollBarSkin: "comp/vscrollbar_slider.png",
                                        spaceY: 2,
                                        repeatY: 6,
                                        repeatX: 1,
                                        renderType: "render",
                                        height: 379
                                    },
                                    compId: 35,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 1028,
                                            renderType: "render",
                                            name: "render",
                                            height: 84
                                        },
                                        compId: 36,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 3,
                                                x: 9,
                                                width: 970,
                                                skin: "noZip/img_bg_11.png",
                                                sizeGrid: "43,69,55,69",
                                                name: "imgBg",
                                                height: 81
                                            },
                                            compId: 101
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 30,
                                                x: 435,
                                                width: 140,
                                                text: "邀请2人",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3,
                                                name: "lblText",
                                                height: 37,
                                                fontSize: 30,
                                                font: "黑体",
                                                color: "#ffffff",
                                                bold: true,
                                                align: "left"
                                            },
                                            compId: 69
                                        }, {
                                            type: "List",
                                            props: {
                                                y: 15,
                                                x: 44,
                                                width: 391,
                                                spaceX: 20,
                                                scaleY: .9,
                                                scaleX: .9,
                                                repeatY: 1,
                                                renderType: "render",
                                                name: "lstItem",
                                                height: 65
                                            },
                                            compId: 103,
                                            child: [ {
                                                type: "Box",
                                                props: {
                                                    width: 65,
                                                    name: "render",
                                                    height: 65
                                                },
                                                compId: 74,
                                                child: [ {
                                                    type: "Image",
                                                    props: {
                                                        y: 0,
                                                        x: 0,
                                                        width: 65,
                                                        name: "imgItem",
                                                        height: 65
                                                    },
                                                    compId: 76
                                                }, {
                                                    type: "Label",
                                                    props: {
                                                        x: 0,
                                                        width: 65,
                                                        valign: "bottom",
                                                        styleSkin: "common/label.png",
                                                        strokeColor: "#0b3170",
                                                        stroke: 5,
                                                        name: "lblCount",
                                                        height: 23,
                                                        fontSize: 20,
                                                        font: "Arial",
                                                        color: "#ffffff",
                                                        bottom: 0,
                                                        align: "center"
                                                    },
                                                    compId: 90
                                                } ]
                                            } ]
                                        }, {
                                            type: "Button",
                                            props: {
                                                y: 45,
                                                x: 801,
                                                width: 228,
                                                stateNum: 1,
                                                skin: "noZip/btn_gray.png",
                                                sizeGrid: "0,51,0,57",
                                                scaleY: .7,
                                                scaleX: .7,
                                                name: "btnGet",
                                                labelStrokeColor: "#0b3170",
                                                labelStroke: 4,
                                                labelSize: 42,
                                                labelPadding: "-1,0,0,0",
                                                labelFont: "SimHei",
                                                labelColors: "#ffffff",
                                                labelBold: true,
                                                height: 93,
                                                centerX: 379,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 117,
                                            child: [ {
                                                type: "Script",
                                                props: {
                                                    aniScaleY: .7,
                                                    aniScaleX: .7,
                                                    runtime: "script/ButtonAni.ts"
                                                },
                                                compId: 118
                                            } ]
                                        } ]
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 110,
                                        x: 183,
                                        width: 42,
                                        var: "lbInvite",
                                        valign: "middle",
                                        text: "0",
                                        styleSkin: "common/label.png",
                                        strokeColor: "#0b3170",
                                        stroke: 3.4,
                                        height: 36,
                                        fontSize: 30,
                                        font: "黑体",
                                        color: "#ffde00",
                                        align: "center"
                                    },
                                    compId: 60
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 110,
                                        x: 58,
                                        width: 126,
                                        valign: "middle",
                                        text: "您已邀请",
                                        styleSkin: "common/label.png",
                                        strokeColor: "#0b3170",
                                        stroke: 3.4,
                                        height: 36,
                                        fontSize: 30,
                                        font: "黑体",
                                        color: "#c2fcfb",
                                        align: "left"
                                    },
                                    compId: 110
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 110,
                                        x: 225,
                                        width: 33,
                                        valign: "middle",
                                        text: "人",
                                        styleSkin: "common/label.png",
                                        strokeColor: "#0b3170",
                                        stroke: 3.4,
                                        height: 36,
                                        fontSize: 30,
                                        font: "黑体",
                                        color: "#c2fcfb",
                                        align: "left"
                                    },
                                    compId: 116
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 597,
                                        x: 553,
                                        width: 297,
                                        var: "btnInvite",
                                        stateNum: 1,
                                        skin: "noZip/btn_green.png",
                                        sizeGrid: "0,40,0,40",
                                        scaleY: .72,
                                        scaleX: .72,
                                        labelStrokeColor: "#2c7709",
                                        labelStroke: 6,
                                        labelSize: 40,
                                        labelPadding: "0,0,0,30",
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        label: "邀请好友",
                                        height: 93,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 111,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: .72,
                                            aniScaleX: .72,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 112
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 21,
                                            x: 40,
                                            skin: "common/img_invite.png",
                                            scaleY: 1.5,
                                            scaleX: 1.5
                                        },
                                        compId: 114
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    x: 0,
                                    var: "btnBack",
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 115
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_title_3.png", "noZip/img_title_2.png", "common/label.png", "noZip/img_bg_8.png", "comp/vscrollbar_slider.png", "noZip/img_bg_11.png", "noZip/btn_gray.png", "noZip/btn_green.png", "common/img_invite.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return ActivityInviteDlgUI;
                }(Laya.Dialog);
                hallScene.ActivityInviteDlgUI = ActivityInviteDlgUI;
                REG("ui.hallScene.ActivityInviteDlgUI", ActivityInviteDlgUI);
                var ActivityLuckDlgUI = function(_super) {
                    __extends(ActivityLuckDlgUI, _super);
                    function ActivityLuckDlgUI() {
                        return _super.call(this) || this;
                    }
                    ActivityLuckDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ActivityLuckDlgUI.uiView);
                    };
                    ActivityLuckDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1334,
                            runtime: "null",
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 81
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 12,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 1226,
                                    var: "box_main",
                                    height: 660,
                                    centerY: 5,
                                    centerX: 0
                                },
                                compId: 43,
                                child: [ {
                                    type: "Sprite",
                                    props: {
                                        y: 366,
                                        x: 110,
                                        texture: "activitys/img_hd_3.png"
                                    },
                                    compId: 82
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 95,
                                        width: 796,
                                        skin: "activitys/img_hd_bg.png",
                                        sizeGrid: "0,108,20,110",
                                        scaleY: 1,
                                        scaleX: 1,
                                        height: 537,
                                        centerX: -10
                                    },
                                    compId: 45
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 448,
                                        x: 240,
                                        width: 723,
                                        skin: "activitys/img_hd_18.png",
                                        sizeGrid: "0,70,0,70",
                                        height: 52
                                    },
                                    compId: 76
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 141,
                                        x: 364,
                                        texture: "activitys/img_hd_text.png"
                                    },
                                    compId: 80
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 467,
                                        x: 207,
                                        texture: "activitys/img_hd_1.png"
                                    },
                                    compId: 75
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 303,
                                        x: 293,
                                        texture: "activitys/img_hd_2.png"
                                    },
                                    compId: 74
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 556,
                                        x: 268,
                                        skin: "activitys/img_hd_17.png"
                                    },
                                    compId: 83
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 556,
                                        x: 797,
                                        skin: "activitys/img_hd_17.png"
                                    },
                                    compId: 84
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 601,
                                        width: 247,
                                        var: "btn_buy",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "40,46,50,54",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 3.8,
                                        labelSize: 32,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "免费抽奖",
                                        height: 93,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 60,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            isPlaySound: true,
                                            isPlayAni: true,
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 61
                                    }, {
                                        type: "Sprite",
                                        props: {
                                            y: -2,
                                            x: 186,
                                            var: "imgRedPoint",
                                            texture: "hall/img_mail_0.png"
                                        },
                                        compId: 72
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -89,
                                        x: 137,
                                        skin: "hall/img_guang.png",
                                        name: "title1",
                                        centerX: 0
                                    },
                                    compId: 46
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 29,
                                        x: 310,
                                        skin: "firstPic/img_title_6.png",
                                        name: "title2",
                                        centerX: 0
                                    },
                                    compId: 47
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -9,
                                        x: 367,
                                        skin: "firstPic/img_xinx.png",
                                        name: "title3",
                                        centerX: 0
                                    },
                                    compId: 48
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 33,
                                        x: 449,
                                        skin: "activitys/img_hd_20.png",
                                        name: "title4",
                                        centerX: 0
                                    },
                                    compId: 49
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 509,
                                        x: 314,
                                        width: 602,
                                        var: "lbTip",
                                        valign: "middle",
                                        text: "观看15秒广告即可免费抽奖",
                                        strokeColor: "#000000",
                                        stroke: 1,
                                        mouseEnabled: false,
                                        height: 36,
                                        fontSize: 22,
                                        font: "黑体",
                                        color: "#16d4e5",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 77
                                }, {
                                    type: "HTMLDivElement",
                                    props: {
                                        y: 152,
                                        x: 413,
                                        width: 400,
                                        var: "htmlText",
                                        height: 33,
                                        runtime: "laya.html.dom.HTMLDivElement"
                                    },
                                    compId: 78
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 180,
                                        width: 605,
                                        var: "boxContent",
                                        height: 145,
                                        centerX: 0
                                    },
                                    compId: 87,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 605,
                                            var: "boxBubble",
                                            height: 146
                                        },
                                        compId: 85
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 111.5,
                                        var: "returnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        right: 230,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 41,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 42
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "activitys/img_hd_3.png", "activitys/img_hd_bg.png", "activitys/img_hd_18.png", "activitys/img_hd_text.png", "activitys/img_hd_1.png", "activitys/img_hd_2.png", "activitys/img_hd_17.png", "basePic/btn_yellow.png", "hall/img_mail_0.png", "hall/img_guang.png", "firstPic/img_title_6.png", "firstPic/img_xinx.png", "activitys/img_hd_20.png", "firstPic/btn_close.png" ],
                        loadList3D: []
                    };
                    return ActivityLuckDlgUI;
                }(Laya.Dialog);
                hallScene.ActivityLuckDlgUI = ActivityLuckDlgUI;
                REG("ui.hallScene.ActivityLuckDlgUI", ActivityLuckDlgUI);
                var ActivityRebateDlgUI = function(_super) {
                    __extends(ActivityRebateDlgUI, _super);
                    function ActivityRebateDlgUI() {
                        return _super.call(this) || this;
                    }
                    ActivityRebateDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ActivityRebateDlgUI.uiView);
                    };
                    ActivityRebateDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            runtime: "null",
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1685,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 113
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 12,
                            child: [ {
                                type: "Image",
                                props: {
                                    width: 680,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "42,52,59,65",
                                    height: 480,
                                    centerY: 22,
                                    centerX: 0
                                },
                                compId: 90,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 65,
                                        width: 634,
                                        skin: "noZip/img_bg_15.png",
                                        sizeGrid: "31,72,41,73",
                                        height: 347,
                                        centerX: 0
                                    },
                                    compId: 114
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 421,
                                        x: 7,
                                        width: 667,
                                        valign: "middle",
                                        text: "注：鱼分取100万的整数倍，多余鱼分不计，奖券取整",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        height: 40,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#bcf2f6",
                                        centerX: 0,
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 106
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -11,
                                        x: 148,
                                        width: 393,
                                        skin: "noZip/img_title_2.png",
                                        sizeGrid: "0,103,0,99",
                                        height: 69
                                    },
                                    compId: 111,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 10,
                                            width: 163,
                                            valign: "middle",
                                            text: "免费奖券",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            height: 44,
                                            fontSize: 40,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            centerX: 0,
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 112
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 14,
                                        x: 1141,
                                        var: "returnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        right: -18,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 91,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 136
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 114,
                                        x: 434
                                    },
                                    compId: 133,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 91,
                                            x: 78,
                                            stateNum: 1,
                                            skin: "firstPic/img_item_bg.png",
                                            mouseEnabled: false,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 127
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 41,
                                            x: 28,
                                            skin: "iconAndSkin/icon_ticket.png"
                                        },
                                        compId: 102
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 142,
                                            x: 0,
                                            width: 155,
                                            var: "text_ticketNum",
                                            valign: "middle",
                                            text: "0",
                                            strokeColor: "#5e2100",
                                            stroke: 3.5,
                                            height: 32,
                                            fontSize: 30,
                                            font: "SimHei",
                                            color: "#ffde00",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 103
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 0,
                                            x: 13,
                                            width: 129,
                                            valign: "middle",
                                            text: "昨日累计奖券",
                                            height: 20,
                                            fontSize: 20,
                                            font: "SimHei",
                                            color: "#0f5180",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 100
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 220,
                                            x: 78,
                                            width: 211,
                                            var: "btn_getTicket",
                                            stateNum: 1,
                                            skin: "basePic/btn_yellow.png",
                                            sizeGrid: "0,76,0,67",
                                            scaleY: .7,
                                            scaleX: .7,
                                            labelStrokeColor: "#70200b",
                                            labelStroke: 4,
                                            labelSize: 34,
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "领 取",
                                            height: 93,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 95,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                aniScaleY: .7,
                                                aniScaleX: .7,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 135
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 114,
                                        x: 80
                                    },
                                    compId: 134,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            width: 153,
                                            valign: "middle",
                                            text: "当前贵族等级：",
                                            height: 20,
                                            fontSize: 20,
                                            font: "SimHei",
                                            color: "#0f5180",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 97
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 28,
                                            width: 300,
                                            skin: "noZip/img_bg_1.png",
                                            sizeGrid: "20,21,23,22",
                                            height: 40
                                        },
                                        compId: 92,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 5,
                                                x: 29,
                                                width: 54,
                                                valign: "middle",
                                                text: "贵族",
                                                strokeColor: "#5e2100",
                                                stroke: 3.5,
                                                height: 30,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ffde00",
                                                bold: true,
                                                align: "left"
                                            },
                                            compId: 128
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 5,
                                                x: 89,
                                                width: 37,
                                                var: "text_vipGrade",
                                                valign: "middle",
                                                text: "0",
                                                strokeColor: "#5e2100",
                                                stroke: 3.5,
                                                height: 30,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ffde00",
                                                bold: true,
                                                align: "left"
                                            },
                                            compId: 109
                                        }, {
                                            type: "Button",
                                            props: {
                                                y: 20,
                                                x: 281,
                                                var: "btn_vipHelp",
                                                stateNum: 1,
                                                skin: "common/btn_help_1.png",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 96
                                        } ]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 90,
                                            valign: "middle",
                                            text: "昨日击落金币：",
                                            fontSize: 20,
                                            font: "SimHei",
                                            color: "#0f5180",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 98
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 118,
                                            width: 300,
                                            skin: "noZip/img_bg_1.png",
                                            sizeGrid: "20,21,23,22",
                                            height: 40
                                        },
                                        compId: 93,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 1,
                                                x: 31,
                                                width: 259,
                                                var: "text_lastGetGold",
                                                valign: "middle",
                                                text: "0",
                                                strokeColor: "#004b6e",
                                                stroke: 3.5,
                                                height: 40,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#85efff",
                                                bold: true,
                                                align: "left"
                                            },
                                            compId: 99
                                        } ]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 177,
                                            valign: "middle",
                                            text: "今日击落金币：",
                                            fontSize: 20,
                                            font: "SimHei",
                                            color: "#0f5180",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 123
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 205,
                                            width: 300,
                                            skin: "noZip/img_bg_1.png",
                                            sizeGrid: "20,21,23,22",
                                            height: 40
                                        },
                                        compId: 124,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 0,
                                                x: 31,
                                                width: 259,
                                                var: "text_nowGetGold",
                                                valign: "middle",
                                                text: "0",
                                                strokeColor: "#5e2100",
                                                stroke: 3.5,
                                                height: 40,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ffde00",
                                                bold: true,
                                                align: "left"
                                            },
                                            compId: 125
                                        } ]
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_bg_15.png", "noZip/img_title_2.png", "firstPic/btn_close.png", "firstPic/img_item_bg.png", "iconAndSkin/icon_ticket.png", "basePic/btn_yellow.png", "noZip/img_bg_1.png", "common/btn_help_1.png" ],
                        loadList3D: []
                    };
                    return ActivityRebateDlgUI;
                }(Laya.Dialog);
                hallScene.ActivityRebateDlgUI = ActivityRebateDlgUI;
                REG("ui.hallScene.ActivityRebateDlgUI", ActivityRebateDlgUI);
                var ActivitySaveAppletDlgUI = function(_super) {
                    __extends(ActivitySaveAppletDlgUI, _super);
                    function ActivitySaveAppletDlgUI() {
                        return _super.call(this) || this;
                    }
                    ActivitySaveAppletDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ActivitySaveAppletDlgUI.uiView);
                    };
                    ActivitySaveAppletDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1334,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1832,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 1,
                                alpha: .8
                            },
                            compId: 101
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 716,
                                    height: 510,
                                    centerY: -16,
                                    centerX: 3
                                },
                                compId: 7,
                                child: [ {
                                    type: "Sprite",
                                    props: {
                                        y: 201,
                                        x: 20,
                                        texture: "activitys/img_hd_gold2.png",
                                        name: "g1"
                                    },
                                    compId: 78
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 85,
                                        x: 43,
                                        width: 626,
                                        skin: "activitys/img_hd_bg2.png",
                                        sizeGrid: "69,45,281,74",
                                        height: 404
                                    },
                                    compId: 61
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 345,
                                        x: 67,
                                        width: 237,
                                        skin: "activitys/img_hd_12.png",
                                        sizeGrid: "13,12,14,0",
                                        scaleX: 1,
                                        rotation: -90,
                                        name: "img_line",
                                        height: 566
                                    },
                                    compId: 100
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 159,
                                        x: 370,
                                        width: 254,
                                        skin: "activitys/img_hd_bg1.png",
                                        sizeGrid: "9,12,11,10",
                                        height: 172
                                    },
                                    compId: 91
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 159,
                                        x: 77,
                                        width: 279,
                                        skin: "activitys/img_hd_bg1.png",
                                        sizeGrid: "9,12,11,10",
                                        height: 80
                                    },
                                    compId: 94
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 252,
                                        x: 77,
                                        width: 279,
                                        skin: "activitys/img_hd_bg1.png",
                                        sizeGrid: "9,12,11,10",
                                        height: 75
                                    },
                                    compId: 95
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 35,
                                        x: 109,
                                        texture: "activitys/img_hd_bg3.png"
                                    },
                                    compId: 62
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 168,
                                        x: 86,
                                        texture: "activitys/img_hd_num1.png",
                                        name: "1"
                                    },
                                    compId: 66
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 280,
                                        x: 82,
                                        texture: "activitys/img_hd_num2.png",
                                        name: "2"
                                    },
                                    compId: 67
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 165,
                                        x: 374,
                                        texture: "activitys/img_hd_num3.png",
                                        name: "3"
                                    },
                                    compId: 68
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 51,
                                        x: 124,
                                        texture: "activitys/img_hd_14.png",
                                        name: "pTitle"
                                    },
                                    compId: 70
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 198,
                                        x: 157,
                                        texture: "activitys/img_hd_15.png",
                                        name: "p1"
                                    },
                                    compId: 69
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 229,
                                        x: 383,
                                        texture: "activitys/img_hd_13.png",
                                        name: "p2"
                                    },
                                    compId: 71
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 64,
                                        x: 43,
                                        texture: "activitys/img_hd_gold1.png",
                                        name: "g2"
                                    },
                                    compId: 77
                                }, {
                                    type: "Sprite",
                                    props: {
                                        y: 35,
                                        x: 622,
                                        texture: "activitys/img_hd_gold3.png",
                                        name: "g3"
                                    },
                                    compId: 79
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 379,
                                        x: 57,
                                        width: 137,
                                        valign: "middle",
                                        text: "每天可领取",
                                        strokeColor: "#4c0700",
                                        stroke: 3,
                                        height: 37,
                                        fontSize: 24,
                                        font: "黑体",
                                        color: "#ffec4c",
                                        align: "right"
                                    },
                                    compId: 63
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 117,
                                        x: 55,
                                        width: 137,
                                        valign: "middle",
                                        text: "每日可领取",
                                        strokeColor: "#4c0700",
                                        stroke: 3,
                                        height: 37,
                                        fontSize: 21,
                                        font: "黑体",
                                        color: "#ffec4c",
                                        align: "right"
                                    },
                                    compId: 64
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 117,
                                        x: 194,
                                        width: 137,
                                        valign: "middle",
                                        text: "丰厚奖励",
                                        strokeColor: "#4c0700",
                                        stroke: 3,
                                        height: 37,
                                        fontSize: 25,
                                        font: "黑体",
                                        color: "#f26b6b",
                                        align: "left"
                                    },
                                    compId: 65
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 164.5,
                                        x: 113,
                                        width: 231,
                                        valign: "middle",
                                        text: "点击“右上角三个点”",
                                        strokeColor: "#4c0700",
                                        stroke: 3,
                                        name: "l1",
                                        height: 37,
                                        fontSize: 18,
                                        font: "黑体",
                                        color: "#ffffff",
                                        align: "left"
                                    },
                                    compId: 72
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 278,
                                        x: 113,
                                        width: 231,
                                        valign: "middle",
                                        text: "点击“添加到我的小程序”",
                                        strokeColor: "#4c0700",
                                        stroke: 3,
                                        name: "l2",
                                        height: 37,
                                        fontSize: 18,
                                        font: "黑体",
                                        color: "#ffffff",
                                        align: "left"
                                    },
                                    compId: 73
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 161.5,
                                        x: 414,
                                        width: 231,
                                        valign: "middle",
                                        text: "点击我的小程序",
                                        strokeColor: "#4c0700",
                                        stroke: 3,
                                        name: "l3_1",
                                        height: 37,
                                        fontSize: 18,
                                        font: "黑体",
                                        color: "#ffffff",
                                        align: "left"
                                    },
                                    compId: 74
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 195,
                                        x: 375,
                                        width: 231,
                                        valign: "middle",
                                        text: "选择“捕鱼侠3D”开启游戏",
                                        strokeColor: "#4c0700",
                                        stroke: 3,
                                        name: "l3_2",
                                        height: 37,
                                        fontSize: 18,
                                        font: "黑体",
                                        color: "#ffffff",
                                        align: "left"
                                    },
                                    compId: 75
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 436,
                                        x: 137,
                                        width: 437,
                                        valign: "middle",
                                        text: "找不到物品的小程序入口，可升级微信后再尝试~",
                                        name: "tip",
                                        height: 37,
                                        fontSize: 18,
                                        font: "黑体",
                                        color: "#69120c",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 76
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 395,
                                        x: 558,
                                        width: 259,
                                        var: "btnGet",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,45,0,45",
                                        scaleY: .6,
                                        scaleX: .6,
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 3.5,
                                        labelSize: 40,
                                        labelFont: "黑体",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "领 取",
                                        height: 106,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 44,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: .6,
                                            aniScaleX: .6,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 45
                                    }, {
                                        type: "Image",
                                        props: {
                                            skin: "hall/img_mail_0.png",
                                            right: 0,
                                            name: "imgRed"
                                        },
                                        compId: 58
                                    } ]
                                }, {
                                    type: "List",
                                    props: {
                                        y: 364,
                                        x: 206,
                                        width: 223,
                                        var: "lstItem",
                                        spaceX: 20,
                                        repeatY: 1,
                                        renderType: "render",
                                        height: 62
                                    },
                                    compId: 105,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            name: "render"
                                        },
                                        compId: 106,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                skin: "activitys/img_hd_item.png"
                                            },
                                            compId: 109
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: -10,
                                                x: 0,
                                                name: "imgItem"
                                            },
                                            compId: 102
                                        }, {
                                            type: "Label",
                                            props: {
                                                valign: "middle",
                                                strokeColor: "#4c0700",
                                                stroke: 3,
                                                name: "lblCount",
                                                fontSize: 18,
                                                font: "黑体",
                                                color: "#ffffff",
                                                centerX: 0,
                                                bottom: 10,
                                                align: "left"
                                            },
                                            compId: 108
                                        } ]
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 108,
                                        var: "btnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        right: 52,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 59,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            isPlaySound: true,
                                            isPlayAni: true,
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 60
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "activitys/img_hd_gold2.png", "activitys/img_hd_bg2.png", "activitys/img_hd_12.png", "activitys/img_hd_bg1.png", "activitys/img_hd_bg3.png", "activitys/img_hd_num1.png", "activitys/img_hd_num2.png", "activitys/img_hd_num3.png", "activitys/img_hd_14.png", "activitys/img_hd_15.png", "activitys/img_hd_13.png", "activitys/img_hd_gold1.png", "activitys/img_hd_gold3.png", "basePic/btn_yellow.png", "hall/img_mail_0.png", "activitys/img_hd_item.png", "firstPic/btn_close.png" ],
                        loadList3D: []
                    };
                    return ActivitySaveAppletDlgUI;
                }(Laya.Dialog);
                hallScene.ActivitySaveAppletDlgUI = ActivitySaveAppletDlgUI;
                REG("ui.hallScene.ActivitySaveAppletDlgUI", ActivitySaveAppletDlgUI);
                var ActivityViewUI = function(_super) {
                    __extends(ActivityViewUI, _super);
                    function ActivityViewUI() {
                        return _super.call(this) || this;
                    }
                    ActivityViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ActivityViewUI.uiView);
                    };
                    ActivityViewUI.uiView = {
                        type: "View",
                        props: {
                            y: 50,
                            x: 360,
                            width: 720,
                            height: 108,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 204,
                                width: 475,
                                skin: "noZip/img_hd_btnbg1.png",
                                sizeGrid: "18,18,18,18",
                                height: 108
                            },
                            compId: 3
                        }, {
                            type: "Image",
                            props: {
                                y: 106,
                                skin: "noZip/img_hd_btnbg2.png",
                                sizeGrid: "18,18,18,18",
                                centerX: 0
                            },
                            compId: 44
                        }, {
                            type: "Button",
                            props: {
                                y: 54,
                                x: 68,
                                visible: false,
                                var: "btnLuck",
                                stateNum: 1,
                                skin: "activitys/img_hd_btn1.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 12,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 13
                            }, {
                                type: "Image",
                                props: {
                                    y: -2,
                                    x: 71,
                                    visible: false,
                                    var: "imgTipLuck",
                                    skin: "hall/img_mail_0.png"
                                },
                                compId: 35
                            } ]
                        }, {
                            type: "Button",
                            props: {
                                y: 54,
                                x: 265,
                                var: "btnHelp",
                                stateNum: 1,
                                skin: "activitys/img_hd_btn2.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 19,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 20
                            }, {
                                type: "Image",
                                props: {
                                    y: -2,
                                    x: 71,
                                    visible: false,
                                    var: "imgTipHelp",
                                    skin: "hall/img_mail_0.png"
                                },
                                compId: 36
                            } ]
                        }, {
                            type: "Button",
                            props: {
                                y: 55,
                                x: 379,
                                var: "btnInteger",
                                stateNum: 1,
                                skin: "activitys/img_hd_btn3.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 22,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 23
                            }, {
                                type: "Image",
                                props: {
                                    y: -2,
                                    x: 71,
                                    visible: false,
                                    var: "imgTipInteger",
                                    skin: "hall/img_mail_0.png"
                                },
                                compId: 37
                            } ]
                        }, {
                            type: "Button",
                            props: {
                                y: 54,
                                x: 622,
                                visible: false,
                                var: "btnInvite",
                                stateNum: 1,
                                skin: "activitys/img_hd_btn4.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 25,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 26
                            }, {
                                type: "Image",
                                props: {
                                    y: -2,
                                    x: 71,
                                    visible: false,
                                    var: "imgTipInvite",
                                    skin: "hall/img_mail_0.png"
                                },
                                compId: 38
                            } ]
                        }, {
                            type: "Button",
                            props: {
                                y: 54,
                                x: 516,
                                visible: false,
                                var: "btnSave",
                                stateNum: 1,
                                skin: "activitys/img_hd_btn5.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 31,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 32
                            }, {
                                type: "Image",
                                props: {
                                    y: -2,
                                    x: 71,
                                    visible: false,
                                    var: "imgTipSave",
                                    skin: "hall/img_mail_0.png"
                                },
                                compId: 39
                            } ]
                        }, {
                            type: "Button",
                            props: {
                                y: 54,
                                x: 495,
                                var: "btnRebate",
                                stateNum: 1,
                                skin: "activitys/img_hd_btn6.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 41,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 42
                            }, {
                                type: "Image",
                                props: {
                                    y: -2,
                                    x: 71,
                                    visible: false,
                                    var: "imgTipRebate",
                                    skin: "hall/img_mail_0.png"
                                },
                                compId: 43
                            } ]
                        } ],
                        loadList: [ "noZip/img_hd_btnbg1.png", "noZip/img_hd_btnbg2.png", "activitys/img_hd_btn1.png", "hall/img_mail_0.png", "activitys/img_hd_btn2.png", "activitys/img_hd_btn3.png", "activitys/img_hd_btn4.png", "activitys/img_hd_btn5.png", "activitys/img_hd_btn6.png" ],
                        loadList3D: []
                    };
                    return ActivityViewUI;
                }(Laya.View);
                hallScene.ActivityViewUI = ActivityViewUI;
                REG("ui.hallScene.ActivityViewUI", ActivityViewUI);
                var BillExchangeViewUI = function(_super) {
                    __extends(BillExchangeViewUI, _super);
                    function BillExchangeViewUI() {
                        return _super.call(this) || this;
                    }
                    BillExchangeViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(BillExchangeViewUI.uiView);
                    };
                    BillExchangeViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 796,
                            height: 505
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                skin: "activitys/img_huaf_0.png"
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 36,
                                x: 273,
                                skin: "activitys/img_huaf_4.png"
                            },
                            compId: 6
                        }, {
                            type: "Label",
                            props: {
                                y: 99,
                                x: 115,
                                width: 400,
                                text: "活动期间注册新手账号， 即可免费领取一张",
                                strokeColor: "#70200b",
                                stroke: 3,
                                height: 22,
                                fontSize: 20,
                                font: "SimHei",
                                color: "#ffffff",
                                bold: true
                            },
                            compId: 7
                        }, {
                            type: "Label",
                            props: {
                                y: 92,
                                x: 518,
                                width: 176,
                                valign: "middle",
                                text: "六折话费兑换券",
                                strokeColor: "#004719",
                                stroke: 3,
                                height: 27,
                                fontSize: 24,
                                font: "SimHei",
                                color: "#68ff3f",
                                bold: true,
                                align: "center"
                            },
                            compId: 8
                        }, {
                            type: "Label",
                            props: {
                                y: 124,
                                x: 198,
                                width: 404,
                                text: "注册后7天内完成兑换即可将话费带回家啦!",
                                strokeColor: "#70200b",
                                stroke: 3,
                                height: 22,
                                fontSize: 20,
                                font: "SimHei",
                                color: "#ffffff",
                                bold: true,
                                align: "center"
                            },
                            compId: 10
                        }, {
                            type: "Image",
                            props: {
                                y: 421,
                                x: 16,
                                width: 218,
                                skin: "activitys/img_huaf_3.png",
                                sizeGrid: "0,45,0,76",
                                height: 75
                            },
                            compId: 13
                        }, {
                            type: "Image",
                            props: {
                                y: 438,
                                x: 22,
                                skin: "iconAndSkin/icon_ticket.png",
                                scaleY: .5,
                                scaleX: .5,
                                rotation: -13
                            },
                            compId: 14
                        }, {
                            type: "Box",
                            props: {
                                y: 456,
                                x: 147,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 15,
                            child: [ {
                                type: "Label",
                                props: {
                                    width: 40.78125,
                                    text: "拥有",
                                    strokeColor: "#70200b",
                                    stroke: 3,
                                    left: 0,
                                    height: 20,
                                    fontSize: 20,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerY: 1,
                                    bold: true
                                },
                                compId: 16
                            }, {
                                type: "Label",
                                props: {
                                    var: "num_ticket",
                                    text: "100",
                                    strokeColor: "#70200b",
                                    stroke: 3,
                                    left: 42,
                                    height: 20,
                                    fontSize: 20,
                                    font: "SimHei",
                                    color: "#ffec4c",
                                    centerY: 1,
                                    bold: true
                                },
                                compId: 17
                            } ]
                        }, {
                            type: "ViewStack",
                            props: {
                                width: 600,
                                var: "stack_state",
                                height: 400,
                                centerY: 1,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 37,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 600,
                                    name: "item0",
                                    height: 400,
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 18,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        y: 220,
                                        x: 304,
                                        var: "btn_getTicket",
                                        stateNum: 1,
                                        skin: "activitys/img_huaf_5.png",
                                        scaleY: 1,
                                        scaleX: 1,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 11,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 0,
                                            x: 352,
                                            width: 107,
                                            valign: "middle",
                                            text: "点击\\n领取",
                                            height: 125,
                                            fontSize: 33,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 19
                                    }, {
                                        type: "Script",
                                        props: {
                                            isPlayAni: false,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 20
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 600,
                                    name: "item1",
                                    height: 400,
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 21,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 77,
                                        x: 166,
                                        skin: "activitys/img_huaf_2.png"
                                    },
                                    compId: 26
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 120.5,
                                        x: 261,
                                        var: "img_phoneBill",
                                        skin: "iconAndSkin/icon_huafei.png"
                                    },
                                    compId: 28
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 261,
                                        x: 303,
                                        var: "img_title",
                                        skin: "common/img_title_7.png",
                                        scaleY: 1,
                                        scaleX: 1,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 27,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 10,
                                            x: 127,
                                            skin: "activitys/img_huaf_1.png"
                                        },
                                        compId: 30
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 11,
                                            x: 129,
                                            width: 100,
                                            text: "30",
                                            scaleY: .5,
                                            scaleX: .5,
                                            height: 79,
                                            font: "numberFont1",
                                            anchorX: 1,
                                            align: "right"
                                        },
                                        compId: 31
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 280,
                                        x: 310,
                                        skin: "iconAndSkin/skin_ticket.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        rotation: -13
                                    },
                                    compId: 29
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 322,
                                        x: 256,
                                        var: "text_originalCost",
                                        text: "原价 3000",
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#70200b",
                                        bold: true
                                    },
                                    compId: 33,
                                    child: [ {
                                        type: "Line",
                                        props: {
                                            y: 10,
                                            x: -5,
                                            toY: 0,
                                            toX: 105,
                                            lineWidth: 2,
                                            lineColor: "#70200b"
                                        },
                                        compId: 34
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 285,
                                        x: 312,
                                        width: 96,
                                        var: "text_needTicket",
                                        text: "1800",
                                        strokeColor: "#70200b",
                                        stroke: 3,
                                        height: 30,
                                        fontSize: 30,
                                        font: "SimHei",
                                        color: "#ffec4c",
                                        bold: true,
                                        anchorX: 1,
                                        align: "right"
                                    },
                                    compId: 32
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 405,
                                x: 0,
                                width: 796,
                                var: "box_state1",
                                mouseEnabled: false,
                                height: 100,
                                alpha: 0
                            },
                            compId: 39,
                            child: [ {
                                type: "Button",
                                props: {
                                    y: 52,
                                    x: 399,
                                    width: 228,
                                    var: "btn_goExchange",
                                    stateNum: 1,
                                    skin: "noZip/btn_green.png",
                                    sizeGrid: "0,56,0,52",
                                    scaleY: .8,
                                    scaleX: .8,
                                    labelStrokeColor: "#226306",
                                    labelStroke: 3,
                                    labelSize: 32,
                                    labelPadding: "0,0,1,1",
                                    labelFont: "SimHei",
                                    labelColors: "#ffffff",
                                    labelBold: true,
                                    labelAlign: "center",
                                    label: "去兑换",
                                    height: 93,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 36,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: .8,
                                        aniScaleX: .8,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 38
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 435.77272727272725,
                                x: 566.078125,
                                skin: "activitys/img_hd_19.png"
                            },
                            compId: 40,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 6,
                                    x: 47,
                                    width: 127,
                                    var: "text_remainingTime",
                                    valign: "middle",
                                    text: "7:12:46:59",
                                    strokeColor: "#226306",
                                    stroke: 3,
                                    height: 25,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "center"
                                },
                                compId: 35
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 11,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 57
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 57
                                    } ]
                                }
                            } ],
                            name: "ticketMove",
                            id: 1,
                            frameRate: 30,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 27,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: false,
                                        target: 27,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 57
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: false,
                                        target: 27,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 57
                                    } ]
                                }
                            }, {
                                target: 28,
                                keyframes: {
                                    y: [ {
                                        value: 120.5,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 28,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 126.5,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 28,
                                        key: "y",
                                        index: 31
                                    }, {
                                        value: 120.79625,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 28,
                                        key: "y",
                                        index: 57
                                    } ]
                                }
                            } ],
                            name: "titleMove",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "activitys/img_huaf_0.png", "activitys/img_huaf_4.png", "activitys/img_huaf_3.png", "iconAndSkin/icon_ticket.png", "activitys/img_huaf_5.png", "activitys/img_huaf_2.png", "iconAndSkin/icon_huafei.png", "common/img_title_7.png", "activitys/img_huaf_1.png", "iconAndSkin/skin_ticket.png", "noZip/btn_green.png", "activitys/img_hd_19.png" ],
                        loadList3D: []
                    };
                    return BillExchangeViewUI;
                }(Laya.View);
                hallScene.BillExchangeViewUI = BillExchangeViewUI;
                REG("ui.hallScene.BillExchangeViewUI", BillExchangeViewUI);
                var CCountViewUI = function(_super) {
                    __extends(CCountViewUI, _super);
                    function CCountViewUI() {
                        return _super.call(this) || this;
                    }
                    CCountViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(CCountViewUI.uiView);
                    };
                    CCountViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 300,
                            height: 100
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 25,
                                x: 0,
                                width: 274,
                                renderType: "render",
                                mouseThrough: true,
                                mouseEnabled: true,
                                height: 60,
                                centerX: 0
                            },
                            compId: 5,
                            child: [ {
                                type: "TextInput",
                                props: {
                                    y: -4,
                                    x: 53,
                                    width: 172,
                                    var: "txtInput",
                                    valign: "middle",
                                    text: "0",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    restrict: "0,1,2,3,4,5,6,7,8,9",
                                    mouseEnabled: false,
                                    height: 55,
                                    fontSize: 40,
                                    font: "SimHei",
                                    editable: false,
                                    color: "#ffffff",
                                    bold: true,
                                    bgColor: "#274e7a",
                                    align: "center"
                                },
                                compId: 6
                            }, {
                                type: "Button",
                                props: {
                                    y: 24,
                                    x: 53,
                                    width: 60,
                                    var: "btnMinus",
                                    stateNum: 1,
                                    skin: "common/btn_-_0.png",
                                    name: "btnMinus",
                                    height: 65,
                                    gray: false,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 7,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: "1",
                                        aniScaleX: "1",
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 16
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 23,
                                    x: 225,
                                    var: "btnPlus",
                                    stateNum: 1,
                                    skin: "common/btn_+_0.png",
                                    name: "btnPlus",
                                    mouseEnabled: false,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 11,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: "1",
                                        aniScaleX: "1",
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 17
                                } ]
                            } ]
                        } ],
                        loadList: [ "common/btn_-_0.png", "common/btn_+_0.png" ],
                        loadList3D: []
                    };
                    return CCountViewUI;
                }(Laya.View);
                hallScene.CCountViewUI = CCountViewUI;
                REG("ui.hallScene.CCountViewUI", CCountViewUI);
                var CheckComposeDialogUI = function(_super) {
                    __extends(CheckComposeDialogUI, _super);
                    function CheckComposeDialogUI() {
                        return _super.call(this) || this;
                    }
                    CheckComposeDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(CheckComposeDialogUI.uiView);
                    };
                    CheckComposeDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 145,
                                    x: 0,
                                    width: 680,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "36,40,58,51",
                                    height: 480,
                                    centerX: 0
                                },
                                compId: 35
                            }, {
                                type: "Image",
                                props: {
                                    y: 133,
                                    x: 0,
                                    skin: "noZip/img_title_2.png",
                                    centerX: 0
                                },
                                compId: 36
                            }, {
                                type: "Label",
                                props: {
                                    y: 133,
                                    x: 0,
                                    width: 391,
                                    valign: "middle",
                                    text: "合成确认",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    height: 65,
                                    fontSize: 40,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerX: 0,
                                    bold: true,
                                    align: "center"
                                },
                                compId: 37
                            }, {
                                type: "Image",
                                props: {
                                    y: 210,
                                    width: 634,
                                    skin: "noZip/img_bg_15.png",
                                    sizeGrid: "31,72,41,73",
                                    height: 389,
                                    centerX: 0
                                },
                                compId: 45,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 107,
                                        x: 137,
                                        width: 142.734375,
                                        valign: "middle",
                                        text: "合成物品：",
                                        height: 28,
                                        fontSize: 28,
                                        font: "SimHei",
                                        color: "#0f5180",
                                        bold: true,
                                        align: "right"
                                    },
                                    compId: 46
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 172,
                                        x: 181,
                                        width: 99.640625,
                                        valign: "middle",
                                        text: "消耗 ：",
                                        height: 28,
                                        fontSize: 28,
                                        font: "SimHei",
                                        color: "#0f5180",
                                        bold: true,
                                        align: "right"
                                    },
                                    compId: 47
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 103,
                                        x: 314,
                                        width: 205,
                                        var: "text_itemMsg",
                                        valign: "middle",
                                        text: "白银弹头*1",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        rotation: 0,
                                        height: 36,
                                        fontSize: 34,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 48
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 168,
                                        x: 314,
                                        width: 205,
                                        var: "text_used",
                                        valign: "middle",
                                        text: "5000碎片",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        rotation: 0,
                                        height: 36,
                                        fontSize: 34,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 51
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 306,
                                        x: 184,
                                        width: 228,
                                        var: "btn_sure",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,57,0,49",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 4,
                                        labelSize: 34,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        label: "确认",
                                        height: 90,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 52,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 54
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 306,
                                        x: 458,
                                        width: 228,
                                        var: "btn_cancel",
                                        stateNum: 1,
                                        skin: "noZip/btn_green.png",
                                        sizeGrid: "0,57,0,49",
                                        labelStrokeColor: "#226306",
                                        labelStroke: 4,
                                        labelSize: 34,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        label: "取消",
                                        height: 90,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 53,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 55
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_title_2.png", "noZip/img_bg_15.png", "basePic/btn_yellow.png", "noZip/btn_green.png" ],
                        loadList3D: []
                    };
                    return CheckComposeDialogUI;
                }(Laya.Dialog);
                hallScene.CheckComposeDialogUI = CheckComposeDialogUI;
                REG("ui.hallScene.CheckComposeDialogUI", CheckComposeDialogUI);
                var ComposeDialogUI = function(_super) {
                    __extends(ComposeDialogUI, _super);
                    function ComposeDialogUI() {
                        return _super.call(this) || this;
                    }
                    ComposeDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ComposeDialogUI.uiView);
                    };
                    ComposeDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 4
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 5,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 1099,
                                    presetID: 1,
                                    mouseThrough: true,
                                    mouseEnabled: true,
                                    centerY: 23,
                                    centerX: 0,
                                    name: "dialogTitle",
                                    isPresetRoot: true,
                                    height: 621
                                },
                                compId: 7,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 310,
                                        x: 557,
                                        width: 966,
                                        presetID: 2,
                                        anchorY: .5,
                                        anchorX: .5,
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "0,42,0,53",
                                        height: 621
                                    },
                                    compId: 8
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 36,
                                        x: 557,
                                        width: 982,
                                        presetID: 3,
                                        anchorY: .5,
                                        anchorX: .5,
                                        skin: "noZip/img_title_3.png",
                                        sizeGrid: "0,261,0,256",
                                        height: 83
                                    },
                                    compId: 9
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -11,
                                        x: 288,
                                        width: 523,
                                        skin: "noZip/img_title_2.png",
                                        sizeGrid: "0,191,0,194",
                                        height: 69
                                    },
                                    compId: 10,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 8,
                                            x: 205,
                                            width: 113,
                                            valign: "middle",
                                            text: "合成",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            height: 38,
                                            fontSize: 45,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 11
                                    } ]
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 45,
                                    var: "returnBack",
                                    stateNum: 1,
                                    skin: "common/btn_fanh_1.png",
                                    left: 30,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 35,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 58
                                } ]
                            }, {
                                type: "List",
                                props: {
                                    y: 186,
                                    width: 906,
                                    var: "list_compose",
                                    repeatY: 1,
                                    repeatX: 3,
                                    height: 408,
                                    centerX: 13
                                },
                                compId: 36,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: -6,
                                        width: 303,
                                        renderType: "render",
                                        height: 396
                                    },
                                    compId: 37,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 9,
                                            x: 8,
                                            width: 276,
                                            skin: "noZip/img_bg_19.png",
                                            sizeGrid: "0,39,0,42",
                                            height: 387,
                                            centerX: 0
                                        },
                                        compId: 38
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: -2,
                                            x: 17,
                                            skin: "common/img_guang_0.png",
                                            centerX: 0
                                        },
                                        compId: 41
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 2,
                                            x: 43,
                                            skin: "noZip/img_title_1.png",
                                            centerX: 0
                                        },
                                        compId: 39
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 8,
                                            width: 121,
                                            valign: "middle",
                                            text: "青铜弹头",
                                            strokeColor: "#5e2100",
                                            stroke: 4,
                                            name: "itemName",
                                            height: 36,
                                            fontSize: 26,
                                            font: "SimHei",
                                            color: "#ffde00",
                                            centerX: 0,
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 40
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 122,
                                            skin: "iconAndSkin/icon_WarheadQt.png",
                                            name: "itemSkin",
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 42
                                    }, {
                                        type: "TextInput",
                                        props: {
                                            y: 186,
                                            width: 172,
                                            valign: "middle",
                                            text: "1",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            restrict: "0,1,2,3,4,5,6,7,8,9",
                                            name: "itemNum",
                                            mouseEnabled: false,
                                            height: 55,
                                            fontSize: 40,
                                            font: "SimHei",
                                            editable: false,
                                            color: "#ffffff",
                                            centerX: 0,
                                            bold: true,
                                            bgColor: "#274e7a",
                                            align: "center"
                                        },
                                        compId: 45
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 213,
                                            stateNum: 1,
                                            skin: "common/btn_-_1.png",
                                            name: "btn_reduce",
                                            centerX: -85,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 44,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 54
                                        } ]
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 213,
                                            stateNum: 1,
                                            skin: "common/btn_+_0.png",
                                            name: "btn_plus",
                                            centerX: 85,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 43,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 55
                                        } ]
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 274,
                                            x: 517,
                                            name: "box_needNum",
                                            height: 47,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 49,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: -2,
                                                valign: "middle",
                                                text: "8000",
                                                strokeColor: "#004719",
                                                stroke: 3,
                                                name: "text_needNum",
                                                left: 52,
                                                height: 52,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#68ff3f",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 46
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 2,
                                                x: 0,
                                                width: 114,
                                                skin: "iconAndSkin/icon_debris.png",
                                                scaleY: .4,
                                                scaleX: .4,
                                                height: 108
                                            },
                                            compId: 47
                                        } ]
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 342,
                                            width: 228,
                                            stateNum: 1,
                                            skin: "basePic/btn_yellow.png",
                                            sizeGrid: "0,48,0,45",
                                            scaleY: .8,
                                            scaleX: .8,
                                            name: "btn_compose",
                                            labelStrokeColor: "#70200b",
                                            labelStroke: 4,
                                            labelSize: 42,
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "兑 换",
                                            height: 93,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 48,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                isSetSelf: false,
                                                isPlaySound: true,
                                                isPlayAni: true,
                                                aniScaleY: .8,
                                                aniScaleX: .8,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 56
                                        } ]
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 630,
                                    skin: "noZip/img_bg_2.png",
                                    centerX: -295
                                },
                                compId: 51
                            }, {
                                type: "Image",
                                props: {
                                    y: 623,
                                    skin: "iconAndSkin/icon_debris.png",
                                    scaleY: .48,
                                    scaleX: .48,
                                    centerX: -401
                                },
                                compId: 50
                            }, {
                                type: "Label",
                                props: {
                                    y: 630,
                                    width: 175,
                                    var: "text_allNum",
                                    valign: "middle",
                                    text: "126,000",
                                    strokeColor: "#004b6e",
                                    stroke: 3,
                                    height: 35,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerX: -280,
                                    bold: true,
                                    align: "left"
                                },
                                compId: 52
                            }, {
                                type: "Button",
                                props: {
                                    y: 643,
                                    width: 230,
                                    var: "btn_record",
                                    stateNum: 1,
                                    skin: "noZip/btn_green.png",
                                    sizeGrid: "0,49,0,51",
                                    scaleY: .84,
                                    scaleX: .84,
                                    labelStrokeColor: "#226306",
                                    labelStroke: 4,
                                    labelSize: 38,
                                    labelFont: "SimHei",
                                    labelColors: "#ffffff",
                                    labelBold: true,
                                    labelAlign: "center",
                                    label: "合成记录",
                                    height: 93,
                                    centerX: 351,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 53,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: .84,
                                        aniScaleX: .84,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 57
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "prefab/dialogTitle.prefab", "noZip/img_title_2.png", "common/btn_fanh_1.png", "noZip/img_bg_19.png", "common/img_guang_0.png", "noZip/img_title_1.png", "iconAndSkin/icon_WarheadQt.png", "common/btn_-_1.png", "common/btn_+_0.png", "iconAndSkin/icon_debris.png", "basePic/btn_yellow.png", "noZip/img_bg_2.png", "noZip/btn_green.png" ],
                        loadList3D: []
                    };
                    return ComposeDialogUI;
                }(Laya.Dialog);
                hallScene.ComposeDialogUI = ComposeDialogUI;
                REG("ui.hallScene.ComposeDialogUI", ComposeDialogUI);
                var ComposeRecordDialogUI = function(_super) {
                    __extends(ComposeRecordDialogUI, _super);
                    function ComposeRecordDialogUI() {
                        return _super.call(this) || this;
                    }
                    ComposeRecordDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ComposeRecordDialogUI.uiView);
                    };
                    ComposeRecordDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Button",
                                props: {
                                    y: 45,
                                    var: "returnBack",
                                    stateNum: 1,
                                    skin: "common/btn_fanh_1.png",
                                    left: 30,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 10,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 11
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 145,
                                    width: 680,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "36,40,58,51",
                                    height: 480,
                                    centerX: 0
                                },
                                compId: 35,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 229,
                                        x: 209,
                                        var: "text_noRecord",
                                        text: "暂无合成记录哦!",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 27,
                                        fontSize: 28,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerY: 11,
                                        centerX: 0,
                                        bold: true
                                    },
                                    compId: 44
                                }, {
                                    type: "List",
                                    props: {
                                        y: 57,
                                        x: 22,
                                        width: 636,
                                        var: "list_record",
                                        vScrollBarSkin: "comp/vscrollbar_slider.png",
                                        repeatX: 1,
                                        height: 394,
                                        elasticEnabled: true
                                    },
                                    compId: 38,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 6,
                                            x: 0,
                                            width: 636,
                                            renderType: "render",
                                            height: 92
                                        },
                                        compId: 39,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 2,
                                                x: 1,
                                                width: 633,
                                                skin: "noZip/img_bg_11.png",
                                                sizeGrid: "31,67,30,68",
                                                height: 83
                                            },
                                            compId: 40
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 35,
                                                x: 23,
                                                width: 204,
                                                valign: "middle",
                                                text: "2018/08/18  5:59",
                                                name: "text_time",
                                                height: 23,
                                                fontSize: 20,
                                                font: "SimHei",
                                                color: "#0f5180",
                                                bold: true,
                                                align: "left"
                                            },
                                            compId: 41
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 35,
                                                x: 437,
                                                width: 173,
                                                valign: "middle",
                                                text: "消耗3000碎片",
                                                name: "text_used",
                                                height: 23,
                                                fontSize: 20,
                                                font: "SimHei",
                                                color: "#0f5180",
                                                bold: true,
                                                align: "right"
                                            },
                                            compId: 43
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 35,
                                                valign: "middle",
                                                text: "合成白金弹头*3",
                                                name: "text_composed",
                                                height: 23,
                                                fontSize: 20,
                                                font: "SimHei",
                                                color: "#0f5180",
                                                centerX: 13,
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 42
                                        } ]
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 133,
                                    skin: "noZip/img_title_2.png",
                                    centerX: 0
                                },
                                compId: 36
                            }, {
                                type: "Label",
                                props: {
                                    y: 133,
                                    width: 391,
                                    valign: "middle",
                                    text: "合成记录",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    height: 65,
                                    fontSize: 40,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerX: 0,
                                    bold: true,
                                    align: "center"
                                },
                                compId: 37
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "common/btn_fanh_1.png", "noZip/img_bg_16.png", "comp/vscrollbar_slider.png", "noZip/img_bg_11.png", "noZip/img_title_2.png" ],
                        loadList3D: []
                    };
                    return ComposeRecordDialogUI;
                }(Laya.Dialog);
                hallScene.ComposeRecordDialogUI = ComposeRecordDialogUI;
                REG("ui.hallScene.ComposeRecordDialogUI", ComposeRecordDialogUI);
                var DailyActivityViewUI = function(_super) {
                    __extends(DailyActivityViewUI, _super);
                    function DailyActivityViewUI() {
                        return _super.call(this) || this;
                    }
                    DailyActivityViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(DailyActivityViewUI.uiView);
                    };
                    DailyActivityViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 796,
                            height: 505
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 14,
                                x: 13,
                                width: 757,
                                var: "boxTop",
                                height: 100
                            },
                            compId: 22,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 0,
                                    x: 0,
                                    width: 755,
                                    skin: "activitys/img_top_bg.png",
                                    sizeGrid: "0,42,0,42",
                                    height: 101
                                },
                                compId: 23
                            }, {
                                type: "ProgressBar",
                                props: {
                                    y: 41,
                                    x: 106,
                                    width: 557,
                                    var: "pbrTop",
                                    skin: "activitys/img_bar1.png",
                                    sizeGrid: "0,7,0,7",
                                    height: 20
                                },
                                compId: 28
                            }, {
                                type: "Image",
                                props: {
                                    y: -3,
                                    x: 18,
                                    skin: "activitys/img_activity_bg.png"
                                },
                                compId: 24
                            }, {
                                type: "Image",
                                props: {
                                    y: -9,
                                    x: 44,
                                    skin: "activitys/title_hyd.png"
                                },
                                compId: 25
                            }, {
                                type: "Image",
                                props: {
                                    y: 13,
                                    x: 36,
                                    skin: "activitys/img_activity.png"
                                },
                                compId: 26
                            }, {
                                type: "Label",
                                props: {
                                    width: 100,
                                    var: "lblActivity",
                                    text: "20/120",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    fontSize: 20,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerY: 34,
                                    centerX: -306,
                                    bold: true,
                                    align: "center"
                                },
                                compId: 27
                            } ]
                        }, {
                            type: "List",
                            props: {
                                y: 163,
                                x: 41,
                                width: 776,
                                var: "lstTask",
                                vScrollBarSkin: "comp/vscrollbar_slider.png",
                                spaceY: 8,
                                repeatY: 5,
                                repeatX: 1,
                                renderType: "render",
                                pivotY: 41,
                                pivotX: 27,
                                height: 378
                            },
                            compId: 39,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: 3,
                                    x: 0,
                                    width: 755,
                                    name: "render",
                                    height: 88
                                },
                                compId: 40,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: .5,
                                        x: -1,
                                        width: 757,
                                        skin: "activitys/img_hd_bg4.png",
                                        sizeGrid: "0,16,0,16",
                                        height: 89
                                    },
                                    compId: 63
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 372.5,
                                        skin: "iconAndSkin/skin_goldCoin.png",
                                        scaleY: .8,
                                        scaleX: .8,
                                        centerY: -6
                                    },
                                    compId: 48
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 474,
                                        skin: "activitys/img_activity.png",
                                        centerY: -5
                                    },
                                    compId: 49
                                }, {
                                    type: "Button",
                                    props: {
                                        x: 660,
                                        width: 220,
                                        stateNum: 1,
                                        skin: "common/btn_blue.png",
                                        sizeGrid: "0,50,0,53",
                                        scaleY: .7,
                                        scaleX: .7,
                                        name: "btnDeal",
                                        mouseEnabled: true,
                                        labelStrokeColor: "#0b3170",
                                        labelStroke: 5,
                                        labelSize: 40,
                                        labelFont: "黑体",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "领取",
                                        height: 85,
                                        centerY: -4,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 52,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: .7,
                                            aniScaleX: .7,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 53
                                    } ]
                                }, {
                                    type: "ProgressBar",
                                    props: {
                                        y: 53,
                                        x: 102,
                                        width: 220,
                                        value: 0,
                                        skin: "activitys/img_bar2.png",
                                        sizeGrid: "0,7,0,7",
                                        name: "pbr",
                                        height: 24
                                    },
                                    compId: 54
                                }, {
                                    type: "Label",
                                    props: {
                                        width: 171,
                                        valign: "middle",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lblDesc",
                                        height: 28,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerY: -16,
                                        centerX: -170,
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 58
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 2,
                                        x: 6,
                                        width: 106,
                                        skin: "firstPic/img_item_bg.png",
                                        scaleY: .8,
                                        scaleX: .8,
                                        height: 106
                                    },
                                    compId: 43
                                }, {
                                    type: "Label",
                                    props: {
                                        width: 134,
                                        valign: "middle",
                                        text: " 3/5",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        name: "lblProgress",
                                        height: 20,
                                        fontSize: 16,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerY: 21,
                                        centerX: -169,
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 57
                                }, {
                                    type: "Label",
                                    props: {
                                        width: 100,
                                        text: "1",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        name: "lblCoin",
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerY: 29,
                                        centerX: 134,
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 50
                                }, {
                                    type: "Label",
                                    props: {
                                        width: 100,
                                        text: "2",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        name: "lblStar",
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerY: 29,
                                        centerX: 34,
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 51
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 43,
                                        x: 48,
                                        skin: "activitys/img_type_1.png",
                                        scaleY: .8,
                                        scaleX: .8,
                                        name: "imgItem",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 64
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 11,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 48
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 48
                                    } ]
                                }
                            } ],
                            name: "ticketMove",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "activitys/img_top_bg.png", "activitys/img_bar1.png", "activitys/img_activity_bg.png", "activitys/title_hyd.png", "activitys/img_activity.png", "comp/vscrollbar_slider.png", "activitys/img_hd_bg4.png", "iconAndSkin/skin_goldCoin.png", "common/btn_blue.png", "activitys/img_bar2.png", "firstPic/img_item_bg.png", "activitys/img_type_1.png" ],
                        loadList3D: []
                    };
                    return DailyActivityViewUI;
                }(Laya.View);
                hallScene.DailyActivityViewUI = DailyActivityViewUI;
                REG("ui.hallScene.DailyActivityViewUI", DailyActivityViewUI);
                var DailyBoxViewUI = function(_super) {
                    __extends(DailyBoxViewUI, _super);
                    function DailyBoxViewUI() {
                        return _super.call(this) || this;
                    }
                    DailyBoxViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(DailyBoxViewUI.uiView);
                    };
                    DailyBoxViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 100,
                            height: 100
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 50,
                                x: 50,
                                var: "imgLight",
                                skin: "common/img_guang_5.png",
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3
                        }, {
                            type: "Button",
                            props: {
                                y: 50,
                                x: 50,
                                var: "imgBox",
                                stateNum: 1,
                                skin: "activitys/img_close_1.png",
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Label",
                                props: {
                                    width: 100,
                                    var: "lblNum",
                                    text: "30",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    fontSize: 20,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerY: 41,
                                    centerX: 1,
                                    bold: true,
                                    align: "center"
                                },
                                compId: 5
                            }, {
                                type: "Script",
                                props: {
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 8
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: -85,
                                x: -75.5,
                                width: 251,
                                visible: false,
                                var: "boxTip",
                                height: 101
                            },
                            compId: 13,
                            child: [ {
                                type: "Image",
                                props: {
                                    width: 246,
                                    skin: "noZip/img_hd_btnbg1.png",
                                    sizeGrid: "18,18,18,18",
                                    height: 67,
                                    centerY: -1,
                                    centerX: 0
                                },
                                compId: 9,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        width: 171,
                                        var: "lblDesc",
                                        valign: "middle",
                                        text: "击落机械鲨 5 次",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        scaleY: 1.2,
                                        scaleX: 1.2,
                                        height: 28,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#b2eef1",
                                        centerY: 0,
                                        centerX: 0,
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 12
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 81,
                                    width: 22,
                                    skin: "noZip/img_hd_btnbg2.png",
                                    sizeGrid: "18,18,18,18",
                                    height: 15,
                                    centerX: 0
                                },
                                compId: 10
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 30
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 60
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 30
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 60
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 60
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "common/img_guang_5.png", "activitys/img_close_1.png", "noZip/img_hd_btnbg1.png", "noZip/img_hd_btnbg2.png" ],
                        loadList3D: []
                    };
                    return DailyBoxViewUI;
                }(Laya.View);
                hallScene.DailyBoxViewUI = DailyBoxViewUI;
                REG("ui.hallScene.DailyBoxViewUI", DailyBoxViewUI);
                var DialogListUI = function(_super) {
                    __extends(DialogListUI, _super);
                    function DialogListUI() {
                        return _super.call(this) || this;
                    }
                    DialogListUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(DialogListUI.uiView);
                    };
                    DialogListUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 1630,
                                var: "box_dialog",
                                height: 750
                            },
                            compId: 14,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 0,
                                    var: "dialogBox",
                                    mouseEnabled: true,
                                    hitTestPrior: true,
                                    height: 750
                                },
                                compId: 8
                            }, {
                                type: "Button",
                                props: {
                                    y: 380,
                                    var: "turnLeft",
                                    stateNum: 1,
                                    skin: "common/btn_jiant.png",
                                    left: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 4,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        isPlaySound: true,
                                        isPlayAni: true,
                                        aniScaleY: "1",
                                        aniScaleX: "1",
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 21
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 380,
                                    width: 50,
                                    var: "turnRight",
                                    stateNum: 1,
                                    skin: "common/btn_jiant.png",
                                    scaleX: -1,
                                    right: 50,
                                    height: 83,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        isPlaySound: true,
                                        isPlayAni: true,
                                        aniScaleY: "1",
                                        aniScaleX: "-1",
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 22
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 60,
                                    var: "returnBack",
                                    stateNum: 1,
                                    skin: "firstPic/btn_close.png",
                                    right: 30,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 3,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        isPlaySound: true,
                                        isPlayAni: true,
                                        aniScaleY: "1",
                                        aniScaleX: "1",
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 23
                                } ]
                            } ]
                        } ],
                        loadList: [ "common/btn_jiant.png", "firstPic/btn_close.png" ],
                        loadList3D: []
                    };
                    return DialogListUI;
                }(Laya.Dialog);
                hallScene.DialogListUI = DialogListUI;
                REG("ui.hallScene.DialogListUI", DialogListUI);
                var ExChangeAddressDlgUI = function(_super) {
                    __extends(ExChangeAddressDlgUI, _super);
                    function ExChangeAddressDlgUI() {
                        return _super.call(this) || this;
                    }
                    ExChangeAddressDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ExChangeAddressDlgUI.uiView);
                    };
                    ExChangeAddressDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1833,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 93
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 94,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 134,
                                    x: 326,
                                    width: 682,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "47,45,47,45",
                                    height: 482,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 7,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 65.5,
                                        width: 636,
                                        skin: "noZip/img_bg_15.png",
                                        sizeGrid: "25,70,25,70",
                                        height: 390,
                                        centerX: 0
                                    },
                                    compId: 10
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 80.5,
                                        width: 636,
                                        visible: false,
                                        var: "boxInfo",
                                        height: 360,
                                        centerX: 0
                                    },
                                    compId: 31,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            y: 314,
                                            width: 228,
                                            var: "btnClick",
                                            stateNum: 1,
                                            skin: "common/btn_blue.png",
                                            sizeGrid: "0,42,0,46",
                                            labelStrokeColor: "#004b6e",
                                            labelStroke: 4,
                                            labelSize: 34,
                                            labelFont: "黑体",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            label: "提交",
                                            height: 93,
                                            gray: false,
                                            centerX: -1,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 15,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                aniScaleY: "1",
                                                aniScaleX: "1",
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 100
                                        } ]
                                    }, {
                                        type: "Label",
                                        props: {
                                            text: "当您兑换实物或话费、 京东卡时将默认使用收货信息！",
                                            fontSize: 22,
                                            font: "SimHei",
                                            color: "#0f5180",
                                            centerX: 0,
                                            bold: true
                                        },
                                        compId: 32
                                    }, {
                                        type: "VBox",
                                        props: {
                                            y: 42,
                                            x: 43,
                                            width: 162,
                                            height: 214
                                        },
                                        compId: 33,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                text: "姓名 ：",
                                                right: 0,
                                                height: 62,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#0f5180",
                                                bold: true
                                            },
                                            compId: 34
                                        }, {
                                            type: "Label",
                                            props: {
                                                x: 62,
                                                text: "性别 ：",
                                                right: 0,
                                                height: 62,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#0f5180",
                                                bold: true
                                            },
                                            compId: 36
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 0,
                                                x: 62,
                                                text: "收货地址 ：",
                                                right: 0,
                                                height: 62,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#0f5180",
                                                bold: true
                                            },
                                            compId: 37
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 0,
                                                x: 62,
                                                text: "手机号码 ：",
                                                right: 0,
                                                height: 62,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#0f5180",
                                                bold: true
                                            },
                                            compId: 38
                                        } ]
                                    }, {
                                        type: "VBox",
                                        props: {
                                            y: 34,
                                            x: 197,
                                            width: 430,
                                            height: 214
                                        },
                                        compId: 39,
                                        child: [ {
                                            type: "Box",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                height: 62
                                            },
                                            compId: 46,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    width: 323,
                                                    skin: "noZip/img_bg_1.png",
                                                    sizeGrid: "21,21,20,20",
                                                    height: 53
                                                },
                                                compId: 47
                                            }, {
                                                type: "TextInput",
                                                props: {
                                                    width: 308,
                                                    var: "txtName",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3,
                                                    sizeGrid: "18,20,21,25",
                                                    right: 0,
                                                    height: 52,
                                                    fontSize: 22,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    bold: true
                                                },
                                                compId: 48
                                            } ]
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 236,
                                                height: 60
                                            },
                                            compId: 49,
                                            child: [ {
                                                type: "RadioGroup",
                                                props: {
                                                    x: 0,
                                                    width: 180,
                                                    var: "radioGroup",
                                                    strokeColors: "#0f5180,#0f5180,#0f5180",
                                                    stateNum: 2,
                                                    space: 45,
                                                    skin: "hall/img_hall_3.png",
                                                    selectedIndex: 0,
                                                    labels: "男,女",
                                                    labelSize: 28,
                                                    labelColors: "#0f5180,#0f5180,#0f5180",
                                                    labelBold: true,
                                                    labelAlign: "center",
                                                    height: 28,
                                                    direction: "horizontal",
                                                    centerY: -6
                                                },
                                                compId: 52
                                            } ]
                                        }, {
                                            type: "Box",
                                            props: {
                                                height: 60
                                            },
                                            compId: 40,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    width: 323,
                                                    skin: "noZip/img_bg_1.png",
                                                    sizeGrid: "21,21,20,20",
                                                    height: 53
                                                },
                                                compId: 41
                                            }, {
                                                type: "TextInput",
                                                props: {
                                                    width: 308,
                                                    var: "txtAddress",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3,
                                                    sizeGrid: "18,20,21,25",
                                                    right: 0,
                                                    height: 52,
                                                    fontSize: 22,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    bold: true
                                                },
                                                compId: 42
                                            } ]
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                height: 60
                                            },
                                            compId: 43,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    width: 323,
                                                    skin: "noZip/img_bg_1.png",
                                                    sizeGrid: "21,21,20,20",
                                                    height: 53
                                                },
                                                compId: 44
                                            }, {
                                                type: "TextInput",
                                                props: {
                                                    width: 308,
                                                    var: "txtPhone",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3,
                                                    sizeGrid: "18,20,21,25",
                                                    right: 0,
                                                    height: 52,
                                                    fontSize: 22,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    bold: true
                                                },
                                                compId: 45
                                            } ]
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 95.5,
                                        width: 636,
                                        visible: false,
                                        var: "boxConfirm",
                                        height: 360,
                                        centerX: 0
                                    },
                                    compId: 30,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 53,
                                            width: 370,
                                            var: "boxExChange",
                                            height: 164,
                                            centerX: 0
                                        },
                                        compId: 53,
                                        child: [ {
                                            type: "VBox",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 156,
                                                name: "boxInfoDesc",
                                                height: 164
                                            },
                                            compId: 78,
                                            child: [ {
                                                type: "Label",
                                                props: {
                                                    text: "兑换物品 ：",
                                                    right: 0,
                                                    height: 55,
                                                    fontSize: 28,
                                                    font: "SimHei",
                                                    color: "#0f5180",
                                                    bold: true
                                                },
                                                compId: 79
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: -1,
                                                    text: "消耗 ：",
                                                    right: 0,
                                                    height: 55,
                                                    fontSize: 28,
                                                    font: "SimHei",
                                                    color: "#0f5180",
                                                    bold: true
                                                },
                                                compId: 80
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: -1,
                                                    text: "手机号 ：",
                                                    right: 0,
                                                    height: 55,
                                                    fontSize: 28,
                                                    font: "SimHei",
                                                    color: "#0f5180",
                                                    bold: true
                                                },
                                                compId: 81
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    text: "地址：",
                                                    right: 0,
                                                    name: "lblAddressDesc",
                                                    height: 55,
                                                    fontSize: 28,
                                                    font: "SimHei",
                                                    color: "#0f5180",
                                                    bold: true
                                                },
                                                compId: 98
                                            } ]
                                        }, {
                                            type: "VBox",
                                            props: {
                                                y: 0,
                                                x: 156,
                                                width: 300,
                                                name: "boxInfo",
                                                height: 164
                                            },
                                            compId: 68,
                                            child: [ {
                                                type: "Label",
                                                props: {
                                                    var: "lblItem",
                                                    text: "30元话费*1",
                                                    strokeColor: "#0b3170",
                                                    stroke: 4,
                                                    right: 0,
                                                    left: 0,
                                                    height: 55,
                                                    fontSize: 34,
                                                    font: "SimHei",
                                                    color: "#ffffff"
                                                },
                                                compId: 69
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    var: "lblCost",
                                                    text: "30元话费*1",
                                                    strokeColor: "#0b3170",
                                                    stroke: 4,
                                                    right: 0,
                                                    left: 0,
                                                    height: 55,
                                                    fontSize: 34,
                                                    font: "SimHei",
                                                    color: "#ffffff"
                                                },
                                                compId: 82
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    var: "lblPhone",
                                                    text: "30元话费*1",
                                                    strokeColor: "#0b3170",
                                                    stroke: 4,
                                                    right: 0,
                                                    left: 0,
                                                    height: 55,
                                                    fontSize: 34,
                                                    font: "SimHei",
                                                    color: "#ffffff"
                                                },
                                                compId: 83
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    wordWrap: true,
                                                    text: "30元话费*1",
                                                    strokeColor: "#0b3170",
                                                    stroke: 4,
                                                    right: 0,
                                                    name: "lblAddress",
                                                    left: 0,
                                                    height: 55,
                                                    fontSize: 34,
                                                    font: "SimHei",
                                                    color: "#ffffff"
                                                },
                                                compId: 99
                                            } ]
                                        } ]
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 84,
                                            width: 370,
                                            var: "boxExChange2",
                                            height: 106,
                                            centerX: 0
                                        },
                                        compId: 84,
                                        child: [ {
                                            type: "VBox",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 156,
                                                height: 164
                                            },
                                            compId: 85,
                                            child: [ {
                                                type: "Label",
                                                props: {
                                                    text: "兑换物品 ：",
                                                    right: 0,
                                                    height: 55,
                                                    fontSize: 28,
                                                    font: "SimHei",
                                                    color: "#0f5180",
                                                    bold: true
                                                },
                                                compId: 86
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: -1,
                                                    text: "消耗 ：",
                                                    right: 0,
                                                    height: 55,
                                                    fontSize: 28,
                                                    font: "SimHei",
                                                    color: "#0f5180",
                                                    bold: true
                                                },
                                                compId: 87
                                            } ]
                                        }, {
                                            type: "VBox",
                                            props: {
                                                y: 0,
                                                x: 156,
                                                width: 300,
                                                height: 164
                                            },
                                            compId: 89,
                                            child: [ {
                                                type: "Label",
                                                props: {
                                                    var: "lblItem2",
                                                    text: "30元话费*1",
                                                    strokeColor: "#0b3170",
                                                    stroke: 4,
                                                    right: 0,
                                                    left: 0,
                                                    height: 55,
                                                    fontSize: 34,
                                                    font: "SimHei",
                                                    color: "#ffffff"
                                                },
                                                compId: 90
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    var: "lblCost2",
                                                    text: "30元话费*1",
                                                    strokeColor: "#0b3170",
                                                    stroke: 4,
                                                    right: 0,
                                                    left: 0,
                                                    height: 55,
                                                    fontSize: 34,
                                                    font: "SimHei",
                                                    color: "#ffffff"
                                                },
                                                compId: 91
                                            } ]
                                        } ]
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 299,
                                            x: 465,
                                            width: 228,
                                            stateNum: 1,
                                            skin: "noZip/btn_green.png",
                                            sizeGrid: "0,53,0,45",
                                            name: "btnCancel",
                                            labelStrokeColor: "#226306",
                                            labelStroke: 4,
                                            labelSize: 33,
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "取消",
                                            height: 93,
                                            gray: false,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 64,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                aniScaleY: "1",
                                                aniScaleX: "1",
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 96
                                        } ]
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 299,
                                            x: 166,
                                            width: 228,
                                            stateNum: 1,
                                            skin: "basePic/btn_yellow.png",
                                            sizeGrid: "0,53,0,45",
                                            name: "btnConfirm",
                                            labelStrokeColor: "#70200b",
                                            labelStroke: 4,
                                            labelSize: 33,
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "确认",
                                            height: 93,
                                            gray: false,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 60,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                aniScaleY: "1",
                                                aniScaleX: "1",
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 97
                                        } ]
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 14.5,
                                        var: "btnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        right: -18,
                                        gray: false,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 3,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 95
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 123,
                                    var: "imgTop",
                                    skin: "noZip/img_title_2.png",
                                    centerX: 0
                                },
                                compId: 8,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 14,
                                        x: 74,
                                        var: "lblTop",
                                        text: "管理收货信息",
                                        strokeColor: "#0b3170",
                                        stroke: 3.8,
                                        fontSize: 40,
                                        font: "黑体",
                                        color: "#ffffff",
                                        bold: true
                                    },
                                    compId: 9
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_bg_15.png", "common/btn_blue.png", "noZip/img_bg_1.png", "hall/img_hall_3.png", "noZip/btn_green.png", "basePic/btn_yellow.png", "firstPic/btn_close.png", "noZip/img_title_2.png" ],
                        loadList3D: []
                    };
                    return ExChangeAddressDlgUI;
                }(Laya.Dialog);
                hallScene.ExChangeAddressDlgUI = ExChangeAddressDlgUI;
                REG("ui.hallScene.ExChangeAddressDlgUI", ExChangeAddressDlgUI);
                var ExChangeDlgUI = function(_super) {
                    __extends(ExChangeDlgUI, _super);
                    function ExChangeDlgUI() {
                        return _super.call(this) || this;
                    }
                    ExChangeDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ExChangeDlgUI.uiView);
                    };
                    ExChangeDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1833,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 66
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 67,
                            child: [ {
                                type: "Image",
                                props: {
                                    width: 1096,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "46,55,61,55",
                                    height: 621,
                                    centerY: 25,
                                    centerX: 0
                                },
                                compId: 9,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -5,
                                        width: 1112,
                                        skin: "noZip/img_title_3.png",
                                        sizeGrid: "0,266,0,266",
                                        height: 83,
                                        centerX: 0
                                    },
                                    compId: 10,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: -6,
                                            width: 523,
                                            skin: "noZip/img_title_2.png",
                                            centerX: 0
                                        },
                                        compId: 11,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 14,
                                                x: 221,
                                                text: "兑换",
                                                strokeColor: "#0b3170",
                                                stroke: 4,
                                                fontSize: 40,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                centerX: 0,
                                                bold: true
                                            },
                                            compId: 12
                                        } ]
                                    } ]
                                } ]
                            }, {
                                type: "List",
                                props: {
                                    y: 194,
                                    width: 999,
                                    var: "lstExChange",
                                    spaceX: 20,
                                    renderType: "render",
                                    height: 395,
                                    centerX: 0
                                },
                                compId: 4,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 274,
                                        name: "render",
                                        height: 407
                                    },
                                    compId: 32,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 6,
                                            x: 0,
                                            width: 274,
                                            skin: "noZip/img_bg_19.png",
                                            sizeGrid: "33,53,32,53",
                                            height: 384
                                        },
                                        compId: 45
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 7,
                                            skin: "common/img_guang_0.png",
                                            centerX: 0
                                        },
                                        compId: 46
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            width: 226,
                                            skin: "noZip/img_title_1.png",
                                            sizeGrid: "0,95,0,95",
                                            height: 50,
                                            centerX: 0
                                        },
                                        compId: 47
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 12.5,
                                            text: "100元京东卡",
                                            strokeColor: "#5e2100",
                                            stroke: 4,
                                            name: "lblItemName",
                                            fontSize: 26,
                                            font: "SimHei",
                                            color: "#ffde00",
                                            centerX: 0
                                        },
                                        compId: 52
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 114,
                                            x: 137,
                                            name: "imgRewardIcon",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 48
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 333,
                                            width: 228,
                                            stateNum: 1,
                                            skin: "noZip/btn_gray.png",
                                            sizeGrid: "0,51,0,57",
                                            scaleY: .8,
                                            scaleX: .8,
                                            name: "btnExChange",
                                            labelStrokeColor: "#0b3170",
                                            labelStroke: 4,
                                            labelSize: 42,
                                            labelPadding: "-1,0,0,0",
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            label: "兑换",
                                            height: 93,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 51,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                aniScaleY: "0.8",
                                                aniScaleX: "0.8",
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 71
                                        } ]
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 234,
                                            x: 107,
                                            name: "boxLabel"
                                        },
                                        compId: 80,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 123,
                                                valign: "middle",
                                                stroke: 3,
                                                name: "lblNeed",
                                                height: 60,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ff5551",
                                                bold: true,
                                                align: "left"
                                            },
                                            compId: 53
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 123,
                                                valign: "middle",
                                                stroke: 3,
                                                name: "lblNeed2",
                                                height: 60,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                align: "left"
                                            },
                                            compId: 78
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: -1,
                                                x: -58,
                                                skin: "iconAndSkin/icon_ticket.png",
                                                scaleY: .6,
                                                scaleX: .6,
                                                name: "imgItemIcon"
                                            },
                                            compId: 54
                                        } ]
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 552,
                                    width: 1100,
                                    var: "boxBottom",
                                    height: 193,
                                    centerX: 2
                                },
                                compId: 14,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 85,
                                        x: 108,
                                        skin: "noZip/img_bg_2.png"
                                    },
                                    compId: 16
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 49,
                                        x: 36,
                                        skin: "iconAndSkin/icon_ticket.png"
                                    },
                                    compId: 17
                                }, {
                                    type: "Label",
                                    props: {
                                        width: 111,
                                        text: "0",
                                        name: "lblHasCount",
                                        height: 28,
                                        fontSize: 28,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerY: 5,
                                        centerX: -359,
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 20
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 100,
                                        x: 677,
                                        var: "btnRecord",
                                        stateNum: 1,
                                        skin: "common/btn_blue.png",
                                        labelStrokeColor: "#0b3170",
                                        labelStroke: 4,
                                        labelSize: 38,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        label: "兑换记录",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 18,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 73
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 100,
                                        x: 932,
                                        var: "btnAddress",
                                        stateNum: 1,
                                        skin: "common/btn_blue.png",
                                        labelStrokeColor: "#0b3170",
                                        labelStroke: 4,
                                        labelSize: 38,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        label: "管理地址",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 19,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 74
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    var: "btnBack",
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 81
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_title_3.png", "noZip/img_title_2.png", "noZip/img_bg_19.png", "common/img_guang_0.png", "noZip/img_title_1.png", "noZip/btn_gray.png", "iconAndSkin/icon_ticket.png", "noZip/img_bg_2.png", "common/btn_blue.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return ExChangeDlgUI;
                }(Laya.Dialog);
                hallScene.ExChangeDlgUI = ExChangeDlgUI;
                REG("ui.hallScene.ExChangeDlgUI", ExChangeDlgUI);
                var ExChangeRecordDlgUI = function(_super) {
                    __extends(ExChangeRecordDlgUI, _super);
                    function ExChangeRecordDlgUI() {
                        return _super.call(this) || this;
                    }
                    ExChangeRecordDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ExChangeRecordDlgUI.uiView);
                    };
                    ExChangeRecordDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 17
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 18,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 134,
                                    x: 475,
                                    width: 681,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "48,40,48,40",
                                    height: 481,
                                    centerX: 0
                                },
                                compId: 3,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -11,
                                        skin: "noZip/img_title_2.png",
                                        centerX: 0
                                    },
                                    compId: 4,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 14,
                                            x: 114,
                                            text: "兑换记录",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            fontSize: 40,
                                            font: "黑体",
                                            color: "#ffffff",
                                            bold: true
                                        },
                                        compId: 5
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 14,
                                        var: "btnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        right: -18,
                                        gray: false,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 6,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 19
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 223,
                                        x: 161,
                                        width: 359,
                                        var: "label_noRecord",
                                        text: "暂时没有兑换记录哦",
                                        styleSkin: "common/label.png",
                                        strokeColor: "#0b3170",
                                        stroke: 2,
                                        height: 34,
                                        fontSize: 32,
                                        font: "黑体",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 20
                                } ]
                            }, {
                                type: "List",
                                props: {
                                    y: 205,
                                    width: 613,
                                    var: "lstRecord",
                                    spaceY: 10,
                                    renderType: "render",
                                    height: 368,
                                    centerX: 0
                                },
                                compId: 10,
                                child: [ {
                                    type: "View",
                                    props: {
                                        name: "render"
                                    },
                                    compId: 12,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 606,
                                            skin: "noZip/img_bg_11.png",
                                            sizeGrid: "38,66,36,68",
                                            height: 83,
                                            centerY: 0,
                                            centerX: 0
                                        },
                                        compId: 13
                                    }, {
                                        type: "Label",
                                        props: {
                                            name: "lblTime",
                                            left: 10,
                                            fontSize: 20,
                                            font: "SimHei",
                                            color: "#0f5180",
                                            centerY: 0,
                                            bold: true
                                        },
                                        compId: 14
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 32,
                                            x: 200,
                                            name: "lblItem",
                                            fontSize: 20,
                                            font: "SimHei",
                                            color: "#0f5180",
                                            centerY: 0,
                                            centerX: 0,
                                            bold: true
                                        },
                                        compId: 15
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 32,
                                            x: 421,
                                            name: "lblCost",
                                            fontSize: 20,
                                            font: "SimHei",
                                            color: "#0f5180",
                                            centerY: 0,
                                            bold: true
                                        },
                                        compId: 16
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_title_2.png", "firstPic/btn_close.png", "common/label.png", "noZip/img_bg_11.png" ],
                        loadList3D: []
                    };
                    return ExChangeRecordDlgUI;
                }(Laya.Dialog);
                hallScene.ExChangeRecordDlgUI = ExChangeRecordDlgUI;
                REG("ui.hallScene.ExChangeRecordDlgUI", ExChangeRecordDlgUI);
                var ExChangeSuccessDlgUI = function(_super) {
                    __extends(ExChangeSuccessDlgUI, _super);
                    function ExChangeSuccessDlgUI() {
                        return _super.call(this) || this;
                    }
                    ExChangeSuccessDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ExChangeSuccessDlgUI.uiView);
                    };
                    ExChangeSuccessDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1833,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 17
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 18,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 167,
                                    skin: "common/img_title_4.png",
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 30,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 38,
                                        skin: "hall/img_dhcg.png",
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 31
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 680,
                                    height: 534,
                                    centerY: 81,
                                    centerX: 0
                                },
                                compId: 29,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 176,
                                        x: 332,
                                        skin: "smallPic/currencyLight0.png",
                                        scaleY: .6,
                                        scaleX: .6,
                                        rotation: 360,
                                        centerY: -91,
                                        centerX: -8,
                                        blendMode: "lighter",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 33
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 466,
                                        width: 0,
                                        var: "lblInfo",
                                        strokeColor: "#004b6e",
                                        stroke: 3.5,
                                        height: 0,
                                        fontSize: 28,
                                        font: "黑体",
                                        color: "#b3f3ff",
                                        centerX: 0,
                                        bold: true
                                    },
                                    compId: 20
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 393,
                                        width: 228,
                                        var: "btnClick",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,42,0,46",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 4,
                                        labelSize: 34,
                                        labelFont: "黑体",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        label: "确定",
                                        height: 93,
                                        gray: false,
                                        centerX: -8,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 21,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            y: 1,
                                            x: 1,
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 22
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 123,
                                        width: 106,
                                        height: 106,
                                        centerX: -8
                                    },
                                    compId: 23,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            skin: "firstPic/img_item_bg.png",
                                            centerY: 0,
                                            centerX: 0
                                        },
                                        compId: 26,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                var: "imgItem",
                                                centerY: 0,
                                                centerX: 0
                                            },
                                            compId: 24
                                        } ]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 115,
                                            x: -23,
                                            width: 151,
                                            var: "lblCount",
                                            valign: "middle",
                                            strokeColor: "#0b3170",
                                            stroke: 3.5,
                                            height: 25,
                                            fontSize: 24,
                                            color: "#ffffff",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 28
                                    } ]
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 33,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "rotation",
                                        index: 100
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 48,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "common/img_title_4.png", "hall/img_dhcg.png", "smallPic/currencyLight0.png", "basePic/btn_yellow.png", "firstPic/img_item_bg.png" ],
                        loadList3D: []
                    };
                    return ExChangeSuccessDlgUI;
                }(Laya.Dialog);
                hallScene.ExChangeSuccessDlgUI = ExChangeSuccessDlgUI;
                REG("ui.hallScene.ExChangeSuccessDlgUI", ExChangeSuccessDlgUI);
                var FirstHallSceneUI = function(_super) {
                    __extends(FirstHallSceneUI, _super);
                    function FirstHallSceneUI() {
                        return _super.call(this) || this;
                    }
                    FirstHallSceneUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(FirstHallSceneUI.uiView);
                    };
                    FirstHallSceneUI.uiView = {
                        type: "View",
                        props: {
                            y: 0,
                            x: 0,
                            width: 1630,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 1630,
                                skin: "hall/img_dat_bg.jpg",
                                height: 750,
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 101
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                width: 1334,
                                var: "box_bgSpine",
                                height: 750,
                                centerX: 0
                            },
                            compId: 105
                        }, {
                            type: "Box",
                            props: {
                                y: 626,
                                width: 1224,
                                var: "box_bottom",
                                left: 30,
                                height: 115
                            },
                            compId: 5,
                            child: [ {
                                type: "HBox",
                                props: {
                                    y: 0,
                                    x: 9,
                                    width: 1224,
                                    var: "box_inBottom",
                                    height: 115
                                },
                                compId: 95,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 120,
                                        var: "box_shop",
                                        height: 115,
                                        bottom: 0
                                    },
                                    compId: 30,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            var: "btn_shop",
                                            stateNum: 1,
                                            skin: "hall/btn_shop.png",
                                            centerX: 0,
                                            bottom: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 31,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 55
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        width: 120,
                                        var: "box_activity",
                                        height: 115,
                                        bottom: 0
                                    },
                                    compId: 32,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            y: 73,
                                            width: 76,
                                            var: "btn_activity",
                                            stateNum: 1,
                                            skin: "hall/btn_huod_0.png",
                                            height: 75,
                                            centerX: 3,
                                            bottom: 12,
                                            anchorY: .6,
                                            anchorX: .5
                                        },
                                        compId: 33,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 59.5,
                                                x: 8.5,
                                                skin: "hall/btn_huod_1.png"
                                            },
                                            compId: 42
                                        }, {
                                            type: "Script",
                                            props: {
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 56
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        width: 120,
                                        var: "box_exchange",
                                        height: 115,
                                        bottom: 0
                                    },
                                    compId: 34,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            var: "btn_exchange",
                                            stateNum: 1,
                                            skin: "hall/btn_duih.png",
                                            centerX: 0,
                                            bottom: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 36,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 57
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        width: 120,
                                        var: "box_package",
                                        height: 115,
                                        bottom: 0
                                    },
                                    compId: 43,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            width: 103,
                                            var: "btn_package",
                                            stateNum: 1,
                                            skin: "hall/btn_beib.png",
                                            height: 89,
                                            centerX: 0,
                                            bottom: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 44,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 59
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 14,
                                        width: 120,
                                        var: "box_rankList",
                                        height: 115,
                                        bottom: 0
                                    },
                                    compId: 45,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            var: "btn_rankList",
                                            stateNum: 1,
                                            skin: "hall/btn_paih.png",
                                            centerX: 0,
                                            bottom: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 46,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 60
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        width: 120,
                                        var: "box_freeGold",
                                        height: 115,
                                        bottom: -1
                                    },
                                    compId: 47,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            var: "btn_freeGold",
                                            stateNum: 1,
                                            skin: "hall/btn_mianf.png",
                                            centerX: 0,
                                            bottom: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 48,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 63
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 0,
                                                x: 62,
                                                visible: false,
                                                var: "img_TipFreeGold",
                                                skin: "hall/img_mail_0.png"
                                            },
                                            compId: 112
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        width: 120,
                                        var: "box_rankWar",
                                        height: 115,
                                        bottom: -3
                                    },
                                    compId: 49,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            var: "btn_rankWar",
                                            stateNum: 1,
                                            skin: "hall/btn_haiw.png",
                                            centerX: 0,
                                            bottom: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 50,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 62
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        width: 120,
                                        var: "box_share",
                                        height: 115,
                                        bottom: -1
                                    },
                                    compId: 51,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            var: "btn_share",
                                            stateNum: 1,
                                            skin: "hall/btn_fenx.png",
                                            centerX: 0,
                                            bottom: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 52,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 61
                                        } ]
                                    } ]
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 78,
                                    x: 956,
                                    width: 76,
                                    var: "test_btn",
                                    stateNum: 1,
                                    skin: "hall/btn_huod_0.png",
                                    height: 75,
                                    centerX: 766,
                                    bottom: 8,
                                    anchorY: .6,
                                    anchorX: .5
                                },
                                compId: 116,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 59.5,
                                        x: 8.5,
                                        skin: "hall/btn_huod_1.png"
                                    },
                                    compId: 117
                                }, {
                                    type: "Script",
                                    props: {
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 118
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 279,
                                width: 79,
                                var: "box_right",
                                right: 30,
                                height: 457,
                                anchorX: 1
                            },
                            compId: 6,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 457,
                                    x: 39,
                                    width: 78,
                                    skin: "hall/img_hall_5.png",
                                    sizeGrid: "39,0,37,0",
                                    height: 85,
                                    anchorY: 1,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 64
                            }, {
                                type: "Box",
                                props: {
                                    y: 54,
                                    x: 39,
                                    width: 65,
                                    var: "box_notice",
                                    scaleY: 0,
                                    height: 77,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 65,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        var: "btn_notice",
                                        stateNum: 1,
                                        skin: "hall/btn_gongg.png",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 67,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 83
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 146,
                                    x: 39,
                                    width: 65,
                                    var: "box_mail",
                                    scaleY: 0,
                                    height: 77,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 68,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        var: "btn_mail",
                                        stateNum: 1,
                                        skin: "hall/btn_mail.png",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 69,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 84
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -10,
                                        x: 40,
                                        var: "img_mailRed",
                                        skin: "hall/img_mail_0.png"
                                    },
                                    compId: 115
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 237,
                                    x: 39,
                                    width: 65,
                                    var: "box_service",
                                    scaleY: 0,
                                    height: 77,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 72,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        var: "btn_service",
                                        stateNum: 1,
                                        skin: "hall/btn_kef.png",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 73,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 85
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 329,
                                    x: 39,
                                    width: 65,
                                    var: "box_set",
                                    scaleY: 0,
                                    height: 77,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 70,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        var: "btn_set",
                                        stateNum: 1,
                                        skin: "common/btn_shez.png",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 71,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 86
                                    } ]
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 415,
                                    var: "btn_menu",
                                    stateNum: 1,
                                    skin: "hall/btn_xit.png",
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 74,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        isSetSelf: false,
                                        isPlaySound: true,
                                        isPlayAni: false,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 87
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 370,
                                    x: 48,
                                    visible: false,
                                    var: "img_setRed",
                                    skin: "hall/img_mail_0.png"
                                },
                                compId: 188
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 520.5,
                                width: 296,
                                var: "box_pattern3",
                                height: 324,
                                centerX: -377,
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 7,
                            child: [ {
                                type: "Script",
                                props: {
                                    isSetSelf: true,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 80
                            }, {
                                type: "Image",
                                props: {
                                    zOrder: 10,
                                    y: 281,
                                    x: -31,
                                    skin: "hall/img_hall_8.png"
                                },
                                compId: 100
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 445,
                                width: 340,
                                var: "box_pattern2",
                                height: 348,
                                centerX: -30,
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 8,
                            child: [ {
                                type: "Script",
                                props: {
                                    isSetSelf: true,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 81
                            }, {
                                type: "Image",
                                props: {
                                    zOrder: 10,
                                    y: 253,
                                    x: 60,
                                    skin: "hall/img_hall_9.png"
                                },
                                compId: 99
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 577,
                                width: 365,
                                var: "box_pattern1",
                                height: 337,
                                centerX: 364,
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 77,
                            child: [ {
                                type: "Script",
                                props: {
                                    isSetSelf: true,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 82
                            }, {
                                type: "Image",
                                props: {
                                    zOrder: 10,
                                    y: 274,
                                    x: 164,
                                    skin: "hall/img_hall_10.png"
                                },
                                compId: 98
                            } ]
                        }, {
                            type: "HBox",
                            props: {
                                y: 14,
                                width: 557,
                                var: "box_top",
                                left: 894,
                                height: 86
                            },
                            compId: 4,
                            child: [ {
                                type: "Box",
                                props: {
                                    x: 0,
                                    width: 120,
                                    var: "box_vip",
                                    top: 0,
                                    height: 86
                                },
                                compId: 10,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        x: 70,
                                        var: "btn_vip",
                                        stateNum: 1,
                                        skin: "hall/btn_teq.png",
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 9,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 27
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 120,
                                    var: "box_gift",
                                    top: -1,
                                    height: 86
                                },
                                compId: 21,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        x: 72,
                                        var: "btn_gift",
                                        stateNum: 1,
                                        skin: "hall/btn_shouc.png",
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 22,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 29
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 120,
                                    var: "box_monthCard",
                                    top: 0,
                                    height: 86
                                },
                                compId: 19,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        x: 72,
                                        var: "btn_monthCard",
                                        stateNum: 1,
                                        skin: "hall/btn_yuek.png",
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 20,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 28
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 120,
                                    var: "box_gift_SP",
                                    top: -1,
                                    height: 86
                                },
                                compId: 109,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        x: 72,
                                        var: "btn_gift_SP",
                                        stateNum: 1,
                                        skin: "hall/btn_teh.png",
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 110,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 111
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 120,
                                    var: "box_tomorrow",
                                    top: -2,
                                    height: 86
                                },
                                compId: 134,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        x: 70,
                                        var: "btn_tomorrow",
                                        stateNum: 1,
                                        skin: "gift/img_milb.png",
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 132,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 133
                                    } ]
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 65,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 65,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 65,
                                        key: "scaleY",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 65,
                                        key: "scaleY",
                                        index: 16
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 65,
                                        key: "mouseEnabled",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 65,
                                        key: "mouseEnabled",
                                        index: 16
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 65,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 65,
                                        key: "alpha",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 65,
                                        key: "alpha",
                                        index: 16
                                    } ]
                                }
                            }, {
                                target: 68,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 68,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 68,
                                        key: "scaleY",
                                        index: 9
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 68,
                                        key: "scaleY",
                                        index: 12
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 68,
                                        key: "mouseEnabled",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 68,
                                        key: "mouseEnabled",
                                        index: 16
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 68,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 68,
                                        key: "alpha",
                                        index: 9
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 68,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 72,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 72,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: .25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "scaleY",
                                        index: 6
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "scaleY",
                                        index: 8
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 72,
                                        key: "mouseEnabled",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 72,
                                        key: "mouseEnabled",
                                        index: 16
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 72,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "alpha",
                                        index: 5
                                    }, {
                                        value: .25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 70,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 70,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "scaleY",
                                        index: 1
                                    }, {
                                        value: .25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "scaleY",
                                        index: 2
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "scaleY",
                                        index: 4
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 70,
                                        key: "mouseEnabled",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 70,
                                        key: "mouseEnabled",
                                        index: 16
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 70,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "alpha",
                                        index: 1
                                    }, {
                                        value: .25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "alpha",
                                        index: 2
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "alpha",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 64,
                                keyframes: {
                                    height: [ {
                                        value: 85,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 64,
                                        key: "height",
                                        index: 0
                                    }, {
                                        value: 457,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 64,
                                        key: "height",
                                        index: 16
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 64,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 64,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 74,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 74,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 180,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 74,
                                        key: "rotation",
                                        index: 16
                                    } ]
                                }
                            } ],
                            name: "menuOpen",
                            id: 1,
                            frameRate: 48,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 64,
                                keyframes: {
                                    height: [ {
                                        value: 457,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 64,
                                        key: "height",
                                        index: 0
                                    }, {
                                        value: 85,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 64,
                                        key: "height",
                                        index: 16
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 64,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 64,
                                        key: "alpha",
                                        index: 8
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 64,
                                        key: "alpha",
                                        index: 16
                                    } ]
                                }
                            }, {
                                target: 65,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 65,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 65,
                                        key: "scaleY",
                                        index: 3
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 65,
                                        key: "mouseEnabled",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 65,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 65,
                                        key: "alpha",
                                        index: 1
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 65,
                                        key: "alpha",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 68,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 68,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 68,
                                        key: "scaleY",
                                        index: 4
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 68,
                                        key: "scaleY",
                                        index: 6
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 68,
                                        key: "mouseEnabled",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 68,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 68,
                                        key: "alpha",
                                        index: 4
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 68,
                                        key: "alpha",
                                        index: 6
                                    } ]
                                }
                            }, {
                                target: 72,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 72,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "scaleY",
                                        index: 11
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 72,
                                        key: "mouseEnabled",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "alpha",
                                        index: 8
                                    }, {
                                        value: .25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "alpha",
                                        index: 9
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 72,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 70,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 70,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "scaleY",
                                        index: 12
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "scaleY",
                                        index: 15
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 70,
                                        key: "mouseEnabled",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: .25,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "alpha",
                                        index: 13
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 70,
                                        key: "alpha",
                                        index: 16
                                    } ]
                                }
                            }, {
                                target: 74,
                                keyframes: {
                                    rotation: [ {
                                        value: 180,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 74,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 74,
                                        key: "rotation",
                                        index: 16
                                    } ]
                                }
                            } ],
                            name: "menuClose",
                            id: 2,
                            frameRate: 48,
                            action: 0
                        } ],
                        loadList: [ "hall/img_dat_bg.jpg", "hall/btn_shop.png", "hall/btn_huod_0.png", "hall/btn_huod_1.png", "hall/btn_duih.png", "hall/btn_beib.png", "hall/btn_paih.png", "hall/btn_mianf.png", "hall/img_mail_0.png", "hall/btn_haiw.png", "hall/btn_fenx.png", "hall/img_hall_5.png", "hall/btn_gongg.png", "hall/btn_mail.png", "hall/btn_kef.png", "common/btn_shez.png", "hall/btn_xit.png", "hall/img_hall_8.png", "hall/img_hall_9.png", "hall/img_hall_10.png", "hall/btn_teq.png", "hall/btn_shouc.png", "hall/btn_yuek.png", "hall/btn_teh.png", "gift/img_milb.png" ],
                        loadList3D: []
                    };
                    return FirstHallSceneUI;
                }(Laya.View);
                hallScene.FirstHallSceneUI = FirstHallSceneUI;
                REG("ui.hallScene.FirstHallSceneUI", FirstHallSceneUI);
                var FocusGongZhongHaoUI = function(_super) {
                    __extends(FocusGongZhongHaoUI, _super);
                    function FocusGongZhongHaoUI() {
                        return _super.call(this) || this;
                    }
                    FocusGongZhongHaoUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(FocusGongZhongHaoUI.uiView);
                    };
                    FocusGongZhongHaoUI.uiView = {
                        type: "View",
                        props: {
                            width: 796,
                            height: 505
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                width: 796,
                                skin: "noZip/img_bg_8.png",
                                sizeGrid: "20,41,24,39",
                                mouseEnabled: true,
                                height: 505,
                                alpha: 1
                            },
                            compId: 41,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 169,
                                    x: 33,
                                    skin: "activitys/img_gzh.png"
                                },
                                compId: 78
                            }, {
                                type: "Label",
                                props: {
                                    y: 27,
                                    x: 41,
                                    width: 151,
                                    valign: "middle",
                                    text: "关注方法①：",
                                    strokeColor: "#004b6e",
                                    stroke: 3.5,
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#45cfff",
                                    align: "left"
                                },
                                compId: 67
                            }, {
                                type: "Label",
                                props: {
                                    y: 170,
                                    x: 228,
                                    width: 151,
                                    valign: "middle",
                                    text: "关注方法②：",
                                    strokeColor: "#004b6e",
                                    stroke: 3.5,
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#85efff",
                                    align: "left"
                                },
                                compId: 68
                            }, {
                                type: "Label",
                                props: {
                                    y: 259,
                                    x: 228,
                                    width: 151,
                                    valign: "middle",
                                    text: "关注方法③：",
                                    strokeColor: "#004b6e",
                                    stroke: 3.5,
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#85efff",
                                    align: "left"
                                },
                                compId: 69
                            }, {
                                type: "Label",
                                props: {
                                    y: 68,
                                    x: 41,
                                    width: 173,
                                    valign: "middle",
                                    text: "1、点击右上角",
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#b3f3ff",
                                    align: "left"
                                },
                                compId: 70
                            }, {
                                type: "Label",
                                props: {
                                    y: 68,
                                    x: 217,
                                    width: 56,
                                    valign: "middle",
                                    text: "O○O",
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#b3f3ff",
                                    align: "left"
                                },
                                compId: 71
                            }, {
                                type: "Label",
                                props: {
                                    y: 68,
                                    x: 277,
                                    width: 82,
                                    valign: "middle",
                                    text: "，选择",
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#b3f3ff",
                                    align: "left"
                                },
                                compId: 84
                            }, {
                                type: "Label",
                                props: {
                                    y: 68,
                                    x: 360,
                                    width: 208,
                                    valign: "middle",
                                    text: "【关于捕鱼侠3D】",
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#ffde00",
                                    align: "left"
                                },
                                compId: 72
                            }, {
                                type: "Label",
                                props: {
                                    y: 112,
                                    x: 41,
                                    width: 302,
                                    valign: "middle",
                                    text: "2、点击相关公众号，选择",
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#b3f3ff",
                                    align: "left"
                                },
                                compId: 73
                            }, {
                                type: "Label",
                                props: {
                                    y: 112,
                                    x: 346,
                                    width: 155,
                                    valign: "middle",
                                    text: "【捕鱼侠3D】",
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#ffde00",
                                    align: "left"
                                },
                                compId: 74
                            }, {
                                type: "Label",
                                props: {
                                    y: 207,
                                    x: 228,
                                    width: 265,
                                    valign: "middle",
                                    text: "截图后扫描二维码关注",
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#b3f3ff",
                                    align: "left"
                                },
                                compId: 75
                            }, {
                                type: "Label",
                                props: {
                                    y: 298,
                                    x: 228,
                                    width: 194,
                                    valign: "middle",
                                    text: "微信搜索公众号：",
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#b3f3ff",
                                    align: "left"
                                },
                                compId: 76
                            }, {
                                type: "Label",
                                props: {
                                    y: 298,
                                    x: 435,
                                    width: 121,
                                    valign: "middle",
                                    underline: true,
                                    text: "buyuxia3D",
                                    height: 28,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#ffde00",
                                    align: "left"
                                },
                                compId: 77
                            }, {
                                type: "Button",
                                props: {
                                    y: 312,
                                    x: 653,
                                    var: "btn_copy",
                                    stateNum: 1,
                                    skin: "common/btn_blue.png",
                                    sizeGrid: "0,51,0,47",
                                    scaleY: .5,
                                    scaleX: .5,
                                    labelStrokeColor: "#0b3170",
                                    labelStroke: 6,
                                    labelSize: 48,
                                    labelFont: "SimHei",
                                    labelColors: "#ffffff",
                                    labelBold: true,
                                    label: "复制",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 81,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: .5,
                                        aniScaleX: .5,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 82
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 356,
                                    x: 18,
                                    width: 757,
                                    skin: "noZip/img_bg_8.png",
                                    sizeGrid: "22,20,27,23",
                                    height: 140
                                },
                                compId: 79,
                                child: [ {
                                    type: "List",
                                    props: {
                                        y: 40,
                                        x: 22,
                                        var: "list_item",
                                        spaceX: 8,
                                        repeatY: 1,
                                        repeatX: 5
                                    },
                                    compId: 85,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 4,
                                            x: 0,
                                            width: 84.8,
                                            renderType: "render",
                                            height: 84.8
                                        },
                                        compId: 86,
                                        child: [ {
                                            type: "Panel",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 84.8,
                                                height: 84.8
                                            },
                                            compId: 87
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 106,
                                                skin: "firstPic/img_item_bg.png",
                                                scaleY: .8,
                                                scaleX: .8,
                                                height: 106
                                            },
                                            compId: 88
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 43,
                                                x: 42,
                                                scaleY: .8,
                                                scaleX: .8,
                                                name: "imgItem",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 89
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: -6,
                                                x: -4,
                                                visible: false,
                                                skin: "hall/img_mail_5.png",
                                                name: "imgGot"
                                            },
                                            compId: 90
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 58,
                                                x: 5,
                                                width: 94,
                                                text: "x25",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3,
                                                scaleY: .8,
                                                scaleX: .8,
                                                name: "lblCount",
                                                height: 24,
                                                fontSize: 24,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 91
                                        } ]
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 83,
                                        x: 623,
                                        width: 228,
                                        var: "btn_recieve",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,54,0,58",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 3.5,
                                        labelSize: 32,
                                        labelFont: "黑体",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "领取奖励",
                                        height: 93,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 92,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 93
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 8,
                                        x: 22,
                                        width: 313,
                                        valign: "middle",
                                        text: "关注公众号，免费领取礼包",
                                        height: 28,
                                        fontSize: 26,
                                        font: "SimHei",
                                        color: "#b3f3ff",
                                        align: "left"
                                    },
                                    compId: 80
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 11,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 57
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 57
                                    } ]
                                }
                            } ],
                            name: "ticketMove",
                            id: 1,
                            frameRate: 30,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 27,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: false,
                                        target: 27,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 57
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: false,
                                        target: 27,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 57
                                    } ]
                                }
                            }, {
                                target: 28,
                                keyframes: {
                                    y: [ {
                                        value: 120.5,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 28,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 126.5,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 28,
                                        key: "y",
                                        index: 31
                                    }, {
                                        value: 120.79625,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 28,
                                        key: "y",
                                        index: 57
                                    } ]
                                }
                            } ],
                            name: "titleMove",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "noZip/img_bg_8.png", "activitys/img_gzh.png", "common/btn_blue.png", "firstPic/img_item_bg.png", "hall/img_mail_5.png", "common/label.png", "basePic/btn_yellow.png" ],
                        loadList3D: []
                    };
                    return FocusGongZhongHaoUI;
                }(Laya.View);
                hallScene.FocusGongZhongHaoUI = FocusGongZhongHaoUI;
                REG("ui.hallScene.FocusGongZhongHaoUI", FocusGongZhongHaoUI);
                var GoldPagViewUI = function(_super) {
                    __extends(GoldPagViewUI, _super);
                    function GoldPagViewUI() {
                        return _super.call(this) || this;
                    }
                    GoldPagViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(GoldPagViewUI.uiView);
                    };
                    GoldPagViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 796,
                            height: 505
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -1,
                                x: 0,
                                skin: "activitys/img_jinz_bg.png"
                            },
                            compId: 5
                        }, {
                            type: "Button",
                            props: {
                                y: 61,
                                x: 71.5,
                                var: "btn_help",
                                stateNum: 1,
                                skin: "activitys/btn_help.png",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 45,
                            child: [ {
                                type: "Script",
                                props: {
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 67
                            } ]
                        }, {
                            type: "ProgressBar",
                            props: {
                                y: 39,
                                x: 259,
                                width: 322,
                                var: "progress_jinz",
                                value: .5,
                                skin: "activitys/progress_jinz.png",
                                sizeGrid: "0,24,0,24",
                                height: 52
                            },
                            compId: 49,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 0,
                                    x: 36,
                                    width: 262,
                                    var: "text_saveGold",
                                    valign: "middle",
                                    text: "1000/10000000",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    height: 47,
                                    fontSize: 26,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "center"
                                },
                                compId: 64
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 21,
                                x: 213,
                                skin: "activitys/img_jinz_0.png"
                            },
                            compId: 46
                        }, {
                            type: "Image",
                            props: {
                                y: 141,
                                x: 29,
                                skin: "activitys/img_jinz_3.png"
                            },
                            compId: 50
                        }, {
                            type: "Button",
                            props: {
                                y: 428.5,
                                x: 398,
                                width: 228,
                                var: "btn_getGold",
                                stateNum: 1,
                                skin: "noZip/btn_green.png",
                                sizeGrid: "0,51,0,48",
                                scaleY: .8,
                                scaleX: .8,
                                labelStrokeColor: "#226306",
                                labelStroke: 4,
                                labelSize: 34,
                                labelPadding: "0,0,1,0",
                                labelFont: "SimHei",
                                labelColors: "#ffffff",
                                labelBold: true,
                                labelAlign: "center",
                                label: "提取",
                                height: 93,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 55,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: .8,
                                    aniScaleX: .8,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 65
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 470,
                                width: 420,
                                valign: "middle",
                                text: "捕鱼可以获得更多金币， 最高领取5000万金币",
                                height: 20,
                                fontSize: 20,
                                font: "SimHei",
                                color: "#ef73ff",
                                centerX: 0,
                                bold: true,
                                align: "left"
                            },
                            compId: 57
                        }, {
                            type: "Label",
                            props: {
                                y: 86,
                                width: 158,
                                var: "text_tips",
                                valign: "middle",
                                text: "再充 500 元\\n可存 500 万金币",
                                leading: 2,
                                height: 61,
                                fontSize: 20,
                                font: "SimHei",
                                color: "#ef73ff",
                                centerX: 290,
                                bold: true,
                                align: "center"
                            },
                            compId: 58
                        }, {
                            type: "Button",
                            props: {
                                y: 59,
                                x: 687,
                                width: 228,
                                var: "btn_upGrade",
                                stateNum: 1,
                                skin: "basePic/btn_yellow.png",
                                sizeGrid: "0,53,0,44",
                                scaleY: .69,
                                scaleX: .69,
                                labelStrokeColor: "#70200b",
                                labelStroke: 4,
                                labelSize: 36,
                                labelPadding: "0,1,3,0",
                                labelFont: "SimHei",
                                labelColors: "#ffffff",
                                labelBold: true,
                                labelAlign: "center",
                                label: "升级金猪",
                                height: 93,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 59,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: .69,
                                    aniScaleX: .69,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 66
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 409,
                                x: 565,
                                skin: "activitys/img_hd_19.png"
                            },
                            compId: 60,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 6,
                                    x: 47,
                                    width: 127,
                                    var: "text_remainingTime",
                                    valign: "middle",
                                    text: "7:12:46:59",
                                    strokeColor: "#226306",
                                    stroke: 3,
                                    height: 25,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "center"
                                },
                                compId: 61
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 50,
                                x: 255,
                                width: 45,
                                height: 31,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 72,
                            child: [ {
                                type: "Image",
                                props: {
                                    x: 13.5,
                                    skin: "activitys/img_jinz_grade2.png"
                                },
                                compId: 47
                            }, {
                                type: "Image",
                                props: {
                                    y: 16,
                                    x: 8.5,
                                    var: "img_gradeNum_0",
                                    skin: "activitys/img_num2_5.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 48
                            }, {
                                type: "Box",
                                props: {
                                    width: 45,
                                    visible: false,
                                    height: 31,
                                    centerY: 0,
                                    centerX: 0,
                                    blendMode: "lighter",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 73,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        x: 13.5,
                                        skin: "activitys/img_jinz_grade2.png"
                                    },
                                    compId: 74
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 16,
                                        x: 8.5,
                                        var: "img_gradeNum_2",
                                        skin: "activitys/img_num2_5.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 75
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 331,
                                x: 398,
                                width: 310,
                                var: "box_jinz_0",
                                scaleY: 1,
                                scaleX: 1,
                                height: 310,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 76,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 185,
                                    x: 149,
                                    var: "img_jinz_0",
                                    skin: "activitys/img_jinz_1.png",
                                    scaleY: .6,
                                    scaleX: .6,
                                    anchorY: .9,
                                    anchorX: .5
                                },
                                compId: 51,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 181,
                                        x: 140,
                                        width: 150,
                                        height: 50,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 80,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 26,
                                            x: 26,
                                            var: "img_gradeNum_1",
                                            skin: "activitys/img_num1_1.png",
                                            anchorY: .5,
                                            anchorX: 1
                                        },
                                        compId: 53
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 5,
                                            x: 24,
                                            skin: "activitys/img_jinz_grade1.png"
                                        },
                                        compId: 52
                                    } ]
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 331,
                                x: 398,
                                width: 310,
                                visible: true,
                                var: "box_jinz_1",
                                scaleY: 2.220446049250313e-16,
                                scaleX: 2.220446049250313e-16,
                                height: 310,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 1
                            },
                            compId: 77,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 193,
                                    x: 153,
                                    visible: true,
                                    var: "img_jinz_1",
                                    skin: "activitys/img_jinz_2.png",
                                    scaleY: .6,
                                    scaleX: .6,
                                    anchorY: .8,
                                    anchorX: .5,
                                    alpha: 1
                                },
                                compId: 63
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 329,
                                x: 408,
                                var: "box_goldCoin",
                                scaleY: .6,
                                scaleX: .6,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 79
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 73,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 73,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 73,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 73,
                                        key: "scaleY",
                                        index: 16
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 73,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 73,
                                        key: "scaleX",
                                        index: 16
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 73,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .05,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 73,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 73,
                                        key: "alpha",
                                        index: 16
                                    } ]
                                }
                            } ],
                            name: "ani_gradeUp",
                            id: 1,
                            frameRate: 30,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 76,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "scaleY",
                                        index: 29
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "scaleY",
                                        index: 33
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "scaleX",
                                        index: 29
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "scaleX",
                                        index: 33
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "rotation",
                                        index: 4
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "rotation",
                                        index: 8
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "rotation",
                                        index: 13
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "rotation",
                                        index: 17
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "rotation",
                                        index: 21
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "rotation",
                                        index: 25
                                    }, {
                                        value: -10,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "rotation",
                                        index: 29
                                    }, {
                                        value: 10,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 76,
                                        key: "rotation",
                                        index: 33
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 76,
                                        key: "rotation",
                                        index: 34
                                    } ]
                                }
                            }, {
                                target: 77,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 77,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 77,
                                        key: "visible",
                                        index: 33
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 77,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "elasticOut",
                                        tween: true,
                                        target: 77,
                                        key: "scaleY",
                                        index: 33
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 77,
                                        key: "scaleY",
                                        index: 65
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 77,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "elasticOut",
                                        tween: true,
                                        target: 77,
                                        key: "scaleX",
                                        index: 33
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 77,
                                        key: "scaleX",
                                        index: 65
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 77,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 77,
                                        key: "alpha",
                                        index: 33
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 77,
                                        label: "flyCoin",
                                        key: "alpha",
                                        index: 43
                                    } ]
                                }
                            }, {
                                target: 63,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 63,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 63,
                                        key: "visible",
                                        index: 33
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 63,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 63,
                                        key: "alpha",
                                        index: 33
                                    } ]
                                }
                            } ],
                            name: "ani_pagShake",
                            id: 2,
                            frameRate: 48,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 80,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 80,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 2,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 80,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 80,
                                        key: "scaleY",
                                        index: 10
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 80,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 2,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 80,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 80,
                                        key: "scaleX",
                                        index: 10
                                    } ]
                                }
                            } ],
                            name: "ani_pagGrade",
                            id: 3,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "activitys/img_jinz_bg.png", "activitys/btn_help.png", "activitys/progress_jinz.png", "activitys/img_jinz_0.png", "activitys/img_jinz_3.png", "noZip/btn_green.png", "basePic/btn_yellow.png", "activitys/img_hd_19.png", "activitys/img_jinz_grade2.png", "activitys/img_num2_5.png", "activitys/img_jinz_1.png", "activitys/img_num1_1.png", "activitys/img_jinz_grade1.png", "activitys/img_jinz_2.png" ],
                        loadList3D: []
                    };
                    return GoldPagViewUI;
                }(Laya.View);
                hallScene.GoldPagViewUI = GoldPagViewUI;
                REG("ui.hallScene.GoldPagViewUI", GoldPagViewUI);
                var ItemBuyDialogUI = function(_super) {
                    __extends(ItemBuyDialogUI, _super);
                    function ItemBuyDialogUI() {
                        return _super.call(this) || this;
                    }
                    ItemBuyDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ItemBuyDialogUI.uiView);
                    };
                    ItemBuyDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 21
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 134,
                                    width: 680,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "40,40,59,51",
                                    height: 480,
                                    centerX: 0
                                },
                                compId: 3,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -11,
                                        x: 145,
                                        skin: "noZip/img_title_2.png"
                                    },
                                    compId: 5
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 0,
                                        x: 263,
                                        width: 154,
                                        valign: "middle",
                                        text: "提示",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 45,
                                        fontSize: 40,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 6
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 66,
                                        x: 24,
                                        width: 634,
                                        skin: "noZip/img_bg_15.png",
                                        sizeGrid: "20,70,20,70",
                                        height: 388
                                    },
                                    compId: 11,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 96,
                                            x: 278,
                                            width: 270,
                                            var: "box_text",
                                            height: 34,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 8,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 0,
                                                width: 185,
                                                valign: "middle",
                                                text: "购买需消耗 ",
                                                left: 0,
                                                height: 35,
                                                fontSize: 33,
                                                font: "SimHei",
                                                color: "#0b3170",
                                                bold: true,
                                                align: "left"
                                            },
                                            compId: 7
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 0,
                                                x: 185,
                                                var: "text_needNum",
                                                valign: "middle",
                                                text: "2 ",
                                                strokeColor: "#0b3170",
                                                stroke: 4,
                                                height: 35,
                                                fontSize: 38,
                                                font: "SimHei",
                                                color: "#68ff3f",
                                                bold: true,
                                                align: "left"
                                            },
                                            compId: 9
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: -5,
                                                x: 238,
                                                var: "image_diamond",
                                                text: "label",
                                                skin: "firstPic/icon_diamond.png",
                                                scaleY: .8,
                                                scaleX: .8,
                                                right: 0,
                                                height: 58,
                                                anchorX: 1
                                            },
                                            compId: 10
                                        } ]
                                    } ]
                                }, {
                                    type: "TextInput",
                                    props: {
                                        y: 221,
                                        x: 225,
                                        width: 225,
                                        var: "itemNum",
                                        valign: "middle",
                                        type: "text",
                                        text: "1",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        skin: "noZip/img_bg_1.png",
                                        sizeGrid: "20,20,20,20",
                                        restrict: "0,1,2,3,4,5,6,7,8,9",
                                        height: 55,
                                        fontSize: 38,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 12
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 249,
                                        x: 448,
                                        var: "plus",
                                        stateNum: 1,
                                        skin: "common/btn_+_0.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 13,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 15
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 249,
                                        x: 233,
                                        var: "reduce",
                                        stateNum: 1,
                                        skin: "common/btn_-_0.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 14,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 16
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 363,
                                        x: 485,
                                        width: 228,
                                        var: "sure",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,50,0,50",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 4,
                                        labelSize: 34,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "确认",
                                        height: 93,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 17,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 19
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 363,
                                        x: 197,
                                        width: 228,
                                        var: "cancel",
                                        stateNum: 1,
                                        skin: "noZip/btn_green.png",
                                        sizeGrid: "0,50,0,50",
                                        labelStrokeColor: "#226306",
                                        labelStroke: 4,
                                        labelSize: 34,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "取消",
                                        height: 93,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 18,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 20
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 13,
                                        var: "returnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        right: -18,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 22,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 23
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_title_2.png", "noZip/img_bg_15.png", "firstPic/icon_diamond.png", "noZip/img_bg_1.png", "common/btn_+_0.png", "common/btn_-_0.png", "basePic/btn_yellow.png", "noZip/btn_green.png", "firstPic/btn_close.png" ],
                        loadList3D: []
                    };
                    return ItemBuyDialogUI;
                }(Laya.Dialog);
                hallScene.ItemBuyDialogUI = ItemBuyDialogUI;
                REG("ui.hallScene.ItemBuyDialogUI", ItemBuyDialogUI);
                var ItemGiveDialogUI = function(_super) {
                    __extends(ItemGiveDialogUI, _super);
                    function ItemGiveDialogUI() {
                        return _super.call(this) || this;
                    }
                    ItemGiveDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ItemGiveDialogUI.uiView);
                    };
                    ItemGiveDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                mouseThrough: false,
                                mouseEnabled: true,
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 38
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 680,
                                    height: 480,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 41,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        width: 680,
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "40,40,59,51",
                                        height: 480
                                    },
                                    compId: 4,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: -11,
                                            x: 145,
                                            skin: "noZip/img_title_2.png"
                                        },
                                        compId: 5
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 0,
                                            x: 263,
                                            width: 154,
                                            valign: "middle",
                                            text: "提示",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            height: 45,
                                            fontSize: 40,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 6
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 66,
                                            x: 24,
                                            width: 634,
                                            skin: "noZip/img_bg_15.png",
                                            sizeGrid: "20,70,20,70",
                                            height: 388
                                        },
                                        compId: 7
                                    } ]
                                }, {
                                    type: "ViewStack",
                                    props: {
                                        y: 66,
                                        x: 23,
                                        width: 634,
                                        var: "select_view",
                                        selectedIndex: 0,
                                        height: 388
                                    },
                                    compId: 28,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 634,
                                            name: "item0",
                                            height: 388
                                        },
                                        compId: 30,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 143,
                                                x: 54,
                                                width: 100,
                                                valign: "middle",
                                                text: "赠送ID:",
                                                name: "",
                                                height: 51,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#0b3170",
                                                bold: true,
                                                align: "right"
                                            },
                                            compId: 20
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 209,
                                                x: 25,
                                                valign: "middle",
                                                text: "赠送数量:",
                                                name: "",
                                                height: 51,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#0b3170",
                                                bold: true,
                                                align: "right"
                                            },
                                            compId: 21
                                        }, {
                                            type: "TextInput",
                                            props: {
                                                y: 143,
                                                x: 157,
                                                width: 322,
                                                var: "playerID",
                                                valign: "middle",
                                                type: "text",
                                                text: "203569954",
                                                strokeColor: "#0b3170",
                                                stroke: 3.5,
                                                skin: "noZip/img_bg_1.png",
                                                sizeGrid: "20,20,20,20",
                                                restrict: "0,1,2,3,4,5,6,7,8,9",
                                                name: "",
                                                height: 51,
                                                fontSize: 34,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                alpha: 1,
                                                align: "center"
                                            },
                                            compId: 12
                                        }, {
                                            type: "TextInput",
                                            props: {
                                                y: 209,
                                                x: 157,
                                                width: 322,
                                                var: "itemNum",
                                                valign: "middle",
                                                type: "text",
                                                text: "203569954",
                                                strokeColor: "#0b3170",
                                                stroke: 3.5,
                                                skin: "noZip/img_bg_1.png",
                                                sizeGrid: "20,20,20,20",
                                                restrict: "0,1,2,3,4,5,6,7,8,9",
                                                name: "",
                                                height: 51,
                                                fontSize: 34,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                alpha: 1,
                                                align: "center"
                                            },
                                            compId: 19
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 25,
                                                x: 264,
                                                skin: "firstPic/img_item_bg.png",
                                                alpha: 1
                                            },
                                            compId: 22,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    var: "image_itemIcon",
                                                    skin: "firstPic/icon_skillKb.png",
                                                    centerY: 0,
                                                    centerX: 0
                                                },
                                                compId: 23
                                            } ]
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 42,
                                                x: 380,
                                                width: 223,
                                                var: "text_itemName",
                                                valign: "middle",
                                                text: "黄金弹头",
                                                strokeColor: "#70200b",
                                                stroke: 3.5,
                                                height: 33,
                                                fontSize: 33,
                                                font: "SimHei",
                                                color: "#ffec4c",
                                                bold: true,
                                                align: "left"
                                            },
                                            compId: 25
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 90,
                                                x: 380,
                                                var: "text_haveNum",
                                                text: "拥有4个",
                                                fontSize: 27,
                                                font: "SimHei",
                                                color: "#0b3170",
                                                bold: true
                                            },
                                            compId: 26
                                        } ]
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 634,
                                            name: "item1",
                                            height: 388
                                        },
                                        compId: 29,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 54,
                                                x: 54,
                                                width: 100,
                                                valign: "middle",
                                                text: "接收人:",
                                                name: "",
                                                height: 51,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#0b3170",
                                                bold: true,
                                                align: "right"
                                            },
                                            compId: 31
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 120,
                                                x: 110,
                                                valign: "middle",
                                                text: "ID:",
                                                name: "",
                                                height: 51,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#0b3170",
                                                bold: true,
                                                align: "right"
                                            },
                                            compId: 32
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 187,
                                                x: 82,
                                                valign: "middle",
                                                text: "物品:",
                                                name: "",
                                                height: 51,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#0b3170",
                                                bold: true,
                                                align: "right"
                                            },
                                            compId: 35
                                        }, {
                                            type: "TextInput",
                                            props: {
                                                y: 54,
                                                x: 157,
                                                width: 322,
                                                var: "check_playerName",
                                                valign: "middle",
                                                type: "text",
                                                text: "203569954",
                                                strokeColor: "#0b3170",
                                                stroke: 3.5,
                                                skin: "noZip/img_bg_1.png",
                                                sizeGrid: "20,20,20,20",
                                                name: "",
                                                mouseEnabled: false,
                                                height: 51,
                                                fontSize: 34,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                alpha: 1,
                                                align: "center"
                                            },
                                            compId: 33
                                        }, {
                                            type: "TextInput",
                                            props: {
                                                y: 121,
                                                x: 157,
                                                width: 322,
                                                var: "check_ID",
                                                valign: "middle",
                                                type: "text",
                                                text: "203569954",
                                                strokeColor: "#0b3170",
                                                stroke: 3.5,
                                                skin: "noZip/img_bg_1.png",
                                                sizeGrid: "20,20,20,20",
                                                restrict: "0,1,2,3,4,5,6,7,8,9",
                                                name: "",
                                                mouseEnabled: false,
                                                height: 51,
                                                fontSize: 34,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                alpha: 1,
                                                align: "center"
                                            },
                                            compId: 36
                                        }, {
                                            type: "TextInput",
                                            props: {
                                                y: 187,
                                                x: 157,
                                                width: 322,
                                                var: "check_itemInfo",
                                                valign: "middle",
                                                type: "text",
                                                text: "203569954",
                                                strokeColor: "#0b3170",
                                                stroke: 3.5,
                                                skin: "noZip/img_bg_1.png",
                                                sizeGrid: "20,20,20,20",
                                                name: "",
                                                mouseEnabled: false,
                                                height: 51,
                                                fontSize: 34,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                alpha: 1,
                                                align: "center"
                                            },
                                            compId: 34
                                        } ]
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 383,
                                        x: 340,
                                        width: 228,
                                        var: "sure",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,50,0,50",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 4,
                                        labelSize: 34,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "确认",
                                        height: 93,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 17,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 37
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 14,
                                        x: 666,
                                        var: "returnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 39,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            y: 18,
                                            x: 56.5,
                                            isPlaySound: true,
                                            isPlayAni: true,
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 40
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_title_2.png", "noZip/img_bg_15.png", "noZip/img_bg_1.png", "firstPic/img_item_bg.png", "firstPic/icon_skillKb.png", "basePic/btn_yellow.png", "firstPic/btn_close.png" ],
                        loadList3D: []
                    };
                    return ItemGiveDialogUI;
                }(Laya.Dialog);
                hallScene.ItemGiveDialogUI = ItemGiveDialogUI;
                REG("ui.hallScene.ItemGiveDialogUI", ItemGiveDialogUI);
                var JackpotNodeUI = function(_super) {
                    __extends(JackpotNodeUI, _super);
                    function JackpotNodeUI() {
                        return _super.call(this) || this;
                    }
                    JackpotNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(JackpotNodeUI.uiView);
                    };
                    JackpotNodeUI.uiView = {
                        type: "View",
                        props: {
                            width: 400,
                            viewport: "0,0,376,203",
                            height: 203
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 38,
                                skin: "treasureBox/img_topLight.png",
                                scaleY: .85,
                                scaleX: .85,
                                centerX: -4
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 200,
                                width: 260,
                                var: "box_coin",
                                height: 190,
                                anchorX: .5
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: 136,
                                width: 308,
                                skin: "selectRoom/img_caij_1.png",
                                sizeGrid: "0,55,0,55",
                                height: 67,
                                centerX: 0,
                                alpha: 1
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 103,
                                skin: "selectRoom/img_caij_0.png",
                                centerX: 0
                            },
                            compId: 6
                        }, {
                            type: "Label",
                            props: {
                                y: 148,
                                width: 498,
                                var: "text_jackpot",
                                text: "98,000,000",
                                scaleY: .45,
                                scaleX: .45,
                                height: 92,
                                font: "numberFont1",
                                centerX: 0,
                                align: "center"
                            },
                            compId: 7
                        } ],
                        loadList: [ "treasureBox/img_topLight.png", "selectRoom/img_caij_1.png", "selectRoom/img_caij_0.png" ],
                        loadList3D: []
                    };
                    return JackpotNodeUI;
                }(Laya.View);
                hallScene.JackpotNodeUI = JackpotNodeUI;
                REG("ui.hallScene.JackpotNodeUI", JackpotNodeUI);
                var MailDialogUI = function(_super) {
                    __extends(MailDialogUI, _super);
                    function MailDialogUI() {
                        return _super.call(this) || this;
                    }
                    MailDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(MailDialogUI.uiView);
                    };
                    MailDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -408,
                                width: 2445,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                alpha: .7
                            },
                            compId: 72
                        }, {
                            type: "Box",
                            props: {
                                y: 375,
                                x: 815,
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 80,
                            child: [ {
                                type: "Box",
                                props: {
                                    height: 632,
                                    centerY: 17,
                                    centerX: 0
                                },
                                compId: 3,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 19,
                                        x: 0,
                                        width: 1096,
                                        var: "img_nomail",
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "257,52,200,56",
                                        height: 621
                                    },
                                    compId: 5,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 83,
                                            x: 35,
                                            width: 1026,
                                            skin: "noZip/img_bg_8.png",
                                            sizeGrid: "22,20,27,23",
                                            height: 443
                                        },
                                        compId: 7
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 414,
                                            x: 368,
                                            width: 359,
                                            text: "现在还没有邮件哦",
                                            styleSkin: "common/label.png",
                                            strokeColor: "#0b3170",
                                            stroke: 2,
                                            height: 30,
                                            fontSize: 24,
                                            font: "黑体",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 8
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 197,
                                            x: 465,
                                            skin: "hall/img_mail_6.png"
                                        },
                                        compId: 9
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 19,
                                        x: 0,
                                        width: 1096,
                                        visible: false,
                                        var: "img_mail",
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "219,54,212,39",
                                        height: 621
                                    },
                                    compId: 10,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 86,
                                            x: 30,
                                            width: 220,
                                            skin: "noZip/img_bg_8.png",
                                            sizeGrid: "26,25,27,18",
                                            mouseEnabled: true,
                                            height: 445
                                        },
                                        compId: 11
                                    }, {
                                        type: "List",
                                        props: {
                                            y: 87,
                                            x: 30,
                                            width: 236,
                                            var: "lstMail",
                                            spaceY: 3,
                                            repeatX: 1,
                                            mouseEnabled: true,
                                            height: 436
                                        },
                                        compId: 12,
                                        child: [ {
                                            type: "Box",
                                            props: {
                                                y: 43,
                                                x: 115,
                                                width: 218,
                                                renderType: "render",
                                                name: "boxTip",
                                                height: 80,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 13,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    y: 5,
                                                    x: 5,
                                                    width: 195,
                                                    skin: "noZip/btn_1.png",
                                                    sizeGrid: "37,26,23,24",
                                                    name: "imgCommon",
                                                    height: 75
                                                },
                                                compId: 14
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 5,
                                                    x: 5,
                                                    width: 210,
                                                    skin: "common/btn_0.png",
                                                    sizeGrid: "0,32,0,25",
                                                    name: "imgSelect",
                                                    height: 75
                                                },
                                                compId: 15
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 15,
                                                    x: 15,
                                                    width: 50,
                                                    name: "imgState",
                                                    mouseEnabled: false,
                                                    height: 50
                                                },
                                                compId: 16
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 0,
                                                    x: 179,
                                                    skin: "hall/img_mail_0.png",
                                                    name: "imgRed",
                                                    mouseEnabled: false
                                                },
                                                compId: 17
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 40,
                                                    x: 46,
                                                    width: 18,
                                                    skin: "hall/img_mail_1.png",
                                                    name: "imgHasItem",
                                                    mouseEnabled: false,
                                                    height: 26
                                                },
                                                compId: 18
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 27,
                                                    x: 69,
                                                    width: 116,
                                                    strokeColor: "#70200b",
                                                    stroke: 3,
                                                    name: "lblSend",
                                                    mouseEnabled: false,
                                                    height: 26,
                                                    fontSize: 26,
                                                    font: "黑体",
                                                    color: "#ffffff",
                                                    bold: true,
                                                    align: "center"
                                                },
                                                compId: 19
                                            } ]
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 86,
                                            x: 274,
                                            width: 785,
                                            skin: "noZip/img_bg_8.png",
                                            sizeGrid: "20,41,24,39",
                                            mouseEnabled: true,
                                            height: 445,
                                            alpha: 1
                                        },
                                        compId: 23,
                                        child: [ {
                                            type: "Box",
                                            props: {
                                                y: 27,
                                                x: 42
                                            },
                                            compId: 24,
                                            child: [ {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    width: 80,
                                                    text: "标题 ：",
                                                    height: 24,
                                                    fontSize: 24,
                                                    font: "黑体",
                                                    color: "#ffffff",
                                                    align: "left"
                                                },
                                                compId: 25
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: 80,
                                                    width: 400,
                                                    var: "lblTitle",
                                                    text: "标题信息",
                                                    strokeColor: "#70200b",
                                                    stroke: 2,
                                                    overflow: "hidden",
                                                    height: 24,
                                                    fontSize: 24,
                                                    font: "黑体",
                                                    color: "#ffec4c",
                                                    align: "left"
                                                },
                                                compId: 26
                                            } ]
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 66,
                                                x: 42
                                            },
                                            compId: 27,
                                            child: [ {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    width: 90,
                                                    text: "发件人 ：",
                                                    height: 24,
                                                    fontSize: 24,
                                                    font: "黑体",
                                                    color: "#ffffff",
                                                    align: "left"
                                                },
                                                compId: 28
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: 106,
                                                    width: 247,
                                                    var: "lblSender",
                                                    text: "发件人名称",
                                                    strokeColor: "#0b3170",
                                                    stroke: 2,
                                                    overflow: "hidden",
                                                    height: 26,
                                                    fontSize: 24,
                                                    font: "黑体",
                                                    color: "#c2fcfb",
                                                    align: "left"
                                                },
                                                compId: 29
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: 139,
                                                    width: 207,
                                                    var: "lblGm",
                                                    text: "捕鱼侠3D运营团队",
                                                    strokeColor: "#70200b",
                                                    stroke: 2,
                                                    height: 26,
                                                    fontSize: 24,
                                                    font: "黑体",
                                                    color: "#ffec4c",
                                                    align: "left"
                                                },
                                                compId: 30
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: -5,
                                                    x: 99,
                                                    width: 29,
                                                    var: "imgGm",
                                                    skin: "hall/img_mail_2.png",
                                                    height: 35
                                                },
                                                compId: 31
                                            } ]
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 111,
                                                x: 17
                                            },
                                            compId: 32,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    width: 740,
                                                    skin: "noZip/img_bg_8.png",
                                                    sizeGrid: "22,20,27,23",
                                                    height: 165
                                                },
                                                compId: 33
                                            }, {
                                                type: "Text",
                                                props: {
                                                    y: 11,
                                                    x: 23,
                                                    wordWrap: true,
                                                    width: 694,
                                                    var: "lblDesc",
                                                    valign: "top",
                                                    overflow: "scroll",
                                                    leading: 10,
                                                    height: 141,
                                                    fontSize: 26,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    align: "left",
                                                    runtime: "laya.display.Text"
                                                },
                                                compId: 34
                                            } ]
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 293,
                                                x: 37
                                            },
                                            compId: 35,
                                            child: [ {
                                                type: "List",
                                                props: {
                                                    y: 28,
                                                    x: 0,
                                                    var: "lstItem",
                                                    spaceX: 8,
                                                    repeatY: 1,
                                                    repeatX: 5
                                                },
                                                compId: 36,
                                                child: [ {
                                                    type: "Box",
                                                    props: {
                                                        y: 4,
                                                        x: 0,
                                                        width: 84.8,
                                                        renderType: "render",
                                                        height: 84.8
                                                    },
                                                    compId: 37,
                                                    child: [ {
                                                        type: "Panel",
                                                        props: {
                                                            y: 0,
                                                            x: 0,
                                                            width: 84.8,
                                                            height: 84.8
                                                        },
                                                        compId: 38
                                                    }, {
                                                        type: "Image",
                                                        props: {
                                                            y: 0,
                                                            x: 0,
                                                            width: 106,
                                                            skin: "firstPic/img_item_bg.png",
                                                            scaleY: .8,
                                                            scaleX: .8,
                                                            height: 106
                                                        },
                                                        compId: 39
                                                    }, {
                                                        type: "Image",
                                                        props: {
                                                            y: 43,
                                                            x: 42,
                                                            scaleY: .8,
                                                            scaleX: .8,
                                                            name: "imgItem",
                                                            anchorY: .5,
                                                            anchorX: .5
                                                        },
                                                        compId: 40
                                                    }, {
                                                        type: "Image",
                                                        props: {
                                                            y: -6,
                                                            x: -4,
                                                            skin: "hall/img_mail_5.png",
                                                            name: "imgGot"
                                                        },
                                                        compId: 41
                                                    }, {
                                                        type: "Label",
                                                        props: {
                                                            y: 58,
                                                            x: 5,
                                                            width: 94,
                                                            text: "x25",
                                                            styleSkin: "common/label.png",
                                                            strokeColor: "#0b3170",
                                                            stroke: 3,
                                                            scaleY: .8,
                                                            scaleX: .8,
                                                            name: "lblCount",
                                                            height: 24,
                                                            fontSize: 24,
                                                            font: "SimHei",
                                                            color: "#ffffff",
                                                            bold: true,
                                                            align: "center"
                                                        },
                                                        compId: 42
                                                    } ]
                                                } ]
                                            }, {
                                                type: "Button",
                                                props: {
                                                    y: 71,
                                                    x: 597,
                                                    width: 228,
                                                    visible: false,
                                                    var: "btnCellDel",
                                                    stateNum: 1,
                                                    skin: "noZip/btn_green.png",
                                                    sizeGrid: "0,44,0,49",
                                                    labelStrokeColor: "#2c7709",
                                                    labelStroke: 3.5,
                                                    labelSize: 32,
                                                    labelFont: "黑体",
                                                    labelColors: "#ffffff",
                                                    labelBold: true,
                                                    label: "删除",
                                                    height: 93,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 43,
                                                child: [ {
                                                    type: "Script",
                                                    props: {
                                                        aniScaleY: 1,
                                                        aniScaleX: 1,
                                                        runtime: "script/ButtonAni.ts"
                                                    },
                                                    compId: 74
                                                } ]
                                            }, {
                                                type: "Button",
                                                props: {
                                                    y: 71,
                                                    x: 597,
                                                    width: 228,
                                                    var: "btnCellReceive",
                                                    stateNum: 1,
                                                    skin: "basePic/btn_yellow.png",
                                                    sizeGrid: "0,54,0,58",
                                                    labelStrokeColor: "#70200b",
                                                    labelStroke: 3.5,
                                                    labelSize: 32,
                                                    labelFont: "黑体",
                                                    labelColors: "#ffffff",
                                                    labelBold: true,
                                                    labelAlign: "center",
                                                    label: "领取",
                                                    height: 93,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 47,
                                                child: [ {
                                                    type: "Script",
                                                    props: {
                                                        aniScaleY: 1,
                                                        aniScaleX: 1,
                                                        runtime: "script/ButtonAni.ts"
                                                    },
                                                    compId: 75
                                                } ]
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: -5,
                                                    x: 0,
                                                    width: 88,
                                                    var: "lblHasItem",
                                                    text: " 附件：",
                                                    styleSkin: "common/label.png",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3,
                                                    height: 26,
                                                    fontSize: 24,
                                                    color: "#ffffff",
                                                    align: "left"
                                                },
                                                compId: 51
                                            } ]
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 19,
                                                x: 571,
                                                width: 191,
                                                var: "lblTime",
                                                text: "（剩余 29 天）",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.5,
                                                height: 24,
                                                fontSize: 24,
                                                font: "黑体",
                                                color: "#c2fcfb",
                                                align: "right"
                                            },
                                            compId: 52
                                        } ]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 557,
                                            x: 793,
                                            width: 280,
                                            text: "邮件30天后自动删除",
                                            styleSkin: "common/label.png",
                                            strokeColor: "#0b3170",
                                            stroke: 3.4,
                                            height: 26,
                                            fontSize: 26,
                                            font: "黑体",
                                            color: "#c2fcfb",
                                            align: "center"
                                        },
                                        compId: 53
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 563,
                                            x: 110,
                                            width: 300,
                                            var: "btnDel",
                                            stateNum: 1,
                                            skin: "noZip/btn_green.png",
                                            sizeGrid: "0,54,0,55",
                                            scaleY: .7,
                                            scaleX: .7,
                                            pivotY: 36,
                                            pivotX: 111,
                                            mouseEnabled: true,
                                            labelStrokeColor: "#2c7709",
                                            labelStroke: 5,
                                            labelSize: 40,
                                            labelFont: "黑体",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "一键删除",
                                            height: 93
                                        },
                                        compId: 55,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                aniScaleY: .7,
                                                aniScaleX: .7,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 76
                                        } ]
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 570,
                                            x: 365.5,
                                            width: 300,
                                            var: "btnReceive",
                                            stateNum: 1,
                                            skin: "basePic/btn_yellow.png",
                                            sizeGrid: "0,50,0,53",
                                            scaleY: .7,
                                            scaleX: .7,
                                            mouseEnabled: true,
                                            labelStrokeColor: "#70200b",
                                            labelStroke: 5,
                                            labelSize: 40,
                                            labelFont: "黑体",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "一键领取",
                                            height: 93,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 60,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                aniScaleY: .7,
                                                aniScaleX: .7,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 77
                                        } ]
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 14,
                                        x: -8,
                                        width: 1112,
                                        skin: "noZip/img_title_3.png",
                                        sizeGrid: "0,265,0,265",
                                        height: 83
                                    },
                                    compId: 64
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 8,
                                        x: 290,
                                        width: 523,
                                        skin: "noZip/img_title_2.png",
                                        height: 69
                                    },
                                    compId: 65,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 13,
                                            x: 211,
                                            width: 100,
                                            text: "邮件",
                                            styleSkin: "common/label.png",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            height: 42,
                                            fontSize: 40,
                                            font: "黑体",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 66
                                    } ]
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 20,
                                    var: "btnBack",
                                    stateNum: 1,
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 81,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: 1,
                                        aniScaleX: 1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 82
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 83,
                                keyframes: {
                                    isPlaySound: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 83,
                                        key: "isPlaySound",
                                        index: 0
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_bg_8.png", "common/label.png", "hall/img_mail_6.png", "noZip/btn_1.png", "common/btn_0.png", "hall/img_mail_0.png", "hall/img_mail_1.png", "hall/img_mail_2.png", "firstPic/img_item_bg.png", "hall/img_mail_5.png", "noZip/btn_green.png", "basePic/btn_yellow.png", "noZip/img_title_3.png", "noZip/img_title_2.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return MailDialogUI;
                }(Laya.Dialog);
                hallScene.MailDialogUI = MailDialogUI;
                REG("ui.hallScene.MailDialogUI", MailDialogUI);
                var MonthCardDlgUI = function(_super) {
                    __extends(MonthCardDlgUI, _super);
                    function MonthCardDlgUI() {
                        return _super.call(this) || this;
                    }
                    MonthCardDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(MonthCardDlgUI.uiView);
                    };
                    MonthCardDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                x: -1685,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Box",
                                props: {
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 69,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 187,
                                        x: 436,
                                        width: 758,
                                        skin: "monthCard/img_yuek_0.png",
                                        sizeGrid: "0,30,0,30",
                                        height: 453,
                                        centerX: 0
                                    },
                                    compId: 33,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 82,
                                            width: 719,
                                            skin: "monthCard/img_yuke_12.png",
                                            sizeGrid: "0,72,0,72",
                                            height: 188,
                                            centerX: 0
                                        },
                                        compId: 34
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 257,
                                            width: 431,
                                            skin: "monthCard/img_yuek_5.png",
                                            sizeGrid: "0,50,0,50",
                                            height: 47,
                                            centerX: 0
                                        },
                                        compId: 37,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                width: 356,
                                                var: "lblDesc",
                                                valign: "middle",
                                                strokeColor: "#004b6e",
                                                stroke: 2,
                                                height: 32,
                                                fontSize: 20,
                                                font: "SimHei",
                                                color: "#b3f3ff",
                                                centerY: -4,
                                                centerX: 0,
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 55
                                        } ]
                                    }, {
                                        type: "Label",
                                        props: {
                                            width: 356,
                                            var: "lblTime",
                                            valign: "middle",
                                            strokeColor: "#004b6e",
                                            stroke: 4,
                                            height: 32,
                                            fontSize: 20,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            centerY: -196,
                                            centerX: 0,
                                            align: "center"
                                        },
                                        compId: 56
                                    }, {
                                        type: "Label",
                                        props: {
                                            width: 672,
                                            valign: "middle",
                                            text: "购买成功后30天内 每天可以领取以下特权奖励!",
                                            strokeColor: "#4c0700",
                                            stroke: 4,
                                            height: 32,
                                            fontSize: 20,
                                            font: "SimHei",
                                            color: "#ffec4c",
                                            centerY: -161,
                                            centerX: 0,
                                            align: "center"
                                        },
                                        compId: 57
                                    }, {
                                        type: "List",
                                        props: {
                                            y: 107,
                                            width: 541,
                                            var: "lstItem",
                                            scaleY: 1.2,
                                            scaleX: 1.2,
                                            repeatY: 1,
                                            repeatX: 2,
                                            renderType: "render",
                                            height: 119
                                        },
                                        compId: 58,
                                        child: [ {
                                            type: "Box",
                                            props: {
                                                y: 4,
                                                x: 0,
                                                width: 146,
                                                renderType: "render",
                                                name: "render",
                                                height: 84
                                            },
                                            compId: 60,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    y: -15,
                                                    x: 66,
                                                    skin: "monthCard/img_yuek_3.png",
                                                    name: "imgMask"
                                                },
                                                compId: 66
                                            }, {
                                                type: "Panel",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    width: 84.8,
                                                    height: 84.8
                                                },
                                                compId: 61
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    width: 106,
                                                    skin: "firstPic/img_item_bg.png",
                                                    scaleY: .8,
                                                    scaleX: .8,
                                                    height: 106
                                                },
                                                compId: 62
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 43,
                                                    x: 42,
                                                    scaleY: .8,
                                                    scaleX: .8,
                                                    name: "imgItem",
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 63
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 92,
                                                    x: 5,
                                                    width: 94,
                                                    styleSkin: "common/label.png",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3,
                                                    scaleY: .8,
                                                    scaleX: .8,
                                                    name: "lblCount",
                                                    height: 24,
                                                    fontSize: 24,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    bold: true
                                                },
                                                compId: 65
                                            } ]
                                        } ]
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 134,
                                        x: 264,
                                        skin: "monthCard/img_yuek_6.png"
                                    },
                                    compId: 27
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 134,
                                        x: 221,
                                        width: 820,
                                        skin: "monthCard/img_yuek_4.png",
                                        sizeGrid: "0,87,0,75",
                                        height: 524
                                    },
                                    compId: 28
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 100,
                                        x: 351,
                                        skin: "common/img_title_6.png"
                                    },
                                    compId: 29,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: -39,
                                            x: 421,
                                            skin: "gift/img_star1.png"
                                        },
                                        compId: 31
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: -23,
                                            x: 57,
                                            skin: "gift/img_star2.png"
                                        },
                                        compId: 32
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 138,
                                            skin: "monthCard/img_yuek_11.png",
                                            centerX: 0
                                        },
                                        compId: 30
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 541,
                                        x: 212,
                                        skin: "monthCard/img_yuek_10.png"
                                    },
                                    compId: 39
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 51.5,
                                        x: 915,
                                        skin: "monthCard/img_yuek_9.png",
                                        scaleY: .7,
                                        scaleX: .7
                                    },
                                    compId: 41
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 556,
                                        x: 501,
                                        width: 222,
                                        var: "btnGet",
                                        stateNum: 1,
                                        skin: "noZip/btn_green.png",
                                        sizeGrid: "0,52,0,49",
                                        labelStrokeColor: "#226306",
                                        labelStroke: 4,
                                        labelSize: 34,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "免费领取",
                                        height: 90,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 44,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            isPlaySound: true,
                                            isPlayAni: true,
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 45
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 556,
                                        x: 800,
                                        width: 222,
                                        var: "btnReBuy",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,48,0,50",
                                        scaleY: 1,
                                        scaleX: 1,
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 4,
                                        labelSize: 34,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        height: 90,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 49,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            y: 1,
                                            x: 0,
                                            isPlaySound: true,
                                            isPlayAni: true,
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 50
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 557,
                                        width: 222,
                                        var: "btnBuy",
                                        stateNum: 1,
                                        skin: "common/btn_blue.png",
                                        sizeGrid: "0,42,0,46",
                                        labelStrokeColor: "#004b6e",
                                        labelStroke: 4,
                                        labelSize: 34,
                                        labelFont: "黑体",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        height: 90,
                                        gray: false,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 53,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 54
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 54,
                                        x: 1220,
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        gray: false,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 67,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 68
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 557,
                                        x: 643,
                                        width: 222,
                                        visible: false,
                                        var: "btnGetIos",
                                        stateNum: 1,
                                        skin: "noZip/btn_green.png",
                                        sizeGrid: "0,52,0,49",
                                        labelStrokeColor: "#226306",
                                        labelStroke: 4,
                                        labelSize: 34,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "免费领取",
                                        height: 90,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 94,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            isPlaySound: true,
                                            isPlayAni: true,
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 95
                                    } ]
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 36,
                                    x: 203,
                                    var: "btnBack",
                                    stateNum: 1,
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 96,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: 1,
                                        aniScaleX: 1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 97
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "monthCard/img_yuek_0.png", "monthCard/img_yuke_12.png", "monthCard/img_yuek_5.png", "monthCard/img_yuek_3.png", "firstPic/img_item_bg.png", "common/label.png", "monthCard/img_yuek_6.png", "monthCard/img_yuek_4.png", "common/img_title_6.png", "gift/img_star1.png", "gift/img_star2.png", "monthCard/img_yuek_11.png", "monthCard/img_yuek_10.png", "monthCard/img_yuek_9.png", "noZip/btn_green.png", "basePic/btn_yellow.png", "common/btn_blue.png", "firstPic/btn_close.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return MonthCardDlgUI;
                }(Laya.Dialog);
                hallScene.MonthCardDlgUI = MonthCardDlgUI;
                REG("ui.hallScene.MonthCardDlgUI", MonthCardDlgUI);
                var NewRoomChangeDlgUI = function(_super) {
                    __extends(NewRoomChangeDlgUI, _super);
                    function NewRoomChangeDlgUI() {
                        return _super.call(this) || this;
                    }
                    NewRoomChangeDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(NewRoomChangeDlgUI.uiView);
                    };
                    NewRoomChangeDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            skin: "mian/yk_zi.png",
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 375,
                                x: 815,
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -75,
                                    x: -408,
                                    width: 2445,
                                    var: "black_bg",
                                    skin: "basePic/img_black_bg.png",
                                    height: 900,
                                    alpha: .7
                                },
                                compId: 20
                            }, {
                                type: "Box",
                                props: {
                                    width: 460,
                                    var: "boxSpine",
                                    height: 656,
                                    centerY: 8,
                                    centerX: 0
                                },
                                compId: 8,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 406,
                                        x: 157,
                                        visible: false,
                                        var: "imgLabel",
                                        centerX: -12
                                    },
                                    compId: 13
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 575,
                                        width: 254,
                                        var: "btnGo",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "40,50,50,50",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 3.5,
                                        labelSize: 30,
                                        labelFont: "黑体",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "赢取更多奖券",
                                        height: 95,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 14,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 17
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 16.5,
                                        x: 2,
                                        skin: "common/img_title_4.png"
                                    },
                                    compId: 16,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 9,
                                            var: "imgSkin",
                                            skin: "common/img_text_0.png",
                                            centerX: 0
                                        },
                                        compId: 15
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 628,
                                        var: "lblTime",
                                        text: "15秒后，跳转新渔场",
                                        strokeColor: "#003b6e",
                                        stroke: 2,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#b3f3ff",
                                        centerX: 0
                                    },
                                    compId: 21
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 20,
                                    x: 0,
                                    var: "btnBack",
                                    stateNum: 1,
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 25,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: 1,
                                        aniScaleX: 1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 26
                                } ]
                            } ]
                        } ],
                        loadList: [ "mian/yk_zi.png", "basePic/img_black_bg.png", "basePic/btn_yellow.png", "common/img_title_4.png", "common/img_text_0.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return NewRoomChangeDlgUI;
                }(Laya.Dialog);
                hallScene.NewRoomChangeDlgUI = NewRoomChangeDlgUI;
                REG("ui.hallScene.NewRoomChangeDlgUI", NewRoomChangeDlgUI);
                var NoticeDialogUI = function(_super) {
                    __extends(NoticeDialogUI, _super);
                    function NoticeDialogUI() {
                        return _super.call(this) || this;
                    }
                    NoticeDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(NoticeDialogUI.uiView);
                    };
                    NoticeDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            y: 375,
                            x: 815,
                            width: 1630,
                            popupCenter: true,
                            layoutEnabled: true,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 760,
                            centerY: 0,
                            centerX: 0,
                            anchorY: .5,
                            anchorX: .5,
                            alpha: 1
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -75,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 52
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 61,
                            child: [ {
                                type: "Image",
                                props: {
                                    width: 1096,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "46,55,61,55",
                                    height: 621,
                                    centerY: 25,
                                    centerX: 0
                                },
                                compId: 10,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: -11,
                                        x: -8
                                    },
                                    compId: 38,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 6,
                                            width: 1112,
                                            skin: "noZip/img_title_3.png",
                                            sizeGrid: "0,266,0,266",
                                            height: 83
                                        },
                                        compId: 11
                                    }, {
                                        type: "Image",
                                        props: {
                                            x: 286,
                                            width: 523,
                                            skin: "noZip/img_title_2.png",
                                            height: 69,
                                            centerX: 0
                                        },
                                        compId: 12
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 3,
                                            x: 8,
                                            width: 96,
                                            valign: "middle",
                                            text: "公告",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            height: 55,
                                            fontSize: 40,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            centerX: 0,
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 13
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 86,
                                        x: 269,
                                        width: 801,
                                        skin: "noZip/img_bg_8.png",
                                        sizeGrid: "31,25,28,28",
                                        height: 512
                                    },
                                    compId: 40
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 86,
                                        x: 27,
                                        width: 225,
                                        skin: "noZip/img_bg_8.png",
                                        sizeGrid: "31,25,28,28",
                                        height: 512
                                    },
                                    compId: 41
                                }, {
                                    type: "List",
                                    props: {
                                        y: 89,
                                        x: 24,
                                        width: 225,
                                        var: "lstNotice",
                                        spaceY: 5,
                                        height: 501
                                    },
                                    compId: 47,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 48,
                                            x: 111,
                                            width: 185,
                                            renderType: "render",
                                            height: 78,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 64,
                                        child: [ {
                                            type: "Button",
                                            props: {
                                                y: 39,
                                                x: 100,
                                                width: 200,
                                                strokeColors: "#0b3170",
                                                stateNum: 1,
                                                skin: "common/btn_0.png",
                                                sizeGrid: "0,39,0,22",
                                                name: "btnTitle",
                                                left: 0,
                                                labelStroke: 4,
                                                labelSize: 30,
                                                labelFont: "SimHei",
                                                labelColors: "#ffffff",
                                                labelBold: true,
                                                labelAlign: "center",
                                                height: 75,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 66
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 5,
                                                x: 169,
                                                skin: "hall/img_mail_0.png",
                                                name: "imgPoint"
                                            },
                                            compId: 63
                                        } ]
                                    } ]
                                }, {
                                    type: "Panel",
                                    props: {
                                        y: 106,
                                        x: 303,
                                        width: 736,
                                        var: "panelText",
                                        height: 468
                                    },
                                    compId: 51,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 7,
                                            x: 0,
                                            width: 493,
                                            var: "lblTItle",
                                            strokeColor: "#70200b",
                                            stroke: 4,
                                            height: 26,
                                            fontSize: 24,
                                            font: "SimHei",
                                            color: "#ffec4c",
                                            bold: true
                                        },
                                        compId: 48
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 8,
                                            x: 523,
                                            width: 192,
                                            visible: false,
                                            var: "lblTime",
                                            text: "2018/5/24 14:00",
                                            height: 25,
                                            fontSize: 24,
                                            font: "SimHei",
                                            color: "#c2fcfb",
                                            bold: true,
                                            align: "right"
                                        },
                                        compId: 49
                                    }, {
                                        type: "Text",
                                        props: {
                                            y: 55,
                                            x: 1,
                                            wordWrap: true,
                                            width: 735,
                                            var: "lblDesc",
                                            valign: "top",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            overflow: "scroll",
                                            mouseEnabled: true,
                                            height: 413,
                                            fontSize: 24,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "left",
                                            runtime: "laya.display.Text"
                                        },
                                        compId: 50
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 83.5,
                                        x: 269.5,
                                        width: 801,
                                        var: "box_dzbq",
                                        height: 512
                                    },
                                    compId: 73,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 79,
                                            x: 301,
                                            skin: "hall/img_dzbq.png"
                                        },
                                        compId: 72
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 22,
                                            x: 271,
                                            width: 258,
                                            var: "label_dztop",
                                            valign: "middle",
                                            text: "电子标签",
                                            strokeColor: "#004b6e",
                                            stroke: 3.5,
                                            height: 36,
                                            fontSize: 34,
                                            font: "SimHei",
                                            color: "#45c4ff",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 71
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 342,
                                            x: 28,
                                            width: 231,
                                            var: "label_bqtitle",
                                            valign: "middle",
                                            text: "电子标签地址：",
                                            height: 34,
                                            fontSize: 34,
                                            font: "SimHei",
                                            color: "#07a7db",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 74
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 388,
                                            x: 29,
                                            wordWrap: true,
                                            width: 744,
                                            var: "label_bqtext",
                                            valign: "top",
                                            text: "电子标签地址：",
                                            strokeColor: "#004b6e",
                                            stroke: 3,
                                            height: 60,
                                            fontSize: 24,
                                            font: "SimHei",
                                            color: "#b3f3ff",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 75
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    var: "btnClose",
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 69
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_title_3.png", "noZip/img_title_2.png", "noZip/img_bg_8.png", "common/btn_0.png", "hall/img_mail_0.png", "hall/img_dzbq.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return NoticeDialogUI;
                }(Laya.Dialog);
                hallScene.NoticeDialogUI = NoticeDialogUI;
                REG("ui.hallScene.NoticeDialogUI", NoticeDialogUI);
                var OutNoticeDlgUI = function(_super) {
                    __extends(OutNoticeDlgUI, _super);
                    function OutNoticeDlgUI() {
                        return _super.call(this) || this;
                    }
                    OutNoticeDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(OutNoticeDlgUI.uiView);
                    };
                    OutNoticeDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 2445,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1125,
                                centerY: 0,
                                centerX: 0,
                                alpha: .7
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 12,
                            child: [ {
                                type: "Image",
                                props: {
                                    width: 680,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "40,40,59,51",
                                    height: 480,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 8,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 29,
                                        x: 0,
                                        width: 680,
                                        var: "box_notice",
                                        height: 423
                                    },
                                    compId: 17,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            y: 356,
                                            x: 340,
                                            width: 228,
                                            var: "btn_ok",
                                            stateNum: 1,
                                            skin: "basePic/btn_yellow.png",
                                            sizeGrid: "0,45,0,45",
                                            labelStrokeColor: "#70200b",
                                            labelStroke: 4,
                                            labelSize: 32,
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            label: "确定",
                                            height: 93,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 13
                                    }, {
                                        type: "Text",
                                        props: {
                                            y: 56,
                                            x: 47,
                                            wordWrap: true,
                                            width: 586,
                                            var: "text_body",
                                            valign: "top",
                                            vScrollBarSkin: "comp/vscrollbar_slider.png",
                                            text: "\\合理安排时间，享受健康生活。身。",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            overflow: "scroll",
                                            leading: 10,
                                            height: 243,
                                            fontSize: 24,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "left",
                                            runtime: "laya.display.Text"
                                        },
                                        compId: 43
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 125,
                                    skin: "noZip/img_title_2.png",
                                    centerX: 0
                                },
                                compId: 5,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 14,
                                        x: 79,
                                        width: 235,
                                        var: "label_top",
                                        valign: "middle",
                                        text: "公告",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 40,
                                        fontSize: 40,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 9
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "basePic/btn_yellow.png", "comp/vscrollbar_slider.png", "noZip/img_title_2.png" ],
                        loadList3D: []
                    };
                    return OutNoticeDlgUI;
                }(Laya.Dialog);
                hallScene.OutNoticeDlgUI = OutNoticeDlgUI;
                REG("ui.hallScene.OutNoticeDlgUI", OutNoticeDlgUI);
                var PackageDialogUI = function(_super) {
                    __extends(PackageDialogUI, _super);
                    function PackageDialogUI() {
                        return _super.call(this) || this;
                    }
                    PackageDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(PackageDialogUI.uiView);
                    };
                    PackageDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            autoDestroyAtClosed: true
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 375,
                                x: 815,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 68
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 11,
                            child: [ {
                                type: "Box",
                                props: {
                                    presetID: 1,
                                    mouseThrough: true,
                                    mouseEnabled: true,
                                    centerY: 23,
                                    centerX: 0,
                                    y: 0,
                                    x: 0,
                                    width: 1099,
                                    name: "dialogTitle",
                                    isPresetRoot: true,
                                    height: 621
                                },
                                compId: 13,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        presetID: 2,
                                        width: 1099,
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "0,42,0,53",
                                        height: 621
                                    },
                                    compId: 9
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -5,
                                        x: -8,
                                        presetID: 3,
                                        width: 1115,
                                        skin: "noZip/img_title_3.png",
                                        sizeGrid: "0,261,0,256",
                                        height: 83
                                    },
                                    compId: 10
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -11,
                                        x: 288,
                                        width: 523,
                                        skin: "noZip/img_title_2.png",
                                        sizeGrid: "0,191,0,194",
                                        height: 69
                                    },
                                    compId: 19,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 14,
                                            x: 205,
                                            width: 113,
                                            valign: "middle",
                                            text: "背包",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            height: 40,
                                            fontSize: 40,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 21
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 85,
                                        x: 38,
                                        width: 569,
                                        skin: "common/img_bg_6.png",
                                        sizeGrid: "25,25,25,25",
                                        height: 512
                                    },
                                    compId: 22,
                                    child: [ {
                                        type: "List",
                                        props: {
                                            y: 4,
                                            x: 4,
                                            width: 562,
                                            var: "list_items",
                                            vScrollBarSkin: "comp/vscrollbar_slider.png",
                                            spaceY: 2,
                                            spaceX: 14,
                                            repeatX: 4,
                                            height: 505
                                        },
                                        compId: 23,
                                        child: [ {
                                            type: "Box",
                                            props: {
                                                y: 62,
                                                x: 105,
                                                width: 109,
                                                renderType: "render",
                                                height: 124,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 63,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    stateNum: 1,
                                                    skin: "firstPic/img_item_bg.png",
                                                    mouseEnabled: false,
                                                    centerY: 0,
                                                    centerX: 0,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 24
                                            }, {
                                                type: "Image",
                                                props: {
                                                    width: 120,
                                                    skin: "common/img_guang_3.png",
                                                    sizeGrid: "40,40,40,40",
                                                    name: "itemSelect",
                                                    mouseEnabled: false,
                                                    height: 119,
                                                    centerY: -3,
                                                    centerX: 0
                                                },
                                                compId: 26
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 62,
                                                    x: 55,
                                                    skin: "iconAndSkin/icon_MonthlyCard.png",
                                                    name: "itemImage",
                                                    mouseEnabled: false,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 30
                                            }, {
                                                type: "Box",
                                                props: {
                                                    width: 94,
                                                    name: "box_tools",
                                                    mouseEnabled: false,
                                                    height: 30,
                                                    centerY: 30,
                                                    centerX: -2
                                                },
                                                compId: 35,
                                                child: [ {
                                                    type: "Image",
                                                    props: {
                                                        y: 15,
                                                        x: 47,
                                                        skin: "package/img_beib_3.png",
                                                        scaleY: .67,
                                                        scaleX: .67,
                                                        name: "image_itemFree",
                                                        anchorY: .5,
                                                        anchorX: .5
                                                    },
                                                    compId: 27
                                                }, {
                                                    type: "Label",
                                                    props: {
                                                        y: 6,
                                                        x: 6,
                                                        valign: "middle",
                                                        text: "即将到期",
                                                        strokeColor: "#0b3170",
                                                        stroke: 4,
                                                        name: "text_expire",
                                                        fontSize: 20,
                                                        font: "SimHei",
                                                        color: "#ff5551",
                                                        bold: true,
                                                        align: "center"
                                                    },
                                                    compId: 33
                                                }, {
                                                    type: "Label",
                                                    props: {
                                                        width: 92,
                                                        valign: "middle",
                                                        text: "x200",
                                                        strokeColor: "#0b3170",
                                                        stroke: 4,
                                                        name: "text_itemNum",
                                                        height: 28,
                                                        fontSize: 28,
                                                        font: "SimHei",
                                                        color: "#ffffff",
                                                        bold: true,
                                                        align: "right"
                                                    },
                                                    compId: 34
                                                } ]
                                            }, {
                                                type: "Script",
                                                props: {
                                                    y: 45,
                                                    x: 48,
                                                    isSetSelf: true,
                                                    isPlaySound: true,
                                                    isPlayAni: true,
                                                    runtime: "script/ButtonAni.ts"
                                                },
                                                compId: 58
                                            } ]
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 84,
                                        x: 626,
                                        width: 436,
                                        var: "shuXinPanel",
                                        height: 513
                                    },
                                    compId: 46,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 1,
                                            width: 435,
                                            skin: "noZip/img_bg_15.png",
                                            sizeGrid: "25,75,25,75",
                                            mouseEnabled: false,
                                            height: 513
                                        },
                                        compId: 36
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 44,
                                            x: 25,
                                            width: 106,
                                            skin: "firstPic/img_item_bg.png",
                                            mouseEnabled: false,
                                            height: 106
                                        },
                                        compId: 37,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 53,
                                                x: 53,
                                                var: "image_itemIcon",
                                                skin: "iconAndSkin/icon_MonthlyCard.png",
                                                mouseEnabled: false,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 57
                                        } ]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 61,
                                            x: 146,
                                            var: "text_itemName",
                                            valign: "middle",
                                            text: "月卡",
                                            strokeColor: "#70200b",
                                            stroke: 4,
                                            mouseEnabled: false,
                                            fontSize: 40,
                                            font: "SimHei",
                                            color: "#ffec4c",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 38
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 74,
                                            width: 42,
                                            var: "text_haveDay",
                                            valign: "middle",
                                            text: "25",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            right: 80,
                                            mouseEnabled: false,
                                            height: 25,
                                            fontSize: 26,
                                            font: "SimHei",
                                            color: "#68ff3f",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 40
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 73,
                                            var: "lblDesc",
                                            valign: "middle",
                                            text: "( 剩余   天 )",
                                            right: 30,
                                            mouseEnabled: false,
                                            fontSize: 26,
                                            font: "SimHei",
                                            color: "#0b3170",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 39
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 114,
                                            x: 146,
                                            width: 276,
                                            var: "text_expireTime",
                                            valign: "middle",
                                            text: "拥有:",
                                            mouseEnabled: false,
                                            height: 25,
                                            fontSize: 25,
                                            font: "SimHei",
                                            color: "#0b3170",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 41
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 114,
                                            x: 215,
                                            width: 93,
                                            var: "text_haveNum",
                                            valign: "middle",
                                            text: "25",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            height: 25,
                                            fontSize: 25,
                                            font: "SimHei",
                                            color: "#91fe31",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 71
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 178,
                                            x: 24,
                                            width: 388,
                                            skin: "noZip/img_bg_1.png",
                                            sizeGrid: "22,22,22,22",
                                            mouseEnabled: false,
                                            height: 178
                                        },
                                        compId: 42
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 200,
                                            x: 46,
                                            wordWrap: true,
                                            width: 348,
                                            var: "text_itemDescribe",
                                            valign: "top",
                                            text: "描述描述描述描述描述描述描述描述描述描述描述描述描述描述描述描述描述描述描述描述描述描述",
                                            mouseEnabled: false,
                                            leading: 10,
                                            height: 139,
                                            fontSize: 26,
                                            font: "SimHei",
                                            color: "#0b3170",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 43
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 423,
                                            x: 219,
                                            width: 228,
                                            var: "btn_item",
                                            stateNum: 1,
                                            skin: "noZip/btn_green.png",
                                            sizeGrid: "0,50,0,50",
                                            labelStrokeColor: "#226306",
                                            labelStroke: 4,
                                            labelSize: 34,
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "续费",
                                            height: 93,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 44,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                isPlaySound: true,
                                                isPlayAni: true,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 59
                                        } ]
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    var: "returnBack",
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 70
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 54,
                                keyframes: {
                                    y: [ {
                                        value: 245,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 54,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 244,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 54,
                                        key: "y",
                                        index: 3
                                    }, {
                                        value: 220,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 54,
                                        key: "y",
                                        index: 29
                                    }, {
                                        value: 219,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 54,
                                        key: "y",
                                        index: 32
                                    }, {
                                        value: 241,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 54,
                                        key: "y",
                                        index: 58
                                    }, {
                                        value: 244,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 54,
                                        key: "y",
                                        index: 62
                                    } ]
                                }
                            }, {
                                target: 53,
                                keyframes: {
                                    y: [ {
                                        value: 199,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 53,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 198,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 53,
                                        key: "y",
                                        index: 3
                                    }, {
                                        value: 174,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 53,
                                        key: "y",
                                        index: 29
                                    }, {
                                        value: 173,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 53,
                                        key: "y",
                                        index: 32
                                    }, {
                                        value: 195,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 53,
                                        key: "y",
                                        index: 58
                                    }, {
                                        value: 198,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 53,
                                        key: "y",
                                        index: 62
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 2
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "prefab/dialogTitle.prefab", "noZip/img_title_2.png", "common/img_bg_6.png", "comp/vscrollbar_slider.png", "firstPic/img_item_bg.png", "common/img_guang_3.png", "iconAndSkin/icon_MonthlyCard.png", "package/img_beib_3.png", "noZip/img_bg_15.png", "noZip/img_bg_1.png", "noZip/btn_green.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return PackageDialogUI;
                }(Laya.Dialog);
                hallScene.PackageDialogUI = PackageDialogUI;
                REG("ui.hallScene.PackageDialogUI", PackageDialogUI);
                var PlayerDataDialogUI = function(_super) {
                    __extends(PlayerDataDialogUI, _super);
                    function PlayerDataDialogUI() {
                        return _super.call(this) || this;
                    }
                    PlayerDataDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(PlayerDataDialogUI.uiView);
                    };
                    PlayerDataDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            y: 0,
                            x: 0,
                            width: 1630,
                            popupCenter: false,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 375,
                                x: 667,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 31
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 57,
                            child: [ {
                                type: "Image",
                                props: {
                                    width: 681,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "37,59,97,62",
                                    mouseEnabled: true,
                                    height: 480,
                                    centerY: 9,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 4,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -10,
                                        x: 141,
                                        width: 400,
                                        skin: "noZip/img_title_2.png",
                                        sizeGrid: "0,196,0,196",
                                        height: 65,
                                        centerX: 0
                                    },
                                    compId: 27
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 20,
                                        x: 339,
                                        width: 205,
                                        valign: "middle",
                                        text: "个人信息",
                                        strokeColor: "#0b3170",
                                        stroke: 3.8,
                                        layoutEnabled: true,
                                        height: 55,
                                        fontSize: 40,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: -2,
                                        bold: true,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 28
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 261,
                                        x: 341,
                                        width: 634,
                                        skin: "noZip/img_bg_15.png",
                                        sizeGrid: "34,71,48,71",
                                        height: 390,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 30
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 89,
                                        x: 65,
                                        skin: "firstPic/img_item_bg.png",
                                        alpha: 1
                                    },
                                    compId: 43,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 6,
                                            x: 8,
                                            width: 90,
                                            var: "imgHead",
                                            skin: "common/img_toux.png",
                                            height: 90
                                        },
                                        compId: 41,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                skin: "firstPic/img_mask_0.png",
                                                renderType: "mask"
                                            },
                                            compId: 42
                                        } ]
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 177,
                                        x: 57,
                                        skin: "hall/img_wanj_3.png"
                                    },
                                    compId: 69,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 5,
                                            x: 65,
                                            width: 95,
                                            var: "lblVipLevel",
                                            scaleY: .284,
                                            scaleX: .284,
                                            height: 55,
                                            align: "center"
                                        },
                                        compId: 19
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 7,
                                            x: 29,
                                            skin: "common/img_vip.png",
                                            scaleY: .25,
                                            scaleX: .25
                                        },
                                        compId: 84
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 96,
                                        x: 218,
                                        width: 413,
                                        skin: "noZip/img_bg_1.png",
                                        sizeGrid: "0,20,0,20",
                                        height: 50
                                    },
                                    compId: 29,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 10,
                                            x: 5,
                                            width: 403,
                                            var: "lblName",
                                            valign: "middle",
                                            strokeColor: "#5e2100",
                                            stroke: 4,
                                            overflow: "hidden",
                                            mouseEnabled: true,
                                            height: 30,
                                            fontSize: 30,
                                            font: "SimHei",
                                            color: "#ffec4c",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 5
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 199,
                                        x: 227,
                                        width: 557,
                                        skin: "noZip/img_bg_1.png",
                                        sizeGrid: "0,20,0,20",
                                        scaleY: .7,
                                        scaleX: .7,
                                        height: 50
                                    },
                                    compId: 33,
                                    child: [ {
                                        type: "Text",
                                        props: {
                                            y: 3,
                                            x: 49,
                                            wordWrap: true,
                                            width: 336,
                                            var: "lblMoney",
                                            valign: "top",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            scaleY: 1.43,
                                            scaleX: 1.43,
                                            height: 30,
                                            fontSize: 30,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "center",
                                            runtime: "laya.display.Text"
                                        },
                                        compId: 10
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: -6,
                                            x: -5,
                                            wordWrap: true,
                                            valign: "middle",
                                            skin: "firstPic/icon_goldCoin.png",
                                            color: "#000000",
                                            bgColor: "#ffd600",
                                            align: "center"
                                        },
                                        compId: 9
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 261,
                                        x: 240,
                                        width: 536,
                                        skin: "noZip/img_bg_1.png",
                                        sizeGrid: "0,23,0,20",
                                        scaleY: .7,
                                        scaleX: .7,
                                        height: 50
                                    },
                                    compId: 39,
                                    child: [ {
                                        type: "Text",
                                        props: {
                                            y: 4,
                                            x: 28,
                                            wordWrap: true,
                                            width: 336,
                                            var: "lblDimond",
                                            valign: "top",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            scaleY: 1.43,
                                            scaleX: 1.43,
                                            height: 35,
                                            fontSize: 30,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "center",
                                            runtime: "laya.display.Text"
                                        },
                                        compId: 14
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: -28,
                                            x: -38,
                                            wordWrap: true,
                                            valign: "middle",
                                            skin: "firstPic/ticket.png",
                                            color: "#000000",
                                            bgColor: "#00fff4",
                                            align: "center"
                                        },
                                        compId: 13
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 14,
                                        x: 1142,
                                        var: "btnClose",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        right: -18,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 71,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 80
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 286,
                                        x: 118,
                                        var: "btnCopy",
                                        stateNum: 1,
                                        skin: "common/btn_blue.png",
                                        sizeGrid: "0,51,0,47",
                                        scaleY: .5,
                                        scaleX: .5,
                                        labelStrokeColor: "#0b3170",
                                        labelStroke: 6,
                                        labelSize: 48,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        label: "复制",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 72,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: .5,
                                            aniScaleX: .5,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 79
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 240,
                                        x: 118,
                                        width: 118,
                                        var: "lblId",
                                        valign: "middle",
                                        text: "ID:8",
                                        mouseEnabled: false,
                                        height: 22,
                                        fontSize: 22,
                                        font: "SimHei",
                                        color: "#016288",
                                        bold: true,
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 44
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_title_2.png", "noZip/img_bg_15.png", "firstPic/img_item_bg.png", "common/img_toux.png", "firstPic/img_mask_0.png", "hall/img_wanj_3.png", "common/img_vip.png", "noZip/img_bg_1.png", "firstPic/icon_goldCoin.png", "firstPic/ticket.png", "firstPic/btn_close.png", "common/btn_blue.png" ],
                        loadList3D: []
                    };
                    return PlayerDataDialogUI;
                }(Laya.Dialog);
                hallScene.PlayerDataDialogUI = PlayerDataDialogUI;
                REG("ui.hallScene.PlayerDataDialogUI", PlayerDataDialogUI);
                var RankingListDialogUI = function(_super) {
                    __extends(RankingListDialogUI, _super);
                    function RankingListDialogUI() {
                        return _super.call(this) || this;
                    }
                    RankingListDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(RankingListDialogUI.uiView);
                    };
                    RankingListDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 2
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 137,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 1096,
                                    height: 644,
                                    centerY: 23,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 138,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 11,
                                        width: 1096,
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "235,47,235,56",
                                        height: 621
                                    },
                                    compId: 5,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 152,
                                            x: 36,
                                            width: 1025,
                                            skin: "noZip/img_bg_13.png",
                                            sizeGrid: "39,42,36,31",
                                            height: 90
                                        },
                                        compId: 61,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 6,
                                                x: 462,
                                                width: 100,
                                                valign: "middle",
                                                text: "昵称",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.8,
                                                height: 30,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "center"
                                            },
                                            compId: 63
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 6,
                                                x: 731,
                                                width: 120,
                                                var: "label_bulletType",
                                                valign: "middle",
                                                text: "黄金弹头",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.8,
                                                height: 30,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "center"
                                            },
                                            compId: 64
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 6,
                                                x: 41,
                                                width: 100,
                                                valign: "middle",
                                                text: "排行",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.8,
                                                height: 30,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "center"
                                            },
                                            compId: 65
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 173,
                                                x: 512,
                                                width: 242,
                                                var: "label_noData",
                                                valign: "middle",
                                                text: "目前没有排行榜数据",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.5,
                                                height: 28,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "left"
                                            },
                                            compId: 149
                                        } ]
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 78,
                                            x: 35,
                                            width: 1034,
                                            height: 62
                                        },
                                        compId: 78
                                    }, {
                                        type: "List",
                                        props: {
                                            y: 78,
                                            x: 32,
                                            width: 1031,
                                            var: "lstTitle",
                                            spaceX: 6,
                                            renderType: "render",
                                            height: 62
                                        },
                                        compId: 145,
                                        child: [ {
                                            type: "Box",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 340,
                                                name: "render",
                                                height: 64
                                            },
                                            compId: 146,
                                            child: [ {
                                                type: "Button",
                                                props: {
                                                    y: 29,
                                                    x: 171,
                                                    width: 340,
                                                    stateNum: 1,
                                                    skin: "noZip/btn_3.png",
                                                    sizeGrid: "18,15,18,16",
                                                    name: "btnTop",
                                                    labelStrokeColor: "#0b3170",
                                                    labelStroke: 3.8,
                                                    labelSize: 28,
                                                    labelPadding: "0",
                                                    labelFont: "SimHei",
                                                    labelColors: "#ffffff",
                                                    labelBold: true,
                                                    labelAlign: "center",
                                                    label: "黄金弹头",
                                                    height: 59,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 56,
                                                child: [ {
                                                    type: "Script",
                                                    props: {
                                                        aniScaleY: 1,
                                                        aniScaleX: 1,
                                                        runtime: "script/ButtonAni.ts"
                                                    },
                                                    compId: 140
                                                } ]
                                            } ]
                                        } ]
                                    }, {
                                        type: "List",
                                        props: {
                                            y: 192,
                                            x: 36,
                                            width: 1042,
                                            visible: false,
                                            var: "lstBullet",
                                            vScrollBarSkin: "comp/vscrollbar_slider.png",
                                            spaceY: 10,
                                            repeatY: 4,
                                            repeatX: 1,
                                            height: 376
                                        },
                                        compId: 62,
                                        child: [ {
                                            type: "Box",
                                            props: {
                                                renderType: "render"
                                            },
                                            compId: 66,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    width: 1025,
                                                    skin: "noZip/img_bg_11.png",
                                                    sizeGrid: "49,72,56,61",
                                                    name: "imgBg",
                                                    height: 118
                                                },
                                                compId: 67
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 37,
                                                    x: 322,
                                                    width: 330,
                                                    skin: "noZip/img_bg_7.png",
                                                    sizeGrid: "19,19,21,20"
                                                },
                                                compId: 68
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 37,
                                                    x: 709,
                                                    width: 164,
                                                    skin: "noZip/img_bg_7.png",
                                                    sizeGrid: "18,20,21,21"
                                                },
                                                compId: 69
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 14,
                                                    x: 146,
                                                    skin: "firstPic/img_item_bg.png"
                                                },
                                                compId: 74
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 20,
                                                    x: 154,
                                                    width: 90,
                                                    skin: "common/img_toux.png",
                                                    name: "imgHead",
                                                    height: 90
                                                },
                                                compId: 75,
                                                child: [ {
                                                    type: "Image",
                                                    props: {
                                                        y: 0,
                                                        x: 0,
                                                        skin: "firstPic/img_mask_0.png",
                                                        renderType: "mask"
                                                    },
                                                    compId: 76
                                                } ]
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 63,
                                                    x: 747,
                                                    skin: "iconAndSkin/icon_WarheadBj.png",
                                                    scaleY: .66,
                                                    scaleX: .66,
                                                    name: "imgBullet",
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 93
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 37,
                                                    x: 74,
                                                    skin: "common/img_num_3.png",
                                                    scaleY: .5,
                                                    scaleX: .5,
                                                    name: "imgRank"
                                                },
                                                compId: 106
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 41,
                                                    x: 66,
                                                    width: 50,
                                                    valign: "middle",
                                                    text: "5",
                                                    styleSkin: "common/label.png",
                                                    strokeColor: "#0b3170",
                                                    stroke: 4,
                                                    name: "lblRank",
                                                    height: 42,
                                                    fontSize: 40,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    align: "center"
                                                },
                                                compId: 70
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 48,
                                                    x: 329,
                                                    width: 314,
                                                    valign: "middle",
                                                    text: "天天捕鱼使我非常快乐",
                                                    styleSkin: "common/label.png",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3.5,
                                                    overflow: "hidden",
                                                    name: "lblName",
                                                    height: 28,
                                                    fontSize: 26,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    align: "center"
                                                },
                                                compId: 71
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 49,
                                                    x: 788,
                                                    width: 77,
                                                    valign: "middle",
                                                    text: "0",
                                                    styleSkin: "common/label.png",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3.5,
                                                    name: "lblCount",
                                                    height: 28,
                                                    fontSize: 26,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    align: "left"
                                                },
                                                compId: 72
                                            } ]
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        centerX: 0
                                    },
                                    compId: 102,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 6,
                                            width: 1112,
                                            skin: "noZip/img_title_3.png",
                                            sizeGrid: "0,256,0,256"
                                        },
                                        compId: 101
                                    }, {
                                        type: "Image",
                                        props: {
                                            x: 297,
                                            width: 523,
                                            skin: "noZip/img_title_2.png",
                                            height: 69
                                        },
                                        compId: 8,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 13,
                                                x: 111,
                                                width: 300,
                                                text: "排行榜",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 4,
                                                height: 42,
                                                fontSize: 40,
                                                font: "黑体",
                                                color: "#ffffff",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 9
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 584.12,
                                        var: "box_bottom",
                                        centerX: 0
                                    },
                                    compId: 100,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 19,
                                            x: 745,
                                            var: "imgBullet",
                                            skin: "iconAndSkin/icon_WarheadBj.png",
                                            scaleY: .56,
                                            scaleX: .56,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 99
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 2,
                                            x: 152,
                                            visible: false,
                                            var: "imgRank",
                                            skin: "common/img_num_3.png",
                                            scaleY: .3,
                                            scaleX: .3
                                        },
                                        compId: 108
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 3,
                                            x: 22,
                                            width: 190,
                                            var: "lblRank",
                                            valign: "middle",
                                            text: "当前排行：4",
                                            styleSkin: "common/label.png",
                                            strokeColor: "#0b3170",
                                            stroke: 3.5,
                                            height: 28,
                                            fontSize: 26,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            align: "left"
                                        },
                                        compId: 37
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 7,
                                            x: 765,
                                            width: 62,
                                            var: "lblScore",
                                            valign: "middle",
                                            text: "0",
                                            styleSkin: "common/label.png",
                                            strokeColor: "#0b3170",
                                            stroke: 3.5,
                                            height: 26,
                                            fontSize: 26,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            align: "center"
                                        },
                                        compId: 41
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 3,
                                            x: 345,
                                            width: 290,
                                            var: "lblName",
                                            valign: "middle",
                                            styleSkin: "common/label.png",
                                            strokeColor: "#0b3170",
                                            stroke: 3.5,
                                            height: 28,
                                            fontSize: 26,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            align: "center"
                                        },
                                        compId: 43
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 8,
                                            x: 834,
                                            width: 150,
                                            valign: "middle",
                                            text: "每小时整点刷新",
                                            styleSkin: "common/label.png",
                                            strokeColor: "#5e2100",
                                            stroke: 3.2,
                                            height: 22,
                                            fontSize: 20,
                                            font: "SimHei",
                                            color: "#ffde00",
                                            align: "left"
                                        },
                                        compId: 46
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    var: "btnClose",
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 150
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_bg_13.png", "common/label.png", "noZip/btn_3.png", "comp/vscrollbar_slider.png", "noZip/img_bg_11.png", "noZip/img_bg_7.png", "firstPic/img_item_bg.png", "common/img_toux.png", "firstPic/img_mask_0.png", "iconAndSkin/icon_WarheadBj.png", "common/img_num_3.png", "noZip/img_title_3.png", "noZip/img_title_2.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return RankingListDialogUI;
                }(Laya.Dialog);
                hallScene.RankingListDialogUI = RankingListDialogUI;
                REG("ui.hallScene.RankingListDialogUI", RankingListDialogUI);
                var RankingWarDialogUI = function(_super) {
                    __extends(RankingWarDialogUI, _super);
                    function RankingWarDialogUI() {
                        return _super.call(this) || this;
                    }
                    RankingWarDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(RankingWarDialogUI.uiView);
                    };
                    RankingWarDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 375,
                                x: 667,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 2
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 113,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 1158,
                                    height: 635,
                                    centerY: 26,
                                    centerX: 0,
                                    anchorY: 0
                                },
                                compId: 124,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        width: 1096,
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "239,58,208,50",
                                        right: 0,
                                        height: 621
                                    },
                                    compId: 3,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 146,
                                            x: 35,
                                            var: "boxNoItem"
                                        },
                                        compId: 120,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 1026,
                                                skin: "noZip/img_bg_8.png",
                                                sizeGrid: "22,20,27,23",
                                                height: 427
                                            },
                                            compId: 121
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 331,
                                                x: 357,
                                                width: 359,
                                                var: "lblMsg",
                                                text: "亲,暂无排行信息哦!",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 2,
                                                height: 30,
                                                fontSize: 24,
                                                font: "黑体",
                                                color: "#ffffff",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 122
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 114,
                                                x: 465,
                                                skin: "hall/img_mail_6.png"
                                            },
                                            compId: 123
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 147,
                                            x: 35,
                                            width: 1025,
                                            var: "image_topbg",
                                            skin: "noZip/img_bg_13.png",
                                            sizeGrid: "39,42,36,31",
                                            height: 90
                                        },
                                        compId: 12,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 6,
                                                x: 441,
                                                width: 100,
                                                valign: "middle",
                                                text: "昵称",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.8,
                                                height: 30,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "center"
                                            },
                                            compId: 16
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 6,
                                                x: 713,
                                                width: 100,
                                                valign: "middle",
                                                text: "积分",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.8,
                                                height: 30,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "center"
                                            },
                                            compId: 19
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 6,
                                                x: 866,
                                                width: 100,
                                                valign: "middle",
                                                text: "奖励",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.8,
                                                height: 30,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "center"
                                            },
                                            compId: 20
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 6,
                                                x: 172,
                                                width: 100,
                                                valign: "middle",
                                                text: "VIP",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.8,
                                                height: 30,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "center"
                                            },
                                            compId: 21
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 6,
                                                x: 40,
                                                width: 100,
                                                valign: "middle",
                                                text: "排行",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.8,
                                                height: 30,
                                                fontSize: 28,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "center"
                                            },
                                            compId: 22
                                        } ]
                                    }, {
                                        type: "List",
                                        props: {
                                            y: 192,
                                            x: 35,
                                            width: 1042,
                                            visible: false,
                                            var: "lstRank",
                                            vScrollBarSkin: "comp/vscrollbar_slider.png",
                                            spaceY: 5,
                                            height: 380
                                        },
                                        compId: 42,
                                        child: [ {
                                            type: "Box",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 1025,
                                                renderType: "render",
                                                height: 83
                                            },
                                            compId: 27,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    width: 1025,
                                                    skin: "noZip/img_bg_11.png",
                                                    sizeGrid: "43,69,55,69",
                                                    name: "imgBg",
                                                    height: 77
                                                },
                                                compId: 26
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 16,
                                                    x: 323,
                                                    width: 330,
                                                    skin: "noZip/img_bg_7.png",
                                                    sizeGrid: "19,19,21,20"
                                                },
                                                compId: 31
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 17,
                                                    x: 685,
                                                    width: 164,
                                                    skin: "noZip/img_bg_7.png",
                                                    sizeGrid: "18,20,21,21"
                                                },
                                                compId: 32
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 40,
                                                    x: 222,
                                                    skin: "common/img_huiz_1.png",
                                                    name: "imgVip",
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 114
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 43,
                                                    x: 913,
                                                    skin: "iconAndSkin/icon_WarheadBj.png",
                                                    scaleY: .7,
                                                    scaleX: .7,
                                                    name: "imgItem",
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 40
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 21,
                                                    x: 73,
                                                    skin: "common/img_num_3.png",
                                                    scaleY: .5,
                                                    scaleX: .5,
                                                    name: "imgRank"
                                                },
                                                compId: 79
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 23,
                                                    x: 66,
                                                    width: 50,
                                                    valign: "middle",
                                                    text: "5",
                                                    styleSkin: "common/label.png",
                                                    strokeColor: "#0b3170",
                                                    stroke: 4,
                                                    name: "lblRank",
                                                    height: 42,
                                                    fontSize: 40,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    align: "center"
                                                },
                                                compId: 28
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 30,
                                                    x: 329,
                                                    width: 317,
                                                    valign: "middle",
                                                    text: "天天捕鱼使我非常快乐",
                                                    styleSkin: "common/label.png",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3.5,
                                                    overflow: "hidden",
                                                    name: "lblName",
                                                    height: 28,
                                                    fontSize: 26,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    align: "center"
                                                },
                                                compId: 33
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 30,
                                                    x: 693,
                                                    width: 150,
                                                    valign: "middle",
                                                    text: "3.9亿",
                                                    styleSkin: "common/label.png",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3.5,
                                                    name: "lblScore",
                                                    height: 28,
                                                    fontSize: 26,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    align: "center"
                                                },
                                                compId: 34
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 34,
                                                    x: 208,
                                                    width: 87,
                                                    valign: "middle",
                                                    text: "10",
                                                    styleSkin: "common/label.png",
                                                    scaleY: .31,
                                                    scaleX: .31,
                                                    name: "lblVip",
                                                    height: 42,
                                                    fontSize: 40,
                                                    font: "numberFont1",
                                                    align: "center"
                                                },
                                                compId: 39
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 33,
                                                    x: 950,
                                                    width: 61,
                                                    valign: "middle",
                                                    styleSkin: "common/label.png",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3.5,
                                                    name: "lblRewardCount",
                                                    height: 22,
                                                    fontSize: 20,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    align: "left"
                                                },
                                                compId: 41
                                            } ]
                                        } ]
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 572,
                                            x: 152
                                        },
                                        compId: 70,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 0,
                                                x: -52,
                                                var: "boxDesc",
                                                skin: "common/btn_help_1.png"
                                            },
                                            compId: 43,
                                            child: [ {
                                                type: "Box",
                                                props: {},
                                                compId: 134
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 8,
                                                    x: 41,
                                                    width: 108,
                                                    valign: "middle",
                                                    text: "比赛说明",
                                                    styleSkin: "common/label.png",
                                                    strokeColor: "#0b3170",
                                                    stroke: 4,
                                                    height: 24,
                                                    fontSize: 22,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    align: "center"
                                                },
                                                compId: 44
                                            } ]
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 7,
                                                x: 141,
                                                width: 203,
                                                var: "lblRank",
                                                valign: "middle",
                                                text: "我的排名：2",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.5,
                                                height: 28,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "left"
                                            },
                                            compId: 45
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 7,
                                                x: 362,
                                                width: 203,
                                                var: "lblScore",
                                                valign: "middle",
                                                text: "积分：2.9亿",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.5,
                                                height: 28,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "left"
                                            },
                                            compId: 46
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 7,
                                                x: 638,
                                                width: 72,
                                                var: "lblDesc",
                                                valign: "middle",
                                                text: "奖励：",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.5,
                                                height: 28,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "left"
                                            },
                                            compId: 47
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 21,
                                                x: 742,
                                                var: "imgItem",
                                                skin: "iconAndSkin/icon_WarheadBj.png",
                                                scaleY: .6,
                                                scaleX: .6,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 48
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 33,
                                                x: -4,
                                                skin: "hall/img_paih_0.png"
                                            },
                                            compId: 66
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 10,
                                                x: 777,
                                                width: 70,
                                                var: "lblRewardCount",
                                                valign: "middle",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3.5,
                                                height: 22,
                                                fontSize: 20,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                align: "left"
                                            },
                                            compId: 84
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: -13,
                                        centerX: 31
                                    },
                                    compId: 72,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 7,
                                            width: 1112,
                                            skin: "noZip/img_title_3.png",
                                            sizeGrid: "0,256,0,256"
                                        },
                                        compId: 71
                                    }, {
                                        type: "Image",
                                        props: {
                                            x: 297,
                                            width: 523,
                                            skin: "noZip/img_title_2.png",
                                            height: 69
                                        },
                                        compId: 6,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 13,
                                                x: 111,
                                                width: 300,
                                                text: "海王争霸榜",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 4,
                                                height: 42,
                                                fontSize: 40,
                                                font: "黑体",
                                                color: "#ffffff",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 7
                                        } ]
                                    } ]
                                }, {
                                    type: "List",
                                    props: {
                                        y: 66,
                                        width: 62,
                                        var: "lstType",
                                        spaceY: -90,
                                        repeatY: 3,
                                        repeatX: 1,
                                        renderType: "render",
                                        left: 1,
                                        height: 524
                                    },
                                    compId: 130,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            width: 62,
                                            name: "render",
                                            height: 231
                                        },
                                        compId: 58,
                                        child: [ {
                                            type: "Button",
                                            props: {
                                                y: 115,
                                                x: 62,
                                                stateNum: 1,
                                                skin: "common/btn_4.png",
                                                name: "btnRank",
                                                labelStrokeColor: "#70200b",
                                                labelStroke: 3.8,
                                                labelSize: 34,
                                                labelFont: "SimHei",
                                                labelColors: "#0f5180",
                                                labelBold: true,
                                                labelAlign: "center",
                                                label: "月\\n榜",
                                                anchorY: .5,
                                                anchorX: 1
                                            },
                                            compId: 52,
                                            child: [ {
                                                type: "Script",
                                                props: {
                                                    runtime: "script/ButtonAni.ts"
                                                },
                                                compId: 133
                                            } ]
                                        } ]
                                    } ]
                                }, {
                                    type: "List",
                                    props: {
                                        y: 72,
                                        x: 92.5,
                                        width: 1031,
                                        var: "lstTop",
                                        spaceX: 10,
                                        repeatY: 1,
                                        repeatX: 2,
                                        renderType: "render",
                                        height: 70
                                    },
                                    compId: 131,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            width: 510,
                                            name: "render",
                                            height: 70
                                        },
                                        compId: 132,
                                        child: [ {
                                            type: "Button",
                                            props: {
                                                y: 35,
                                                x: 255.5,
                                                width: 509,
                                                stateNum: 1,
                                                skin: "noZip/btn_3.png",
                                                sizeGrid: "25,16,26,17",
                                                name: "btnTop",
                                                labelStrokeColor: "#70200b",
                                                labelStroke: 3.8,
                                                labelSize: 28,
                                                labelPadding: "0",
                                                labelFont: "SimHei",
                                                labelColors: "#ffffff",
                                                labelBold: true,
                                                labelAlign: "center",
                                                label: "今日排行榜",
                                                height: 69,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 9,
                                            child: [ {
                                                type: "Script",
                                                props: {
                                                    aniScaleY: 1,
                                                    aniScaleX: 1,
                                                    runtime: "script/ButtonAni.ts"
                                                },
                                                compId: 128
                                            } ]
                                        } ]
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 45,
                                    var: "btnClose",
                                    skin: "common/btn_fanh_1.png",
                                    left: 30,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 135,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        isSetSelf: true,
                                        isPlaySound: true,
                                        isPlayAni: true,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 136
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_bg_8.png", "common/label.png", "hall/img_mail_6.png", "noZip/img_bg_13.png", "comp/vscrollbar_slider.png", "noZip/img_bg_11.png", "noZip/img_bg_7.png", "common/img_huiz_1.png", "iconAndSkin/icon_WarheadBj.png", "common/img_num_3.png", "common/btn_help_1.png", "hall/img_paih_0.png", "noZip/img_title_3.png", "noZip/img_title_2.png", "common/btn_4.png", "noZip/btn_3.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return RankingWarDialogUI;
                }(Laya.Dialog);
                hallScene.RankingWarDialogUI = RankingWarDialogUI;
                REG("ui.hallScene.RankingWarDialogUI", RankingWarDialogUI);
                var RouletteDialogUI = function(_super) {
                    __extends(RouletteDialogUI, _super);
                    function RouletteDialogUI() {
                        return _super.call(this) || this;
                    }
                    RouletteDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(RouletteDialogUI.uiView);
                    };
                    RouletteDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1334,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 4
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 5,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 510,
                                    var: "box_roulette",
                                    height: 510,
                                    centerY: 10,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 59,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_1.png",
                                        rotation: -18,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 66
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_1.png",
                                        rotation: 54,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 67
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_1.png",
                                        rotation: 126,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 68
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_1.png",
                                        rotation: 198,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 69
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_1.png",
                                        rotation: 270,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 70
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_0.png",
                                        rotation: 18,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 74
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_0.png",
                                        rotation: 90,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 75
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_0.png",
                                        rotation: 162,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 76
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_0.png",
                                        rotation: 234,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 77
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_0.png",
                                        rotation: 306,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 78
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_7.png",
                                        scaleY: .0479813261018696,
                                        scaleX: .0479813261018696,
                                        blendMode: "lighter",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: .9452160493827161
                                    },
                                    compId: 109
                                }, {
                                    type: "List",
                                    props: {
                                        y: 256,
                                        x: 255,
                                        width: 510,
                                        var: "list_items",
                                        spaceX: -110,
                                        repeatY: 1,
                                        repeatX: 10,
                                        height: 510,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 80,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 255,
                                            x: 255,
                                            width: 110,
                                            renderType: "render",
                                            height: 255,
                                            anchorY: 1,
                                            anchorX: .5
                                        },
                                        compId: 81,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 94,
                                                skin: "iconAndSkin/skin_skillSd.png",
                                                name: "img_itemIcon",
                                                centerX: 0,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 82
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 131,
                                                width: 64,
                                                valign: "middle",
                                                text: "10",
                                                strokeColor: "#0b3170",
                                                stroke: 4,
                                                name: "text_itemNum",
                                                height: 24,
                                                fontSize: 24,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                centerX: 0,
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 83
                                        } ]
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 510,
                                    var: "mask_black",
                                    height: 510,
                                    centerY: 10,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 122,
                                child: [ {
                                    type: "Circle",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        radius: 210,
                                        lineWidth: 1,
                                        lineColor: "#000000",
                                        fillColor: "#000000"
                                    },
                                    compId: 121
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        width: 510,
                                        renderType: "mask",
                                        height: 510,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 120,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 255,
                                            x: 255,
                                            skin: "hall/img_zhuanp_1.png",
                                            rotation: 54,
                                            anchorY: 1,
                                            anchorX: 0
                                        },
                                        compId: 111
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 255,
                                            x: 255,
                                            skin: "hall/img_zhuanp_1.png",
                                            rotation: 126,
                                            anchorY: 1,
                                            anchorX: 0
                                        },
                                        compId: 112
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 255,
                                            x: 255,
                                            skin: "hall/img_zhuanp_1.png",
                                            rotation: 198,
                                            anchorY: 1,
                                            anchorX: 0
                                        },
                                        compId: 113
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 255,
                                            x: 255,
                                            skin: "hall/img_zhuanp_1.png",
                                            rotation: 270,
                                            anchorY: 1,
                                            anchorX: 0
                                        },
                                        compId: 114
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 255,
                                            x: 255,
                                            skin: "hall/img_zhuanp_0.png",
                                            rotation: 18,
                                            anchorY: 1,
                                            anchorX: 0
                                        },
                                        compId: 115
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 255,
                                            x: 255,
                                            skin: "hall/img_zhuanp_0.png",
                                            rotation: 90,
                                            anchorY: 1,
                                            anchorX: 0
                                        },
                                        compId: 116
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 255,
                                            x: 255,
                                            skin: "hall/img_zhuanp_0.png",
                                            rotation: 162,
                                            anchorY: 1,
                                            anchorX: 0
                                        },
                                        compId: 117
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 255,
                                            x: 255,
                                            skin: "hall/img_zhuanp_0.png",
                                            rotation: 234,
                                            anchorY: 1,
                                            anchorX: 0
                                        },
                                        compId: 118
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 255,
                                            x: 255,
                                            skin: "hall/img_zhuanp_0.png",
                                            rotation: 306,
                                            anchorY: 1,
                                            anchorX: 0
                                        },
                                        compId: 119
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 510,
                                    var: "box_out",
                                    height: 510,
                                    centerY: 10,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 79,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_2.png",
                                        anchorY: 1,
                                        anchorX: 1
                                    },
                                    compId: 62
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_2.png",
                                        scaleX: -1,
                                        rotation: 0,
                                        anchorY: 1,
                                        anchorX: 1
                                    },
                                    compId: 63
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_2.png",
                                        rotation: 180,
                                        anchorY: 1,
                                        anchorX: 1
                                    },
                                    compId: 64
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        skin: "hall/img_zhuanp_2.png",
                                        scaleY: -1,
                                        rotation: 0,
                                        anchorY: 1,
                                        anchorX: 1
                                    },
                                    compId: 65
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 3,
                                        width: 98,
                                        skin: "hall/img_zhuanp_4.png",
                                        height: 91,
                                        centerX: -2
                                    },
                                    compId: 58
                                }, {
                                    type: "Button",
                                    props: {
                                        width: 189,
                                        var: "btn_startRotate",
                                        stateNum: 1,
                                        skin: "hall/img_zhuanp_3.png",
                                        scaleY: 1,
                                        scaleX: 1,
                                        height: 189,
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 84,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            playScaleY: 1.05,
                                            playScaleX: 1.05,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 85
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 255,
                                        x: 255,
                                        width: 510,
                                        var: "box_light",
                                        rotation: 30,
                                        height: 510,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 88,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 193,
                                            x: 25,
                                            skin: "hall/img_zhuanp_5.png",
                                            scaleY: .8,
                                            scaleX: .8,
                                            blendMode: "lighter",
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: 1
                                        },
                                        compId: 89
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 24,
                                            x: 194,
                                            skin: "hall/img_zhuanp_5.png",
                                            scaleY: .8,
                                            scaleX: .8,
                                            blendMode: "lighter",
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: 1
                                        },
                                        compId: 98
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 88,
                                            x: 424,
                                            skin: "hall/img_zhuanp_5.png",
                                            scaleY: .8,
                                            scaleX: .8,
                                            blendMode: "lighter",
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: 1
                                        },
                                        compId: 100
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 318,
                                            x: 486,
                                            skin: "hall/img_zhuanp_5.png",
                                            scaleY: .8,
                                            scaleX: .8,
                                            blendMode: "lighter",
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: 1
                                        },
                                        compId: 102
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 486,
                                            x: 317,
                                            skin: "hall/img_zhuanp_5.png",
                                            scaleY: .8,
                                            scaleX: .8,
                                            blendMode: "lighter",
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: 1
                                        },
                                        compId: 104
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 423,
                                            x: 87,
                                            skin: "hall/img_zhuanp_5.png",
                                            scaleY: .8,
                                            scaleX: .8,
                                            blendMode: "lighter",
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: 1
                                        },
                                        compId: 106
                                    } ]
                                } ]
                            }, {
                                type: "Label",
                                props: {
                                    y: 660,
                                    width: 545,
                                    valign: "middle",
                                    text: "欢迎来到捕鱼侠世界，每日登陆有惊喜哦！",
                                    strokeColor: "#0b3170",
                                    stroke: 3,
                                    height: 24,
                                    fontSize: 24,
                                    font: "SimHei",
                                    color: "#b3f3ff",
                                    centerX: 25,
                                    bold: true,
                                    align: "center"
                                },
                                compId: 86
                            }, {
                                type: "Image",
                                props: {
                                    y: 655.5,
                                    skin: "common/image_tips.png",
                                    centerX: -236
                                },
                                compId: 87
                            }, {
                                type: "Image",
                                props: {
                                    y: 139,
                                    skin: "common/img_title_4.png",
                                    scaleY: 1.0901234567901235,
                                    scaleX: 1.0901234567901235,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 56,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 13,
                                        x: 99,
                                        skin: "hall/img_zhuanp_6.png",
                                        centerX: 0
                                    },
                                    compId: 57
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 56,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 56,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 56,
                                        key: "scaleY",
                                        index: 36
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 56,
                                        key: "scaleY",
                                        index: 72
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 56,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 56,
                                        key: "scaleX",
                                        index: 36
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 56,
                                        key: "scaleX",
                                        index: 72
                                    } ]
                                }
                            } ],
                            name: "ani_0",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 88,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 88,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 30,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 88,
                                        key: "rotation",
                                        index: 8
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 88,
                                        key: "rotation",
                                        index: 16
                                    } ]
                                }
                            } ],
                            name: "ani_1",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 84,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 84,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 84,
                                        key: "scaleY",
                                        index: 7
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 84,
                                        key: "scaleY",
                                        index: 13
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 84,
                                        key: "scaleY",
                                        index: 18
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 84,
                                        key: "scaleY",
                                        index: 22
                                    }, {
                                        value: 1.02,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 84,
                                        key: "scaleY",
                                        index: 23
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 84,
                                        key: "scaleY",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 84,
                                        key: "scaleY",
                                        index: 44
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 84,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 84,
                                        key: "scaleX",
                                        index: 7
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 84,
                                        key: "scaleX",
                                        index: 13
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 84,
                                        key: "scaleX",
                                        index: 18
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 84,
                                        key: "scaleX",
                                        index: 22
                                    }, {
                                        value: 1.02,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 84,
                                        key: "scaleX",
                                        index: 23
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 84,
                                        key: "scaleX",
                                        index: 24
                                    } ]
                                }
                            }, {
                                target: 109,
                                keyframes: {
                                    scaleY: [ {
                                        value: .0479813261018696,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 109,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .4,
                                        tweenMethod: "sineOut",
                                        tween: true,
                                        target: 109,
                                        key: "scaleY",
                                        index: 13
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 109,
                                        key: "scaleY",
                                        index: 44
                                    } ],
                                    scaleX: [ {
                                        value: .0479813261018696,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 109,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .4,
                                        tweenMethod: "sineOut",
                                        tween: true,
                                        target: 109,
                                        key: "scaleX",
                                        index: 13
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 109,
                                        key: "scaleX",
                                        index: 44
                                    } ],
                                    alpha: [ {
                                        value: .9452160493827161,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 109,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 109,
                                        key: "alpha",
                                        index: 16
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 109,
                                        key: "alpha",
                                        index: 44
                                    } ]
                                }
                            } ],
                            name: "ani_3",
                            id: 4,
                            frameRate: 36,
                            action: 2
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "hall/img_zhuanp_1.png", "hall/img_zhuanp_0.png", "hall/img_zhuanp_7.png", "iconAndSkin/skin_skillSd.png", "hall/img_zhuanp_2.png", "hall/img_zhuanp_4.png", "hall/img_zhuanp_3.png", "hall/img_zhuanp_5.png", "common/image_tips.png", "common/img_title_4.png", "hall/img_zhuanp_6.png" ],
                        loadList3D: []
                    };
                    return RouletteDialogUI;
                }(Laya.Dialog);
                hallScene.RouletteDialogUI = RouletteDialogUI;
                REG("ui.hallScene.RouletteDialogUI", RouletteDialogUI);
                var SelectRoomSceneUI = function(_super) {
                    __extends(SelectRoomSceneUI, _super);
                    function SelectRoomSceneUI() {
                        return _super.call(this) || this;
                    }
                    SelectRoomSceneUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(SelectRoomSceneUI.uiView);
                    };
                    SelectRoomSceneUI.uiView = {
                        type: "View",
                        props: {
                            y: 0,
                            x: 0,
                            width: 1630,
                            height: 750
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 1630,
                                var: "imgBg",
                                skin: "selectRoom/img_selectRoom_bg.jpg",
                                mouseEnabled: false,
                                height: 750,
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 7
                        }, {
                            type: "Box",
                            props: {
                                width: 1334,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 241,
                            child: [ {
                                type: "List",
                                props: {
                                    x: 0,
                                    width: 1334,
                                    var: "lstRoom",
                                    repeatY: 1,
                                    repeatX: 3,
                                    mouseThrough: true,
                                    mouseEnabled: true,
                                    height: 750
                                },
                                compId: 156,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 444,
                                        renderType: "render",
                                        name: "render",
                                        mouseThrough: true,
                                        mouseEnabled: true,
                                        height: 750
                                    },
                                    compId: 155,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            width: 400,
                                            name: "box_spine",
                                            height: 350,
                                            centerY: -32,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 213,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                isSetSelf: true,
                                                aniScaleY: 1,
                                                aniScaleX: 1,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 214
                                        }, {
                                            type: "Box",
                                            props: {
                                                width: 1,
                                                name: "room_spine",
                                                height: 1,
                                                centerY: 219,
                                                centerX: 0
                                            },
                                            compId: 233
                                        } ]
                                    }, {
                                        type: "Box",
                                        props: {
                                            width: 310,
                                            name: "box_ticket",
                                            mouseEnabled: true,
                                            layoutEnabled: true,
                                            height: 50,
                                            centerY: 168,
                                            centerX: 0
                                        },
                                        compId: 218,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: -10,
                                                name: "img_getTicket",
                                                centerX: 0
                                            },
                                            compId: 220
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 60,
                                                x: 68,
                                                skin: "selectRoom/img_xdjb.png",
                                                name: "img_limitGold"
                                            },
                                            compId: 243
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 60,
                                                x: 168,
                                                skin: "selectRoom/img_3w.png",
                                                name: "img_goldNum"
                                            },
                                            compId: 244
                                        } ]
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: -1,
                                            width: 376,
                                            name: "box_jackpot",
                                            mouseEnabled: false,
                                            height: 203,
                                            centerX: 0
                                        },
                                        compId: 222
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 664,
                                            name: "box_specialFish",
                                            mouseEnabled: false,
                                            height: 106,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 230
                                    } ]
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 46,
                                    var: "btnReturn",
                                    stateNum: 1,
                                    skin: "common/btn_fanh_1.png",
                                    left: 31,
                                    layoutEnabled: true,
                                    labelSize: 20,
                                    labelFont: "黑体",
                                    labelColors: "#00ff00",
                                    labelBold: true,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 8,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        aniScaleY: 1,
                                        aniScaleX: 1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 215
                                } ]
                            } ]
                        } ],
                        loadList: [ "selectRoom/img_selectRoom_bg.jpg", "selectRoom/img_xdjb.png", "selectRoom/img_3w.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return SelectRoomSceneUI;
                }(Laya.View);
                hallScene.SelectRoomSceneUI = SelectRoomSceneUI;
                REG("ui.hallScene.SelectRoomSceneUI", SelectRoomSceneUI);
                var ServiceTipsDialogUI = function(_super) {
                    __extends(ServiceTipsDialogUI, _super);
                    function ServiceTipsDialogUI() {
                        return _super.call(this) || this;
                    }
                    ServiceTipsDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ServiceTipsDialogUI.uiView);
                    };
                    ServiceTipsDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 2
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 43,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 144,
                                    width: 719,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "35,60,74,60",
                                    height: 480,
                                    centerX: 0
                                },
                                compId: 3,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -11,
                                        width: 392,
                                        skin: "noZip/img_title_2.png",
                                        sizeGrid: "0,195,0,195",
                                        height: 69,
                                        centerX: 0
                                    },
                                    compId: 4,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 14,
                                            x: 155,
                                            valign: "middle",
                                            text: "客服",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            fontSize: 40,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 6
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 70,
                                        x: 21,
                                        width: 675,
                                        skin: "noZip/img_bg_8.png",
                                        sizeGrid: "22,24,23,23",
                                        height: 386
                                    },
                                    compId: 75
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 94,
                                        x: 38,
                                        width: 306,
                                        skin: "noZip/img_bg_15.png",
                                        sizeGrid: "45,78,32,72",
                                        height: 340
                                    },
                                    compId: 59,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: -12,
                                            x: -12,
                                            skin: "hall/img_server_3.png"
                                        },
                                        compId: 65,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 14,
                                                x: 21,
                                                width: 50,
                                                text: "1",
                                                scaleY: .55,
                                                scaleX: .55,
                                                height: 81,
                                                font: "numberFont1"
                                            },
                                            compId: 66
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 56,
                                            x: 64,
                                            skin: "hall/img_server_4.png"
                                        },
                                        compId: 67,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: -41,
                                                x: -3,
                                                width: 228,
                                                valign: "middle",
                                                text: "搜索公众号:byx_3d",
                                                height: 41,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#00264d",
                                                bold: true
                                            },
                                            compId: 68
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 106,
                                            x: 15,
                                            skin: "hall/img_server_1.png"
                                        },
                                        compId: 72,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 3,
                                                x: 3,
                                                skin: "common/img_toux.png"
                                            },
                                            compId: 73,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    skin: "hall/img_server_2.png",
                                                    renderType: "mask"
                                                },
                                                compId: 74
                                            } ]
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 103,
                                            x: 114,
                                            skin: "hall/img_server_0.png"
                                        },
                                        compId: 69,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 9,
                                                x: 47,
                                                text: "byx_3d",
                                                strokeColor: "#12a549",
                                                stroke: 1,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#12a549",
                                                bold: true
                                            },
                                            compId: 70
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 51,
                                                x: 4,
                                                text: "关注公众号\\n来撩客服小姐姐",
                                                leading: 5,
                                                fontSize: 20,
                                                font: "SimHei",
                                                color: "#3f6f78",
                                                bold: true
                                            },
                                            compId: 71
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 210,
                                            x: 10,
                                            skin: "hall/img_server_6.png"
                                        },
                                        compId: 82,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 13,
                                                x: 8,
                                                skin: "hall/img_qqgroup.png"
                                            },
                                            compId: 81
                                        }, {
                                            type: "Button",
                                            props: {
                                                y: 70,
                                                x: 235,
                                                width: 194,
                                                var: "btnConfirm",
                                                stateNum: 1,
                                                skin: "noZip/btn_green.png",
                                                sizeGrid: "0,55,0,60",
                                                scaleY: .46,
                                                scaleX: .46,
                                                labelStrokeColor: "#226306",
                                                labelStroke: 4,
                                                labelSize: 35,
                                                labelFont: "SimHei",
                                                labelColors: "#ffffff",
                                                labelBold: true,
                                                labelAlign: "center",
                                                label: "一键复制",
                                                height: 93,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 33
                                        } ]
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 94,
                                        x: 374,
                                        width: 306,
                                        skin: "noZip/img_bg_15.png",
                                        sizeGrid: "44,84,42,73",
                                        height: 340
                                    },
                                    compId: 58,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: -17,
                                            x: -16,
                                            skin: "hall/img_server_3.png"
                                        },
                                        compId: 63,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 14,
                                                x: 23,
                                                width: 50,
                                                text: "2",
                                                scaleY: .55,
                                                scaleX: .55,
                                                height: 81,
                                                font: "numberFont1"
                                            },
                                            compId: 64
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 52,
                                            x: 111,
                                            skin: "hall/img_server_1.png"
                                        },
                                        compId: 60,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 3,
                                                x: 3,
                                                skin: "common/img_toux.png"
                                            },
                                            compId: 61,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    skin: "hall/img_server_2.png",
                                                    renderType: "mask"
                                                },
                                                compId: 62
                                            } ]
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 135,
                                            x: 66,
                                            width: 175,
                                            skin: "hall/img_server_5.png",
                                            sizeGrid: "0,14,0,12",
                                            height: 43
                                        },
                                        compId: 56,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 9,
                                                x: 9,
                                                width: 159,
                                                var: "lblVerson",
                                                height: 24,
                                                fontSize: 24,
                                                font: "SimHei",
                                                color: "#00264d",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 57
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 211,
                                            x: 10,
                                            skin: "hall/img_server_6.png"
                                        },
                                        compId: 55,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 14,
                                                x: 9,
                                                skin: "hall/img_server_7.png"
                                            },
                                            compId: 54
                                        } ]
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 13.5,
                                        width: 65,
                                        var: "btnClose",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        scaleY: 1,
                                        scaleX: 1,
                                        rotation: 0,
                                        right: -18,
                                        height: 65,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 76,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 80
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_title_2.png", "noZip/img_bg_8.png", "noZip/img_bg_15.png", "hall/img_server_3.png", "hall/img_server_4.png", "hall/img_server_1.png", "common/img_toux.png", "hall/img_server_2.png", "hall/img_server_0.png", "hall/img_server_6.png", "hall/img_qqgroup.png", "noZip/btn_green.png", "hall/img_server_5.png", "hall/img_server_7.png", "firstPic/btn_close.png" ],
                        loadList3D: []
                    };
                    return ServiceTipsDialogUI;
                }(Laya.Dialog);
                hallScene.ServiceTipsDialogUI = ServiceTipsDialogUI;
                REG("ui.hallScene.ServiceTipsDialogUI", ServiceTipsDialogUI);
                var ShopDialogUI = function(_super) {
                    __extends(ShopDialogUI, _super);
                    function ShopDialogUI() {
                        return _super.call(this) || this;
                    }
                    ShopDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ShopDialogUI.uiView);
                    };
                    ShopDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 375,
                                x: 815,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 103
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 102,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 1223,
                                    height: 661,
                                    centerY: 7,
                                    centerX: 0
                                },
                                compId: 3,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 40,
                                        x: 63,
                                        presetID: 1,
                                        width: 1099,
                                        name: "dialogTitle",
                                        isPresetRoot: true,
                                        height: 621
                                    },
                                    compId: 112,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            presetID: 2,
                                            y: 0,
                                            x: 0,
                                            width: 1099,
                                            skin: "noZip/img_bg_16.png",
                                            sizeGrid: "0,42,0,53",
                                            height: 621
                                        },
                                        compId: 9
                                    }, {
                                        type: "Image",
                                        props: {
                                            presetID: 3,
                                            y: -5,
                                            x: -8,
                                            width: 1115,
                                            skin: "noZip/img_title_3.png",
                                            sizeGrid: "0,261,0,256",
                                            height: 83
                                        },
                                        compId: 10
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 504,
                                            x: 29,
                                            var: "imgFirst",
                                            skin: "hall/btn_shouc.png"
                                        },
                                        compId: 119
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        skin: "common/img_title_0.png",
                                        centerX: 0
                                    },
                                    compId: 106
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 6,
                                        skin: "hall/img_shop_0.png",
                                        centerX: 25
                                    },
                                    compId: 8
                                }, {
                                    type: "List",
                                    props: {
                                        y: 136,
                                        x: 93,
                                        width: 1023,
                                        var: "commoidtyList",
                                        spaceY: 10,
                                        spaceX: 18,
                                        repeatY: 1,
                                        height: 387,
                                        hScrollBarSkin: "comp/hscroll.png"
                                    },
                                    compId: 14,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 0,
                                            x: -3,
                                            width: 293,
                                            renderType: "render",
                                            height: 387
                                        },
                                        compId: 15,
                                        child: [ {
                                            type: "Box",
                                            props: {
                                                y: 0,
                                                x: 14,
                                                presetID: 1,
                                                name: "commodityBg",
                                                isPresetRoot: true
                                            },
                                            compId: 113,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    presetID: 2,
                                                    width: 279,
                                                    skin: "noZip/img_bg_19.png",
                                                    sizeGrid: "0,39,0,49",
                                                    height: 387
                                                },
                                                compId: 32
                                            }, {
                                                type: "Image",
                                                props: {
                                                    presetID: 3,
                                                    y: 18,
                                                    x: 16,
                                                    width: 249,
                                                    skin: "noZip/img_bg_8.png",
                                                    sizeGrid: "21,27,24,25",
                                                    height: 48
                                                },
                                                compId: 33
                                            } ]
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 168,
                                                x: 153,
                                                skin: "common/img_guang_0.png",
                                                name: "itemLight",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 118
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 27,
                                                x: 110,
                                                width: 81,
                                                text: "月卡",
                                                strokeColor: "#70200b",
                                                stroke: 3.5,
                                                name: "commodityName",
                                                height: 30,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ffec4c",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 20
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 28,
                                                x: 43,
                                                width: 38,
                                                valign: "middle",
                                                text: "赠:",
                                                strokeColor: "#0b3170",
                                                stroke: 4,
                                                name: "sand",
                                                height: 26,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 86
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 28,
                                                x: 81,
                                                width: 184,
                                                valign: "middle",
                                                text: "50000000金币",
                                                strokeColor: "#70200b",
                                                stroke: 4,
                                                name: "itemNum",
                                                height: 26,
                                                fontSize: 26,
                                                font: "SimHei",
                                                color: "#ffec4c",
                                                bold: true,
                                                align: "right"
                                            },
                                            compId: 85
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 229,
                                                x: -2,
                                                width: 290,
                                                skin: "common/img_piaod.png",
                                                sizeGrid: "0,156,0,122",
                                                name: "ribbon",
                                                height: 67
                                            },
                                            compId: 21
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 215,
                                                x: 70,
                                                name: "monthCardBox"
                                            },
                                            compId: 22,
                                            child: [ {
                                                type: "Label",
                                                props: {
                                                    x: 6,
                                                    width: 151,
                                                    valign: "middle",
                                                    text: "每日高额返奖",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3.5,
                                                    height: 29,
                                                    fontSize: 24,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    bold: true,
                                                    align: "center"
                                                },
                                                compId: 23
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 36,
                                                    width: 78,
                                                    valign: "middle",
                                                    text: "总价值",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3,
                                                    rotation: 0,
                                                    height: 27,
                                                    fontSize: 25,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    bold: true,
                                                    align: "center"
                                                },
                                                compId: 24
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 35,
                                                    x: 78,
                                                    width: 80,
                                                    valign: "middle",
                                                    text: "198元",
                                                    strokeColor: "#70200b",
                                                    stroke: 3,
                                                    name: "monthCardWorth",
                                                    height: 27,
                                                    fontSize: 28,
                                                    font: "SimHei",
                                                    color: "#ffec4c",
                                                    bold: true,
                                                    align: "center"
                                                },
                                                compId: 25
                                            } ]
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 329,
                                                x: 153,
                                                width: 229,
                                                scaleY: .8,
                                                scaleX: .8,
                                                name: "button_box",
                                                height: 93,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 94,
                                            child: [ {
                                                type: "Button",
                                                props: {
                                                    y: 46,
                                                    x: 114,
                                                    width: 229,
                                                    stateNum: 1,
                                                    skin: "basePic/btn_yellow.png",
                                                    sizeGrid: "0,48,0,50",
                                                    scaleY: 1,
                                                    scaleX: 1,
                                                    name: "commodityBuy",
                                                    labelStrokeColor: "#70200b",
                                                    labelStroke: 5,
                                                    labelSize: 40,
                                                    labelFont: "SimHei",
                                                    labelColors: "#ffffff",
                                                    labelBold: true,
                                                    label: "28元",
                                                    height: 93,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 26,
                                                child: [ {
                                                    type: "Script",
                                                    props: {
                                                        y: 1,
                                                        x: 0,
                                                        isPlaySound: true,
                                                        isPlayAni: true,
                                                        aniScaleY: "1",
                                                        aniScaleX: "1",
                                                        runtime: "script/ButtonAni.ts"
                                                    },
                                                    compId: 98
                                                } ]
                                            } ]
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 168,
                                                x: 153,
                                                skin: "iconAndSkin/skin_monthlyCard.png",
                                                name: "itemImage",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 27
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 245,
                                                x: 43,
                                                name: "commoBox"
                                            },
                                            compId: 84,
                                            child: [ {
                                                type: "Label",
                                                props: {
                                                    y: 0,
                                                    x: 19,
                                                    width: 67,
                                                    valign: "middle",
                                                    text: "1元 = ",
                                                    strokeColor: "#0b3170",
                                                    stroke: 3.5,
                                                    height: 37,
                                                    fontSize: 23,
                                                    font: "SimHei",
                                                    color: "#ffffff",
                                                    bold: true,
                                                    align: "center"
                                                },
                                                compId: 28
                                            }, {
                                                type: "Label",
                                                props: {
                                                    y: 1,
                                                    x: 89,
                                                    width: 125,
                                                    valign: "middle",
                                                    text: "6000金币",
                                                    strokeColor: "#70200b",
                                                    stroke: 4,
                                                    name: "giveNum",
                                                    height: 36,
                                                    fontSize: 23,
                                                    font: "SimHei",
                                                    color: "#ffec4c",
                                                    bold: true,
                                                    align: "left"
                                                },
                                                compId: 29
                                            } ]
                                        } ]
                                    } ]
                                }, {
                                    type: "ProgressBar",
                                    props: {
                                        y: 557,
                                        x: 327,
                                        width: 450,
                                        var: "pro_vipExp",
                                        value: 0,
                                        skin: "noZip/progress3.png",
                                        sizeGrid: "0,12,0,12",
                                        height: 30
                                    },
                                    compId: 31
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 557,
                                        x: 327,
                                        width: 449,
                                        var: "text_vipExp",
                                        valign: "middle",
                                        text: "1/10",
                                        strokeColor: "#0b3170",
                                        stroke: 3.5,
                                        height: 26,
                                        fontSize: 25,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 90
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 583,
                                        x: 1012,
                                        width: 227,
                                        var: "btn_vip",
                                        stateNum: 1,
                                        skin: "noZip/btn_green.png",
                                        sizeGrid: "0,52,0,49",
                                        labelStrokeColor: "#226306",
                                        labelStroke: 4,
                                        labelSize: 36,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "贵族特权",
                                        height: 93,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 114,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            isPlaySound: true,
                                            isPlayAni: true,
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 97
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 526,
                                        x: 211,
                                        width: 118,
                                        height: 78
                                    },
                                    compId: 115,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 48,
                                            x: 59,
                                            var: "currentVipBg",
                                            skin: "common/img_huiz_10.png",
                                            anchorY: .6,
                                            anchorX: .5
                                        },
                                        compId: 116
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 23,
                                            x: 35,
                                            width: 124,
                                            var: "currentVipNum",
                                            valign: "middle",
                                            text: "8",
                                            scaleY: .4,
                                            scaleX: .4,
                                            height: 75,
                                            font: "numberFont1",
                                            align: "center"
                                        },
                                        compId: 35
                                    } ]
                                }, {
                                    type: "ViewStack",
                                    props: {
                                        y: 527,
                                        x: 777,
                                        width: 118,
                                        var: "nextVipView",
                                        selectedIndex: 0,
                                        height: 78
                                    },
                                    compId: 36,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: -1,
                                            x: 0,
                                            width: 118,
                                            name: "item0",
                                            height: 78
                                        },
                                        compId: 37,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 48,
                                                x: 59,
                                                var: "nextVipBg",
                                                skin: "common/img_huiz_10.png",
                                                anchorY: .6,
                                                anchorX: .5
                                            },
                                            compId: 38
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 23,
                                                x: 34,
                                                width: 128,
                                                var: "nextVipNum",
                                                valign: "middle",
                                                text: "8",
                                                scaleY: .4,
                                                scaleX: .4,
                                                height: 75,
                                                font: "numberFont1",
                                                align: "center"
                                            },
                                            compId: 39
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 24,
                                            x: 13,
                                            skin: "common/img_vipMax.png",
                                            scaleY: .5,
                                            scaleX: .5,
                                            name: "item1"
                                        },
                                        compId: 40
                                    } ]
                                }, {
                                    type: "Tab",
                                    props: {
                                        y: 107,
                                        x: 1,
                                        visible: false,
                                        var: "tab_commType"
                                    },
                                    compId: 81,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            stateNum: 1,
                                            skin: "common/btn_4.png",
                                            name: "item0",
                                            labelStrokeColor: "#70200b",
                                            labelStroke: 0,
                                            labelSize: 40,
                                            labelFont: "SimHei",
                                            labelColors: "#0b3170",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "金\\n币"
                                        },
                                        compId: 80
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 176,
                                            x: 0,
                                            stateNum: 1,
                                            skin: "common/btn_4.png",
                                            name: "item1",
                                            labelStrokeColor: "#70200b",
                                            labelStroke: 0,
                                            labelSize: 40,
                                            labelFont: "SimHei",
                                            labelColors: "#0b3170",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "钻\\n石"
                                        },
                                        compId: 79
                                    }, {
                                        type: "Script",
                                        props: {
                                            isPlaySound: true,
                                            isPlayAni: false,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 105
                                    } ]
                                }, {
                                    type: "HTMLDivElement",
                                    props: {
                                        y: 609,
                                        x: 329,
                                        width: 554,
                                        var: "text_html",
                                        mouseEnabled: false,
                                        height: 40,
                                        runtime: "laya.html.dom.HTMLDivElement"
                                    },
                                    compId: 104
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 114,
                                        text: "适度娱乐，理性消费",
                                        strokeColor: "#004b6e",
                                        stroke: 2,
                                        fontSize: 18,
                                        font: "SimHei",
                                        color: "#85efff",
                                        centerX: 18
                                    },
                                    compId: 122
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    var: "returnBack",
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 120
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "prefab/dialogTitle.prefab", "hall/btn_shouc.png", "common/img_title_0.png", "hall/img_shop_0.png", "comp/hscroll.png", "prefab/commodityBg.prefab", "common/img_guang_0.png", "common/img_piaod.png", "basePic/btn_yellow.png", "iconAndSkin/skin_monthlyCard.png", "noZip/progress3.png", "noZip/btn_green.png", "common/img_huiz_10.png", "common/img_vipMax.png", "common/btn_4.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return ShopDialogUI;
                }(Laya.Dialog);
                hallScene.ShopDialogUI = ShopDialogUI;
                REG("ui.hallScene.ShopDialogUI", ShopDialogUI);
                var VipConfirmUI = function(_super) {
                    __extends(VipConfirmUI, _super);
                    function VipConfirmUI() {
                        return _super.call(this) || this;
                    }
                    VipConfirmUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(VipConfirmUI.uiView);
                    };
                    VipConfirmUI.uiView = {
                        type: "View",
                        props: {
                            width: 796,
                            height: 505
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                width: 796,
                                skin: "noZip/img_bg_8.png",
                                sizeGrid: "20,41,24,39",
                                mouseEnabled: true,
                                height: 505,
                                alpha: 1
                            },
                            compId: 41,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 29,
                                    x: 24,
                                    width: 748,
                                    skin: "noZip/img_bg_15.png",
                                    sizeGrid: "31,72,41,73",
                                    height: 419,
                                    centerX: 0
                                },
                                compId: 85,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 286,
                                        x: 0,
                                        width: 749,
                                        skin: "basePic/img_black_bg.png",
                                        height: 134,
                                        alpha: .2
                                    },
                                    compId: 111
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 308,
                                        x: -14,
                                        skin: "activitys/img_rzjl.png"
                                    },
                                    compId: 104
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 39,
                                        x: 32,
                                        width: 200,
                                        valign: "middle",
                                        text: "姓名：",
                                        height: 32,
                                        fontSize: 30,
                                        font: "SimHei",
                                        color: "#0f5180",
                                        bold: true,
                                        align: "right"
                                    },
                                    compId: 91
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 35,
                                        x: 241,
                                        width: 450,
                                        skin: "noZip/img_bg_1.png",
                                        sizeGrid: "20,21,23,22",
                                        height: 40
                                    },
                                    compId: 92,
                                    child: [ {
                                        type: "TextInput",
                                        props: {
                                            y: 5,
                                            x: 25,
                                            width: 400,
                                            var: "text_input1",
                                            valign: "middle",
                                            strokeColor: "#0b3170",
                                            stroke: 3.5,
                                            prompt: "必填项目",
                                            height: 30,
                                            fontSize: 28,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 126
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 100,
                                        x: 32,
                                        width: 200,
                                        valign: "middle",
                                        text: "手机：",
                                        height: 32,
                                        fontSize: 30,
                                        font: "SimHei",
                                        color: "#0f5180",
                                        bold: true,
                                        align: "right"
                                    },
                                    compId: 100
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 96,
                                        x: 241,
                                        width: 450,
                                        skin: "noZip/img_bg_1.png",
                                        sizeGrid: "20,21,23,22",
                                        height: 40
                                    },
                                    compId: 96,
                                    child: [ {
                                        type: "TextInput",
                                        props: {
                                            y: 5,
                                            x: 25,
                                            width: 400,
                                            var: "text_input2",
                                            valign: "middle",
                                            strokeColor: "#0b3170",
                                            stroke: 3.5,
                                            prompt: "必填项目",
                                            height: 30,
                                            fontSize: 28,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 127
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 162,
                                        x: 32,
                                        width: 200,
                                        valign: "middle",
                                        text: "QQ/微信：",
                                        height: 32,
                                        fontSize: 30,
                                        font: "SimHei",
                                        color: "#0f5180",
                                        bold: true,
                                        align: "right"
                                    },
                                    compId: 101
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 158,
                                        x: 241,
                                        width: 450,
                                        skin: "noZip/img_bg_1.png",
                                        sizeGrid: "20,21,23,22",
                                        height: 40
                                    },
                                    compId: 97,
                                    child: [ {
                                        type: "TextInput",
                                        props: {
                                            y: 5,
                                            x: 25,
                                            width: 400,
                                            var: "text_input3",
                                            valign: "middle",
                                            strokeColor: "#0b3170",
                                            stroke: 3.5,
                                            prompt: "必填项目",
                                            height: 30,
                                            fontSize: 28,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 128
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 223,
                                        x: 32,
                                        width: 200,
                                        valign: "middle",
                                        text: "短信验证码：",
                                        height: 32,
                                        fontSize: 30,
                                        font: "SimHei",
                                        color: "#0f5180",
                                        bold: true,
                                        align: "right"
                                    },
                                    compId: 102
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 219,
                                        x: 241,
                                        width: 300,
                                        skin: "noZip/img_bg_1.png",
                                        sizeGrid: "20,21,23,22",
                                        height: 40
                                    },
                                    compId: 98,
                                    child: [ {
                                        type: "TextInput",
                                        props: {
                                            y: 5,
                                            x: 25,
                                            width: 250,
                                            var: "text_input4",
                                            valign: "middle",
                                            strokeColor: "#0b3170",
                                            stroke: 3.5,
                                            prompt: "请输入验证码",
                                            height: 30,
                                            fontSize: 28,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 129
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 239,
                                        x: 623,
                                        width: 284,
                                        var: "btn_send",
                                        stateNum: 1,
                                        skin: "common/btn_blue.png",
                                        sizeGrid: "0,51,0,47",
                                        scaleY: .5,
                                        scaleX: .5,
                                        labelStrokeColor: "#0b3170",
                                        labelStroke: 6,
                                        labelSize: 48,
                                        labelFont: "SimHei",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        label: "发送",
                                        height: 93,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 109,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: .5,
                                            aniScaleX: .5,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 110
                                    } ]
                                }, {
                                    type: "List",
                                    props: {
                                        y: 302.1,
                                        x: 187,
                                        var: "list_reward",
                                        spaceX: 8,
                                        repeatY: 1,
                                        repeatX: 3
                                    },
                                    compId: 112,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 4,
                                            x: 0,
                                            width: 84.8,
                                            renderType: "render",
                                            height: 84.8
                                        },
                                        compId: 113,
                                        child: [ {
                                            type: "Panel",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 84.8,
                                                height: 84.8
                                            },
                                            compId: 114
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 106,
                                                skin: "firstPic/img_item_bg.png",
                                                scaleY: .8,
                                                scaleX: .8,
                                                height: 106
                                            },
                                            compId: 115
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 43,
                                                x: 42,
                                                scaleY: .8,
                                                scaleX: .8,
                                                name: "imgItem",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 116
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: -6,
                                                x: -4,
                                                visible: false,
                                                skin: "hall/img_mail_5.png",
                                                name: "imgGot"
                                            },
                                            compId: 117
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 58,
                                                x: 5,
                                                width: 94,
                                                text: "x25",
                                                styleSkin: "common/label.png",
                                                strokeColor: "#0b3170",
                                                stroke: 3,
                                                scaleY: .8,
                                                scaleX: .8,
                                                name: "lblCount",
                                                height: 24,
                                                fontSize: 24,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 118
                                        } ]
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 346.5,
                                        x: 606,
                                        width: 228,
                                        var: "btn_confirm",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,54,0,58",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 3.5,
                                        labelSize: 32,
                                        labelFont: "黑体",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        labelAlign: "center",
                                        label: "立即认证",
                                        height: 93,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 119,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 120
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 261,
                                        x: 567,
                                        width: 132,
                                        valign: "middle",
                                        text: "秒后可再次发送",
                                        height: 20,
                                        fontSize: 18,
                                        font: "SimHei",
                                        color: "#0f5180",
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 123
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 261,
                                        x: 539,
                                        width: 24,
                                        var: "label_second",
                                        valign: "middle",
                                        text: "59",
                                        height: 20,
                                        fontSize: 18,
                                        font: "SimHei",
                                        color: "#0f5180",
                                        bold: true,
                                        align: "right"
                                    },
                                    compId: 124
                                } ]
                            }, {
                                type: "Label",
                                props: {
                                    y: 459,
                                    x: 302,
                                    width: 371,
                                    valign: "middle",
                                    text: "及以上玩家完成认证即可获得奖励",
                                    height: 26,
                                    fontSize: 24,
                                    font: "SimHei",
                                    color: "#b3f3ff",
                                    bold: true,
                                    align: "left"
                                },
                                compId: 103
                            }, {
                                type: "Image",
                                props: {
                                    y: 474,
                                    x: 237,
                                    skin: "common/img_vip.png",
                                    scaleY: .32,
                                    scaleX: .32,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 121
                            }, {
                                type: "Image",
                                props: {
                                    y: 453,
                                    x: 154,
                                    skin: "common/btn_help_1.png",
                                    label: "label"
                                },
                                compId: 122
                            }, {
                                type: "Label",
                                props: {
                                    y: 453,
                                    x: 268,
                                    width: 69,
                                    valign: "middle",
                                    text: "2",
                                    scaleY: .36,
                                    scaleX: .36,
                                    height: 61,
                                    fontSize: 18,
                                    font: "numberFont1",
                                    color: "#0f5180",
                                    bold: true,
                                    align: "right"
                                },
                                compId: 125
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 11,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 57
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 57
                                    } ]
                                }
                            } ],
                            name: "ticketMove",
                            id: 1,
                            frameRate: 30,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 27,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: false,
                                        target: 27,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 57
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: false,
                                        target: 27,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 36
                                    }, {
                                        value: 1.15,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 45
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 52
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 55
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 57
                                    } ]
                                }
                            }, {
                                target: 28,
                                keyframes: {
                                    y: [ {
                                        value: 120.5,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 28,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 126.5,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 28,
                                        key: "y",
                                        index: 31
                                    }, {
                                        value: 120.79625,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 28,
                                        key: "y",
                                        index: 57
                                    } ]
                                }
                            } ],
                            name: "titleMove",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "noZip/img_bg_8.png", "noZip/img_bg_15.png", "basePic/img_black_bg.png", "activitys/img_rzjl.png", "noZip/img_bg_1.png", "common/btn_blue.png", "firstPic/img_item_bg.png", "hall/img_mail_5.png", "common/label.png", "basePic/btn_yellow.png", "common/img_vip.png", "common/btn_help_1.png" ],
                        loadList3D: []
                    };
                    return VipConfirmUI;
                }(Laya.View);
                hallScene.VipConfirmUI = VipConfirmUI;
                REG("ui.hallScene.VipConfirmUI", VipConfirmUI);
                var VipDlgUI = function(_super) {
                    __extends(VipDlgUI, _super);
                    function VipDlgUI() {
                        return _super.call(this) || this;
                    }
                    VipDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(VipDlgUI.uiView);
                    };
                    VipDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 1,
                                alpha: .8
                            },
                            compId: 93
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 92,
                            child: [ {
                                type: "Box",
                                props: {
                                    presetID: 1,
                                    centerY: 22,
                                    centerX: 0,
                                    y: 0,
                                    x: 0,
                                    width: 1099,
                                    name: "dialogTitle",
                                    isPresetRoot: true,
                                    height: 621
                                },
                                compId: 156,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        presetID: 2,
                                        y: 0,
                                        x: 0,
                                        width: 1099,
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "0,42,0,53",
                                        height: 621
                                    },
                                    compId: 9
                                }, {
                                    type: "Image",
                                    props: {
                                        presetID: 3,
                                        y: -5,
                                        x: -8,
                                        width: 1115,
                                        skin: "noZip/img_title_3.png",
                                        sizeGrid: "0,261,0,256",
                                        height: 83
                                    },
                                    compId: 10
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 1116,
                                    height: 660,
                                    centerY: 3,
                                    centerX: 0
                                },
                                compId: 152,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        skin: "common/img_title_0.png",
                                        centerX: 0
                                    },
                                    compId: 160
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 6,
                                        skin: "common/img_teq_0.png",
                                        centerX: 0
                                    },
                                    compId: 161
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 559.5,
                                        x: 719,
                                        var: "imgMax",
                                        skin: "common/img_vipMax.png",
                                        scaleY: .5,
                                        scaleX: .5
                                    },
                                    compId: 91
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 536,
                                        x: 59,
                                        width: 750,
                                        var: "boxBottom",
                                        height: 90
                                    },
                                    compId: 94,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 40,
                                            x: 32,
                                            var: "currentVipBg",
                                            skin: "common/img_huiz_10.png",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 163
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 48,
                                            x: 32,
                                            width: 124,
                                            text: "1",
                                            scaleY: .4,
                                            scaleX: .4,
                                            name: "lblNowLevel",
                                            height: 75,
                                            font: "numberFont1",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 88
                                    }, {
                                        type: "ProgressBar",
                                        props: {
                                            x: 85,
                                            width: 453,
                                            var: "pbrProgress",
                                            value: 0,
                                            skin: "noZip/progress3.png",
                                            sizeGrid: "0,15,0,15",
                                            height: 34,
                                            centerY: 0
                                        },
                                        compId: 23,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 2,
                                                width: 328,
                                                text: "~1/1",
                                                strokeColor: "#0b3170",
                                                stroke: 4,
                                                name: "lblProgress",
                                                height: 30,
                                                fontSize: 26,
                                                color: "#ffffff",
                                                centerX: 0,
                                                align: "center"
                                            },
                                            compId: 74
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 40,
                                            x: 601,
                                            var: "nextVipBg",
                                            skin: "common/img_huiz_10.png",
                                            name: "imgVipRight",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 164
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 48,
                                            x: 601,
                                            width: 124,
                                            scaleY: .4,
                                            scaleX: .4,
                                            name: "lblNextLevel",
                                            height: 75,
                                            font: "numberFont1",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 89
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 594,
                                        x: 937,
                                        width: 228,
                                        var: "btnCharge",
                                        stateNum: 1,
                                        skin: "basePic/btn_yellow.png",
                                        sizeGrid: "0,55,0,52",
                                        labelStrokeColor: "#70200b",
                                        labelStroke: 3.8,
                                        labelSize: 35,
                                        labelFont: "黑体",
                                        labelColors: "#ffffff",
                                        labelBold: true,
                                        label: "充值",
                                        height: 94,
                                        gray: false,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 22,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: "1",
                                            aniScaleX: "1",
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 96
                                    } ]
                                }, {
                                    type: "HBox",
                                    props: {
                                        y: 611,
                                        x: 146,
                                        width: 668,
                                        var: "boxDesc",
                                        height: 30
                                    },
                                    compId: 76,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            text: "再充值",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            fontSize: 25,
                                            font: "SimHei",
                                            color: "#ffffff"
                                        },
                                        compId: 85
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            strokeColor: "#5e2100",
                                            stroke: 4,
                                            name: "lblBottomCost",
                                            fontSize: 25,
                                            font: "SimHei",
                                            color: "#ffde00"
                                        },
                                        compId: 86
                                    }, {
                                        type: "Label",
                                        props: {
                                            text: "，升级到",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            fontSize: 25,
                                            font: "SimHei",
                                            color: "#ffffff"
                                        },
                                        compId: 77
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            strokeColor: "#5e2100",
                                            stroke: 4,
                                            name: "lblBottomLevel",
                                            fontSize: 25,
                                            font: "SimHei",
                                            color: "#ffde00"
                                        },
                                        compId: 87
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            fontSize: 25,
                                            font: "SimHei",
                                            color: "#ffffff"
                                        },
                                        compId: 84
                                    } ]
                                }, {
                                    type: "List",
                                    props: {
                                        y: 137,
                                        width: 1006,
                                        var: "lstVip",
                                        spaceX: 20,
                                        renderType: "render",
                                        height: 392,
                                        centerX: 0
                                    },
                                    compId: 143,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            width: 1006,
                                            name: "render",
                                            height: 392
                                        },
                                        compId: 144,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                width: 1006,
                                                skin: "noZip/img_bg_8.png",
                                                sizeGrid: "20,41,24,39",
                                                height: 392
                                            },
                                            compId: 107
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 393,
                                                name: "boxBattery",
                                                height: 388
                                            },
                                            compId: 109,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    y: 23,
                                                    skin: "package/img_beib_0.png",
                                                    scaleY: .75,
                                                    scaleX: .75,
                                                    name: "imgFir",
                                                    centerX: 0
                                                },
                                                compId: 126
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 209,
                                                    name: "imgThird",
                                                    centerX: 0,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 159
                                            }, {
                                                type: "Image",
                                                props: {
                                                    y: 159,
                                                    name: "imgSec",
                                                    centerX: 0,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 125
                                            } ]
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 38,
                                                x: -10,
                                                skin: "vipCharge/img_vip_top.png"
                                            },
                                            compId: 104
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 49,
                                                x: 25,
                                                width: 62,
                                                skin: "common/img_vip.png",
                                                height: 34
                                            },
                                            compId: 25
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 24,
                                                x: 388,
                                                skin: "vipCharge/img_vip_split.png"
                                            },
                                            compId: 113
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 68,
                                                x: 506,
                                                width: 66,
                                                skin: "vipCharge/img_vip_arrow.png",
                                                height: 7
                                            },
                                            compId: 132
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 68,
                                                x: 875,
                                                skin: "vipCharge/img_vip_arrow.png",
                                                scaleX: -1
                                            },
                                            compId: 133
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 48,
                                                x: 83,
                                                width: 124,
                                                text: "1",
                                                scaleY: .4,
                                                scaleX: .4,
                                                name: "lblNowVip",
                                                height: 75,
                                                font: "numberFont1",
                                                centerX: -395,
                                                align: "center"
                                            },
                                            compId: 106
                                        }, {
                                            type: "Label",
                                            props: {
                                                width: 418,
                                                text: "VIP2专属特权",
                                                strokeColor: "#5e2100",
                                                stroke: 4,
                                                name: "lblVipDesc",
                                                height: 29,
                                                fontSize: 29,
                                                font: "黑体",
                                                color: "#ffde00",
                                                centerY: -121,
                                                centerX: 187,
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 134
                                        }, {
                                            type: "List",
                                            props: {
                                                y: 96,
                                                x: 445,
                                                width: 524,
                                                renderType: "render",
                                                name: "lstDesc",
                                                height: 239
                                            },
                                            compId: 136,
                                            child: [ {
                                                type: "Box",
                                                props: {
                                                    width: 478,
                                                    name: "render",
                                                    height: 40
                                                },
                                                compId: 137,
                                                child: [ {
                                                    type: "Image",
                                                    props: {
                                                        x: 25,
                                                        skin: "common/btn_jiant.png",
                                                        scaleY: .24,
                                                        scaleX: -.24,
                                                        centerY: 0
                                                    },
                                                    compId: 138
                                                }, {
                                                    type: "Label",
                                                    props: {
                                                        x: 39,
                                                        strokeColor: "#0b3170",
                                                        stroke: 4,
                                                        name: "lblDesc",
                                                        fontSize: 24,
                                                        font: "黑体",
                                                        color: "#C1FDFA",
                                                        centerY: 0,
                                                        bold: true
                                                    },
                                                    compId: 139
                                                } ]
                                            } ]
                                        } ]
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        x: 4,
                                        var: "btnLeft",
                                        stateNum: 1,
                                        skin: "common/btn_jiant.png",
                                        centerY: 3,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 151,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 157
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        x: 1115,
                                        width: 50,
                                        var: "btnRight",
                                        stateNum: 1,
                                        skin: "common/btn_jiant.png",
                                        scaleY: -1,
                                        rotation: 180,
                                        height: 83,
                                        centerY: 3,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 150,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: -1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 158
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    var: "btnBack",
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 165
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "prefab/dialogTitle.prefab", "common/img_title_0.png", "common/img_teq_0.png", "common/img_vipMax.png", "common/img_huiz_10.png", "noZip/progress3.png", "basePic/btn_yellow.png", "noZip/img_bg_8.png", "package/img_beib_0.png", "vipCharge/img_vip_top.png", "common/img_vip.png", "vipCharge/img_vip_split.png", "vipCharge/img_vip_arrow.png", "common/btn_jiant.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return VipDlgUI;
                }(Laya.Dialog);
                hallScene.VipDlgUI = VipDlgUI;
                REG("ui.hallScene.VipDlgUI", VipDlgUI);
                var vipRebateDlgUI = function(_super) {
                    __extends(vipRebateDlgUI, _super);
                    function vipRebateDlgUI() {
                        return _super.call(this) || this;
                    }
                    vipRebateDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(vipRebateDlgUI.uiView);
                    };
                    vipRebateDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                alpha: .7
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Image",
                                props: {
                                    width: 680,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "42,52,59,65",
                                    height: 480,
                                    centerY: 22,
                                    centerX: 0
                                },
                                compId: 5,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        y: 14,
                                        var: "returnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        right: -18,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 6
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -11,
                                        x: 148,
                                        width: 393,
                                        skin: "noZip/img_title_2.png",
                                        sizeGrid: "0,103,0,99",
                                        height: 69
                                    },
                                    compId: 25,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 10,
                                            width: 163,
                                            valign: "middle",
                                            text: "贵族返利",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            height: 44,
                                            fontSize: 40,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            centerX: 0,
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 26
                                    } ]
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 79,
                                        width: 552,
                                        var: "text_vipTips_1",
                                        valign: "middle",
                                        text: "贵族1：每击落100万鱼分返利1个奖券",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 27,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: 73,
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 27
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 112,
                                        width: 552,
                                        var: "text_vipTips_2",
                                        valign: "middle",
                                        text: "贵族1：每击落100万鱼分返利1个奖券",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 27,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: 74,
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 29
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 146,
                                        width: 552,
                                        var: "text_vipTips_3",
                                        valign: "middle",
                                        text: "贵族1：每击落100万鱼分返利1个奖券",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 27,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: 74,
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 30
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 179,
                                        width: 552,
                                        var: "text_vipTips_4",
                                        valign: "middle",
                                        text: "贵族1：每击落100万鱼分返利1个奖券",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 27,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: 74,
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 31
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 212,
                                        width: 552,
                                        var: "text_vipTips_5",
                                        valign: "middle",
                                        text: "贵族1：每击落100万鱼分返利1个奖券",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 27,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: 74,
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 32
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 246,
                                        width: 552,
                                        var: "text_vipTips_6",
                                        valign: "middle",
                                        text: "贵族1：每击落100万鱼分返利1个奖券",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 27,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: 74,
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 33
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 279,
                                        width: 552,
                                        var: "text_vipTips_7",
                                        valign: "middle",
                                        text: "贵族1：每击落100万鱼分返利1个奖券",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 27,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: 74,
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 34
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 312,
                                        width: 552,
                                        var: "text_vipTips_8",
                                        valign: "middle",
                                        text: "贵族1：每击落100万鱼分返利1个奖券",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 27,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: 74,
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 35
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 346,
                                        width: 552,
                                        var: "text_vipTips_9",
                                        valign: "middle",
                                        text: "贵族1：每击落100万鱼分返利1个奖券",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 27,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: 74,
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 36
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 379,
                                        width: 552,
                                        var: "text_vipTips_10",
                                        valign: "middle",
                                        text: "贵族1：每击落100万鱼分返利1个奖券",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 27,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: 74,
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 37
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 426,
                                        valign: "middle",
                                        text: "注：返利奖券按照当前贵族等级计算",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#bcf2f6",
                                        centerX: 0,
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 39
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "firstPic/btn_close.png", "noZip/img_title_2.png" ],
                        loadList3D: []
                    };
                    return vipRebateDlgUI;
                }(Laya.Dialog);
                hallScene.vipRebateDlgUI = vipRebateDlgUI;
                REG("ui.hallScene.vipRebateDlgUI", vipRebateDlgUI);
            })(hallScene = ui.hallScene || (ui.hallScene = {}));
        })(ui = exports.ui || (exports.ui = {}));
        (function(ui) {
            var login;
            (function(login) {
                var LoadingSceneUI = function(_super) {
                    __extends(LoadingSceneUI, _super);
                    function LoadingSceneUI() {
                        return _super.call(this) || this;
                    }
                    LoadingSceneUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(LoadingSceneUI.uiView);
                    };
                    LoadingSceneUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 1630,
                                var: "img_bg",
                                skin: "basePic/img_load_bg.jpg",
                                name: "background",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 2
                        }, {
                            type: "Image",
                            props: {
                                y: 37,
                                x: 212,
                                skin: "basePic/img_logo.png",
                                scaleY: 1,
                                scaleX: 1
                            },
                            compId: 24
                        }, {
                            type: "ProgressBar",
                            props: {
                                width: 855,
                                var: "progressLoading",
                                value: 1,
                                skin: "basePic/progress_load.png",
                                sizeGrid: "0,0,0,0,1",
                                name: "progress_Loading",
                                layoutEnabled: true,
                                height: 32,
                                centerY: 243,
                                centerX: -10
                            },
                            compId: 4
                        }, {
                            type: "Label",
                            props: {
                                width: 521,
                                var: "textLoading",
                                text: "正在加载(不消耗网络流量)...",
                                styleSkin: "comp/label.png",
                                strokeColor: "#0b3170",
                                stroke: 4,
                                layoutEnabled: true,
                                height: 32,
                                fontSize: 28,
                                font: "SimHei",
                                color: "#ffffff",
                                centerY: 205,
                                centerX: 0,
                                bold: true,
                                align: "center"
                            },
                            compId: 5,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 54,
                                    width: 134,
                                    var: "textLoadingNum",
                                    text: "28%",
                                    styleSkin: "comp/label.png",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    scaleY: .9,
                                    scaleX: .9,
                                    layoutEnabled: true,
                                    height: 28,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerX: 0,
                                    bold: true,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 42
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                width: 217,
                                visible: true,
                                var: "label_version",
                                text: "版本号：1.1.0",
                                styleSkin: "comp/label.png",
                                left: -28,
                                layoutEnabled: true,
                                height: 22,
                                fontSize: 20,
                                font: "黑体",
                                color: "#bdeaff",
                                centerY: 318,
                                bold: true,
                                align: "center"
                            },
                            compId: 33
                        }, {
                            type: "Box",
                            props: {
                                y: 654,
                                x: 148,
                                width: 1334,
                                var: "banhao",
                                height: 87,
                                centerY: 322,
                                centerX: 0
                            },
                            compId: 83,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: -2,
                                    x: 291,
                                    width: 752,
                                    text: "本网络游戏适合年满18周岁以上用户使用；为了您的健康，请合理控制游戏时间",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 84
                            }, {
                                type: "Label",
                                props: {
                                    y: 23,
                                    x: 8,
                                    width: 1334,
                                    text: "抵制不良游戏，拒绝盗版游戏。注意自我保护，谨防受骗上当。适度游戏益脑，沉迷游戏伤身。合理安排时间，享受健康生活。",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 85
                            }, {
                                type: "Label",
                                props: {
                                    y: 47,
                                    x: 177,
                                    width: 296,
                                    text: "批准文号:新广出审[2017]4394号",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "left"
                                },
                                compId: 86
                            }, {
                                type: "Label",
                                props: {
                                    y: 47,
                                    x: 479,
                                    width: 334,
                                    text: "出版物号：ISBN 978-7-7979-7774-6",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "left"
                                },
                                compId: 87
                            }, {
                                type: "Label",
                                props: {
                                    y: 47,
                                    x: 791,
                                    width: 371,
                                    text: "备案文号：文网游备字（2017）M-CSG 1472号",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "left"
                                },
                                compId: 88
                            }, {
                                type: "Label",
                                props: {
                                    y: 71,
                                    x: 317,
                                    width: 358,
                                    text: "游戏著作权人:杭州边锋网络技术有限公司",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 89
                            }, {
                                type: "Label",
                                props: {
                                    y: 71,
                                    x: 682,
                                    width: 356,
                                    text: "出版服务单位:杭州边锋网络技术有限公司",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 90
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 715,
                                width: 39,
                                visible: true,
                                var: "state_text",
                                text: "1",
                                styleSkin: "comp/label.png",
                                left: 6,
                                layoutEnabled: true,
                                height: 22,
                                fontSize: 20,
                                font: "黑体",
                                color: "#bdeaff",
                                bold: true,
                                align: "center"
                            },
                            compId: 74
                        }, {
                            type: "Label",
                            props: {
                                y: 715,
                                width: 39,
                                visible: true,
                                var: "log_test",
                                text: "1",
                                styleSkin: "comp/label.png",
                                left: 25,
                                layoutEnabled: true,
                                height: 22,
                                fontSize: 20,
                                font: "黑体",
                                color: "#bdeaff",
                                bold: true,
                                align: "center"
                            },
                            compId: 75
                        } ],
                        loadList: [ "basePic/img_load_bg.jpg", "basePic/img_logo.png", "basePic/progress_load.png", "comp/label.png" ],
                        loadList3D: []
                    };
                    return LoadingSceneUI;
                }(Laya.View);
                login.LoadingSceneUI = LoadingSceneUI;
                REG("ui.login.LoadingSceneUI", LoadingSceneUI);
                var LoadingSceneBtnsDialogUI = function(_super) {
                    __extends(LoadingSceneBtnsDialogUI, _super);
                    function LoadingSceneBtnsDialogUI() {
                        return _super.call(this) || this;
                    }
                    LoadingSceneBtnsDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(LoadingSceneBtnsDialogUI.uiView);
                    };
                    LoadingSceneBtnsDialogUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Button",
                            props: {
                                y: 323,
                                x: 777,
                                var: "btn_editor",
                                skin: "comp/button.png",
                                label: "编辑器"
                            },
                            compId: 11
                        }, {
                            type: "Box",
                            props: {
                                y: 438,
                                x: 578,
                                width: 473,
                                var: "box_btns",
                                height: 156
                            },
                            compId: 15,
                            child: [ {
                                type: "CheckBox",
                                props: {
                                    y: -15,
                                    x: 217.32763671875,
                                    var: "sbtn2",
                                    skin: "comp/checkbox.png",
                                    selected: false,
                                    name: "s2",
                                    labelSize: 30,
                                    labelFont: "Arial",
                                    labelColors: "red",
                                    label: "开发"
                                },
                                compId: 16
                            }, {
                                type: "CheckBox",
                                props: {
                                    y: -12,
                                    x: 110.6552734375,
                                    var: "sbtn1",
                                    skin: "comp/checkbox.png",
                                    selected: false,
                                    name: "s1",
                                    labelSize: 30,
                                    labelFont: "Arial",
                                    labelColors: "red",
                                    label: "QA"
                                },
                                compId: 7
                            }, {
                                type: "Button",
                                props: {
                                    y: 95,
                                    x: 394,
                                    width: 139,
                                    var: "enterBtn",
                                    stateNum: 1,
                                    skin: "basePic/btn1.png",
                                    height: 61,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 9
                            }, {
                                type: "Image",
                                props: {
                                    y: 95,
                                    x: 168,
                                    width: 308,
                                    skin: "noZip/img_bg_17.png",
                                    sizeGrid: "17,19,19,17",
                                    layoutEnabled: true,
                                    height: 52,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 12
                            }, {
                                type: "TextInput",
                                props: {
                                    y: 101,
                                    x: 149,
                                    width: 194,
                                    var: "labelUser",
                                    prompt: "请输入账号...",
                                    pivotY: 26,
                                    pivotX: 65,
                                    height: 43,
                                    fontSize: 30,
                                    font: "黑体",
                                    bold: true,
                                    align: "center"
                                },
                                compId: 13
                            } ]
                        } ],
                        loadList: [ "comp/button.png", "comp/checkbox.png", "basePic/btn1.png", "noZip/img_bg_17.png" ],
                        loadList3D: []
                    };
                    return LoadingSceneBtnsDialogUI;
                }(Laya.View);
                login.LoadingSceneBtnsDialogUI = LoadingSceneBtnsDialogUI;
                REG("ui.login.LoadingSceneBtnsDialogUI", LoadingSceneBtnsDialogUI);
                var PcLoadingSceneUI = function(_super) {
                    __extends(PcLoadingSceneUI, _super);
                    function PcLoadingSceneUI() {
                        return _super.call(this) || this;
                    }
                    PcLoadingSceneUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(PcLoadingSceneUI.uiView);
                    };
                    PcLoadingSceneUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 1630,
                                var: "img_bg",
                                skin: "basePic/img_load_bg.jpg",
                                name: "background",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 2
                        }, {
                            type: "Image",
                            props: {
                                y: 37,
                                x: 212,
                                skin: "basePic/img_logo.png",
                                scaleY: 1,
                                scaleX: 1
                            },
                            compId: 24
                        }, {
                            type: "ProgressBar",
                            props: {
                                width: 855,
                                var: "progressLoading",
                                value: 1,
                                skin: "basePic/progress_load.png",
                                sizeGrid: "0,0,0,0,1",
                                name: "progress_Loading",
                                layoutEnabled: true,
                                height: 32,
                                centerY: 243,
                                centerX: -10
                            },
                            compId: 4
                        }, {
                            type: "Label",
                            props: {
                                width: 521,
                                var: "textLoading",
                                text: "正在加载(不消耗网络流量)...",
                                styleSkin: "comp/label.png",
                                strokeColor: "#0b3170",
                                stroke: 4,
                                layoutEnabled: true,
                                height: 32,
                                fontSize: 28,
                                font: "SimHei",
                                color: "#ffffff",
                                centerY: 205,
                                centerX: 0,
                                bold: true,
                                align: "center"
                            },
                            compId: 5,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 54,
                                    width: 134,
                                    var: "textLoadingNum",
                                    text: "28%",
                                    styleSkin: "comp/label.png",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    scaleY: .9,
                                    scaleX: .9,
                                    layoutEnabled: true,
                                    height: 28,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerX: 0,
                                    bold: true,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 42
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                width: 217,
                                visible: true,
                                var: "label_version",
                                text: "版本号：1.1.0",
                                styleSkin: "comp/label.png",
                                left: 14,
                                layoutEnabled: true,
                                height: 22,
                                fontSize: 20,
                                font: "黑体",
                                color: "#bdeaff",
                                centerY: 349,
                                bold: true,
                                align: "center"
                            },
                            compId: 33
                        }, {
                            type: "Box",
                            props: {
                                y: 654,
                                x: 148,
                                width: 1334,
                                var: "banhao",
                                height: 87,
                                centerY: 322,
                                centerX: 0
                            },
                            compId: 97,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: -2,
                                    x: 291,
                                    width: 752,
                                    text: "本网络游戏适合年满18周岁以上用户使用；为了您的健康，请合理控制游戏时间",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 98
                            }, {
                                type: "Label",
                                props: {
                                    y: 23,
                                    x: 8,
                                    width: 1334,
                                    text: "抵制不良游戏，拒绝盗版游戏。注意自我保护，谨防受骗上当。适度游戏益脑，沉迷游戏伤身。合理安排时间，享受健康生活。",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 99
                            }, {
                                type: "Label",
                                props: {
                                    y: 47,
                                    x: 177,
                                    width: 296,
                                    text: "批准文号:新广出审[2017]4394号",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "left"
                                },
                                compId: 100
                            }, {
                                type: "Label",
                                props: {
                                    y: 47,
                                    x: 479,
                                    width: 334,
                                    text: "出版物号：ISBN 978-7-7979-7774-6",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "left"
                                },
                                compId: 101
                            }, {
                                type: "Label",
                                props: {
                                    y: 47,
                                    x: 791,
                                    width: 371,
                                    text: "备案文号：文网游备字（2017）M-CSG 1472号",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "left"
                                },
                                compId: 102
                            }, {
                                type: "Label",
                                props: {
                                    y: 71,
                                    x: 317,
                                    width: 358,
                                    text: "游戏著作权人:杭州边锋网络技术有限公司",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 103
                            }, {
                                type: "Label",
                                props: {
                                    y: 71,
                                    x: 682,
                                    width: 356,
                                    text: "出版服务单位:杭州边锋网络技术有限公司",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 104
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 715,
                                width: 39,
                                visible: true,
                                var: "state_text",
                                text: "1",
                                styleSkin: "comp/label.png",
                                left: 6,
                                layoutEnabled: true,
                                height: 22,
                                fontSize: 20,
                                font: "黑体",
                                color: "#bdeaff",
                                bold: true,
                                align: "center"
                            },
                            compId: 74
                        }, {
                            type: "Label",
                            props: {
                                y: 715,
                                width: 39,
                                visible: true,
                                var: "log_test",
                                text: "1",
                                styleSkin: "comp/label.png",
                                left: 25,
                                layoutEnabled: true,
                                height: 22,
                                fontSize: 20,
                                font: "黑体",
                                color: "#bdeaff",
                                bold: true,
                                align: "center"
                            },
                            compId: 75
                        }, {
                            type: "Button",
                            props: {
                                y: 323,
                                x: 777,
                                var: "btn_editor",
                                skin: "comp/button.png",
                                label: "编辑器"
                            },
                            compId: 82
                        }, {
                            type: "Box",
                            props: {
                                y: 438,
                                x: 578,
                                width: 473,
                                var: "box_btns",
                                height: 156
                            },
                            compId: 83,
                            child: [ {
                                type: "CheckBox",
                                props: {
                                    y: -15,
                                    x: 357,
                                    var: "sbtn_wanmiao",
                                    skin: "comp/checkbox.png",
                                    selected: false,
                                    name: "s2",
                                    labelSize: 30,
                                    labelFont: "Arial",
                                    labelColors: "red",
                                    label: "万淼"
                                },
                                compId: 90
                            }, {
                                type: "CheckBox",
                                props: {
                                    y: -15,
                                    x: 246,
                                    var: "sbtn_dong",
                                    skin: "comp/checkbox.png",
                                    selected: false,
                                    name: "s3",
                                    labelSize: 30,
                                    labelFont: "Arial",
                                    labelColors: "red",
                                    label: "董亚楠"
                                },
                                compId: 89
                            }, {
                                type: "CheckBox",
                                props: {
                                    y: -15,
                                    x: 135,
                                    var: "sbtn_kaifa",
                                    skin: "comp/checkbox.png",
                                    selected: false,
                                    name: "s4",
                                    labelSize: 30,
                                    labelFont: "Arial",
                                    labelColors: "red",
                                    label: "开发"
                                },
                                compId: 84
                            }, {
                                type: "CheckBox",
                                props: {
                                    y: -15,
                                    x: 41,
                                    var: "sbtn1",
                                    skin: "comp/checkbox.png",
                                    selected: false,
                                    name: "s1",
                                    labelSize: 30,
                                    labelFont: "Arial",
                                    labelColors: "red",
                                    label: "QA"
                                },
                                compId: 85
                            }, {
                                type: "CheckBox",
                                props: {
                                    y: -15,
                                    x: 463.5,
                                    var: "sbtn_jincheng",
                                    skin: "comp/checkbox.png",
                                    selected: false,
                                    name: "s5",
                                    labelSize: 30,
                                    labelFont: "Arial",
                                    labelColors: "red",
                                    label: "锦城"
                                },
                                compId: 91
                            }, {
                                type: "Button",
                                props: {
                                    y: 95,
                                    x: 394,
                                    width: 139,
                                    var: "enterBtn",
                                    stateNum: 1,
                                    skin: "basePic/btn1.png",
                                    height: 61,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 86
                            }, {
                                type: "Image",
                                props: {
                                    y: 95,
                                    x: 168,
                                    width: 308,
                                    skin: "noZip/img_bg_17.png",
                                    sizeGrid: "17,19,19,17",
                                    layoutEnabled: true,
                                    height: 52,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 87
                            }, {
                                type: "TextInput",
                                props: {
                                    y: 101,
                                    x: 149,
                                    width: 194,
                                    var: "labelUser",
                                    prompt: "请输入账号...",
                                    pivotY: 26,
                                    pivotX: 65,
                                    height: 43,
                                    fontSize: 30,
                                    font: "黑体",
                                    bold: true,
                                    align: "center"
                                },
                                compId: 88
                            } ]
                        } ],
                        loadList: [ "basePic/img_load_bg.jpg", "basePic/img_logo.png", "basePic/progress_load.png", "comp/label.png", "comp/button.png", "comp/checkbox.png", "basePic/btn1.png", "noZip/img_bg_17.png" ],
                        loadList3D: []
                    };
                    return PcLoadingSceneUI;
                }(Laya.View);
                login.PcLoadingSceneUI = PcLoadingSceneUI;
                REG("ui.login.PcLoadingSceneUI", PcLoadingSceneUI);
                var WxLoadingSceneUI = function(_super) {
                    __extends(WxLoadingSceneUI, _super);
                    function WxLoadingSceneUI() {
                        return _super.call(this) || this;
                    }
                    WxLoadingSceneUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(WxLoadingSceneUI.uiView);
                    };
                    WxLoadingSceneUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 1630,
                                var: "img_bg",
                                skin: "basePic/img_load_bg.jpg",
                                name: "background",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 2
                        }, {
                            type: "Image",
                            props: {
                                y: 37,
                                x: 212,
                                skin: "basePic/img_logo.png",
                                scaleY: 1,
                                scaleX: 1
                            },
                            compId: 24
                        }, {
                            type: "ProgressBar",
                            props: {
                                width: 855,
                                var: "progressLoading",
                                value: 1,
                                skin: "basePic/progress_load.png",
                                sizeGrid: "0,0,0,0,1",
                                name: "progress_Loading",
                                layoutEnabled: true,
                                height: 32,
                                centerY: 243,
                                centerX: -10
                            },
                            compId: 4
                        }, {
                            type: "Label",
                            props: {
                                width: 521,
                                var: "textLoading",
                                text: "正在加载(不消耗网络流量)...",
                                styleSkin: "comp/label.png",
                                strokeColor: "#0b3170",
                                stroke: 4,
                                layoutEnabled: true,
                                height: 32,
                                fontSize: 28,
                                font: "SimHei",
                                color: "#ffffff",
                                centerY: 205,
                                centerX: 0,
                                bold: true,
                                align: "center"
                            },
                            compId: 5,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 54,
                                    width: 134,
                                    var: "textLoadingNum",
                                    text: "28%",
                                    styleSkin: "comp/label.png",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    scaleY: .9,
                                    scaleX: .9,
                                    layoutEnabled: true,
                                    height: 28,
                                    fontSize: 28,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    centerX: 0,
                                    bold: true,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 42
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 707,
                                x: 26,
                                width: 217,
                                visible: true,
                                var: "label_version",
                                text: "版本号：1.1.0",
                                styleSkin: "comp/label.png",
                                left: 26,
                                layoutEnabled: true,
                                height: 22,
                                fontSize: 20,
                                font: "黑体",
                                color: "#bdeaff",
                                centerY: 343,
                                bold: true,
                                align: "center"
                            },
                            compId: 33
                        }, {
                            type: "Box",
                            props: {
                                y: 654,
                                x: 148,
                                width: 1334,
                                var: "banhao",
                                height: 87,
                                centerY: 322,
                                centerX: 0
                            },
                            compId: 86,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: -2,
                                    x: 291,
                                    width: 752,
                                    text: "本网络游戏适合年满18周岁以上用户使用；为了您的健康，请合理控制游戏时间",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 87
                            }, {
                                type: "Label",
                                props: {
                                    y: 23,
                                    x: 8,
                                    width: 1334,
                                    text: "抵制不良游戏，拒绝盗版游戏。注意自我保护，谨防受骗上当。适度游戏益脑，沉迷游戏伤身。合理安排时间，享受健康生活。",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 88
                            }, {
                                type: "Label",
                                props: {
                                    y: 47,
                                    x: 177,
                                    width: 296,
                                    text: "批准文号:新广出审[2017]4394号",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "left"
                                },
                                compId: 89
                            }, {
                                type: "Label",
                                props: {
                                    y: 47,
                                    x: 479,
                                    width: 334,
                                    text: "出版物号：ISBN 978-7-7979-7774-6",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "left"
                                },
                                compId: 90
                            }, {
                                type: "Label",
                                props: {
                                    y: 47,
                                    x: 791,
                                    width: 371,
                                    text: "备案文号：文网游备字（2017）M-CSG 1472号",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "left"
                                },
                                compId: 91
                            }, {
                                type: "Label",
                                props: {
                                    y: 71,
                                    x: 317,
                                    width: 358,
                                    text: "游戏著作权人:杭州边锋网络技术有限公司",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 92
                            }, {
                                type: "Label",
                                props: {
                                    y: 71,
                                    x: 682,
                                    width: 356,
                                    text: "出版服务单位:杭州边锋网络技术有限公司",
                                    height: 20,
                                    fontSize: 18,
                                    font: "SimHei",
                                    color: "#bdeaff",
                                    align: "center"
                                },
                                compId: 93
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 707,
                                x: 6,
                                width: 39,
                                visible: true,
                                var: "state_text",
                                text: "1",
                                styleSkin: "comp/label.png",
                                left: 6,
                                layoutEnabled: true,
                                height: 22,
                                fontSize: 20,
                                font: "黑体",
                                color: "#bdeaff",
                                bold: true,
                                align: "center"
                            },
                            compId: 74
                        }, {
                            type: "Label",
                            props: {
                                y: 707,
                                x: 25,
                                width: 39,
                                visible: true,
                                var: "log_test",
                                text: "1",
                                styleSkin: "comp/label.png",
                                left: 26,
                                layoutEnabled: true,
                                height: 22,
                                fontSize: 20,
                                font: "黑体",
                                color: "#bdeaff",
                                bold: true,
                                align: "center"
                            },
                            compId: 75
                        } ],
                        loadList: [ "basePic/img_load_bg.jpg", "basePic/img_logo.png", "basePic/progress_load.png", "comp/label.png" ],
                        loadList3D: []
                    };
                    return WxLoadingSceneUI;
                }(Laya.View);
                login.WxLoadingSceneUI = WxLoadingSceneUI;
                REG("ui.login.WxLoadingSceneUI", WxLoadingSceneUI);
            })(login = ui.login || (ui.login = {}));
        })(ui = exports.ui || (exports.ui = {}));
        (function(ui) {
            var roleNodes;
            (function(roleNodes) {
                var CannonNodeUI = function(_super) {
                    __extends(CannonNodeUI, _super);
                    function CannonNodeUI() {
                        return _super.call(this) || this;
                    }
                    CannonNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(CannonNodeUI.uiView);
                    };
                    CannonNodeUI.uiView = {
                        type: "View",
                        props: {
                            y: 150,
                            x: 150,
                            width: 300,
                            mouseThrough: true,
                            mouseEnabled: true,
                            hitTestPrior: true,
                            height: 150,
                            anchorY: 1,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 116,
                                x: 150,
                                visible: false,
                                var: "image_HongYun",
                                skin: "hongYun/lyfb_icontt.png",
                                mouseEnabled: false,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 11
                        }, {
                            type: "Image",
                            props: {
                                y: 116,
                                x: 150,
                                var: "image_turret",
                                skin: "iconAndSkin/skin_Turret_1.png",
                                rotation: 0,
                                mouseThrough: false,
                                mouseEnabled: true,
                                hitTestPrior: true,
                                anchorY: .6,
                                anchorX: .5
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                y: 116,
                                x: 150,
                                width: 94,
                                var: "specialCannon",
                                mouseEnabled: false,
                                height: 209,
                                anchorY: .89,
                                anchorX: .5
                            },
                            compId: 5
                        }, {
                            type: "Box",
                            props: {
                                y: 116,
                                x: 150,
                                width: 10,
                                var: "box_cannon",
                                mouseThrough: false,
                                mouseEnabled: true,
                                hitTestPrior: true,
                                height: 10,
                                anchorY: .9,
                                anchorX: .5
                            },
                            compId: 13,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 24,
                                    x: 5,
                                    var: "image_cannon",
                                    skin: "iconAndSkin/skin_CannonTabe_11.png",
                                    rotation: 0,
                                    mouseThrough: false,
                                    mouseEnabled: true,
                                    hitTestPrior: true,
                                    anchorY: .9,
                                    anchorX: .5
                                },
                                compId: 4,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 117,
                                        x: 60.5,
                                        width: 2,
                                        var: "node_cannon",
                                        height: 2,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 17
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 4,
                                keyframes: {
                                    y: [ {
                                        value: 24,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 4,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 34,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 4,
                                        key: "y",
                                        index: 2
                                    }, {
                                        value: 24,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "y",
                                        index: 5
                                    } ],
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .95,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "scaleY",
                                        index: 2
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "scaleY",
                                        index: 5
                                    } ]
                                }
                            } ],
                            name: "doFire",
                            id: 1,
                            frameRate: 35,
                            action: 0
                        }, {
                            nodes: [],
                            name: "skillRotation",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 11,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "rotation",
                                        index: 100
                                    } ]
                                }
                            } ],
                            name: "HongYunRotation",
                            id: 3,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "hongYun/lyfb_icontt.png", "iconAndSkin/skin_Turret_1.png", "iconAndSkin/skin_CannonTabe_11.png" ],
                        loadList3D: []
                    };
                    return CannonNodeUI;
                }(Laya.View);
                roleNodes.CannonNodeUI = CannonNodeUI;
                REG("ui.roleNodes.CannonNodeUI", CannonNodeUI);
                var CountDownViewUI = function(_super) {
                    __extends(CountDownViewUI, _super);
                    function CountDownViewUI() {
                        return _super.call(this) || this;
                    }
                    CountDownViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(CountDownViewUI.uiView);
                    };
                    CountDownViewUI.uiView = {
                        type: "View",
                        props: {
                            y: 0,
                            x: 0,
                            width: 117,
                            height: 117,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                x: 0,
                                skin: "battle/img_countDown_bg.png"
                            },
                            compId: 3
                        }, {
                            type: "Image",
                            props: {
                                var: "img_countDown_time",
                                skin: "battle/img_countDown_time.png"
                            },
                            compId: 4
                        }, {
                            type: "Image",
                            props: {
                                y: -4,
                                x: 20,
                                skin: "battle/img_countDown_text.png"
                            },
                            compId: 7
                        }, {
                            type: "Label",
                            props: {
                                y: 59,
                                x: 58,
                                width: 100,
                                var: "text_lastTime_light",
                                text: "90",
                                scaleY: .8,
                                scaleX: .8,
                                height: 80,
                                font: "numberFont1",
                                blendMode: "lighter",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .10416666666666663,
                                align: "center"
                            },
                            compId: 10
                        }, {
                            type: "Label",
                            props: {
                                y: 59,
                                x: 58,
                                width: 100,
                                var: "text_lastTime",
                                text: "90",
                                scaleY: .68,
                                scaleX: .68,
                                height: 80,
                                font: "numberFont1",
                                anchorY: .5,
                                anchorX: .5,
                                align: "center"
                            },
                            compId: 5
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 5,
                                keyframes: {
                                    scaleY: [ {
                                        value: .68,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .8,
                                        tweenMethod: "quadOut",
                                        tween: false,
                                        target: 5,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: .8,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: .68,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 16
                                    } ],
                                    scaleX: [ {
                                        value: .68,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .8,
                                        tweenMethod: "quadOut",
                                        tween: false,
                                        target: 5,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: .8,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: .68,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 16
                                    } ]
                                }
                            }, {
                                target: 10,
                                keyframes: {
                                    scaleY: [ {
                                        value: .68,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleY",
                                        index: 8
                                    } ],
                                    scaleX: [ {
                                        value: .68,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleX",
                                        index: 8
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .6,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 24
                                    } ]
                                }
                            } ],
                            name: "ani_0",
                            id: 1,
                            frameRate: 48,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 5,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1.5,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .68,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 8
                                    } ],
                                    scaleX: [ {
                                        value: 1.5,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .68,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 10,
                                keyframes: {
                                    scaleY: [ {
                                        value: .68,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .68,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 2
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 15
                                    } ],
                                    scaleX: [ {
                                        value: .68,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .68,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 2
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 15
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 2
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 19
                                    } ]
                                }
                            } ],
                            name: "ani_1",
                            id: 2,
                            frameRate: 48,
                            action: 0
                        } ],
                        loadList: [ "battle/img_countDown_bg.png", "battle/img_countDown_time.png", "battle/img_countDown_text.png" ],
                        loadList3D: []
                    };
                    return CountDownViewUI;
                }(Laya.View);
                roleNodes.CountDownViewUI = CountDownViewUI;
                REG("ui.roleNodes.CountDownViewUI", CountDownViewUI);
                var DebrisFallViewUI = function(_super) {
                    __extends(DebrisFallViewUI, _super);
                    function DebrisFallViewUI() {
                        return _super.call(this) || this;
                    }
                    DebrisFallViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(DebrisFallViewUI.uiView);
                    };
                    DebrisFallViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 748,
                            height: 77
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                x: 0,
                                width: 748,
                                height: 77,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 8,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 38,
                                    x: 374,
                                    width: 374,
                                    skin: "noZip/img_bg_20.png",
                                    height: 77,
                                    anchorY: .5,
                                    anchorX: 1
                                },
                                compId: 3
                            }, {
                                type: "Image",
                                props: {
                                    y: 38,
                                    x: 374,
                                    width: 374,
                                    skin: "noZip/img_bg_20.png",
                                    scaleX: -1,
                                    height: 77,
                                    anchorY: .5,
                                    anchorX: 1
                                },
                                compId: 5
                            }, {
                                type: "Box",
                                props: {
                                    y: 27,
                                    x: 264,
                                    height: 24,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 6,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        var: "text_describe",
                                        valign: "middle",
                                        text: "成功击落    个碎片",
                                        strokeColor: "#5a0000",
                                        stroke: 4,
                                        left: 0,
                                        height: 24,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerY: 0,
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 4
                                }, {
                                    type: "Label",
                                    props: {
                                        y: -5,
                                        x: 97.875,
                                        var: "text_num",
                                        text: "10",
                                        scaleY: .45,
                                        scaleX: .45,
                                        height: 81,
                                        font: "numberFont1"
                                    },
                                    compId: 7
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 8,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "scaleY",
                                        index: 12
                                    }, {
                                        value: 1,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 60
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 72
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "scaleX",
                                        index: 12
                                    }, {
                                        value: 1,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 60
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 72
                                    } ]
                                }
                            } ],
                            name: "ani_0",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "noZip/img_bg_20.png" ],
                        loadList3D: []
                    };
                    return DebrisFallViewUI;
                }(Laya.View);
                roleNodes.DebrisFallViewUI = DebrisFallViewUI;
                REG("ui.roleNodes.DebrisFallViewUI", DebrisFallViewUI);
                var DragonDiamondNodeUI = function(_super) {
                    __extends(DragonDiamondNodeUI, _super);
                    function DragonDiamondNodeUI() {
                        return _super.call(this) || this;
                    }
                    DragonDiamondNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(DragonDiamondNodeUI.uiView);
                    };
                    DragonDiamondNodeUI.uiView = {
                        type: "View",
                        props: {
                            y: 0,
                            x: 0,
                            width: 75,
                            height: 150,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 75,
                                x: 38,
                                skin: "dragonBall/image_diamond.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 3
                        }, {
                            type: "Image",
                            props: {
                                y: 75,
                                x: 33,
                                skin: "dragonBall/image_appear5.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 60,
                                x: 39,
                                skin: "dragonBall/image_broken1.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 6
                        }, {
                            type: "Image",
                            props: {
                                y: 75,
                                x: 38,
                                skin: "dragonBall/image_diamond1.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 4
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 4,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 24
                                    } ]
                                }
                            } ],
                            name: "diamondShine",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 5,
                                keyframes: {
                                    skin: [ {
                                        value: "dragonBall/image_appear1.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 5,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "dragonBall/image_appear2.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 5,
                                        key: "skin",
                                        index: 2
                                    }, {
                                        value: "dragonBall/image_appear3.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 5,
                                        key: "skin",
                                        index: 4
                                    }, {
                                        value: "dragonBall/image_appear4.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 5,
                                        key: "skin",
                                        index: 6
                                    }, {
                                        value: "dragonBall/image_appear5.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 5,
                                        key: "skin",
                                        index: 8
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 5,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "alpha",
                                        index: 10
                                    } ]
                                }
                            }, {
                                target: 3,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 10
                                    } ]
                                }
                            } ],
                            name: "diamondAppear",
                            id: 2,
                            frameRate: 36,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 6,
                                keyframes: {
                                    skin: [ {
                                        value: "dragonBall/image_broken1.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "dragonBall/image_broken2.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "skin",
                                        index: 3
                                    }, {
                                        value: "dragonBall/image_broken3.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "skin",
                                        index: 5
                                    }, {
                                        value: "dragonBall/image_broken4.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "skin",
                                        index: 6
                                    }, {
                                        value: "dragonBall/image_broken5.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        label: "addBall",
                                        key: "skin",
                                        index: 7
                                    }, {
                                        value: "dragonBall/image_broken6.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "skin",
                                        index: 8
                                    }, {
                                        value: "dragonBall/image_broken7.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "skin",
                                        index: 9
                                    }, {
                                        value: "dragonBall/image_broken8.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "skin",
                                        index: 10
                                    }, {
                                        value: "dragonBall/image_broken9.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "skin",
                                        index: 11
                                    }, {
                                        value: "dragonBall/image_broken10.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "skin",
                                        index: 12
                                    }, {
                                        value: "dragonBall/image_broken11.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "skin",
                                        index: 13
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "alpha",
                                        index: 3
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 14
                                    } ]
                                }
                            }, {
                                target: 3,
                                keyframes: {
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 5
                                    } ]
                                }
                            }, {
                                target: 4,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 0
                                    } ]
                                }
                            } ],
                            name: "diamondBroken",
                            id: 3,
                            frameRate: 18,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 4,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 9
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 18
                                    } ]
                                }
                            } ],
                            name: "diamondShine_0",
                            id: 4,
                            frameRate: 36,
                            action: 0
                        } ],
                        loadList: [ "dragonBall/image_diamond.png", "dragonBall/image_appear5.png", "dragonBall/image_broken1.png", "dragonBall/image_diamond1.png", "dragonBall/image_appear1.png", "dragonBall/image_appear2.png", "dragonBall/image_appear3.png", "dragonBall/image_appear4.png", "dragonBall/image_broken2.png", "dragonBall/image_broken3.png", "dragonBall/image_broken4.png", "dragonBall/image_broken5.png", "dragonBall/image_broken6.png", "dragonBall/image_broken7.png", "dragonBall/image_broken8.png", "dragonBall/image_broken9.png", "dragonBall/image_broken10.png", "dragonBall/image_broken11.png" ],
                        loadList3D: []
                    };
                    return DragonDiamondNodeUI;
                }(Laya.View);
                roleNodes.DragonDiamondNodeUI = DragonDiamondNodeUI;
                REG("ui.roleNodes.DragonDiamondNodeUI", DragonDiamondNodeUI);
                var DragonSeatNodeUI = function(_super) {
                    __extends(DragonSeatNodeUI, _super);
                    function DragonSeatNodeUI() {
                        return _super.call(this) || this;
                    }
                    DragonSeatNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(DragonSeatNodeUI.uiView);
                    };
                    DragonSeatNodeUI.uiView = {
                        type: "View",
                        props: {
                            width: 250,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 750,
                                x: 125,
                                width: 250,
                                var: "box_all",
                                height: 750,
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 12,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: 636,
                                    x: 125,
                                    width: 1,
                                    var: "box_upAni",
                                    height: 1,
                                    centerX: 0,
                                    anchorY: 1,
                                    anchorX: .5
                                },
                                compId: 7
                            }, {
                                type: "Box",
                                props: {
                                    y: 750,
                                    x: 125,
                                    width: 250,
                                    var: "box_seat",
                                    height: 750,
                                    anchorY: 1,
                                    anchorX: .5
                                },
                                compId: 16,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 676,
                                        x: 125,
                                        width: 256.3,
                                        height: 264,
                                        anchorY: 1,
                                        anchorX: .5
                                    },
                                    compId: 13,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 5,
                                            x: 0,
                                            width: 233,
                                            var: "image_dragonSeat",
                                            skin: "dragonBall/image_dragon_red.png",
                                            scaleY: 1.1,
                                            scaleX: 1.1,
                                            height: 240
                                        },
                                        compId: 6
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 634,
                                        x: 2,
                                        width: 246,
                                        skin: "dragonBall/image_dragonBg.png",
                                        height: 82
                                    },
                                    compId: 4,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 6,
                                            x: 27,
                                            width: 191,
                                            var: "dragonScore",
                                            valign: "middle",
                                            text: "6000000",
                                            height: 54,
                                            font: "numberFont5",
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 5
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 594,
                                        x: 33,
                                        width: 1,
                                        var: "box_ball1",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 8
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 574,
                                        x: 200,
                                        width: 1,
                                        var: "box_ball2",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 10
                                } ]
                            } ]
                        } ],
                        loadList: [ "dragonBall/image_dragon_red.png", "dragonBall/image_dragonBg.png" ],
                        loadList3D: []
                    };
                    return DragonSeatNodeUI;
                }(Laya.View);
                roleNodes.DragonSeatNodeUI = DragonSeatNodeUI;
                REG("ui.roleNodes.DragonSeatNodeUI", DragonSeatNodeUI);
                var RewardBoxUI = function(_super) {
                    __extends(RewardBoxUI, _super);
                    function RewardBoxUI() {
                        return _super.call(this) || this;
                    }
                    RewardBoxUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(RewardBoxUI.uiView);
                    };
                    RewardBoxUI.uiView = {
                        type: "View",
                        props: {
                            y: 50,
                            x: 50,
                            width: 100,
                            height: 100,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                var: "img_light",
                                skin: "smallPic/currencyLight0.png",
                                scaleY: .6,
                                scaleX: .6,
                                rotation: 360,
                                centerY: 0,
                                centerX: 0,
                                blendMode: "lighter",
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 9
                        }, {
                            type: "Image",
                            props: {
                                y: 52,
                                x: 50,
                                skin: "firstPic/img_item_bg.png",
                                centerY: 2,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 6,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 53,
                                    x: 53,
                                    var: "img_itemIcon",
                                    skin: "iconAndSkin/icon_skillSd.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 7
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 112.5,
                                var: "text_itemNum",
                                valign: "middle",
                                text: "5000",
                                strokeColor: "#0b3170",
                                stroke: 4,
                                height: 27,
                                fontSize: 27,
                                font: "SimHei",
                                color: "#ffffff",
                                centerX: 0,
                                bold: true,
                                align: "center"
                            },
                            compId: 8
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 9,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 9,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 9,
                                        key: "rotation",
                                        index: 100
                                    } ]
                                }
                            } ],
                            name: "ani_0",
                            id: 1,
                            frameRate: 48,
                            action: 0
                        } ],
                        loadList: [ "smallPic/currencyLight0.png", "firstPic/img_item_bg.png", "iconAndSkin/icon_skillSd.png" ],
                        loadList3D: []
                    };
                    return RewardBoxUI;
                }(Laya.View);
                roleNodes.RewardBoxUI = RewardBoxUI;
                REG("ui.roleNodes.RewardBoxUI", RewardBoxUI);
                var RoomHelpNodeUI = function(_super) {
                    __extends(RoomHelpNodeUI, _super);
                    function RoomHelpNodeUI() {
                        return _super.call(this) || this;
                    }
                    RoomHelpNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(RoomHelpNodeUI.uiView);
                    };
                    RoomHelpNodeUI.uiView = {
                        type: "View",
                        props: {
                            zOrder: 10,
                            width: 400,
                            mouseThrough: true,
                            mouseEnabled: true,
                            height: 200,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 86,
                                skin: "battle/img_battle_5.png",
                                mouseThrough: true,
                                mouseEnabled: true,
                                centerX: 0,
                                alpha: 0
                            },
                            compId: 3,
                            child: [ {
                                type: "Button",
                                props: {
                                    y: 28,
                                    x: 76,
                                    var: "btn_changeCann",
                                    stateNum: 1,
                                    skin: "battle/img_roomBtn_14.png",
                                    anchorY: .45,
                                    anchorX: .5
                                },
                                compId: 5,
                                child: [ {
                                    type: "Script",
                                    props: {
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 9
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 28,
                                    x: 250,
                                    var: "btn_autoPao",
                                    stateNum: 1,
                                    skin: "battle/img_roomBtn_11.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 40,
                                        x: 40,
                                        visible: false,
                                        var: "img_light",
                                        skin: "battle/img_auto_light.png",
                                        rotation: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 8
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 63,
                                        x: -12,
                                        skin: "battle/img_btnText_1.png"
                                    },
                                    compId: 7
                                }, {
                                    type: "Script",
                                    props: {
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 10
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    y: [ {
                                        value: 86,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 10
                                    } ],
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 10
                                    } ]
                                }
                            } ],
                            name: "up",
                            id: 1,
                            frameRate: 42,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    y: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 86,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 10
                                    } ],
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "visible",
                                        index: 10
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 10
                                    } ]
                                }
                            } ],
                            name: "down",
                            id: 2,
                            frameRate: 42,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 8,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "rotation",
                                        index: 90
                                    } ]
                                }
                            } ],
                            name: "lightRotate",
                            id: 3,
                            frameRate: 30,
                            action: 0
                        } ],
                        loadList: [ "battle/img_battle_5.png", "battle/img_roomBtn_14.png", "battle/img_roomBtn_11.png", "battle/img_auto_light.png", "battle/img_btnText_1.png" ],
                        loadList3D: []
                    };
                    return RoomHelpNodeUI;
                }(Laya.View);
                roleNodes.RoomHelpNodeUI = RoomHelpNodeUI;
                REG("ui.roleNodes.RoomHelpNodeUI", RoomHelpNodeUI);
                var seatInfoNodeUI = function(_super) {
                    __extends(seatInfoNodeUI, _super);
                    function seatInfoNodeUI() {
                        return _super.call(this) || this;
                    }
                    seatInfoNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(seatInfoNodeUI.uiView);
                    };
                    seatInfoNodeUI.uiView = {
                        type: "View",
                        props: {
                            y: 41,
                            x: 86,
                            width: 172,
                            mouseEnabled: false,
                            height: 82,
                            anchorY: .5,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                width: 172,
                                var: "box_info",
                                height: 82,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 12,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 19,
                                    x: 86,
                                    width: 172,
                                    skin: "noZip/img_res_1.png",
                                    sizeGrid: "0,24,0,19",
                                    height: 38,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 4,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 19,
                                        x: 86,
                                        width: 173,
                                        var: "box_gold",
                                        height: 38,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 8,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 19,
                                            x: 26,
                                            width: 34,
                                            var: "img_coin",
                                            skin: "firstPic/icon_goldCoin.png",
                                            height: 32,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 9
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 19,
                                            x: 161,
                                            width: 121,
                                            var: "text_gold",
                                            valign: "middle",
                                            text: "58660",
                                            strokeColor: "#0b1370",
                                            stroke: 3,
                                            height: 32,
                                            fontSize: 24,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            anchorY: .5,
                                            anchorX: 1,
                                            align: "right"
                                        },
                                        compId: 10
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: -11,
                                            x: -10.5,
                                            var: "goldLight",
                                            skin: "firstPic/img_res_2.png",
                                            blendMode: "lighter",
                                            alpha: 0
                                        },
                                        compId: 14
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 63,
                                    x: 86,
                                    width: 172,
                                    skin: "noZip/img_res_1.png",
                                    sizeGrid: "0,24,0,19",
                                    height: 38,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 3,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 19,
                                        x: 86,
                                        width: 173,
                                        var: "box_ticket",
                                        height: 38,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 5,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 19,
                                            x: 26,
                                            width: 42,
                                            var: "img_ticket",
                                            skin: "firstPic/ticket.png",
                                            height: 42,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 6
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 19,
                                            x: 162,
                                            width: 115,
                                            var: "text_ticket",
                                            valign: "middle",
                                            text: "58660",
                                            strokeColor: "#0b1370",
                                            stroke: 3,
                                            height: 32,
                                            fontSize: 24,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true,
                                            anchorY: .5,
                                            anchorX: 1,
                                            align: "right"
                                        },
                                        compId: 7
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: -11,
                                            x: -10.5,
                                            var: "ticketLight",
                                            skin: "firstPic/img_res_2.png",
                                            blendMode: "lighter",
                                            alpha: 0
                                        },
                                        compId: 13
                                    } ]
                                } ]
                            } ]
                        } ],
                        loadList: [ "noZip/img_res_1.png", "firstPic/icon_goldCoin.png", "firstPic/img_res_2.png", "firstPic/ticket.png" ],
                        loadList3D: []
                    };
                    return seatInfoNodeUI;
                }(Laya.View);
                roleNodes.seatInfoNodeUI = seatInfoNodeUI;
                REG("ui.roleNodes.seatInfoNodeUI", seatInfoNodeUI);
                var SeatNodeUI = function(_super) {
                    __extends(SeatNodeUI, _super);
                    function SeatNodeUI() {
                        return _super.call(this) || this;
                    }
                    SeatNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(SeatNodeUI.uiView);
                    };
                    SeatNodeUI.uiView = {
                        type: "View",
                        props: {
                            y: 200,
                            x: 150,
                            width: 300,
                            mouseThrough: true,
                            mouseEnabled: true,
                            height: 200,
                            anchorY: 1,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 50,
                                x: 0,
                                width: 300,
                                var: "box_cannon",
                                mouseThrough: true,
                                mouseEnabled: true,
                                height: 150
                            },
                            compId: 18
                        }, {
                            type: "Box",
                            props: {
                                y: 200,
                                x: 150,
                                width: 200,
                                var: "box_numPanel",
                                mouseThrough: true,
                                mouseEnabled: true,
                                height: 100,
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 20
                        }, {
                            type: "Box",
                            props: {
                                y: 200,
                                x: 150,
                                width: 200,
                                var: "box_wait",
                                mouseThrough: true,
                                mouseEnabled: true,
                                height: 100,
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 25
                        } ],
                        loadList: [],
                        loadList3D: []
                    };
                    return SeatNodeUI;
                }(Laya.View);
                roleNodes.SeatNodeUI = SeatNodeUI;
                REG("ui.roleNodes.SeatNodeUI", SeatNodeUI);
                var SeatNumNodeUI = function(_super) {
                    __extends(SeatNumNodeUI, _super);
                    function SeatNumNodeUI() {
                        return _super.call(this) || this;
                    }
                    SeatNumNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(SeatNumNodeUI.uiView);
                    };
                    SeatNumNodeUI.uiView = {
                        type: "View",
                        props: {
                            y: 100,
                            x: 100,
                            width: 200,
                            mouseThrough: true,
                            mouseEnabled: true,
                            height: 100,
                            anchorY: 1,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 64,
                                x: 26,
                                width: 148,
                                skin: "firstPic/img_battle_9.png",
                                mouseEnabled: false,
                                height: 36
                            },
                            compId: 10,
                            child: [ {
                                type: "Label",
                                props: {
                                    y: 20,
                                    x: 74,
                                    width: 148,
                                    var: "text_paobei",
                                    valign: "middle",
                                    text: "100",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    scaleY: .85,
                                    scaleX: .85,
                                    height: 28,
                                    fontSize: 30,
                                    font: "numberFont3",
                                    color: "#31ff00",
                                    bold: true,
                                    anchorY: .5,
                                    anchorX: .5,
                                    align: "center"
                                },
                                compId: 11
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 75,
                                x: 18,
                                width: 100,
                                var: "btn_reduce",
                                height: 100,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 47,
                            child: [ {
                                type: "Button",
                                props: {
                                    stateNum: 1,
                                    skin: "firstPic/btn_paob_1.png",
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 12
                            }, {
                                type: "Script",
                                props: {
                                    y: 17,
                                    x: 16,
                                    isSetSelf: true,
                                    isPlaySound: true,
                                    isPlayAni: true,
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 14
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 75,
                                x: 182,
                                width: 100,
                                var: "btn_plus",
                                height: 100,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 48,
                            child: [ {
                                type: "Button",
                                props: {
                                    stateNum: 1,
                                    skin: "firstPic/btn_paob_0.png",
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 13
                            }, {
                                type: "Script",
                                props: {
                                    y: 17,
                                    x: 16,
                                    isSetSelf: true,
                                    isPlaySound: true,
                                    isPlayAni: true,
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 15
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 101,
                                x: 100,
                                width: 300,
                                var: "box_zuantou",
                                height: 100,
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 16,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 46,
                                    x: 150,
                                    width: 160,
                                    var: "image_ztNum",
                                    skin: "firstPic/img_paob_1.png",
                                    sizeGrid: "0,30,0,30",
                                    rotation: 0,
                                    height: 41,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 17,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 19.5,
                                        x: 80,
                                        width: 350,
                                        var: "text_ztScore",
                                        valign: "top",
                                        text: "999999",
                                        scaleY: .38,
                                        scaleX: .38,
                                        rotation: 0,
                                        height: 70,
                                        font: "numberFont1",
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 19
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 51,
                                    x: 41,
                                    var: "image_ztIcon",
                                    skin: "battle/img_paob_0.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 20,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -9,
                                        x: 5,
                                        skin: "battle/img_zt_1.png"
                                    },
                                    compId: 21
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 101,
                                x: 100,
                                width: 300,
                                var: "box_hongYun",
                                height: 100,
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 28,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 45,
                                    x: 150,
                                    width: 160,
                                    var: "imgae_hyNum",
                                    skin: "battle/img_paob_3.png",
                                    sizeGrid: "0,30,0,30",
                                    rotation: 0,
                                    height: 41,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 29,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 21.5,
                                        x: 80,
                                        width: 350,
                                        var: "text_hyNum",
                                        valign: "top",
                                        text: "999999",
                                        scaleY: .38,
                                        scaleX: .38,
                                        rotation: 0,
                                        height: 70,
                                        font: "numberFont1",
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 30
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: -213,
                                width: 100,
                                visible: false,
                                var: "boxHelp",
                                height: 100,
                                centerX: 0
                            },
                            compId: 37,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 50,
                                    x: 50,
                                    skin: "common/img_guang_1.png",
                                    scaleY: .5,
                                    scaleX: .5,
                                    rotation: 360,
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 39
                            }, {
                                type: "Image",
                                props: {
                                    y: 50,
                                    x: 50,
                                    var: "imgHelp",
                                    skin: "iconAndSkin/skin_goldCoin3.png",
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 38,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 101,
                                        var: "lblHelp",
                                        text: "( 剩余 5 次 )",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        fontSize: 18,
                                        font: "SimHei",
                                        color: "#77fe00",
                                        centerX: 0
                                    },
                                    compId: 41
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 69,
                                        text: "点击领取",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        fontSize: 24,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        centerX: 0
                                    },
                                    compId: 42
                                }, {
                                    type: "Script",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        aniScaleY: 1,
                                        aniScaleX: 1,
                                        runtime: "script/ButtonAni.ts"
                                    },
                                    compId: 43
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 99,
                                x: 101,
                                width: 108,
                                var: "imgFire",
                                skin: "smallPic/zuantouTail_1.png",
                                scaleY: 1,
                                scaleX: 1,
                                height: 191,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 46
                        }, {
                            type: "Image",
                            props: {
                                y: 65,
                                var: "imgBullet",
                                skin: "bullets/img_zid_10.png",
                                scaleY: 1,
                                scaleX: 1,
                                centerY: -63,
                                centerX: 0,
                                anchorY: 1,
                                anchorX: .5
                            },
                            compId: 44
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 39,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 39,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 39,
                                        key: "rotation",
                                        index: 50
                                    } ]
                                }
                            }, {
                                target: 46,
                                keyframes: {
                                    skin: [ {
                                        value: "smallPic/zuantouTail_1.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 46,
                                        key: "skin",
                                        index: 0
                                    } ]
                                }
                            } ],
                            name: "aniHelp",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 46,
                                keyframes: {
                                    skin: [ {
                                        value: "smallPic/zuantouTail_1.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 46,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "smallPic/zuantouTail_2.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 46,
                                        key: "skin",
                                        index: 1
                                    }, {
                                        value: "smallPic/zuantouTail_3.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 46,
                                        key: "skin",
                                        index: 2
                                    }, {
                                        value: "smallPic/zuantouTail_4.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 46,
                                        key: "skin",
                                        index: 3
                                    } ]
                                }
                            } ],
                            name: "aniBullet",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 46,
                                keyframes: {
                                    y: [ {
                                        value: 99,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 99,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "y",
                                        index: 15
                                    }, {
                                        value: -800,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "y",
                                        index: 28
                                    }, {
                                        value: 99,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "y",
                                        index: 34
                                    } ],
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 46,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 46,
                                        key: "visible",
                                        index: 28
                                    } ],
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "scaleY",
                                        index: 28
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "scaleY",
                                        index: 34
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "scaleX",
                                        index: 28
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 46,
                                        key: "scaleX",
                                        index: 34
                                    } ]
                                }
                            }, {
                                target: 44,
                                keyframes: {
                                    y: [ {
                                        value: 65,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 65,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "y",
                                        index: 5
                                    }, {
                                        value: 65,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "y",
                                        index: 15
                                    }, {
                                        value: -903,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "y",
                                        index: 28
                                    }, {
                                        value: 65,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "y",
                                        index: 34
                                    } ],
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 44,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 44,
                                        key: "visible",
                                        index: 28
                                    } ],
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "scaleY",
                                        index: 28
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "scaleY",
                                        index: 34
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "scaleX",
                                        index: 28
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 44,
                                        key: "scaleX",
                                        index: 34
                                    } ]
                                }
                            } ],
                            name: "aniFire",
                            id: 3,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "firstPic/img_battle_9.png", "firstPic/btn_paob_1.png", "firstPic/btn_paob_0.png", "firstPic/img_paob_1.png", "battle/img_paob_0.png", "battle/img_zt_1.png", "battle/img_paob_3.png", "common/img_guang_1.png", "iconAndSkin/skin_goldCoin3.png", "smallPic/zuantouTail_1.png", "bullets/img_zid_10.png", "smallPic/zuantouTail_2.png", "smallPic/zuantouTail_3.png", "smallPic/zuantouTail_4.png" ],
                        loadList3D: []
                    };
                    return SeatNumNodeUI;
                }(Laya.View);
                roleNodes.SeatNumNodeUI = SeatNumNodeUI;
                REG("ui.roleNodes.SeatNumNodeUI", SeatNumNodeUI);
                var SeatWaitNodeUI = function(_super) {
                    __extends(SeatWaitNodeUI, _super);
                    function SeatWaitNodeUI() {
                        return _super.call(this) || this;
                    }
                    SeatWaitNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(SeatWaitNodeUI.uiView);
                    };
                    SeatWaitNodeUI.uiView = {
                        type: "View",
                        props: {
                            y: 100,
                            x: 100,
                            width: 200,
                            mouseThrough: true,
                            mouseEnabled: true,
                            height: 100,
                            anchorY: 1,
                            anchorX: .5
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 66.5,
                                x: 100,
                                var: "image_bg",
                                skin: "firstPic/img_roomBtn_10.png",
                                mouseThrough: false,
                                mouseEnabled: true,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 33,
                                    x: 82,
                                    var: "image_invite",
                                    skin: "firstPic/img_btnText_2.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 4
                            }, {
                                type: "Script",
                                props: {
                                    y: 26.5,
                                    x: 75.5,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 5
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 30
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 60
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 30
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 60
                                    } ]
                                }
                            } ],
                            name: "seatWaitPlayer",
                            id: 1,
                            frameRate: 20,
                            action: 2
                        } ],
                        loadList: [ "firstPic/img_roomBtn_10.png", "firstPic/img_btnText_2.png" ],
                        loadList3D: []
                    };
                    return SeatWaitNodeUI;
                }(Laya.View);
                roleNodes.SeatWaitNodeUI = SeatWaitNodeUI;
                REG("ui.roleNodes.SeatWaitNodeUI", SeatWaitNodeUI);
                var ShellNodeUI = function(_super) {
                    __extends(ShellNodeUI, _super);
                    function ShellNodeUI() {
                        return _super.call(this) || this;
                    }
                    ShellNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ShellNodeUI.uiView);
                    };
                    ShellNodeUI.uiView = {
                        type: "View",
                        props: {
                            width: 165,
                            height: 181
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 180,
                                x: 82,
                                skin: "pearl/image_shadow.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 5
                        }, {
                            type: "Image",
                            props: {
                                y: 89.95555555555555,
                                x: 82,
                                var: "image_shell",
                                skin: "pearl/image_shellClose.png",
                                scaleY: 0,
                                scaleX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3,
                            child: [ {
                                type: "Image",
                                props: {
                                    visible: false,
                                    var: "image_item",
                                    skin: "pearl/image_boom.png",
                                    centerY: 13,
                                    centerX: 0
                                },
                                compId: 4
                            } ]
                        }, {
                            type: "Label",
                            props: {
                                y: 169,
                                x: 82,
                                width: 120,
                                visible: false,
                                var: "text_goldNum",
                                valign: "middle",
                                text: "2000",
                                strokeColor: "#70200b",
                                stroke: 4,
                                scaleY: 0,
                                scaleX: 0,
                                height: 36,
                                fontSize: 35,
                                font: "SimHei",
                                color: "#ffec4c",
                                bold: true,
                                anchorY: .5,
                                anchorX: .5,
                                align: "center"
                            },
                            compId: 6
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    y: [ {
                                        value: 90,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 0
                                    } ],
                                    skin: [ {
                                        value: "pearl/image_shellOpen.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "skin",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "elasticOut",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 24
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "elasticOut",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 24
                                    } ],
                                    anchorY: [ {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "anchorY",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 5,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 6,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "elasticOut",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 24
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "elasticOut",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: "aniEnd",
                                        key: "scaleX",
                                        index: 24
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: "appearGold",
                                        key: "alpha",
                                        index: 3
                                    } ]
                                }
                            }, {
                                target: 4,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "visible",
                                        index: 0
                                    } ]
                                }
                            } ],
                            name: "shellPop",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    y: [ {
                                        value: 180,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 89,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 12
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 12
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 12
                                    } ],
                                    anchorY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "anchorY",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "anchorY",
                                        index: 12
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 6
                                    } ]
                                }
                            }, {
                                target: 4,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "visible",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 5,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 12
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 12
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "alpha",
                                        index: 6
                                    } ]
                                }
                            } ],
                            name: "shellAppear",
                            id: 2,
                            frameRate: 36,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    y: [ {
                                        value: 180.5,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 90,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 30
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 5
                                    }, {
                                        value: -4,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 9
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 13
                                    }, {
                                        value: -4,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 3,
                                        label: null,
                                        key: "rotation",
                                        index: 17
                                    }, {
                                        value: 4,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 21
                                    }, {
                                        value: -4,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 25
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 30
                                    } ],
                                    anchorY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "anchorY",
                                        index: 0
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "anchorY",
                                        index: 30
                                    } ]
                                }
                            }, {
                                target: 5,
                                keyframes: {
                                    x: [ {
                                        value: 82,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 85,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "x",
                                        index: 5
                                    }, {
                                        value: 79,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "x",
                                        index: 9
                                    }, {
                                        value: 85,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "x",
                                        index: 13
                                    }, {
                                        value: 79,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "x",
                                        index: 17
                                    }, {
                                        value: 85,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "x",
                                        index: 21
                                    }, {
                                        value: 79,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "x",
                                        index: 25
                                    }, {
                                        value: 82,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "x",
                                        index: 30
                                    } ]
                                }
                            } ],
                            name: "shellShake",
                            id: 3,
                            frameRate: 36,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    y: [ {
                                        value: 89.95555555555555,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 180,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 1
                                    }, {
                                        value: 180,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 4
                                    }, {
                                        value: 170,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 7
                                    }, {
                                        value: 150,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 10
                                    }, {
                                        value: 180,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 15
                                    }, {
                                        value: 170,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 18
                                    }, {
                                        value: 155,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 21
                                    }, {
                                        value: 180,
                                        tweenMethod: "quadInOut",
                                        tween: false,
                                        target: 3,
                                        label: null,
                                        key: "y",
                                        index: 26
                                    }, {
                                        value: 89.9555,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "y",
                                        index: 30
                                    } ],
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 1
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 4
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 7
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 15
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 18
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 21
                                    }, {
                                        value: .9,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        label: null,
                                        key: "scaleY",
                                        index: 26
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 29
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 1
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 4
                                    }, {
                                        value: .95,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 7
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: .975,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 18
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 21
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        label: null,
                                        key: "scaleX",
                                        index: 26
                                    } ],
                                    anchorY: [ {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "anchorY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "anchorY",
                                        index: 1
                                    }, {
                                        value: .5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "anchorY",
                                        index: 30
                                    } ]
                                }
                            }, {
                                target: 5,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: .75,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 15
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 21
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleY",
                                        index: 26
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: .75,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: .8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 21
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "scaleX",
                                        index: 26
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "alpha",
                                        index: 0
                                    } ]
                                }
                            } ],
                            name: "shellJump",
                            id: 4,
                            frameRate: 30,
                            action: 0
                        } ],
                        loadList: [ "pearl/image_shadow.png", "pearl/image_shellClose.png", "pearl/image_boom.png", "pearl/image_shellOpen.png" ],
                        loadList3D: []
                    };
                    return ShellNodeUI;
                }(Laya.View);
                roleNodes.ShellNodeUI = ShellNodeUI;
                REG("ui.roleNodes.ShellNodeUI", ShellNodeUI);
            })(roleNodes = ui.roleNodes || (ui.roleNodes = {}));
        })(ui = exports.ui || (exports.ui = {}));
        (function(ui) {
            var roomScene;
            (function(roomScene) {
                var BossComingDlgUI = function(_super) {
                    __extends(BossComingDlgUI, _super);
                    function BossComingDlgUI() {
                        return _super.call(this) || this;
                    }
                    BossComingDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(BossComingDlgUI.uiView);
                    };
                    BossComingDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: -125,
                                x: -1685,
                                width: 5e3,
                                var: "img_black",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 28
                        }, {
                            type: "Box",
                            props: {
                                y: 375,
                                x: 815,
                                var: "box_dialog",
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 30,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 1630,
                                    var: "box_bg_light",
                                    height: 750
                                },
                                compId: 26,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 99.50000265269483,
                                        x: 815.0000100480869,
                                        width: 1630,
                                        var: "img_bg_light1",
                                        skin: "room_all/img_red_light.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 10
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 651.5000026526948,
                                        x: 815.0000100480869,
                                        width: 1630,
                                        var: "img_bg_light2",
                                        skin: "room_all/img_red_light.png",
                                        rotation: 180,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 11
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 374.50000265269483,
                                        x: 1531.000010048087,
                                        width: 750,
                                        var: "img_bg_light3",
                                        skin: "room_all/img_red_light.png",
                                        rotation: 90,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 19
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 374.50000265269483,
                                        x: 99.00001004808693,
                                        width: 750,
                                        var: "img_bg_light4",
                                        skin: "room_all/img_red_light.png",
                                        rotation: -90,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 18
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 960,
                                    var: "box_boss",
                                    height: 558,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 29,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 280,
                                        x: 480,
                                        width: 960,
                                        var: "box_green_light",
                                        height: 558,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 27,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 139.42499999999998,
                                            x: 480.4800074717568,
                                            var: "img_boss_bg1",
                                            skin: "room_1/img_px_come_2.png",
                                            scaleY: 1.43,
                                            scaleX: 1.43,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 16
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 362.42499999999995,
                                            x: 480.4800074717568,
                                            var: "img_boss_bg2",
                                            skin: "room_1/img_px_come_2.png",
                                            scaleY: 1.43,
                                            scaleX: 1.43,
                                            rotation: 180,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 22
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 258,
                                        x: 319,
                                        var: "img_boss",
                                        skin: "room_1/img_px_come_1.png",
                                        scaleY: 1.43,
                                        scaleX: 1.43,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 15
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 261,
                                        x: 559,
                                        var: "img_boss_text",
                                        skin: "room_1/img_px_come_3.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 17
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 143,
                                        x: 559,
                                        skin: "room_all/img_haiwang.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 21
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 390,
                                        x: 575,
                                        var: "box_beishu",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 25,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: -.5,
                                            x: 336,
                                            var: "img_bei",
                                            skin: "room_all/img_bei.png"
                                        },
                                        compId: 12
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: -.5,
                                            var: "img_zuigao",
                                            skin: "room_all/img_zuigao.png"
                                        },
                                        compId: 14
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 6,
                                            x: 243,
                                            width: 186,
                                            var: "label_bei",
                                            valign: "middle",
                                            text: "label",
                                            height: 30,
                                            font: "numberFont1",
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 24
                                    } ]
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 17,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleY",
                                        index: 7
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleY",
                                        index: 11
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleX",
                                        index: 7
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleX",
                                        index: 11
                                    } ]
                                }
                            }, {
                                target: 21,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 21,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 21,
                                        key: "scaleY",
                                        index: 3
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 21,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 21,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 21,
                                        key: "scaleY",
                                        index: 11
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 21,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 21,
                                        key: "scaleX",
                                        index: 3
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 21,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 21,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 21,
                                        key: "scaleX",
                                        index: 11
                                    } ]
                                }
                            }, {
                                target: 15,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1.43,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleY",
                                        index: 7
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleY",
                                        index: 9
                                    }, {
                                        value: 1.43,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleY",
                                        index: 10
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1.43,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleX",
                                        index: 7
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleX",
                                        index: 9
                                    }, {
                                        value: 1.43,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleX",
                                        index: 10
                                    } ]
                                }
                            }, {
                                target: 25,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 25,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 25,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 25,
                                        key: "scaleY",
                                        index: 7
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 25,
                                        key: "scaleY",
                                        index: 8
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 25,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 25,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 25,
                                        key: "scaleX",
                                        index: 7
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 25,
                                        key: "scaleX",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 27,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 5
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 5
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 15,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1.43,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.6,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: 1.43,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleY",
                                        index: 20
                                    } ],
                                    scaleX: [ {
                                        value: 1.43,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.6,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1.43,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 15,
                                        key: "scaleX",
                                        index: 20
                                    } ]
                                }
                            }, {
                                target: 27,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleY",
                                        index: 20
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 27,
                                        key: "scaleX",
                                        index: 20
                                    } ]
                                }
                            }, {
                                target: 24,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 24,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 24,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 24,
                                        key: "scaleY",
                                        index: 20
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 24,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 24,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 24,
                                        key: "scaleX",
                                        index: 20
                                    } ]
                                }
                            } ],
                            name: "ani2",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 26,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 26,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 26,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 26,
                                        key: "alpha",
                                        index: 20
                                    } ]
                                }
                            } ],
                            name: "ani3",
                            id: 3,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "room_all/img_red_light.png", "room_1/img_px_come_2.png", "room_1/img_px_come_1.png", "room_1/img_px_come_3.png", "room_all/img_haiwang.png", "room_all/img_bei.png", "room_all/img_zuigao.png" ],
                        loadList3D: []
                    };
                    return BossComingDlgUI;
                }(Laya.Dialog);
                roomScene.BossComingDlgUI = BossComingDlgUI;
                REG("ui.roomScene.BossComingDlgUI", BossComingDlgUI);
                var ChangeCannonDlgUI = function(_super) {
                    __extends(ChangeCannonDlgUI, _super);
                    function ChangeCannonDlgUI() {
                        return _super.call(this) || this;
                    }
                    ChangeCannonDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(ChangeCannonDlgUI.uiView);
                    };
                    ChangeCannonDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                alpha: .7
                            },
                            compId: 16
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 6,
                            child: [ {
                                type: "List",
                                props: {
                                    y: 199,
                                    x: 0,
                                    width: 1630,
                                    var: "cannon_list",
                                    height: 352,
                                    hScrollBarSkin: "comp/hscroll.png"
                                },
                                compId: 7,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 268,
                                        renderType: "render",
                                        height: 352
                                    },
                                    compId: 8,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            width: 254,
                                            skin: "noZip/img_bg_19.png",
                                            sizeGrid: "0,30,0,30",
                                            height: 353,
                                            centerY: 0,
                                            centerX: 0
                                        },
                                        compId: 10
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 25,
                                            valign: "middle",
                                            text: "神圣天堂",
                                            strokeColor: "#70200b",
                                            stroke: 3,
                                            name: "text_cannon",
                                            fontSize: 27,
                                            font: "SimHei",
                                            color: "#ffec4c",
                                            centerX: 0,
                                            bold: true,
                                            align: "center"
                                        },
                                        compId: 14
                                    }, {
                                        type: "Button",
                                        props: {
                                            y: 294,
                                            x: 167,
                                            width: 227,
                                            stateNum: 1,
                                            skin: "noZip/btn_green.png",
                                            sizeGrid: "0,47,0,52",
                                            scaleY: .7,
                                            scaleX: .7,
                                            name: "btn_equip",
                                            labelStrokeColor: "#226306",
                                            labelStroke: 4,
                                            labelSize: 36,
                                            labelPadding: "0,0,2",
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "装备",
                                            height: 93,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: 1
                                        },
                                        compId: 15,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                aniScaleY: .7,
                                                aniScaleX: .7,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 18
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 59,
                                            skin: "common/img_bg_20.png",
                                            centerX: 0
                                        },
                                        compId: 12
                                    }, {
                                        type: "Image",
                                        props: {
                                            skin: "iconAndSkin/skin_CannonTabe_9.png",
                                            name: "img_cannon",
                                            centerY: -26,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 13
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 67,
                                            x: 31,
                                            skin: "battle/img_cannon_1.png",
                                            name: "img_suo"
                                        },
                                        compId: 17
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    var: "returnBack",
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 19
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 7,
                                keyframes: {
                                    x: [ {
                                        value: 2e3,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "x",
                                        index: 24
                                    } ]
                                }
                            } ],
                            name: "ani_0",
                            id: 1,
                            frameRate: 36,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "comp/hscroll.png", "noZip/img_bg_19.png", "noZip/btn_green.png", "common/img_bg_20.png", "iconAndSkin/skin_CannonTabe_9.png", "battle/img_cannon_1.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return ChangeCannonDlgUI;
                }(Laya.Dialog);
                roomScene.ChangeCannonDlgUI = ChangeCannonDlgUI;
                REG("ui.roomScene.ChangeCannonDlgUI", ChangeCannonDlgUI);
                var DialViewUI = function(_super) {
                    __extends(DialViewUI, _super);
                    function DialViewUI() {
                        return _super.call(this) || this;
                    }
                    DialViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(DialViewUI.uiView);
                    };
                    DialViewUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 78,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 1630,
                                    width: 1028,
                                    var: "boxOutter",
                                    height: 1028,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 4,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 513,
                                        x: 516,
                                        skin: "dial/img_circle_0.png",
                                        rotation: 225,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 21
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 513,
                                        x: 515,
                                        skin: "dial/img_circle_0.png",
                                        rotation: 180,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 20
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 513,
                                        x: 513,
                                        skin: "dial/img_circle_0.png",
                                        rotation: 135,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 19
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 515,
                                        x: 512,
                                        skin: "dial/img_circle_0.png",
                                        rotation: 90,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 18
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 518,
                                        x: 512,
                                        skin: "dial/img_circle_0.png",
                                        rotation: 45,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 17
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 4,
                                        x: 513,
                                        skin: "dial/img_circle_0.png"
                                    },
                                    compId: 8
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 518,
                                        x: 515,
                                        skin: "dial/img_circle_0.png",
                                        rotation: 315,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 23
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 517,
                                        x: 516,
                                        skin: "dial/img_circle_0.png",
                                        rotation: 270,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 22
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 1,
                                    x: 1094,
                                    width: 1073,
                                    var: "imgMask",
                                    skin: "basePic/img_black_bg.png",
                                    height: 584,
                                    centerX: 0
                                },
                                compId: 27
                            }, {
                                type: "Box",
                                props: {
                                    y: 3,
                                    x: 1630,
                                    width: 650,
                                    var: "boxInner",
                                    height: 650,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 5,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 323,
                                        x: 326,
                                        skin: "dial/img_circle_1.png",
                                        rotation: 225,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 28
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 324,
                                        x: 326,
                                        skin: "dial/img_circle_4.png",
                                        rotation: 270,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 31
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 324,
                                        x: 326,
                                        skin: "dial/img_circle_3.png",
                                        rotation: 315,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 61
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 324,
                                        x: 326,
                                        skin: "dial/img_circle_2.png",
                                        rotation: 0,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 60
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 324,
                                        x: 326,
                                        skin: "dial/img_circle_1.png",
                                        rotation: 45,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 59
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 324,
                                        x: 326,
                                        skin: "dial/img_circle_4.png",
                                        rotation: 90,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 62
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 324,
                                        x: 326,
                                        width: 263,
                                        skin: "dial/img_circle_3.png",
                                        rotation: 135,
                                        height: 365,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 30
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 324,
                                        x: 326,
                                        skin: "dial/img_circle_2.png",
                                        rotation: 180,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 29
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 1,
                                    x: 1630,
                                    width: 1028,
                                    var: "boxBorad",
                                    height: 1028,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 42,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 512,
                                        skin: "dial/img_light.png"
                                    },
                                    compId: 32
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 515,
                                        x: 512,
                                        skin: "dial/img_light.png",
                                        rotation: 45,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 51
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 515,
                                        x: 512,
                                        skin: "dial/img_light.png",
                                        rotation: 90,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 52
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 512,
                                        x: 513,
                                        skin: "dial/img_light.png",
                                        rotation: 135,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 53
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 511,
                                        x: 513,
                                        skin: "dial/img_light.png",
                                        rotation: 180,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 54
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 511,
                                        x: 515,
                                        skin: "dial/img_light.png",
                                        rotation: 225,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 55
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 512,
                                        x: 516,
                                        skin: "dial/img_light.png",
                                        rotation: 270,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 56
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 514,
                                        x: 997,
                                        skin: "dial/img_board.png",
                                        rotation: 90,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 43
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 515,
                                        x: 518,
                                        skin: "dial/img_light.png",
                                        rotation: 315,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 57
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 857,
                                        x: 859,
                                        skin: "dial/img_board.png",
                                        scaleY: .8,
                                        scaleX: .8,
                                        rotation: 135,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 44
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 858,
                                        x: 170,
                                        skin: "dial/img_board.png",
                                        scaleY: .8,
                                        scaleX: .8,
                                        rotation: 225,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 45
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 1e3,
                                        x: 515,
                                        skin: "dial/img_board.png",
                                        scaleY: .8,
                                        scaleX: .8,
                                        rotation: 180,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 46
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 27,
                                        x: 513,
                                        width: 204,
                                        skin: "dial/img_board.png",
                                        scaleY: .8,
                                        scaleX: .8,
                                        rotation: 360,
                                        height: 98,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 47
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 513,
                                        x: 27,
                                        skin: "dial/img_board.png",
                                        scaleY: .8,
                                        scaleX: .8,
                                        rotation: 270,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 48
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 169,
                                        x: 170,
                                        skin: "dial/img_board.png",
                                        scaleY: .8,
                                        scaleX: .8,
                                        rotation: 315,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 49
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 172,
                                        x: 856,
                                        width: 204,
                                        skin: "dial/img_board.png",
                                        rotation: 45,
                                        height: 98,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 50
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 3,
                                    x: 815,
                                    width: 1630,
                                    var: "boxUpper",
                                    height: 750,
                                    centerX: 0
                                },
                                compId: 6,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        y: 644,
                                        x: 815,
                                        var: "btnStart",
                                        stateNum: 1,
                                        skin: "dial/img_start.png",
                                        gray: false,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 69,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            y: 542,
                                            x: 671,
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 58
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        skin: "dial/img_select.png",
                                        centerX: 0
                                    },
                                    compId: 25
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -138,
                                        visible: false,
                                        skin: "dial/img_effect_1.png",
                                        scaleY: 2,
                                        scaleX: 2,
                                        name: "imgEffect",
                                        centerX: 0
                                    },
                                    compId: 73
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 378,
                                    x: 1630,
                                    width: 992,
                                    visible: false,
                                    var: "boxReward",
                                    scaleY: .2,
                                    scaleX: .2,
                                    height: 258,
                                    centerY: 3,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 63,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 1,
                                        skin: "dragonBall/image_settlement.png"
                                    },
                                    compId: 64
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        skin: "dragonBall/image_settlement.png",
                                        scaleX: -1,
                                        right: 496
                                    },
                                    compId: 65
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -56,
                                        skin: "common/img_huod_1.png",
                                        centerX: 0
                                    },
                                    compId: 66
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 61,
                                        width: 509,
                                        valign: "middle",
                                        text: "40000",
                                        name: "lblCount",
                                        height: 84,
                                        centerX: 0,
                                        align: "center"
                                    },
                                    compId: 67
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 30,
                                keyframes: {
                                    y: [ {
                                        value: 441,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 30,
                                        key: "y",
                                        index: 0
                                    } ],
                                    x: [ {
                                        value: 387,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 30,
                                        key: "x",
                                        index: 0
                                    } ],
                                    rotation: [ {
                                        value: 155,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 30,
                                        key: "rotation",
                                        index: 0
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "dial/img_circle_0.png", "dial/img_circle_1.png", "dial/img_circle_4.png", "dial/img_circle_3.png", "dial/img_circle_2.png", "dial/img_light.png", "dial/img_board.png", "dial/img_start.png", "dial/img_select.png", "dial/img_effect_1.png", "dragonBall/image_settlement.png", "common/img_huod_1.png" ],
                        loadList3D: []
                    };
                    return DialViewUI;
                }(Laya.Dialog);
                roomScene.DialViewUI = DialViewUI;
                REG("ui.roomScene.DialViewUI", DialViewUI);
                var DragonHelpDialogUI = function(_super) {
                    __extends(DragonHelpDialogUI, _super);
                    function DragonHelpDialogUI() {
                        return _super.call(this) || this;
                    }
                    DragonHelpDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(DragonHelpDialogUI.uiView);
                    };
                    DragonHelpDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                alpha: .8
                            },
                            compId: 38
                        }, {
                            type: "Box",
                            props: {
                                y: 375,
                                x: 815,
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 5,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 141,
                                    width: 843,
                                    skin: "noZip/img_bg_16.png",
                                    sizeGrid: "0,46,0,55",
                                    height: 480,
                                    centerX: 0
                                },
                                compId: 36,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: -11,
                                        x: 219,
                                        width: 400,
                                        skin: "noZip/img_title_1.png",
                                        sizeGrid: "0,102,0,97",
                                        height: 68
                                    },
                                    compId: 37
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 64,
                                        x: 25,
                                        width: 786,
                                        skin: "noZip/img_bg_8.png",
                                        sizeGrid: "26,23,25,23",
                                        height: 173
                                    },
                                    compId: 39
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 2,
                                        x: 341,
                                        width: 165,
                                        text: "五龙夺宝",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 43,
                                        fontSize: 40,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true
                                    },
                                    compId: 84
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 15,
                                        width: 65,
                                        var: "returnBack",
                                        stateNum: 1,
                                        skin: "firstPic/btn_close.png",
                                        right: -18,
                                        height: 65,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 4
                                } ]
                            }, {
                                type: "Label",
                                props: {
                                    y: 389,
                                    width: 248,
                                    text: "五个龙座分别的倍率为：",
                                    strokeColor: "#65009e",
                                    stroke: 3,
                                    height: 29,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#ffec4c",
                                    centerX: 0,
                                    bold: true,
                                    align: "center"
                                },
                                compId: 54
                            }, {
                                type: "Box",
                                props: {
                                    y: 203,
                                    width: 724.453125,
                                    height: 155,
                                    centerX: 0
                                },
                                compId: 56,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 24,
                                        x: 0,
                                        var: "text_tips_0",
                                        text: "进入游戏时,  点选画面上的     ,将获得      ,   ,   ,   ,   ,   。",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        height: 26,
                                        fontSize: 22,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true
                                    },
                                    compId: 40
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 60,
                                        x: 0,
                                        var: "text_tips_1",
                                        text: "当任一龙座集满两颗灵珠时， 即结束游戏。",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        height: 25,
                                        fontSize: 22,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true
                                    },
                                    compId: 48
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 94,
                                        x: 0,
                                        var: "text_tips_2",
                                        text: "当出现五灵珠     即有机会获得多个龙座得分。 若同时获得四个倍数与",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        height: 25,
                                        fontSize: 22,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true
                                    },
                                    compId: 49
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 129,
                                        x: 0,
                                        var: "text_tips_3",
                                        text: "五个龙座时， 即可以获得高达        押分。",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        height: 25,
                                        fontSize: 22,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true
                                    },
                                    compId: 51
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 129,
                                        x: 304,
                                        width: 84,
                                        var: "text_maxTimes",
                                        text: "1800倍",
                                        strokeColor: "#65009e",
                                        stroke: 3,
                                        height: 26,
                                        fontSize: 22,
                                        font: "SimHei",
                                        color: "#ffec4c",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 52
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -31,
                                        x: 261,
                                        var: "img_tips_0",
                                        skin: "dragonBall/image_diamond1.png",
                                        scaleY: .3,
                                        scaleX: .3
                                    },
                                    compId: 41
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 20,
                                        x: 416,
                                        width: 55,
                                        var: "img_tips_1",
                                        skin: "dragonBall/image_times.png",
                                        height: 30
                                    },
                                    compId: 42
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 15,
                                        x: 487,
                                        width: 90,
                                        var: "img_tips_2",
                                        skin: "dragonBall/image_ball_white.png",
                                        scaleY: .4,
                                        scaleX: .4,
                                        height: 90
                                    },
                                    compId: 43
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 15,
                                        x: 532,
                                        var: "img_tips_3",
                                        skin: "dragonBall/image_ball_blue.png",
                                        scaleY: .4,
                                        scaleX: .4
                                    },
                                    compId: 44
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 15,
                                        x: 576,
                                        var: "img_tips_4",
                                        skin: "dragonBall/image_ball_purple.png",
                                        scaleY: .4,
                                        scaleX: .4
                                    },
                                    compId: 45
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 16,
                                        x: 621,
                                        var: "img_tips_5",
                                        skin: "dragonBall/image_ball_red.png",
                                        scaleY: .4,
                                        scaleX: .4
                                    },
                                    compId: 46
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 15,
                                        x: 666,
                                        var: "img_tips_6",
                                        skin: "dragonBall/image_ball_green.png",
                                        scaleY: .4,
                                        scaleX: .4
                                    },
                                    compId: 47
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 85,
                                        x: 135,
                                        var: "img_tips_7",
                                        skin: "dragonBall/image_ball_all.png",
                                        scaleY: .4,
                                        scaleX: .4
                                    },
                                    compId: 50
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 376,
                                        x: 107,
                                        var: "text_tips_4",
                                        text: "如果游戏断线 系统将自动点选最左边的    直到游戏结束",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        height: 22,
                                        fontSize: 18,
                                        font: "SimHei",
                                        color: "#c2fcfb",
                                        bold: true
                                    },
                                    compId: 82,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: -33,
                                            x: 304.5859375,
                                            var: "img_tips_8",
                                            skin: "dragonBall/image_diamond1.png",
                                            scaleY: .2,
                                            scaleX: .2
                                        },
                                        compId: 83
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 421,
                                    skin: "dragonBall/image_dragon_white.png",
                                    scaleY: .5,
                                    scaleX: .5,
                                    centerX: -300
                                },
                                compId: 55,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 200,
                                        text: "4X",
                                        height: 90,
                                        font: "numberFont4",
                                        centerX: 0
                                    },
                                    compId: 61
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 421,
                                    skin: "dragonBall/image_dragon_blue.png",
                                    scaleY: .5,
                                    scaleX: .5,
                                    centerX: -150
                                },
                                compId: 70,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 200,
                                        text: "8X",
                                        height: 90,
                                        font: "numberFont4",
                                        centerX: 0
                                    },
                                    compId: 71
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 421,
                                    skin: "dragonBall/image_dragon_purple.png",
                                    scaleY: .5,
                                    scaleX: .5,
                                    centerX: 0
                                },
                                compId: 76,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 200,
                                        text: "20X",
                                        height: 90,
                                        font: "numberFont4",
                                        centerX: 0
                                    },
                                    compId: 77
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 421,
                                    skin: "dragonBall/image_dragon_red.png",
                                    scaleY: .5,
                                    scaleX: .5,
                                    centerX: 150
                                },
                                compId: 78,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 200,
                                        text: "10X",
                                        height: 90,
                                        font: "numberFont4",
                                        centerX: 0
                                    },
                                    compId: 79
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 421,
                                    skin: "dragonBall/image_dragon_green.png",
                                    scaleY: .5,
                                    scaleX: .5,
                                    centerX: 300
                                },
                                compId: 80,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 200,
                                        text: "8X",
                                        height: 90,
                                        font: "numberFont4",
                                        centerX: 0
                                    },
                                    compId: 81
                                } ]
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "noZip/img_bg_16.png", "noZip/img_title_1.png", "noZip/img_bg_8.png", "firstPic/btn_close.png", "dragonBall/image_diamond1.png", "dragonBall/image_times.png", "dragonBall/image_ball_white.png", "dragonBall/image_ball_blue.png", "dragonBall/image_ball_purple.png", "dragonBall/image_ball_red.png", "dragonBall/image_ball_green.png", "dragonBall/image_ball_all.png", "dragonBall/image_dragon_white.png", "dragonBall/image_dragon_blue.png", "dragonBall/image_dragon_purple.png", "dragonBall/image_dragon_red.png", "dragonBall/image_dragon_green.png" ],
                        loadList3D: []
                    };
                    return DragonHelpDialogUI;
                }(Laya.Dialog);
                roomScene.DragonHelpDialogUI = DragonHelpDialogUI;
                REG("ui.roomScene.DragonHelpDialogUI", DragonHelpDialogUI);
                var DragonInterfaceUI = function(_super) {
                    __extends(DragonInterfaceUI, _super);
                    function DragonInterfaceUI() {
                        return _super.call(this) || this;
                    }
                    DragonInterfaceUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(DragonInterfaceUI.uiView);
                    };
                    DragonInterfaceUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 92
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 89,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: 0,
                                    width: 1630,
                                    var: "box_bg",
                                    mouseEnabled: false,
                                    height: 750,
                                    centerX: 0
                                },
                                compId: 3,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        width: 5e3,
                                        var: "bg_black",
                                        skin: "basePic/img_black_bg.png",
                                        mouseThrough: false,
                                        mouseEnabled: true,
                                        height: 1e3,
                                        centerY: 0,
                                        centerX: 0,
                                        alpha: 0
                                    },
                                    compId: 8
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 375,
                                        x: 815,
                                        width: 1630,
                                        var: "bg_0",
                                        mouseEnabled: false,
                                        height: 750,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 52,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            skin: "dragonBall/image_bg1.jpg"
                                        },
                                        compId: 53
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 1630,
                                            skin: "dragonBall/image_bg1.jpg",
                                            scaleX: -1
                                        },
                                        compId: 54
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: -278,
                                        x: 0,
                                        width: 1630,
                                        var: "bg_1",
                                        height: 278
                                    },
                                    compId: 9,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            width: 815,
                                            skin: "dragonBall/image_bg2.png",
                                            height: 278
                                        },
                                        compId: 10
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 1630,
                                            skin: "dragonBall/image_bg2.png",
                                            scaleX: -1
                                        },
                                        compId: 11
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 958,
                                        x: 815,
                                        width: 490,
                                        var: "bg_2",
                                        height: 208,
                                        anchorY: 1,
                                        anchorX: .5
                                    },
                                    compId: 12,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 208,
                                            x: 245,
                                            width: 245,
                                            skin: "dragonBall/image_bg4.png",
                                            height: 208,
                                            anchorY: 1,
                                            anchorX: 1
                                        },
                                        compId: 13
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 208,
                                            x: 245,
                                            skin: "dragonBall/image_bg4.png",
                                            scaleX: -1,
                                            anchorY: 1,
                                            anchorX: 1
                                        },
                                        compId: 14
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 1100,
                                        x: -678,
                                        width: 678,
                                        var: "bg_3",
                                        skin: "dragonBall/image_bg3.png",
                                        height: 666,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 15
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 1100,
                                        x: 2308,
                                        width: 678,
                                        var: "bg_4",
                                        skin: "dragonBall/image_bg3.png",
                                        scaleX: -1,
                                        height: 666,
                                        anchorY: 1,
                                        anchorX: 0
                                    },
                                    compId: 16
                                }, {
                                    type: "Box",
                                    props: {
                                        y: -199,
                                        x: 815,
                                        width: 866,
                                        var: "bg_5",
                                        height: 199,
                                        anchorX: .5
                                    },
                                    compId: 17,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 433,
                                            width: 433,
                                            skin: "dragonBall/image_bg5.png",
                                            height: 199,
                                            anchorY: 0,
                                            anchorX: 1
                                        },
                                        compId: 18
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 433,
                                            width: 433,
                                            skin: "dragonBall/image_bg5.png",
                                            scaleX: -1,
                                            height: 199,
                                            anchorY: 0,
                                            anchorX: 1
                                        },
                                        compId: 19
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 69,
                                            x: 433,
                                            var: "image_tips",
                                            skin: "dragonBall/wulongduobao.png",
                                            scaleY: 0,
                                            scaleX: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 77
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 64,
                                            x: 433,
                                            visible: false,
                                            var: "text_topTimes",
                                            text: "36X",
                                            height: 90,
                                            font: "numberFont4",
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 79,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                y: 46,
                                                visible: false,
                                                var: "text_topTimes1",
                                                text: "36X",
                                                height: 90,
                                                font: "numberFont4",
                                                centerX: 0,
                                                blendMode: "lighter",
                                                anchorY: .5,
                                                anchorX: .5,
                                                alpha: .7
                                            },
                                            compId: 91
                                        } ]
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            visible: false,
                                            skin: "dragonBall/image_topBoom1.png",
                                            scaleY: 1.5,
                                            scaleX: 1.5,
                                            centerX: 0
                                        },
                                        compId: 78
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 1093,
                                        x: 815,
                                        width: 1630,
                                        var: "bg_6",
                                        height: 343,
                                        anchorY: 1,
                                        anchorX: .5
                                    },
                                    compId: 55,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 343,
                                            x: 815,
                                            skin: "dragonBall/image_cloud.png",
                                            anchorY: 1,
                                            anchorX: 1
                                        },
                                        compId: 56
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 343,
                                            x: 815,
                                            skin: "dragonBall/image_cloud.png",
                                            scaleX: -1,
                                            anchorY: 1,
                                            anchorX: 1
                                        },
                                        compId: 57
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 1,
                                    var: "box_ball",
                                    scaleY: 1,
                                    scaleX: 1,
                                    height: 1,
                                    centerY: -3,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 1
                                },
                                compId: 41
                            }, {
                                type: "Box",
                                props: {
                                    y: 373,
                                    width: 1,
                                    var: "box_dragonAni",
                                    rotation: 0,
                                    height: 1,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 5,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: -124,
                                        x: 0,
                                        width: 1,
                                        var: "diamond1",
                                        skin: "dragonBall/image_diamond.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        name: "1",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 21
                                }, {
                                    type: "Box",
                                    props: {
                                        y: -97,
                                        x: -71,
                                        width: 1,
                                        var: "diamond2",
                                        skin: "dragonBall/image_diamond.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        rotation: 324,
                                        name: "2",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 39
                                }, {
                                    type: "Box",
                                    props: {
                                        y: -38,
                                        x: -114,
                                        width: 1,
                                        var: "diamond3",
                                        skin: "dragonBall/image_diamond.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        rotation: 288,
                                        name: "3",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 37
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 40,
                                        x: -113,
                                        width: 1,
                                        var: "diamond4",
                                        skin: "dragonBall/image_diamond.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        rotation: 252,
                                        name: "4",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 35
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 99,
                                        x: -69,
                                        width: 1,
                                        var: "diamond5",
                                        skin: "dragonBall/image_diamond.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        rotation: 216,
                                        name: "5",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 33
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 123,
                                        x: 1,
                                        width: 1,
                                        var: "diamond6",
                                        skin: "dragonBall/image_diamond.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        rotation: 180,
                                        name: "6",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 31
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 98,
                                        x: 72,
                                        width: 1,
                                        var: "diamond7",
                                        skin: "dragonBall/image_diamond.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        rotation: 144,
                                        name: "7",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 29
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 36,
                                        x: 115,
                                        width: 1,
                                        var: "diamond8",
                                        skin: "dragonBall/image_diamond.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        rotation: 108,
                                        name: "8",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 27
                                }, {
                                    type: "Box",
                                    props: {
                                        y: -37,
                                        x: 114,
                                        width: 1,
                                        var: "diamond9",
                                        skin: "dragonBall/image_diamond.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        rotation: 72,
                                        name: "9",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 25
                                }, {
                                    type: "Box",
                                    props: {
                                        y: -96,
                                        x: 70,
                                        width: 1,
                                        var: "diamond10",
                                        skin: "dragonBall/image_diamond.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        rotation: 36,
                                        name: "10",
                                        height: 1,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 23
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: -1,
                                    width: 1,
                                    var: "box_dragonSeat1",
                                    mouseEnabled: false,
                                    height: 1,
                                    centerX: -664,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 64
                            }, {
                                type: "Box",
                                props: {
                                    y: 20,
                                    width: 1,
                                    var: "box_dragonSeat2",
                                    mouseEnabled: false,
                                    height: 1,
                                    centerX: -394,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 65
                            }, {
                                type: "Box",
                                props: {
                                    y: 29,
                                    width: 1,
                                    var: "box_dragonSeat3",
                                    mouseEnabled: false,
                                    height: 1,
                                    centerX: -123,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 66
                            }, {
                                type: "Box",
                                props: {
                                    y: 19,
                                    width: 1,
                                    var: "box_dragonSeat4",
                                    mouseEnabled: false,
                                    height: 1,
                                    centerX: 146,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 67
                            }, {
                                type: "Box",
                                props: {
                                    y: 4,
                                    width: 1,
                                    var: "box_dragonSeat5",
                                    mouseEnabled: false,
                                    height: 1,
                                    centerX: 416,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 68
                            }, {
                                type: "Box",
                                props: {
                                    width: 1,
                                    var: "box_diamond",
                                    height: 1,
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6
                            }, {
                                type: "Box",
                                props: {
                                    width: 992,
                                    var: "box_scoreBroad",
                                    scaleY: 0,
                                    scaleX: 0,
                                    height: 258,
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 80,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 129,
                                        x: 496,
                                        skin: "dragonBall/image_settlement.png",
                                        anchorY: .5,
                                        anchorX: 1
                                    },
                                    compId: 81
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 129,
                                        x: 496,
                                        skin: "dragonBall/image_settlement.png",
                                        scaleX: -1,
                                        anchorY: .5,
                                        anchorX: 1
                                    },
                                    compId: 83
                                }, {
                                    type: "Label",
                                    props: {
                                        width: 992,
                                        var: "text_score",
                                        valign: "middle",
                                        text: "180000000",
                                        padding: "0,0,24,0",
                                        height: 258,
                                        font: "numberFont4",
                                        align: "center"
                                    },
                                    compId: 84
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 260,
                                    var: "image_gxhd",
                                    skin: "common/img_huod_1.png",
                                    scaleY: 0,
                                    scaleX: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 88
                            }, {
                                type: "Button",
                                props: {
                                    y: 60,
                                    var: "help",
                                    stateNum: 1,
                                    skin: "dragonBall/btn_help.png",
                                    sizeGrid: "0,53,0,53",
                                    scaleY: 0,
                                    scaleX: 0,
                                    left: 50,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 4
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 5,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: .1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 1
                                    }, {
                                        value: .3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 2
                                    }, {
                                        value: .6,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 3
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 4
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 5
                                    }, {
                                        value: 2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 6
                                    }, {
                                        value: 2.6,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 7
                                    }, {
                                        value: 3.3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 8
                                    }, {
                                        value: 4.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 9
                                    }, {
                                        value: 5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 10
                                    }, {
                                        value: 6,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 11
                                    }, {
                                        value: 7.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 12
                                    }, {
                                        value: 9.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 13
                                    }, {
                                        value: 12,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 14
                                    }, {
                                        value: 15,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 15
                                    }, {
                                        value: 19,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 16
                                    }, {
                                        value: 24,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 17
                                    }, {
                                        value: 30,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 18
                                    }, {
                                        value: 37,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 19
                                    }, {
                                        value: 45,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 20
                                    }, {
                                        value: 54,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 21
                                    }, {
                                        value: 64,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 22
                                    }, {
                                        value: 74,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 23
                                    }, {
                                        value: 86,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 24
                                    }, {
                                        value: 97,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 25
                                    }, {
                                        value: 108,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 26
                                    }, {
                                        value: 180,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        label: "node_1",
                                        key: "rotation",
                                        index: 32
                                    }, {
                                        value: 252,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        label: "node_2",
                                        key: "rotation",
                                        index: 38
                                    }, {
                                        value: 324,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        label: "node_3",
                                        key: "rotation",
                                        index: 44
                                    }, {
                                        value: 396,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        label: "node_4",
                                        key: "rotation",
                                        index: 50
                                    }, {
                                        value: 468,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        label: "node_5",
                                        key: "rotation",
                                        index: 56
                                    }, {
                                        value: 540,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        label: "node_6",
                                        key: "rotation",
                                        index: 62
                                    }, {
                                        value: 612,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        label: "node_7",
                                        key: "rotation",
                                        index: 68
                                    }, {
                                        value: 684,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        label: "node_8",
                                        key: "rotation",
                                        index: 74
                                    }, {
                                        value: 756,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        label: "node_9",
                                        key: "rotation",
                                        index: 80
                                    }, {
                                        value: 828,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        label: "node_10",
                                        key: "rotation",
                                        index: 86
                                    }, {
                                        value: 900,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 5,
                                        key: "rotation",
                                        index: 92
                                    } ]
                                }
                            }, {
                                target: 41,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 41,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "circIn",
                                        tween: true,
                                        target: 41,
                                        key: "scaleY",
                                        index: 32
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 41,
                                        key: "scaleY",
                                        index: 62
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 41,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "circIn",
                                        tween: true,
                                        target: 41,
                                        key: "scaleX",
                                        index: 32
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 41,
                                        key: "scaleX",
                                        index: 62
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 41,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "circIn",
                                        tween: true,
                                        target: 41,
                                        key: "alpha",
                                        index: 32
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 41,
                                        key: "alpha",
                                        index: 62
                                    } ]
                                }
                            }, {
                                target: 52,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 52,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 52,
                                        label: "startBgAni",
                                        key: "alpha",
                                        index: 44
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 52,
                                        key: "alpha",
                                        index: 92
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 52,
                                        key: "alpha",
                                        index: 115
                                    } ]
                                }
                            } ],
                            name: "rotateDragon",
                            id: 1,
                            frameRate: 48,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 78,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 78,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 78,
                                        key: "visible",
                                        index: 9
                                    } ],
                                    skin: [ {
                                        value: "dragonBall/image_topBoom1.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 78,
                                        key: "skin",
                                        index: 0
                                    }, {
                                        value: "dragonBall/image_topBoom2.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 78,
                                        key: "skin",
                                        index: 1
                                    }, {
                                        value: "dragonBall/image_topBoom3.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 78,
                                        key: "skin",
                                        index: 2
                                    }, {
                                        value: "dragonBall/image_topBoom4.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 78,
                                        key: "skin",
                                        index: 3
                                    }, {
                                        value: "dragonBall/image_topBoom5.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 78,
                                        key: "skin",
                                        index: 4
                                    }, {
                                        value: "dragonBall/image_topBoom6.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 78,
                                        key: "skin",
                                        index: 5
                                    }, {
                                        value: "dragonBall/image_topBoom7.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 78,
                                        key: "skin",
                                        index: 6
                                    }, {
                                        value: "dragonBall/image_topBoom8.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 78,
                                        key: "skin",
                                        index: 7
                                    }, {
                                        value: "dragonBall/image_topBoom9.png",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 78,
                                        key: "skin",
                                        index: 8
                                    } ]
                                }
                            } ],
                            name: "tipBoom",
                            id: 2,
                            frameRate: 16,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 80,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 80,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 80,
                                        key: "scaleY",
                                        index: 12
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 80,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 80,
                                        key: "scaleX",
                                        index: 12
                                    } ]
                                }
                            } ],
                            name: "scoreBoardAppear",
                            id: 3,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 80,
                                keyframes: {
                                    scaleY: [ {
                                        value: .4,
                                        tweenMethod: "elasticOut",
                                        tween: true,
                                        target: 80,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 80,
                                        key: "scaleY",
                                        index: 36
                                    } ],
                                    scaleX: [ {
                                        value: .4,
                                        tweenMethod: "elasticOut",
                                        tween: true,
                                        target: 80,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 80,
                                        key: "scaleX",
                                        index: 36
                                    } ]
                                }
                            } ],
                            name: "scoreBoardRam",
                            id: 4,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 91,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 91,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 91,
                                        key: "visible",
                                        index: 14
                                    } ],
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 91,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1.8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 91,
                                        key: "scaleY",
                                        index: 11
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 91,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1.8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 91,
                                        key: "scaleX",
                                        index: 11
                                    } ],
                                    alpha: [ {
                                        value: .7,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 91,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .6,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 91,
                                        key: "alpha",
                                        index: 8
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 91,
                                        key: "alpha",
                                        index: 14
                                    } ]
                                }
                            } ],
                            name: "shineTipNum",
                            id: 5,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "dragonBall/image_bg1.jpg", "dragonBall/image_bg2.png", "dragonBall/image_bg4.png", "dragonBall/image_bg3.png", "dragonBall/image_bg5.png", "dragonBall/wulongduobao.png", "dragonBall/image_topBoom1.png", "dragonBall/image_cloud.png", "dragonBall/image_diamond.png", "dragonBall/image_settlement.png", "common/img_huod_1.png", "dragonBall/btn_help.png", "dragonBall/image_topBoom2.png", "dragonBall/image_topBoom3.png", "dragonBall/image_topBoom4.png", "dragonBall/image_topBoom5.png", "dragonBall/image_topBoom6.png", "dragonBall/image_topBoom7.png", "dragonBall/image_topBoom8.png", "dragonBall/image_topBoom9.png" ],
                        loadList3D: []
                    };
                    return DragonInterfaceUI;
                }(Laya.Dialog);
                roomScene.DragonInterfaceUI = DragonInterfaceUI;
                REG("ui.roomScene.DragonInterfaceUI", DragonInterfaceUI);
                var EditerSceneUI = function(_super) {
                    __extends(EditerSceneUI, _super);
                    function EditerSceneUI() {
                        return _super.call(this) || this;
                    }
                    EditerSceneUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(EditerSceneUI.uiView);
                    };
                    EditerSceneUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 1630,
                                skin: "room_1/pangxieBoss0.jpg",
                                height: 750,
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 4
                        }, {
                            type: "Box",
                            props: {
                                y: -13,
                                x: 86,
                                width: 1505,
                                var: "box_editerBg",
                                height: 780
                            },
                            compId: 69,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: 686.0000085743674,
                                    x: 321,
                                    width: 320,
                                    height: 180,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: .5
                                },
                                compId: 42,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 117.10000000000002,
                                        x: 158,
                                        width: 316,
                                        skin: "firstPic/skin_Turret_1.png",
                                        rotation: 0,
                                        height: 169,
                                        anchorY: .6,
                                        anchorX: .5
                                    },
                                    compId: 40
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 117.10000000000002,
                                        x: 158,
                                        skin: "firstPic/skin_CannonTabe_1.png",
                                        rotation: 0,
                                        anchorY: .9,
                                        anchorX: .5
                                    },
                                    compId: 41
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 129,
                                        x: 86,
                                        width: 148,
                                        skin: "firstPic/img_battle_9.png",
                                        height: 36
                                    },
                                    compId: 52,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 19,
                                            x: 74,
                                            width: 148,
                                            valign: "middle",
                                            text: "100",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            scaleY: .85,
                                            scaleX: .85,
                                            height: 28,
                                            fontSize: 30,
                                            font: "numberFont3",
                                            color: "#31ff00",
                                            bold: true,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 53
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 686.0000085743674,
                                    x: 1136,
                                    width: 320,
                                    height: 180,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: .5
                                },
                                compId: 54,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 117.10000000000002,
                                        x: 158,
                                        width: 316,
                                        skin: "firstPic/skin_Turret_1.png",
                                        rotation: 0,
                                        height: 169,
                                        anchorY: .6,
                                        anchorX: .5
                                    },
                                    compId: 55
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 117.10000000000002,
                                        x: 158,
                                        skin: "firstPic/skin_CannonTabe_1.png",
                                        rotation: 0,
                                        anchorY: .9,
                                        anchorX: .5
                                    },
                                    compId: 56
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 129,
                                        x: 86,
                                        width: 148,
                                        skin: "firstPic/img_battle_9.png",
                                        height: 36
                                    },
                                    compId: 57,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 19,
                                            x: 74,
                                            width: 148,
                                            valign: "middle",
                                            text: "100",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            scaleY: .85,
                                            scaleX: .85,
                                            height: 28,
                                            fontSize: 30,
                                            font: "numberFont3",
                                            color: "#31ff00",
                                            bold: true,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 58
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 90.00000857436741,
                                    x: 321,
                                    width: 320,
                                    rotation: 180,
                                    height: 180,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: .5
                                },
                                compId: 59,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 117.10000000000002,
                                        x: 158,
                                        width: 316,
                                        skin: "firstPic/skin_Turret_1.png",
                                        rotation: 0,
                                        height: 169,
                                        anchorY: .6,
                                        anchorX: .5
                                    },
                                    compId: 60
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 117.10000000000002,
                                        x: 158,
                                        skin: "firstPic/skin_CannonTabe_1.png",
                                        rotation: 0,
                                        anchorY: .9,
                                        anchorX: .5
                                    },
                                    compId: 61
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 129,
                                        x: 86,
                                        width: 148,
                                        skin: "firstPic/img_battle_9.png",
                                        height: 36
                                    },
                                    compId: 62,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 19,
                                            x: 74,
                                            width: 148,
                                            valign: "middle",
                                            text: "100",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            scaleY: .85,
                                            scaleX: .85,
                                            height: 28,
                                            fontSize: 30,
                                            font: "numberFont3",
                                            color: "#31ff00",
                                            bold: true,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 63
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 90.00000857436741,
                                    x: 1136,
                                    width: 320,
                                    rotation: 180,
                                    height: 180,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: .5
                                },
                                compId: 64,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 117.10000000000002,
                                        x: 158,
                                        width: 316,
                                        skin: "firstPic/skin_Turret_1.png",
                                        rotation: 0,
                                        height: 169,
                                        anchorY: .6,
                                        anchorX: .5
                                    },
                                    compId: 65
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 117.10000000000002,
                                        x: 158,
                                        skin: "firstPic/skin_CannonTabe_1.png",
                                        rotation: 0,
                                        anchorY: .9,
                                        anchorX: .5
                                    },
                                    compId: 66
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 129,
                                        x: 86,
                                        width: 148,
                                        skin: "firstPic/img_battle_9.png",
                                        height: 36
                                    },
                                    compId: 67,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 19,
                                            x: 74,
                                            width: 148,
                                            valign: "middle",
                                            text: "100",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            scaleY: .85,
                                            scaleX: .85,
                                            height: 28,
                                            fontSize: 30,
                                            font: "numberFont3",
                                            color: "#31ff00",
                                            bold: true,
                                            anchorY: .5,
                                            anchorX: .5,
                                            align: "center"
                                        },
                                        compId: 68
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 708,
                                    x: 0
                                },
                                compId: 37,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 10,
                                        width: 100,
                                        valign: "middle",
                                        text: "开始时间:",
                                        height: 22,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 18
                                }, {
                                    type: "TextInput",
                                    props: {
                                        y: 5,
                                        x: 100,
                                        width: 78,
                                        var: "input_startTime",
                                        valign: "middle",
                                        type: "text",
                                        skin: "comp/textinput.png",
                                        height: 32,
                                        fontSize: 30,
                                        font: "SimHei",
                                        color: "green",
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 19
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 10,
                                        x: 438,
                                        width: 35,
                                        var: "btn_x1",
                                        skin: "comp/button.png",
                                        labelSize: 20,
                                        labelFont: "SimHei",
                                        labelBold: true,
                                        label: "x1",
                                        height: 22
                                    },
                                    compId: 20
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 10,
                                        x: 491,
                                        width: 35,
                                        var: "btn_x2",
                                        skin: "comp/button.png",
                                        labelSize: 20,
                                        labelFont: "SimHei",
                                        labelBold: true,
                                        label: "x2",
                                        height: 22
                                    },
                                    compId: 27
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 10,
                                        x: 544,
                                        width: 35,
                                        var: "btn_x4",
                                        skin: "comp/button.png",
                                        labelSize: 20,
                                        labelFont: "SimHei",
                                        labelBold: true,
                                        label: "x4",
                                        height: 22
                                    },
                                    compId: 28
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 10,
                                        x: 210,
                                        width: 92,
                                        valign: "middle",
                                        text: "SceneID:",
                                        height: 22,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 29
                                }, {
                                    type: "TextInput",
                                    props: {
                                        y: 5,
                                        x: 304,
                                        width: 78,
                                        var: "input_sceneID",
                                        valign: "middle",
                                        type: "text",
                                        skin: "comp/textinput.png",
                                        height: 32,
                                        fontSize: 30,
                                        font: "SimHei",
                                        color: "green",
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 30
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 2,
                                        x: 741,
                                        width: 74,
                                        var: "btn_off",
                                        skin: "comp/button.png",
                                        labelSize: 28,
                                        labelFont: "SimHei",
                                        labelBold: true,
                                        label: "暂停",
                                        height: 30
                                    },
                                    compId: 33
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 1,
                                        x: 1069,
                                        width: 74,
                                        var: "btn_load",
                                        skin: "comp/button.png",
                                        labelSize: 28,
                                        labelFont: "SimHei",
                                        labelBold: true,
                                        label: "载入",
                                        height: 30
                                    },
                                    compId: 34
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 6,
                                        x: 1293,
                                        width: 119,
                                        valign: "middle",
                                        text: "存活的鱼数目:",
                                        height: 22,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 35
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 6,
                                        x: 1432,
                                        width: 73,
                                        var: "label_fishNum1",
                                        valign: "middle",
                                        text: "0",
                                        height: 22,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 36
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 2.5,
                                        x: 658,
                                        width: 74,
                                        var: "btn_on",
                                        skin: "comp/button.png",
                                        labelSize: 28,
                                        labelFont: "SimHei",
                                        labelBold: true,
                                        label: "继续",
                                        height: 30
                                    },
                                    compId: 38
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 2,
                                        x: 877,
                                        width: 149,
                                        var: "btn_showFmt",
                                        skin: "comp/button.png",
                                        labelSize: 20,
                                        labelFont: "SimHei",
                                        labelBold: true,
                                        label: "formation隐藏",
                                        height: 30
                                    },
                                    compId: 39
                                }, {
                                    type: "Label",
                                    props: {
                                        y: -30,
                                        x: 1293,
                                        width: 119,
                                        valign: "middle",
                                        text: "屏幕中鱼数目:",
                                        height: 22,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 70
                                }, {
                                    type: "Label",
                                    props: {
                                        y: -29,
                                        x: 1432,
                                        width: 73,
                                        var: "label_fishNum2",
                                        valign: "middle",
                                        text: "0",
                                        height: 22,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 71
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 1,
                                        x: 1184,
                                        width: 74,
                                        var: "btn_refresh",
                                        skin: "comp/button.png",
                                        labelSize: 28,
                                        labelFont: "SimHei",
                                        labelBold: true,
                                        label: "刷新",
                                        height: 30
                                    },
                                    compId: 72
                                }, {
                                    type: "Label",
                                    props: {
                                        y: -30,
                                        x: 4,
                                        width: 233,
                                        var: "label_nowTime",
                                        valign: "middle",
                                        text: "当前时间：",
                                        height: 22,
                                        fontSize: 20,
                                        font: "SimHei",
                                        color: "#ffffff",
                                        bold: true,
                                        align: "left"
                                    },
                                    compId: 74
                                } ]
                            }, {
                                type: "Button",
                                props: {
                                    y: 594,
                                    x: 1456,
                                    width: 74,
                                    var: "btn_test",
                                    skin: "comp/button.png",
                                    labelSize: 28,
                                    labelFont: "SimHei",
                                    labelBold: true,
                                    label: "测试",
                                    height: 30
                                },
                                compId: 73
                            }, {
                                type: "Box",
                                props: {
                                    y: 340,
                                    x: 1408
                                },
                                compId: 80,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        width: 108,
                                        var: "btn_crab1",
                                        skin: "comp/button.png",
                                        labelSize: 28,
                                        labelFont: "SimHei",
                                        labelBold: true,
                                        label: "螃蟹甲",
                                        height: 30
                                    },
                                    compId: 75
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 44,
                                        width: 108,
                                        var: "btn_crab2",
                                        skin: "comp/button.png",
                                        labelSize: 28,
                                        labelFont: "SimHei",
                                        labelBold: true,
                                        label: "螃蟹乙",
                                        height: 30
                                    },
                                    compId: 78
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 87,
                                        width: 108,
                                        var: "btn_crab",
                                        skin: "comp/button.png",
                                        labelSize: 28,
                                        labelFont: "SimHei",
                                        labelBold: true,
                                        label: "double",
                                        height: 30
                                    },
                                    compId: 79
                                } ]
                            } ]
                        } ],
                        loadList: [ "room_1/pangxieBoss0.jpg", "firstPic/skin_Turret_1.png", "firstPic/skin_CannonTabe_1.png", "firstPic/img_battle_9.png", "comp/textinput.png", "comp/button.png" ],
                        loadList3D: []
                    };
                    return EditerSceneUI;
                }(Laya.View);
                roomScene.EditerSceneUI = EditerSceneUI;
                REG("ui.roomScene.EditerSceneUI", EditerSceneUI);
                var FishBtnLayerUI = function(_super) {
                    __extends(FishBtnLayerUI, _super);
                    function FishBtnLayerUI() {
                        return _super.call(this) || this;
                    }
                    FishBtnLayerUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(FishBtnLayerUI.uiView);
                    };
                    FishBtnLayerUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            mouseThrough: true,
                            mouseEnabled: true,
                            height: 750
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 156,
                                x: 44,
                                width: 40,
                                var: "imgBg",
                                skin: "noZip/img_res_1.png",
                                sizeGrid: "13,15,17,16",
                                height: 82,
                                alpha: 0
                            },
                            compId: 353
                        }, {
                            type: "Button",
                            props: {
                                width: 74,
                                var: "btnMenu",
                                top: 158,
                                stateNum: 1,
                                skin: "battle/img_roomBtn_7.png",
                                rotation: 180,
                                mouseEnabled: true,
                                left: 14,
                                height: 74,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 25,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 453
                            } ]
                        }, {
                            type: "Button",
                            props: {
                                y: 196,
                                x: 131,
                                var: "btnSet",
                                stateNum: 1,
                                skin: "common/btn_shez.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 354,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 355
                            } ]
                        }, {
                            type: "Button",
                            props: {
                                y: 196,
                                x: 209,
                                var: "btnMap",
                                stateNum: 1,
                                skin: "battle/img_roomBtn_9.png",
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 360,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 361
                            } ]
                        }, {
                            type: "Button",
                            props: {
                                y: 196,
                                x: 286,
                                var: "btnExit",
                                stateNum: 1,
                                skin: "battle/img_roomBtn_8.png",
                                left: 249,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: 0
                            },
                            compId: 362,
                            child: [ {
                                type: "Script",
                                props: {
                                    aniScaleY: 1,
                                    aniScaleX: 1,
                                    runtime: "script/ButtonAni.ts"
                                },
                                compId: 363
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 244,
                                x: 0,
                                width: 101,
                                var: "box_left",
                                height: 237
                            },
                            compId: 425,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: 7,
                                    x: 0,
                                    width: 460,
                                    var: "boxDragon",
                                    mouseThrough: true,
                                    mouseEnabled: true,
                                    height: 110
                                },
                                compId: 384,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 12,
                                        x: 127,
                                        width: 88,
                                        skin: "battle/img_battle_4.png",
                                        sizeGrid: "0,31,0,57",
                                        scaleX: -1,
                                        height: 82,
                                        alpha: 0
                                    },
                                    compId: 380,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 27,
                                            x: 23,
                                            var: "img_close_dragon",
                                            skin: "firstPic/img_battle_3.png",
                                            scaleX: -1
                                        },
                                        compId: 393
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 63,
                                        x: 144,
                                        var: "btn_dragon_0",
                                        stateNum: 1,
                                        skin: "iconAndSkin/icon_longP_0.png",
                                        mouseEnabled: false,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 387,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            isSetSelf: false,
                                            isPlayAni: true,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 390
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 60,
                                        x: 251,
                                        var: "btn_dragon_1",
                                        stateNum: 1,
                                        skin: "iconAndSkin/icon_longP_1.png",
                                        mouseEnabled: false,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 388,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            isSetSelf: false,
                                            isPlayAni: true,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 391
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 58,
                                        x: 351,
                                        var: "btn_dragon_2",
                                        stateNum: 1,
                                        skin: "iconAndSkin/icon_longP_2.png",
                                        mouseEnabled: false,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 389,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            isSetSelf: false,
                                            isPlayAni: true,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 392
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 58,
                                        x: 50,
                                        var: "btn_dragonCan",
                                        stateNum: 1,
                                        skin: "battle/img_roomBtn_15.png",
                                        mouseThrough: false,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 379,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: -3,
                                            x: -13,
                                            skin: "iconAndSkin/btn_longp_0.png"
                                        },
                                        compId: 394
                                    }, {
                                        type: "Script",
                                        props: {
                                            y: 49,
                                            x: 43,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 395
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 57,
                                        x: 50,
                                        var: "btn_cancel",
                                        stateNum: 1,
                                        skin: "battle/img_roomBtn_16.png",
                                        scaleY: 0,
                                        scaleX: 0,
                                        mouseEnabled: false,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 396
                                }, {
                                    type: "Label",
                                    props: {
                                        x: 104,
                                        visible: false,
                                        var: "text_dragonCan_num_0",
                                        text: "11",
                                        scaleY: .3,
                                        scaleX: .3,
                                        font: "numberFont2",
                                        bottom: 30,
                                        align: "left"
                                    },
                                    compId: 506
                                }, {
                                    type: "Label",
                                    props: {
                                        x: 207,
                                        visible: false,
                                        var: "text_dragonCan_num_1",
                                        text: "11",
                                        scaleY: .3,
                                        scaleX: .3,
                                        font: "numberFont2",
                                        bottom: 30,
                                        align: "left"
                                    },
                                    compId: 507
                                }, {
                                    type: "Label",
                                    props: {
                                        x: 307,
                                        visible: false,
                                        var: "text_dragonCan_num_2",
                                        text: "11",
                                        scaleY: .3,
                                        scaleX: .3,
                                        font: "numberFont2",
                                        bottom: 30,
                                        align: "left"
                                    },
                                    compId: 508
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 128,
                                    x: 0,
                                    var: "boxBullet",
                                    mouseThrough: true,
                                    mouseEnabled: true,
                                    height: 110
                                },
                                compId: 385,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 12,
                                        x: 127,
                                        width: 88,
                                        skin: "battle/img_battle_4.png",
                                        sizeGrid: "0,31,0,57",
                                        scaleX: -1,
                                        height: 82,
                                        alpha: 0
                                    },
                                    compId: 400,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 27,
                                            x: 23,
                                            var: "img_close",
                                            skin: "firstPic/img_battle_3.png",
                                            scaleX: -1
                                        },
                                        compId: 406
                                    } ]
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 53,
                                        x: 157,
                                        visible: false,
                                        var: "imgSel",
                                        skin: "battle/img_daod_1.png",
                                        scaleY: .5,
                                        scaleX: .5,
                                        rotation: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 476,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 100,
                                            x: 102,
                                            skin: "battle/img_daod_0.png",
                                            scaleY: 1.8,
                                            scaleX: 1.8,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 477
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        x: 144,
                                        var: "btnBullet0",
                                        stateNum: 1,
                                        skin: "iconAndSkin/icon_WarheadQt.png",
                                        mouseEnabled: false,
                                        label: "1",
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 401,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            text: "11",
                                            scaleY: .3,
                                            scaleX: .3,
                                            right: 0,
                                            font: "numberFont2",
                                            bottom: 10,
                                            align: "right"
                                        },
                                        compId: 415
                                    }, {
                                        type: "Script",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            isSetSelf: false,
                                            isPlayAni: true,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 407
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        x: 244,
                                        var: "btnBullet1",
                                        stateNum: 1,
                                        skin: "iconAndSkin/icon_WarheadBy.png",
                                        mouseEnabled: false,
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 402,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            text: "11",
                                            scaleY: .3,
                                            scaleX: .3,
                                            right: 0,
                                            font: "numberFont2",
                                            bottom: 10,
                                            align: "right"
                                        },
                                        compId: 416
                                    }, {
                                        type: "Script",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            isSetSelf: false,
                                            isPlayAni: true,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 408
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        x: 345,
                                        var: "btnBullet2",
                                        stateNum: 1,
                                        skin: "iconAndSkin/icon_WarheadHj.png",
                                        mouseEnabled: false,
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 403,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            text: "11",
                                            scaleY: .3,
                                            scaleX: .3,
                                            right: 0,
                                            font: "numberFont2",
                                            bottom: 10,
                                            align: "right"
                                        },
                                        compId: 417
                                    }, {
                                        type: "Script",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            isSetSelf: false,
                                            isPlayAni: true,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 409
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        x: 446,
                                        var: "btnBullet3",
                                        stateNum: 1,
                                        skin: "iconAndSkin/icon_WarheadBj.png",
                                        mouseEnabled: false,
                                        centerY: 0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 412,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            text: "11",
                                            scaleY: .3,
                                            scaleX: .3,
                                            right: 0,
                                            font: "numberFont2",
                                            bottom: 10,
                                            align: "right"
                                        },
                                        compId: 418
                                    }, {
                                        type: "Script",
                                        props: {
                                            y: 0,
                                            x: 0,
                                            isSetSelf: false,
                                            isPlayAni: true,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 413
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 58,
                                        x: 50,
                                        width: 100,
                                        var: "btnBullet",
                                        stateNum: 1,
                                        skin: "battle/img_roomBtn_15.png",
                                        mouseThrough: false,
                                        mouseEnabled: true,
                                        height: 113,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 404,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            skin: "battle/img_roomBtn_13.png",
                                            centerY: 0,
                                            centerX: 0
                                        },
                                        compId: 410
                                    }, {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: 1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 454
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 110,
                                        x: 45,
                                        width: 453,
                                        visible: false,
                                        var: "boxSelect",
                                        height: 150
                                    },
                                    compId: 457,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 0,
                                            x: 6,
                                            width: 448,
                                            skin: "battle/img_bomb_bg.png",
                                            sizeGrid: "0,30,0,30",
                                            height: 155
                                        },
                                        compId: 458
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 77,
                                            text: "最小",
                                            strokeColor: "#004b6e",
                                            stroke: 2,
                                            left: 22,
                                            fontSize: 22,
                                            font: "SimHei",
                                            color: "#b3f3ff"
                                        },
                                        compId: 459
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 78,
                                            text: "最大",
                                            strokeColor: "#004b6e",
                                            stroke: 2,
                                            right: 16,
                                            fontSize: 22,
                                            font: "SimHei",
                                            color: "#b3f3ff"
                                        },
                                        compId: 460
                                    }, {
                                        type: "Button",
                                        props: {
                                            width: 228,
                                            var: "btnShoot",
                                            stateNum: 1,
                                            skin: "basePic/btn_yellow.png",
                                            sizeGrid: "0,54,0,58",
                                            scaleY: .5,
                                            scaleX: .5,
                                            right: 77,
                                            labelStrokeColor: "#70200b",
                                            labelStroke: 6,
                                            labelSize: 40,
                                            labelFont: "黑体",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "发射",
                                            height: 92,
                                            centerY: 72,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 466,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                y: 1,
                                                x: 0,
                                                aniScaleY: .5,
                                                aniScaleX: .5,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 467
                                        } ]
                                    }, {
                                        type: "Button",
                                        props: {
                                            width: 228,
                                            var: "btnCancel",
                                            stateNum: 1,
                                            skin: "noZip/btn_green.png",
                                            sizeGrid: "0,54,0,58",
                                            scaleY: .5,
                                            scaleX: .5,
                                            left: 82,
                                            labelStrokeColor: "#226306",
                                            labelStroke: 6,
                                            labelSize: 40,
                                            labelFont: "黑体",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "取消",
                                            height: 92,
                                            centerY: 72,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 464,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                y: 1,
                                                x: 0,
                                                aniScaleY: .5,
                                                aniScaleX: .5,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 465
                                        } ]
                                    }, {
                                        type: "HSlider",
                                        props: {
                                            y: 80,
                                            x: 76,
                                            width: 306,
                                            var: "sliderBomb",
                                            value: 0,
                                            skin: "battle/hslider.png",
                                            sizeGrid: "0,10,0,10",
                                            showLabel: false,
                                            height: 14
                                        },
                                        compId: 471
                                    }, {
                                        type: "Box",
                                        props: {
                                            y: 14,
                                            centerX: 0
                                        },
                                        compId: 479,
                                        child: [ {
                                            type: "Label",
                                            props: {
                                                text: "装填数量 ：",
                                                strokeColor: "#004b6e",
                                                stroke: 2,
                                                fontSize: 24,
                                                font: "SimHei",
                                                color: "#ffffff"
                                            },
                                            compId: 468
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: -2,
                                                x: 115,
                                                width: 73,
                                                var: "lblBombCount",
                                                text: "565",
                                                strokeColor: "#5e2100",
                                                stroke: 2,
                                                height: 30,
                                                fontSize: 30,
                                                font: "SimHei",
                                                color: "#ffde00",
                                                align: "center"
                                            },
                                            compId: 469
                                        } ]
                                    } ]
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 573,
                                width: 230,
                                visible: false,
                                var: "box_surplus",
                                height: 41,
                                centerX: 0
                            },
                            compId: 368,
                            child: [ {
                                type: "Image",
                                props: {
                                    width: 230,
                                    skin: "firstPic/img_paob_1.png",
                                    sizeGrid: "0,22,0,22"
                                },
                                compId: 371
                            }, {
                                type: "Label",
                                props: {
                                    y: 8,
                                    x: 20,
                                    width: 91,
                                    var: "bulletName",
                                    valign: "middle",
                                    text: "银龙炮",
                                    strokeColor: "#0b3170",
                                    stroke: 4,
                                    height: 26,
                                    fontSize: 22,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "center"
                                },
                                compId: 372
                            }, {
                                type: "Label",
                                props: {
                                    y: 6,
                                    x: 125,
                                    width: 233,
                                    var: "bulletNum",
                                    text: "220",
                                    scaleY: .38,
                                    scaleX: .38,
                                    height: 83,
                                    font: "numberFont1",
                                    align: "center"
                                },
                                compId: 373
                            }, {
                                type: "Button",
                                props: {
                                    y: -144,
                                    x: -650,
                                    var: "btn_cancel2",
                                    stateNum: 1,
                                    skin: "battle/img_roomBtn_16.png",
                                    scaleY: 0,
                                    scaleX: 0,
                                    mouseEnabled: false,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 405
                            } ]
                        }, {
                            type: "VBox",
                            props: {
                                x: 1509,
                                width: 120,
                                var: "boxRight",
                                mouseThrough: true,
                                height: 600,
                                centerY: 38
                            },
                            compId: 430,
                            child: [ {
                                type: "Box",
                                props: {
                                    width: 108,
                                    right: 0,
                                    height: 140
                                },
                                compId: 483,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        var: "btnShop",
                                        stateNum: 1,
                                        skin: "hall/btn_shop.png",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 428,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 429
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 12,
                                    width: 108,
                                    right: 0,
                                    height: 140
                                },
                                compId: 486,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        var: "btnSp",
                                        stateNum: 1,
                                        skin: "hall/btn_teh.png",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 446,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 447
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 12,
                                    width: 108,
                                    right: 0,
                                    height: 140
                                },
                                compId: 487,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        width: 103,
                                        var: "btnRecharge",
                                        stateNum: 1,
                                        skin: "hall/btn_shouc.png",
                                        height: 89,
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 431,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 432
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 108,
                                    right: 0,
                                    height: 140
                                },
                                compId: 484,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        var: "btnShake",
                                        stateNum: 1,
                                        skin: "gift/img_btn_shake.png",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 450,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 451
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 10,
                                            x: 72,
                                            visible: false,
                                            var: "imgShakeRed",
                                            skin: "hall/img_mail_0.png"
                                        },
                                        compId: 456
                                    } ]
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 108,
                                    right: 0,
                                    height: 140
                                },
                                compId: 485,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        var: "btnTomorrow",
                                        stateNum: 1,
                                        skin: "gift/img_milb.png",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 448,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 449
                                    } ]
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 0,
                                width: 1630,
                                height: 750,
                                centerX: 0,
                                alpha: 0
                            },
                            compId: 434,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 100,
                                    x: 815,
                                    width: 1630,
                                    skin: "room_all/img_red_light.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 435
                            }, {
                                type: "Image",
                                props: {
                                    y: 651,
                                    x: 815,
                                    width: 1630,
                                    skin: "room_all/img_red_light.png",
                                    rotation: 180,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 436
                            }, {
                                type: "Image",
                                props: {
                                    y: 374,
                                    x: 1531,
                                    width: 750,
                                    var: "imgRight",
                                    skin: "room_all/img_red_light.png",
                                    rotation: 90,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 437
                            }, {
                                type: "Image",
                                props: {
                                    y: 374,
                                    x: 99,
                                    width: 750,
                                    var: "imgLeft",
                                    skin: "room_all/img_red_light.png",
                                    rotation: -90,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 438
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 380,
                                keyframes: {
                                    x: [ {
                                        value: 434,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 127,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "x",
                                        index: 12
                                    } ],
                                    width: [ {
                                        value: 395,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "width",
                                        index: 0
                                    }, {
                                        value: 88,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "width",
                                        index: 12
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 389,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 389,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 389,
                                        key: "visible",
                                        index: 13
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 389,
                                        key: "mouseEnabled",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 389,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 389,
                                        key: "alpha",
                                        index: 2
                                    } ]
                                }
                            }, {
                                target: 388,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 388,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 388,
                                        key: "visible",
                                        index: 13
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 388,
                                        key: "mouseEnabled",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 388,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 388,
                                        key: "alpha",
                                        index: 2
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 388,
                                        key: "alpha",
                                        index: 5
                                    } ]
                                }
                            }, {
                                target: 387,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 387,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 387,
                                        key: "visible",
                                        index: 13
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 387,
                                        key: "mouseEnabled",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 387,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 387,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 387,
                                        key: "alpha",
                                        index: 9
                                    } ]
                                }
                            }, {
                                target: 379,
                                keyframes: {
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 379,
                                        key: "mouseEnabled",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 508,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 508,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 508,
                                        key: "visible",
                                        index: 13
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 508,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 508,
                                        key: "alpha",
                                        index: 2
                                    } ]
                                }
                            }, {
                                target: 507,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 507,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 507,
                                        key: "visible",
                                        index: 13
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 507,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 507,
                                        key: "alpha",
                                        index: 2
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 507,
                                        key: "alpha",
                                        index: 5
                                    } ]
                                }
                            }, {
                                target: 506,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 506,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 506,
                                        key: "visible",
                                        index: 13
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 506,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 506,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 506,
                                        key: "alpha",
                                        index: 9
                                    } ]
                                }
                            } ],
                            name: "dragonClose",
                            id: 1,
                            frameRate: 40,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 380,
                                keyframes: {
                                    x: [ {
                                        value: 127,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 434,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "x",
                                        index: 12
                                    } ],
                                    width: [ {
                                        value: 88,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "width",
                                        index: 0
                                    }, {
                                        value: 395,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "width",
                                        index: 12
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 380,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 387,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 387,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 387,
                                        key: "mouseEnabled",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 387,
                                        key: "mouseEnabled",
                                        index: 12
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 387,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 387,
                                        key: "alpha",
                                        index: 2
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 387,
                                        key: "alpha",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 388,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 388,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 388,
                                        key: "mouseEnabled",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 388,
                                        key: "mouseEnabled",
                                        index: 12
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 388,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 388,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 388,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 389,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 389,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 389,
                                        key: "mouseEnabled",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 389,
                                        key: "mouseEnabled",
                                        index: 12
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 389,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 389,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 389,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 379,
                                keyframes: {
                                    mouseEnabled: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 379,
                                        key: "mouseEnabled",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 379,
                                        key: "mouseEnabled",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 506,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 506,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 506,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 506,
                                        key: "alpha",
                                        index: 2
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 506,
                                        key: "alpha",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 507,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 507,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 507,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 507,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 507,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 508,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 508,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 508,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 508,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 508,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            } ],
                            name: "dragonOpen",
                            id: 2,
                            frameRate: 40,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 400,
                                keyframes: {
                                    x: [ {
                                        value: 127,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 522,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "x",
                                        index: 12
                                    } ],
                                    width: [ {
                                        value: 88,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "width",
                                        index: 0
                                    }, {
                                        value: 483,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "width",
                                        index: 12
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "alpha",
                                        index: 5
                                    } ]
                                }
                            }, {
                                target: 401,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 401,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 401,
                                        key: "alpha",
                                        index: 2
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 401,
                                        key: "alpha",
                                        index: 4
                                    } ]
                                }
                            }, {
                                target: 402,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 402,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 402,
                                        key: "alpha",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 402,
                                        key: "alpha",
                                        index: 6
                                    } ]
                                }
                            }, {
                                target: 403,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 403,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 403,
                                        key: "alpha",
                                        index: 7
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 403,
                                        key: "alpha",
                                        index: 9
                                    } ]
                                }
                            }, {
                                target: 412,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 412,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 412,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 412,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            } ],
                            name: "ddOpen",
                            id: 3,
                            frameRate: 40,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 400,
                                keyframes: {
                                    x: [ {
                                        value: 522,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 127,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "x",
                                        index: 12
                                    } ],
                                    width: [ {
                                        value: 483,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "width",
                                        index: 0
                                    }, {
                                        value: 88,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "width",
                                        index: 12
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 400,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "alpha",
                                        index: 7
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 400,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 412,
                                keyframes: {
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 412,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 412,
                                        key: "alpha",
                                        index: 2
                                    } ]
                                }
                            }, {
                                target: 403,
                                keyframes: {
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 403,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 403,
                                        key: "alpha",
                                        index: 3
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 403,
                                        key: "alpha",
                                        index: 5
                                    } ]
                                }
                            }, {
                                target: 402,
                                keyframes: {
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 402,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 402,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 402,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 401,
                                keyframes: {
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 401,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 401,
                                        key: "alpha",
                                        index: 9
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 401,
                                        key: "alpha",
                                        index: 11
                                    } ]
                                }
                            }, {
                                target: 379,
                                keyframes: {
                                    mouseThrough: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 379,
                                        key: "mouseThrough",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 379,
                                        key: "mouseThrough",
                                        index: 12
                                    } ]
                                }
                            } ],
                            name: "ddClose",
                            id: 4,
                            frameRate: 40,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 434,
                                keyframes: {
                                    x: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 434,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 434,
                                        key: "x",
                                        index: 24
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 434,
                                        label: null,
                                        key: "x",
                                        index: 48
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 434,
                                        label: null,
                                        key: "x",
                                        index: 72
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 434,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 434,
                                        key: "alpha",
                                        index: 12
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 434,
                                        key: "alpha",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 434,
                                        label: null,
                                        key: "alpha",
                                        index: 36
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 434,
                                        label: null,
                                        key: "alpha",
                                        index: 48
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 434,
                                        label: null,
                                        key: "alpha",
                                        index: 60
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 434,
                                        label: null,
                                        key: "alpha",
                                        index: 72
                                    } ]
                                }
                            } ],
                            name: "aniFilter",
                            id: 5,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 476,
                                keyframes: {
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 476,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 360,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 476,
                                        key: "rotation",
                                        index: 30
                                    } ]
                                }
                            }, {
                                target: 477,
                                keyframes: {
                                    scaleY: [ {
                                        value: 1.8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 477,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 2.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 477,
                                        key: "scaleY",
                                        index: 15
                                    }, {
                                        value: 1.8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 477,
                                        key: "scaleY",
                                        index: 30
                                    } ],
                                    scaleX: [ {
                                        value: 1.8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 477,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 2.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 477,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: 1.8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 477,
                                        key: "scaleX",
                                        index: 30
                                    } ]
                                }
                            } ],
                            name: "aniSelect",
                            id: 6,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "noZip/img_res_1.png", "battle/img_roomBtn_7.png", "common/btn_shez.png", "battle/img_roomBtn_9.png", "battle/img_roomBtn_8.png", "battle/img_battle_4.png", "firstPic/img_battle_3.png", "iconAndSkin/icon_longP_0.png", "iconAndSkin/icon_longP_1.png", "iconAndSkin/icon_longP_2.png", "battle/img_roomBtn_15.png", "iconAndSkin/btn_longp_0.png", "battle/img_roomBtn_16.png", "battle/img_daod_1.png", "battle/img_daod_0.png", "iconAndSkin/icon_WarheadQt.png", "iconAndSkin/icon_WarheadBy.png", "iconAndSkin/icon_WarheadHj.png", "iconAndSkin/icon_WarheadBj.png", "battle/img_roomBtn_13.png", "battle/img_bomb_bg.png", "basePic/btn_yellow.png", "noZip/btn_green.png", "battle/hslider.png", "firstPic/img_paob_1.png", "hall/btn_shop.png", "hall/btn_teh.png", "hall/btn_shouc.png", "gift/img_btn_shake.png", "hall/img_mail_0.png", "gift/img_milb.png", "room_all/img_red_light.png" ],
                        loadList3D: []
                    };
                    return FishBtnLayerUI;
                }(Laya.View);
                roomScene.FishBtnLayerUI = FishBtnLayerUI;
                REG("ui.roomScene.FishBtnLayerUI", FishBtnLayerUI);
                var FishMapDialogUI = function(_super) {
                    __extends(FishMapDialogUI, _super);
                    function FishMapDialogUI() {
                        return _super.call(this) || this;
                    }
                    FishMapDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(FishMapDialogUI.uiView);
                    };
                    FishMapDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            renderType: "render",
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 1,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 900,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .8
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 109,
                            child: [ {
                                type: "Box",
                                props: {
                                    presetID: 1,
                                    centerY: 25,
                                    centerX: 0,
                                    y: 0,
                                    x: 0,
                                    width: 1099,
                                    name: "dialogTitle",
                                    isPresetRoot: true,
                                    height: 621
                                },
                                compId: 119,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        presetID: 2,
                                        y: 0,
                                        x: 0,
                                        width: 1099,
                                        skin: "noZip/img_bg_16.png",
                                        sizeGrid: "0,42,0,53",
                                        height: 621
                                    },
                                    compId: 9
                                }, {
                                    type: "Image",
                                    props: {
                                        presetID: 3,
                                        y: -5,
                                        x: -8,
                                        width: 1115,
                                        skin: "noZip/img_title_3.png",
                                        sizeGrid: "0,261,0,256",
                                        height: 83
                                    },
                                    compId: 10
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -11,
                                        x: 316,
                                        width: 466,
                                        skin: "noZip/img_title_2.png",
                                        sizeGrid: "0,180,0,176",
                                        height: 69
                                    },
                                    compId: 121,
                                    child: [ {
                                        type: "Label",
                                        props: {
                                            y: 14,
                                            x: 192,
                                            text: "鱼鉴",
                                            strokeColor: "#0b3170",
                                            stroke: 4,
                                            fontSize: 40,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true
                                        },
                                        compId: 176
                                    } ]
                                } ]
                            }, {
                                type: "Tab",
                                props: {
                                    width: 1001,
                                    var: "tab_type",
                                    space: 11,
                                    height: 64,
                                    centerY: -175,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 122,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 495,
                                        name: "item0",
                                        height: 64
                                    },
                                    compId: 173,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            y: 32,
                                            x: 248,
                                            width: 495,
                                            var: "btn_tab_0",
                                            stateNum: 1,
                                            skin: "noZip/btn_2.png",
                                            sizeGrid: "0,18,0,16",
                                            name: "0",
                                            labelStrokeColor: "#70200b",
                                            labelStroke: 3,
                                            labelSize: 28,
                                            labelPadding: "0,0,3,0",
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "普通鱼鉴",
                                            height: 64,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 123,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                playScaleY: 1.05,
                                                playScaleX: 1.05,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 171
                                        } ]
                                    } ]
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 506,
                                        width: 495,
                                        name: "item1",
                                        height: 64
                                    },
                                    compId: 174,
                                    child: [ {
                                        type: "Button",
                                        props: {
                                            y: 32,
                                            x: 248,
                                            width: 495,
                                            var: "btn_tab_1",
                                            stateNum: 1,
                                            skin: "noZip/btn_3.png",
                                            sizeGrid: "0,18,0,16",
                                            name: "1",
                                            labelStrokeColor: "#0b3170",
                                            labelStroke: 3,
                                            labelSize: 28,
                                            labelPadding: "0,0,3,0",
                                            labelFont: "SimHei",
                                            labelColors: "#ffffff",
                                            labelBold: true,
                                            labelAlign: "center",
                                            label: "特殊鱼种",
                                            height: 64,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 124,
                                        child: [ {
                                            type: "Script",
                                            props: {
                                                playScaleY: 1.05,
                                                playScaleX: 1.05,
                                                runtime: "script/ButtonAni.ts"
                                            },
                                            compId: 172
                                        } ]
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 247,
                                    width: 1061,
                                    skin: "noZip/img_bg_8.png",
                                    sizeGrid: "20,22,25,22",
                                    height: 410,
                                    centerX: 0
                                },
                                compId: 125,
                                child: [ {
                                    type: "Button",
                                    props: {
                                        y: 205,
                                        x: -25,
                                        var: "btn_left",
                                        stateNum: 1,
                                        skin: "common/btn_jiant.png",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 126,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 128
                                    } ]
                                }, {
                                    type: "Button",
                                    props: {
                                        y: 205,
                                        x: 1087,
                                        var: "btn_right",
                                        stateNum: 1,
                                        skin: "common/btn_jiant.png",
                                        scaleX: -1,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 129,
                                    child: [ {
                                        type: "Script",
                                        props: {
                                            aniScaleY: 1,
                                            aniScaleX: -1,
                                            runtime: "script/ButtonAni.ts"
                                        },
                                        compId: 130
                                    } ]
                                }, {
                                    type: "List",
                                    props: {
                                        y: 0,
                                        x: 2,
                                        width: 1057,
                                        var: "list_ordinaryFish",
                                        spaceY: 23,
                                        spaceX: 12,
                                        repeatY: 2,
                                        repeatX: 4,
                                        height: 405
                                    },
                                    compId: 131,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: 23,
                                            x: 27,
                                            width: 241,
                                            renderType: "render",
                                            name: "box_11",
                                            height: 171
                                        },
                                        compId: 133,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 0,
                                                x: 0,
                                                width: 603,
                                                skin: "noZip/img_bg_19.png",
                                                sizeGrid: "0,30,0,29",
                                                scaleY: .4,
                                                scaleX: .4,
                                                height: 428
                                            },
                                            compId: 134
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 27,
                                                x: 11,
                                                width: 219,
                                                skin: "noZip/img_bg_18.png",
                                                height: 118
                                            },
                                            compId: 135
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 27,
                                                x: 12,
                                                width: 219,
                                                name: "box_fishIcon",
                                                height: 118
                                            },
                                            compId: 138,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    skin: "fishIcon/fish_019_Icon.png",
                                                    name: "img_fishIcon",
                                                    centerY: 0,
                                                    centerX: 0,
                                                    anchorY: .5,
                                                    anchorX: .5
                                                },
                                                compId: 136
                                            } ]
                                        }, {
                                            type: "Label",
                                            props: {
                                                width: 150,
                                                valign: "middle",
                                                text: "10倍",
                                                strokeColor: "#0b3170",
                                                stroke: 3,
                                                name: "text_fishTimes",
                                                height: 24,
                                                fontSize: 24,
                                                font: "SimHei",
                                                color: "#b3f3ff",
                                                centerY: 65,
                                                centerX: 0,
                                                bold: true,
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "center"
                                            },
                                            compId: 139
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: -5,
                                                x: 29,
                                                width: 261,
                                                skin: "noZip/img_title_1.png",
                                                sizeGrid: "0,108,0,104",
                                                scaleY: .7,
                                                scaleX: .7,
                                                height: 50
                                            },
                                            compId: 140
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 0,
                                                x: 61,
                                                width: 119,
                                                valign: "middle",
                                                text: "黄金小丑鱼",
                                                strokeColor: "#70200b",
                                                stroke: 2.5,
                                                name: "text_fishName",
                                                height: 22,
                                                fontSize: 20,
                                                font: "SimHei",
                                                color: "#ffde00",
                                                bold: true,
                                                align: "center"
                                            },
                                            compId: 141
                                        } ]
                                    } ]
                                }, {
                                    type: "List",
                                    props: {
                                        y: 0,
                                        x: 2,
                                        width: 1057,
                                        var: "list_specialFish",
                                        spaceX: 0,
                                        repeatY: 1,
                                        height: 404
                                    },
                                    compId: 142,
                                    child: [ {
                                        type: "Box",
                                        props: {
                                            y: -1,
                                            x: 0,
                                            width: 1057,
                                            renderType: "render",
                                            height: 404
                                        },
                                        compId: 143,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 199,
                                                x: 183,
                                                skin: "fishIcon/fish_290_Icon.png",
                                                name: "img_fishIcon",
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 144
                                        }, {
                                            type: "Image",
                                            props: {
                                                y: 30,
                                                x: 373,
                                                skin: "vipCharge/img_vip_split.png"
                                            },
                                            compId: 145
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 109,
                                                x: 510,
                                                valign: "middle",
                                                text: "幸运转轮",
                                                strokeColor: "#0b3170",
                                                stroke: 3,
                                                name: "text_fishName",
                                                fontSize: 35,
                                                font: "SimHei",
                                                color: "#ffde00",
                                                bold: true,
                                                anchorY: .5,
                                                anchorX: .5,
                                                align: "center"
                                            },
                                            compId: 146
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 147,
                                                x: 410,
                                                width: 517,
                                                name: "box_text0",
                                                height: 222
                                            },
                                            compId: 147,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    y: 2,
                                                    x: 18,
                                                    skin: "common/btn_jiant.png",
                                                    scaleY: .3,
                                                    scaleX: -.3,
                                                    name: "img_jiant",
                                                    label: "label"
                                                },
                                                compId: 153
                                            } ]
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 190,
                                                x: 410,
                                                width: 100,
                                                name: "box_text1",
                                                height: 100
                                            },
                                            compId: 148,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    y: 2,
                                                    x: 18,
                                                    skin: "common/btn_jiant.png",
                                                    scaleY: .3,
                                                    scaleX: -.3,
                                                    name: "img_jiant",
                                                    label: "label"
                                                },
                                                compId: 157
                                            } ]
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 231,
                                                x: 410,
                                                width: 100,
                                                name: "box_text2",
                                                height: 100
                                            },
                                            compId: 149,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    y: 1,
                                                    x: 18,
                                                    skin: "common/btn_jiant.png",
                                                    scaleY: .3,
                                                    scaleX: -.3,
                                                    name: "img_jiant",
                                                    label: "label"
                                                },
                                                compId: 158
                                            } ]
                                        }, {
                                            type: "Box",
                                            props: {
                                                y: 277,
                                                x: 410,
                                                width: 100,
                                                name: "box_text3",
                                                height: 100
                                            },
                                            compId: 159,
                                            child: [ {
                                                type: "Image",
                                                props: {
                                                    y: 1,
                                                    x: 18,
                                                    skin: "common/btn_jiant.png",
                                                    scaleY: .3,
                                                    scaleX: -.3,
                                                    name: "img_jiant",
                                                    label: "label"
                                                },
                                                compId: 160
                                            } ]
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 380,
                                                x: 527,
                                                text: "游戏中掉线时，系统随机一个倍数补偿给玩家，补偿通过邮件发送",
                                                strokeColor: "#0b3170",
                                                stroke: 3,
                                                rotation: 0,
                                                name: "text_help",
                                                height: 20,
                                                fontSize: 20,
                                                font: "SimHei",
                                                color: "#b3f3ff",
                                                centerX: -1,
                                                bold: true,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 162
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 146,
                                                x: 438,
                                                width: 472,
                                                text: "游戏过程中，击落钻头蟹，立即获得钻头\\n此时炮倍为击落炮倍",
                                                strokeColor: "#0b3170",
                                                stroke: 3,
                                                name: "text_describe0",
                                                leading: 17,
                                                height: 141,
                                                fontSize: 24,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true
                                            },
                                            compId: 150
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 190,
                                                x: 438,
                                                width: 472,
                                                text: "转盘分为外圈和内圈",
                                                strokeColor: "#0b3170",
                                                stroke: 3,
                                                name: "text_describe1",
                                                leading: 17,
                                                height: 141,
                                                fontSize: 24,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true
                                            },
                                            compId: 151
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 231,
                                                x: 438,
                                                width: 472,
                                                text: "相乘最高可获得       奖励哦！",
                                                strokeColor: "#0b3170",
                                                stroke: 3,
                                                name: "text_describe2",
                                                leading: 17,
                                                height: 141,
                                                fontSize: 24,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true
                                            },
                                            compId: 152
                                        }, {
                                            type: "Label",
                                            props: {
                                                y: 283,
                                                x: 438,
                                                width: 472,
                                                text: "相乘最高可获得       奖励哦！",
                                                strokeColor: "#0b3170",
                                                stroke: 3,
                                                name: "text_describe3",
                                                leading: 17,
                                                height: 141,
                                                fontSize: 24,
                                                font: "SimHei",
                                                color: "#ffffff",
                                                bold: true
                                            },
                                            compId: 161
                                        } ]
                                    } ]
                                } ]
                            }, {
                                type: "List",
                                props: {
                                    width: 175,
                                    var: "list_dian",
                                    spaceX: -23,
                                    repeatY: 1,
                                    height: 50,
                                    centerY: 305,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 163,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 25,
                                        x: 20,
                                        width: 50,
                                        renderType: "render",
                                        height: 50,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 164,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            skin: "common/img_dian_1.png",
                                            name: "img_dian",
                                            centerY: 0,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5
                                        },
                                        compId: 165
                                    } ]
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 20,
                                    var: "returnBack",
                                    skin: "common/btn_fanh_1.png",
                                    left: 30
                                },
                                compId: 177
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "prefab/dialogTitle.prefab", "noZip/img_title_2.png", "noZip/btn_2.png", "noZip/btn_3.png", "noZip/img_bg_8.png", "common/btn_jiant.png", "noZip/img_bg_19.png", "noZip/img_bg_18.png", "fishIcon/fish_019_Icon.png", "noZip/img_title_1.png", "fishIcon/fish_290_Icon.png", "vipCharge/img_vip_split.png", "common/img_dian_1.png", "common/btn_fanh_1.png" ],
                        loadList3D: []
                    };
                    return FishMapDialogUI;
                }(Laya.Dialog);
                roomScene.FishMapDialogUI = FishMapDialogUI;
                REG("ui.roomScene.FishMapDialogUI", FishMapDialogUI);
                var FishSceneUI = function(_super) {
                    __extends(FishSceneUI, _super);
                    function FishSceneUI() {
                        return _super.call(this) || this;
                    }
                    FishSceneUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(FishSceneUI.uiView);
                    };
                    FishSceneUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 1630,
                                var: "img_bg",
                                skin: "room_2/rongyanBigBoss0.jpg",
                                height: 750,
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 4
                        } ],
                        loadList: [ "room_2/rongyanBigBoss0.jpg" ],
                        loadList3D: []
                    };
                    return FishSceneUI;
                }(Laya.View);
                roomScene.FishSceneUI = FishSceneUI;
                REG("ui.roomScene.FishSceneUI", FishSceneUI);
                var FishTeamComingDlgUI = function(_super) {
                    __extends(FishTeamComingDlgUI, _super);
                    function FishTeamComingDlgUI() {
                        return _super.call(this) || this;
                    }
                    FishTeamComingDlgUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(FishTeamComingDlgUI.uiView);
                    };
                    FishTeamComingDlgUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 207,
                                x: 0,
                                var: "box_bg1"
                            },
                            compId: 160,
                            child: [ {
                                type: "Box",
                                props: {},
                                compId: 119,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        x: 318,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 31
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 636,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 36
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 954,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 47
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1272,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 48
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1590,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 49
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1908,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 50
                                }, {
                                    type: "Image",
                                    props: {
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 75
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2544,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 104
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2862,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 105
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3180,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 106
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3498,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 107
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3816,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 108
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 4134,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 109
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2226,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 110
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 38
                                },
                                compId: 159,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 169,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 32
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 338,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 37
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 507,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 38
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 676,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 39
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 845,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 40
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 1014,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 41
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 1183,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 42
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 1352,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 43
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 1521,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 44
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 1690,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 45
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 1859,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 51
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 76
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 2197,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 121
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 2366,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 122
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 2535,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 123
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 2704,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 124
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 2873,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 125
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 3042,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 126
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 3211,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 127
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 3380,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 128
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 3549,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 129
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 3718,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 130
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 3887,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 131
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 2028,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 132
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 4225,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 134
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 4394,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 135
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 0,
                                        x: 4056,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 145
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 471,
                                x: -2933,
                                var: "box_bg2"
                            },
                            compId: 292,
                            child: [ {
                                type: "Box",
                                props: {},
                                compId: 290,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 261
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 169,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 262
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 338,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 263
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 507,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 264
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 676,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 265
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 845,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 266
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1014,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 267
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1183,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 268
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1352,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 269
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1521,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 270
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1690,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 271
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2028,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 273
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2197,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 274
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2366,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 275
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2535,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 276
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2704,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 277
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2873,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 278
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3042,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 279
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3211,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 280
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3380,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 281
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3549,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 282
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3718,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 283
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1859,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 284
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 4056,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 285
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 4225,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 286
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 4394,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 287
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3887,
                                        skin: "room_all/img_teams_come_3.png"
                                    },
                                    compId: 288
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 22,
                                    x: 111
                                },
                                compId: 291,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        x: 318,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 234
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 636,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 235
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 954,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 236
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1272,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 237
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1590,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 238
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 1908,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 239
                                }, {
                                    type: "Image",
                                    props: {
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 240
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2544,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 241
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2862,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 242
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3180,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 243
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3498,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 244
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 3816,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 245
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 4134,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 246
                                }, {
                                    type: "Image",
                                    props: {
                                        x: 2226,
                                        skin: "room_all/img_teams_come_2.png"
                                    },
                                    compId: 247
                                } ]
                            } ]
                        }, {
                            type: "Box",
                            props: {
                                y: 375,
                                x: 815,
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 295,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 286,
                                    x: -50,
                                    width: 1730,
                                    var: "img_black",
                                    skin: "basePic/img_black_bg.png",
                                    height: 186,
                                    alpha: .8
                                },
                                compId: 35
                            }, {
                                type: "Image",
                                props: {
                                    y: 375,
                                    x: 544,
                                    var: "img_fishes",
                                    skin: "room_all/img_teams_come_4.png",
                                    name: "",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 33
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 305,
                                x: 633,
                                var: "img_yuchao",
                                skin: "room_all/img_teams_come_1.png"
                            },
                            compId: 34
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 160,
                                keyframes: {
                                    x: [ {
                                        value: 1630,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 160,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 160,
                                        key: "x",
                                        index: 6
                                    }, {
                                        value: -1800,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 160,
                                        key: "x",
                                        index: 72
                                    } ]
                                }
                            }, {
                                target: 292,
                                keyframes: {
                                    y: [ {
                                        value: 467,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 292,
                                        key: "y",
                                        index: 0
                                    } ],
                                    x: [ {
                                        value: -4563,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 292,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: -2933,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 292,
                                        key: "x",
                                        index: 6
                                    }, {
                                        value: -1133,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 292,
                                        key: "x",
                                        index: 72
                                    } ]
                                }
                            }, {
                                target: 34,
                                keyframes: {
                                    x: [ {
                                        value: 1633,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 34,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 633,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 34,
                                        key: "x",
                                        index: 6
                                    } ]
                                }
                            }, {
                                target: 33,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleY",
                                        index: 7
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleY",
                                        index: 9
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleY",
                                        index: 11
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleY",
                                        index: 12
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleX",
                                        index: 7
                                    }, {
                                        value: 1.2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleX",
                                        index: 9
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1.1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleX",
                                        index: 11
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 33,
                                        key: "scaleX",
                                        index: 12
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "room_all/img_teams_come_2.png", "room_all/img_teams_come_3.png", "basePic/img_black_bg.png", "room_all/img_teams_come_4.png", "room_all/img_teams_come_1.png" ],
                        loadList3D: []
                    };
                    return FishTeamComingDlgUI;
                }(Laya.Dialog);
                roomScene.FishTeamComingDlgUI = FishTeamComingDlgUI;
                REG("ui.roomScene.FishTeamComingDlgUI", FishTeamComingDlgUI);
                var FishTrayUI = function(_super) {
                    __extends(FishTrayUI, _super);
                    function FishTrayUI() {
                        return _super.call(this) || this;
                    }
                    FishTrayUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(FishTrayUI.uiView);
                    };
                    FishTrayUI.uiView = {
                        type: "View",
                        props: {
                            width: 100,
                            height: 100
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 100,
                                scaleY: 1,
                                scaleX: 1,
                                height: 100,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 9,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 50,
                                    x: 50,
                                    visible: true,
                                    skin: "firstPic/img_tray_1.png",
                                    scaleY: 4,
                                    scaleX: 4,
                                    blendMode: "lighter",
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 8
                            }, {
                                type: "Image",
                                props: {
                                    y: 50,
                                    x: 50,
                                    visible: true,
                                    skin: "firstPic/img_tray_0.png",
                                    scaleY: 0,
                                    scaleX: 0,
                                    rotation: 1080,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 1
                                },
                                compId: 3
                            }, {
                                type: "Box",
                                props: {
                                    y: 50,
                                    x: 50,
                                    width: 300,
                                    rotation: 0,
                                    height: 300,
                                    centerY: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 11,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 150,
                                        x: 150,
                                        visible: true,
                                        skin: "firstPic/img_tray_2.png",
                                        scaleY: 1.3,
                                        scaleX: 1.3,
                                        centerY: 0,
                                        centerX: 0,
                                        blendMode: "lighter",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 7
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 52,
                                        x: 150,
                                        visible: true,
                                        var: "img_fishIcon",
                                        skin: "fishIcon/img_sp23.png",
                                        scaleY: 0,
                                        scaleX: 0,
                                        rotation: 0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1
                                    },
                                    compId: 10
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 250,
                                        x: 150,
                                        width: 500,
                                        visible: true,
                                        var: "text_goldNum",
                                        text: "1800000",
                                        scaleY: 0,
                                        scaleX: 0,
                                        rotation: 0,
                                        height: 78,
                                        font: "numberFont1",
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1,
                                        align: "center"
                                    },
                                    compId: 6
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 143,
                                    x: 50,
                                    visible: false,
                                    skin: "firstPic/img_title_7.png",
                                    scaleY: 0,
                                    scaleX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 4,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 31,
                                        x: 160,
                                        var: "img_fishName",
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 5
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    y: 140,
                                    x: 50,
                                    visible: true,
                                    var: "text_specialName",
                                    text: "text",
                                    skin: "battle/text_sp23.png",
                                    scaleY: 0,
                                    scaleX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 1
                                },
                                compId: 12
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 90
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 95
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 101
                                    } ],
                                    scaleX: [ {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 90
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 95
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 101
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 5
                                    }, {
                                        value: 1080,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 109
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .888888888888889,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 1
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 8,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 4
                                    }, {
                                        value: 4,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 21
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 4
                                    }, {
                                        value: 4,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 21
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "alpha",
                                        index: 4
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "alpha",
                                        index: 21
                                    } ]
                                }
                            }, {
                                target: 7,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "visible",
                                        index: 8
                                    } ],
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 15
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 25
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 35
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 44
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 45
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 54
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 55
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 64
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 65
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "scaleY",
                                        index: 74
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "scaleY",
                                        index: 75
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "scaleY",
                                        index: 84
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "scaleY",
                                        index: 85
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 94
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 25
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 35
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 44
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 45
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 54
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 55
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 64
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 65
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "scaleX",
                                        index: 74
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "scaleX",
                                        index: 75
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "scaleX",
                                        index: 84
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "scaleX",
                                        index: 85
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 94
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 5
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 25
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 35
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 44
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 45
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 54
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 55
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 64
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 65
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "alpha",
                                        index: 74
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "alpha",
                                        index: 75
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "alpha",
                                        index: 84
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "alpha",
                                        index: 85
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 94
                                    } ]
                                }
                            }, {
                                target: 6,
                                keyframes: {
                                    y: [ {
                                        value: 150,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "y",
                                        index: 0
                                    } ],
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleY",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 100
                                    }, {
                                        value: 1.4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 104
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 109
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleX",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 100
                                    }, {
                                        value: 1.4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 104
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 109
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 6
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 13
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 20
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 26
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 33
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 41
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 48
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 55
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 62
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 69
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 76
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 83
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 90
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 97
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 104
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 4,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "visible",
                                        index: 109
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 4,
                                        key: "scaleY",
                                        index: 1
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadIn",
                                        tween: false,
                                        target: 4,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 4,
                                        key: "scaleY",
                                        index: 95
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 4,
                                        key: "scaleY",
                                        index: 100
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "scaleY",
                                        index: 105
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 4,
                                        key: "scaleX",
                                        index: 1
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadIn",
                                        tween: false,
                                        target: 4,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 4,
                                        key: "scaleX",
                                        index: 95
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 4,
                                        key: "scaleX",
                                        index: 100
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "scaleX",
                                        index: 105
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 9
                                    } ]
                                }
                            }, {
                                target: 10,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 0
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 11,
                                keyframes: {
                                    centerY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "centerY",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 12,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "visible",
                                        index: 0
                                    } ]
                                }
                            } ],
                            name: "ani_0",
                            id: 1,
                            frameRate: 36,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "visible",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 7,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "visible",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 4,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "visible",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 8,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "visible",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 10,
                                keyframes: {
                                    y: [ {
                                        value: 160,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 0
                                    } ],
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 90
                                    }, {
                                        value: 2,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 97
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 104
                                    } ],
                                    scaleX: [ {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 90
                                    }, {
                                        value: 2,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 97
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 104
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 6,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleY",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 97
                                    }, {
                                        value: 2,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 104
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 111
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleX",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 97
                                    }, {
                                        value: 2,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 104
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 111
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 6
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 11
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 16
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 21
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 26
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 31
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 36
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 41
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 46
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 51
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 56
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 61
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 66
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 71
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 76
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 81
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 86
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 91
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 96
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 101
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 106
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 13
                                    } ]
                                }
                            }, {
                                target: 12,
                                keyframes: {
                                    y: [ {
                                        value: 64,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "y",
                                        index: 0
                                    } ],
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "visible",
                                        index: 58
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleY",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 12,
                                        label: null,
                                        key: "scaleY",
                                        index: 93
                                    }, {
                                        value: 2,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 12,
                                        label: null,
                                        key: "scaleY",
                                        index: 100
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        label: null,
                                        key: "scaleY",
                                        index: 107
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 4
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 12,
                                        label: null,
                                        key: "scaleX",
                                        index: 26
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 12,
                                        label: null,
                                        key: "scaleX",
                                        index: 43
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        label: null,
                                        key: "scaleX",
                                        index: 59
                                    }, {
                                        value: 1.05,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        label: null,
                                        key: "scaleX",
                                        index: 76
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 12,
                                        label: null,
                                        key: "scaleX",
                                        index: 93
                                    }, {
                                        value: 2,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 12,
                                        label: null,
                                        key: "scaleX",
                                        index: 100
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        label: null,
                                        key: "scaleX",
                                        index: 107
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 12,
                                        key: "alpha",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "alpha",
                                        index: 10
                                    } ]
                                }
                            } ],
                            name: "ani_1",
                            id: 2,
                            frameRate: 36,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 8,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 4,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 4
                                    }, {
                                        value: 4,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 21
                                    } ],
                                    scaleX: [ {
                                        value: 4,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 4
                                    }, {
                                        value: 4,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 21
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "alpha",
                                        index: 4
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "alpha",
                                        index: 21
                                    } ]
                                }
                            }, {
                                target: 3,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 110
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 115
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 124
                                    } ],
                                    scaleX: [ {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 110
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 115
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 124
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 5
                                    }, {
                                        value: 1080,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 139
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 7,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "visible",
                                        index: 5
                                    } ],
                                    scaleY: [ {
                                        value: 1.2666666666666666,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 15
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 25
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 35
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 44
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 45
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 54
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 55
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 64
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 65
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 74
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 75
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 84
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 85
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 94
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 95
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 104
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 105
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 114
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 115
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 124
                                    } ],
                                    scaleX: [ {
                                        value: 1.2666666666666666,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 25
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 35
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 44
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 45
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 54
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 55
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 64
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 65
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 74
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 75
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 84
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 85
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 94
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 95
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 104
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 105
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 114
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 115
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 124
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 5
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 25
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 35
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 44
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 45
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 54
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 55
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 64
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 65
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 74
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 75
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 84
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 85
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 94
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 95
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 104
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 105
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 114
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 115
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 124
                                    } ]
                                }
                            }, {
                                target: 10,
                                keyframes: {
                                    y: [ {
                                        value: 52,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 115
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 120
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 126
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 115
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 120
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 126
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 4
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 10
                                    } ]
                                }
                            }, {
                                target: 6,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleY",
                                        index: 16
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 125
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 130
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 136
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleX",
                                        index: 16
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 125
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 130
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 136
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 6
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 13
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 20
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 27
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 34
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 41
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 48
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 55
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 62
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 69
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 76
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 83
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 90
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 97
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 104
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 111
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        label: null,
                                        key: "rotation",
                                        index: 118
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 125
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 10
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 16
                                    } ]
                                }
                            }, {
                                target: 12,
                                keyframes: {
                                    y: [ {
                                        value: 140,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "y",
                                        index: 0
                                    } ],
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 2.6,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 2.6,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: .65,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleY",
                                        index: 14
                                    }, {
                                        value: .65,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleY",
                                        index: 119
                                    }, {
                                        value: 1.14,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 12,
                                        key: "scaleY",
                                        index: 124
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "scaleY",
                                        index: 130
                                    } ],
                                    scaleX: [ {
                                        value: 2.6,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 2.6,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: .65,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 14
                                    }, {
                                        value: .68,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 31
                                    }, {
                                        value: .65,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 49
                                    }, {
                                        value: .68,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 66
                                    }, {
                                        value: .65,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 84
                                    }, {
                                        value: .68,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 101
                                    }, {
                                        value: .65,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 119
                                    }, {
                                        value: 1.14,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 124
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 130
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "alpha",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "alpha",
                                        index: 14
                                    } ]
                                }
                            }, {
                                target: 4,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "visible",
                                        index: 139
                                    } ]
                                }
                            } ],
                            name: "ani_2",
                            id: 3,
                            frameRate: 36,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 3,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 90
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 95
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleY",
                                        index: 101
                                    } ],
                                    scaleX: [ {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 90
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 95
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "scaleX",
                                        index: 101
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 5
                                    }, {
                                        value: 1080,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 109
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: .888888888888889,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 1
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "alpha",
                                        index: 8
                                    } ]
                                }
                            }, {
                                target: 8,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 4
                                    }, {
                                        value: 4,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleY",
                                        index: 21
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 4
                                    }, {
                                        value: 4,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "scaleX",
                                        index: 21
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 8,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "alpha",
                                        index: 4
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 8,
                                        key: "alpha",
                                        index: 21
                                    } ]
                                }
                            }, {
                                target: 7,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "visible",
                                        index: 8
                                    } ],
                                    scaleY: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 15
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 25
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 35
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 44
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 45
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 54
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 55
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleY",
                                        index: 64
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 65
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "scaleY",
                                        index: 74
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "scaleY",
                                        index: 75
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "scaleY",
                                        index: 84
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "scaleY",
                                        index: 85
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleY",
                                        index: 94
                                    } ],
                                    scaleX: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 15
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 25
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 35
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 44
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 45
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 54
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 55
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "scaleX",
                                        index: 64
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 65
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "scaleX",
                                        index: 74
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "scaleX",
                                        index: 75
                                    }, {
                                        value: 1.3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "scaleX",
                                        index: 84
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "scaleX",
                                        index: 85
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "scaleX",
                                        index: 94
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 5
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 14
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 15
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 24
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 25
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 34
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 35
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 44
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 45
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 54
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 55
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 64
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 65
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "alpha",
                                        index: 74
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "alpha",
                                        index: 75
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        label: null,
                                        key: "alpha",
                                        index: 84
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        label: null,
                                        key: "alpha",
                                        index: 85
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 94
                                    } ]
                                }
                            }, {
                                target: 6,
                                keyframes: {
                                    y: [ {
                                        value: 300,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 250,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "y",
                                        index: 20
                                    } ],
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "visible",
                                        index: 0
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleY",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 100
                                    }, {
                                        value: 1.4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 104
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleY",
                                        index: 109
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "scaleX",
                                        index: 13
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 100
                                    }, {
                                        value: 1.4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 104
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "scaleX",
                                        index: 109
                                    } ],
                                    rotation: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 6
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 13
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 20
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 26
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 33
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 41
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 48
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 55
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 62
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 69
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 76
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 83
                                    }, {
                                        value: 8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 90
                                    }, {
                                        value: -8,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 97
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "rotation",
                                        index: 104
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 6,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 5
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 6,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            }, {
                                target: 4,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "visible",
                                        index: 109
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 4,
                                        key: "scaleY",
                                        index: 95
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 4,
                                        key: "scaleY",
                                        index: 100
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "scaleY",
                                        index: 105
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 4,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 4,
                                        key: "scaleX",
                                        index: 95
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 4,
                                        key: "scaleX",
                                        index: 100
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "scaleX",
                                        index: 105
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 4,
                                        key: "alpha",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 12,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "visible",
                                        index: 0
                                    } ]
                                }
                            }, {
                                target: 10,
                                keyframes: {
                                    y: [ {
                                        value: 52,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 150,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "y",
                                        index: 2
                                    } ],
                                    x: [ {
                                        value: 150,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 150,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "x",
                                        index: 2
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        label: null,
                                        key: "scaleY",
                                        index: 2
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleY",
                                        index: 6
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        label: null,
                                        key: "scaleY",
                                        index: 12
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleY",
                                        index: 92
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleY",
                                        index: 97
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleY",
                                        index: 103
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        label: null,
                                        key: "scaleX",
                                        index: 2
                                    }, {
                                        value: 4,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleX",
                                        index: 6
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        label: null,
                                        key: "scaleX",
                                        index: 12
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleX",
                                        index: 92
                                    }, {
                                        value: 1.75,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleX",
                                        index: 97
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "scaleX",
                                        index: 103
                                    } ],
                                    rotation: [ {
                                        value: 45,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: 45,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "rotation",
                                        index: 103
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "rotation",
                                        index: 105
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        label: null,
                                        key: "alpha",
                                        index: 2
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "alpha",
                                        index: 6
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        label: null,
                                        key: "alpha",
                                        index: 12
                                    } ]
                                }
                            } ],
                            name: "ani_3",
                            id: 1,
                            frameRate: 36,
                            action: 0
                        } ],
                        loadList: [ "firstPic/img_tray_1.png", "firstPic/img_tray_0.png", "firstPic/img_tray_2.png", "fishIcon/img_sp23.png", "firstPic/img_title_7.png", "battle/text_sp23.png" ],
                        loadList3D: []
                    };
                    return FishTrayUI;
                }(Laya.View);
                roomScene.FishTrayUI = FishTrayUI;
                REG("ui.roomScene.FishTrayUI", FishTrayUI);
                var hongYunRotationUI = function(_super) {
                    __extends(hongYunRotationUI, _super);
                    function hongYunRotationUI() {
                        return _super.call(this) || this;
                    }
                    hongYunRotationUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(hongYunRotationUI.uiView);
                    };
                    hongYunRotationUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 0,
                                x: 0,
                                width: 1,
                                rotation: 240,
                                height: 1,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 3,
                            child: [ {
                                type: "Box",
                                props: {
                                    y: -500,
                                    x: 0,
                                    width: 124,
                                    var: "box_zi_0",
                                    scaleY: 3.5,
                                    scaleX: 3.5,
                                    rotation: 0,
                                    height: 124,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 10,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        zOrder: 10,
                                        width: 108,
                                        skin: "hongYun/lyfb_zi1.png",
                                        height: 111,
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 4
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: 500,
                                    width: 124,
                                    var: "box_zi_1",
                                    scaleY: 3.5,
                                    scaleX: 3.5,
                                    rotation: 90,
                                    height: 124,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 11,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        zOrder: 10,
                                        skin: "hongYun/lyfb_zi2.png",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 5
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 500,
                                    x: 0,
                                    width: 124,
                                    var: "box_zi_2",
                                    scaleY: 3.5,
                                    scaleX: 3.5,
                                    rotation: 180,
                                    height: 124,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 12,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        zOrder: 10,
                                        skin: "hongYun/lyfb_zi3.png",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 6
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 0,
                                    x: -500,
                                    width: 124,
                                    var: "box_zi_3",
                                    scaleY: 3.5,
                                    scaleX: 3.5,
                                    rotation: -90,
                                    height: 124,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 13,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        zOrder: 10,
                                        skin: "hongYun/lyfb_zi4.png",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 7
                                } ]
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 0,
                                x: -1,
                                skin: "hongYun/hy_wait_1.png",
                                scaleY: 1,
                                scaleX: 1,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 18
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 18,
                                keyframes: {
                                    y: [ {
                                        value: 50,
                                        tweenMethod: "cubicOut",
                                        tween: true,
                                        target: 18,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: -200,
                                        tweenMethod: "bounceOut",
                                        tween: true,
                                        target: 18,
                                        key: "y",
                                        index: 7
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "y",
                                        index: 25
                                    } ],
                                    scaleY: [ {
                                        value: .2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleY",
                                        index: 15
                                    } ],
                                    scaleX: [ {
                                        value: .2,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleX",
                                        index: 15
                                    } ]
                                }
                            }, {
                                target: 3,
                                keyframes: {
                                    rotation: [ {
                                        value: -90,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 3,
                                        key: "rotation",
                                        index: 0
                                    }, {
                                        value: -90,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 25
                                    }, {
                                        value: 108,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        label: "startFly",
                                        key: "rotation",
                                        index: 84
                                    }, {
                                        value: 240,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 3,
                                        key: "rotation",
                                        index: 120
                                    } ]
                                }
                            }, {
                                target: 10,
                                keyframes: {
                                    y: [ {
                                        value: -500,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: -500,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 25
                                    }, {
                                        value: -150,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "y",
                                        index: 35
                                    }, {
                                        value: -200,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 64
                                    }, {
                                        value: -350,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 70
                                    }, {
                                        value: -100,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "y",
                                        index: 77
                                    }, {
                                        value: -100,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 108
                                    }, {
                                        value: -500,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 120
                                    } ],
                                    scaleY: [ {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 25
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleY",
                                        index: 35
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 64
                                    }, {
                                        value: 2.5,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 70
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleY",
                                        index: 77
                                    }, {
                                        value: 1,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 108
                                    }, {
                                        value: 3.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleY",
                                        index: 120
                                    } ],
                                    scaleX: [ {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 25
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleX",
                                        index: 35
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 64
                                    }, {
                                        value: 2.5,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 70
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "scaleX",
                                        index: 77
                                    }, {
                                        value: 1,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 108
                                    }, {
                                        value: 3.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "scaleX",
                                        index: 120
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        label: "hyStormSound",
                                        key: "alpha",
                                        index: 25
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 10,
                                        key: "alpha",
                                        index: 35
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 108
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "alpha",
                                        index: 120
                                    } ]
                                }
                            }, {
                                target: 11,
                                keyframes: {
                                    x: [ {
                                        value: 500,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 500,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 11,
                                        key: "x",
                                        index: 33
                                    }, {
                                        value: 150,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "x",
                                        index: 43
                                    }, {
                                        value: 200,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "x",
                                        index: 64
                                    }, {
                                        value: 350,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 11,
                                        key: "x",
                                        index: 70
                                    }, {
                                        value: 100,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "x",
                                        index: 77
                                    }, {
                                        value: 100,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 11,
                                        key: "x",
                                        index: 108
                                    }, {
                                        value: 500,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "x",
                                        index: 120
                                    } ],
                                    scaleY: [ {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 33
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleY",
                                        index: 43
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 64
                                    }, {
                                        value: 2.5,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 70
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleY",
                                        index: 77
                                    }, {
                                        value: 1,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 108
                                    }, {
                                        value: 3.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleY",
                                        index: 120
                                    } ],
                                    scaleX: [ {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 33
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleX",
                                        index: 43
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 64
                                    }, {
                                        value: 2.5,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 70
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "scaleX",
                                        index: 77
                                    }, {
                                        value: 1,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 108
                                    }, {
                                        value: 3.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "scaleX",
                                        index: 120
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 11,
                                        label: "hyStormSound",
                                        key: "alpha",
                                        index: 33
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 11,
                                        key: "alpha",
                                        index: 43
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 11,
                                        key: "alpha",
                                        index: 108
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 11,
                                        key: "alpha",
                                        index: 120
                                    } ]
                                }
                            }, {
                                target: 12,
                                keyframes: {
                                    y: [ {
                                        value: 500,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 500,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 12,
                                        key: "y",
                                        index: 41
                                    }, {
                                        value: 150,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "y",
                                        index: 51
                                    }, {
                                        value: 200,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "y",
                                        index: 64
                                    }, {
                                        value: 350,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 12,
                                        key: "y",
                                        index: 70
                                    }, {
                                        value: 100,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "y",
                                        index: 77
                                    }, {
                                        value: 100,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 12,
                                        key: "y",
                                        index: 108
                                    }, {
                                        value: 500,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "y",
                                        index: 120
                                    } ],
                                    scaleY: [ {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleY",
                                        index: 41
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleY",
                                        index: 51
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "scaleY",
                                        index: 64
                                    }, {
                                        value: 2.5,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleY",
                                        index: 70
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleY",
                                        index: 77
                                    }, {
                                        value: 1,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 12,
                                        key: "scaleY",
                                        index: 108
                                    }, {
                                        value: 3.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "scaleY",
                                        index: 120
                                    } ],
                                    scaleX: [ {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 41
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleX",
                                        index: 51
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 64
                                    }, {
                                        value: 2.5,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 70
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "scaleX",
                                        index: 77
                                    }, {
                                        value: 1,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 108
                                    }, {
                                        value: 3.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "scaleX",
                                        index: 120
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 12,
                                        label: "hyStormSound",
                                        key: "alpha",
                                        index: 41
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 12,
                                        key: "alpha",
                                        index: 51
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 12,
                                        key: "alpha",
                                        index: 108
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 12,
                                        key: "alpha",
                                        index: 120
                                    } ]
                                }
                            }, {
                                target: 13,
                                keyframes: {
                                    x: [ {
                                        value: -500,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: -500,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 13,
                                        key: "x",
                                        index: 49
                                    }, {
                                        value: -150,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "x",
                                        index: 59
                                    }, {
                                        value: -200,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 13,
                                        key: "x",
                                        index: 64
                                    }, {
                                        value: -350,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 13,
                                        key: "x",
                                        index: 70
                                    }, {
                                        value: -100,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "x",
                                        index: 77
                                    }, {
                                        value: -100,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 13,
                                        key: "x",
                                        index: 108
                                    }, {
                                        value: -500,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 13,
                                        key: "x",
                                        index: 120
                                    } ],
                                    scaleY: [ {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 13,
                                        key: "scaleY",
                                        index: 49
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "scaleY",
                                        index: 59
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 13,
                                        key: "scaleY",
                                        index: 64
                                    }, {
                                        value: 2.5,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 13,
                                        key: "scaleY",
                                        index: 70
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "scaleY",
                                        index: 77
                                    }, {
                                        value: 1,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 13,
                                        key: "scaleY",
                                        index: 108
                                    }, {
                                        value: 3.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 13,
                                        key: "scaleY",
                                        index: 120
                                    } ],
                                    scaleX: [ {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 3,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 13,
                                        key: "scaleX",
                                        index: 49
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "scaleX",
                                        index: 59
                                    }, {
                                        value: 1.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 13,
                                        key: "scaleX",
                                        index: 64
                                    }, {
                                        value: 2.5,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 13,
                                        key: "scaleX",
                                        index: 70
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "scaleX",
                                        index: 77
                                    }, {
                                        value: 1,
                                        tweenMethod: "backIn",
                                        tween: true,
                                        target: 13,
                                        key: "scaleX",
                                        index: 108
                                    }, {
                                        value: 3.5,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 13,
                                        key: "scaleX",
                                        index: 120
                                    } ],
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 13,
                                        label: "hyStormSound",
                                        key: "alpha",
                                        index: 49
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 13,
                                        key: "alpha",
                                        index: 59
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 13,
                                        key: "alpha",
                                        index: 108
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 13,
                                        key: "alpha",
                                        index: 120
                                    } ]
                                }
                            } ],
                            name: "ani1",
                            id: 1,
                            frameRate: 24,
                            action: 1
                        } ],
                        loadList: [ "hongYun/lyfb_zi1.png", "hongYun/lyfb_zi2.png", "hongYun/lyfb_zi3.png", "hongYun/lyfb_zi4.png", "hongYun/hy_wait_1.png" ],
                        loadList3D: []
                    };
                    return hongYunRotationUI;
                }(Laya.View);
                roomScene.hongYunRotationUI = hongYunRotationUI;
                REG("ui.roomScene.hongYunRotationUI", hongYunRotationUI);
                var JackpotAccountUI = function(_super) {
                    __extends(JackpotAccountUI, _super);
                    function JackpotAccountUI() {
                        return _super.call(this) || this;
                    }
                    JackpotAccountUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(JackpotAccountUI.uiView);
                    };
                    JackpotAccountUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                y: 375,
                                x: 815,
                                width: 1630,
                                var: "box_dialog",
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 38,
                            child: [ {
                                type: "Image",
                                props: {
                                    width: 5e3,
                                    var: "black_bg",
                                    skin: "basePic/img_black_bg.png",
                                    height: 1e3,
                                    centerY: 0,
                                    centerX: 0,
                                    alpha: .8
                                },
                                compId: 41
                            }, {
                                type: "Box",
                                props: {
                                    width: 1,
                                    var: "box_goldAni",
                                    height: 1,
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 42
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png" ],
                        loadList3D: []
                    };
                    return JackpotAccountUI;
                }(Laya.View);
                roomScene.JackpotAccountUI = JackpotAccountUI;
                REG("ui.roomScene.JackpotAccountUI", JackpotAccountUI);
                var PearlDialogUI = function(_super) {
                    __extends(PearlDialogUI, _super);
                    function PearlDialogUI() {
                        return _super.call(this) || this;
                    }
                    PearlDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(PearlDialogUI.uiView);
                    };
                    PearlDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            y: 0,
                            x: 0,
                            width: 1630,
                            isShowEffect: false,
                            isPopupCenter: false,
                            height: 750,
                            centerY: 0,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                width: 1630,
                                var: "box_dialog",
                                mouseThrough: true,
                                mouseEnabled: true,
                                height: 750,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Image",
                                props: {
                                    skin: "pearl/img_pearl_bg.jpg",
                                    centerY: 0,
                                    centerX: 0
                                },
                                compId: 6
                            }, {
                                type: "Image",
                                props: {
                                    y: -210,
                                    var: "image_score",
                                    skin: "pearl/image_nameCard.png",
                                    centerX: 0
                                },
                                compId: 51,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 26,
                                        x: 106,
                                        skin: "pearl/image_zshy.png"
                                    },
                                    compId: 52
                                }, {
                                    type: "Image",
                                    props: {
                                        y: 125,
                                        x: 105,
                                        var: "img_goldCoin",
                                        skin: "firstPic/icon_goldCoin.png",
                                        scaleY: .63,
                                        scaleX: .63
                                    },
                                    compId: 53
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 146,
                                        x: 222,
                                        width: 426,
                                        var: "text_score",
                                        valign: "top",
                                        text: "20000000",
                                        scaleY: .35,
                                        scaleX: .35,
                                        height: 81,
                                        font: "numberFont1",
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 54
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 0,
                                    width: 1334,
                                    var: "box_shell",
                                    mouseThrough: true,
                                    mouseEnabled: true,
                                    height: 750,
                                    centerX: 0
                                },
                                compId: 56,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 187,
                                        x: 290,
                                        width: 165,
                                        var: "box_shell_0",
                                        mouseThrough: true,
                                        mouseEnabled: true,
                                        height: 181,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 7
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 324,
                                        x: 472,
                                        width: 165,
                                        var: "box_shell_1",
                                        mouseThrough: true,
                                        mouseEnabled: true,
                                        height: 181,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 37
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 265,
                                        x: 831,
                                        width: 165,
                                        var: "box_shell_2",
                                        mouseThrough: true,
                                        mouseEnabled: true,
                                        height: 181,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 43
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 172,
                                        x: 1030,
                                        width: 165,
                                        var: "box_shell_3",
                                        mouseThrough: true,
                                        mouseEnabled: true,
                                        height: 181,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 49
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 452,
                                        x: 228,
                                        width: 165,
                                        var: "box_shell_4",
                                        mouseThrough: true,
                                        mouseEnabled: true,
                                        height: 181,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 47
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 576,
                                        x: 505,
                                        width: 165,
                                        var: "box_shell_5",
                                        mouseThrough: true,
                                        mouseEnabled: true,
                                        height: 181,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 45
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 459,
                                        x: 697,
                                        width: 165,
                                        var: "box_shell_6",
                                        mouseThrough: true,
                                        mouseEnabled: true,
                                        height: 181,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 31
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 587,
                                        x: 898,
                                        width: 165,
                                        var: "box_shell_7",
                                        mouseThrough: true,
                                        mouseEnabled: true,
                                        height: 181,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 39
                                }, {
                                    type: "Box",
                                    props: {
                                        y: 439,
                                        x: 1103,
                                        width: 165,
                                        var: "box_shell_8",
                                        mouseThrough: true,
                                        mouseEnabled: true,
                                        height: 181,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 41
                                } ]
                            }, {
                                type: "Image",
                                props: {
                                    skin: "pearl/image_gameFinish.png",
                                    scaleY: 0,
                                    scaleX: 0,
                                    mouseEnabled: false,
                                    centerY: 0,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 60
                            }, {
                                type: "Box",
                                props: {
                                    y: 714,
                                    height: 25,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5,
                                    alpha: 0
                                },
                                compId: 61,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 0,
                                        x: 40,
                                        var: "text_tips_0",
                                        text: "开启贝壳后若出现",
                                        strokeColor: "#004b6e",
                                        stroke: 3,
                                        fontSize: 25,
                                        font: "SimHei",
                                        color: "#85efff",
                                        bold: true
                                    },
                                    compId: 66
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 0,
                                        x: 247,
                                        var: "text_tips_1",
                                        text: "炸弹",
                                        strokeColor: "#0b3170",
                                        stroke: 3,
                                        fontSize: 25,
                                        font: "SimHei",
                                        color: "#f34a47",
                                        bold: true
                                    },
                                    compId: 67
                                }, {
                                    type: "Image",
                                    props: {
                                        y: -6,
                                        x: 0,
                                        width: 36,
                                        skin: "common/image_tips.png",
                                        height: 37
                                    },
                                    compId: 63
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 51,
                                keyframes: {
                                    y: [ {
                                        value: -210,
                                        tweenMethod: "bounceOut",
                                        tween: true,
                                        target: 51,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 51,
                                        key: "y",
                                        index: 24
                                    } ]
                                }
                            } ],
                            name: "scoreBoardDown",
                            id: 1,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 60,
                                keyframes: {
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 60,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 60,
                                        key: "scaleY",
                                        index: 16
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 60,
                                        label: "gameClose",
                                        key: "scaleY",
                                        index: 32
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 60,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 60,
                                        key: "scaleX",
                                        index: 16
                                    } ]
                                }
                            } ],
                            name: "gameOverAni",
                            id: 2,
                            frameRate: 24,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 61,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "quadInOut",
                                        tween: true,
                                        target: 61,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "quadInOut",
                                        tween: false,
                                        target: 61,
                                        key: "alpha",
                                        index: 20
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 61,
                                        key: "alpha",
                                        index: 35
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 61,
                                        key: "alpha",
                                        index: 55
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 61,
                                        key: "alpha",
                                        index: 70
                                    } ]
                                }
                            } ],
                            name: "tipsShine",
                            id: 3,
                            frameRate: 24,
                            action: 0
                        } ],
                        loadList: [ "pearl/img_pearl_bg.jpg", "pearl/image_nameCard.png", "pearl/image_zshy.png", "firstPic/icon_goldCoin.png", "pearl/image_gameFinish.png", "common/image_tips.png" ],
                        loadList3D: []
                    };
                    return PearlDialogUI;
                }(Laya.Dialog);
                roomScene.PearlDialogUI = PearlDialogUI;
                REG("ui.roomScene.PearlDialogUI", PearlDialogUI);
                var PopRewardViewUI = function(_super) {
                    __extends(PopRewardViewUI, _super);
                    function PopRewardViewUI() {
                        return _super.call(this) || this;
                    }
                    PopRewardViewUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(PopRewardViewUI.uiView);
                    };
                    PopRewardViewUI.uiView = {
                        type: "View",
                        props: {
                            width: 992,
                            height: 258
                        },
                        compId: 2,
                        child: [ {
                            type: "Box",
                            props: {
                                width: 992,
                                var: "boxReward",
                                height: 258,
                                centerY: 0,
                                centerX: 0
                            },
                            compId: 9,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 129,
                                    width: 496,
                                    skin: "dragonBall/image_settlement.png",
                                    height: 258,
                                    centerX: -248,
                                    anchorY: .5,
                                    anchorX: 1
                                },
                                compId: 5
                            }, {
                                type: "Image",
                                props: {
                                    y: 129,
                                    skin: "dragonBall/image_settlement.png",
                                    scaleX: -1,
                                    centerX: 247,
                                    anchorY: .5,
                                    anchorX: 1
                                },
                                compId: 4
                            }, {
                                type: "Image",
                                props: {
                                    y: -46,
                                    skin: "common/img_huod_1.png",
                                    centerX: 0
                                },
                                compId: 6
                            }, {
                                type: "Label",
                                props: {
                                    y: 79,
                                    width: 509,
                                    text: "60000000",
                                    name: "lblCount",
                                    height: 90,
                                    font: "numberFont4",
                                    centerX: 0,
                                    align: "center"
                                },
                                compId: 7
                            } ]
                        } ],
                        loadList: [ "dragonBall/image_settlement.png", "common/img_huod_1.png" ],
                        loadList3D: []
                    };
                    return PopRewardViewUI;
                }(Laya.View);
                roomScene.PopRewardViewUI = PopRewardViewUI;
                REG("ui.roomScene.PopRewardViewUI", PopRewardViewUI);
                var RoomJackpotNodeUI = function(_super) {
                    __extends(RoomJackpotNodeUI, _super);
                    function RoomJackpotNodeUI() {
                        return _super.call(this) || this;
                    }
                    RoomJackpotNodeUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(RoomJackpotNodeUI.uiView);
                    };
                    RoomJackpotNodeUI.uiView = {
                        type: "View",
                        props: {
                            width: 1630,
                            mouseThrough: true,
                            mouseEnabled: true,
                            height: 750,
                            centerX: 0
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                y: 0,
                                width: 1630,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 750,
                                centerX: 0,
                                alpha: .05
                            },
                            compId: 36
                        }, {
                            type: "Image",
                            props: {
                                y: 75,
                                width: 254,
                                visible: false,
                                var: "img_pass",
                                skin: "jackpotPool/img_jackpot_3.png",
                                sizeGrid: "17,20,17,20",
                                mouseEnabled: false,
                                height: 82,
                                centerX: 0,
                                anchorY: -.1,
                                anchorX: .5
                            },
                            compId: 7,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -15,
                                    skin: "jackpotPool/img_jackpot_2.png",
                                    centerX: 0
                                },
                                compId: 8
                            }, {
                                type: "Image",
                                props: {
                                    y: 15,
                                    x: 25,
                                    skin: "jackpotPool/img_jackpot_4.png"
                                },
                                compId: 9
                            }, {
                                type: "Label",
                                props: {
                                    y: 6,
                                    x: 106,
                                    width: 103,
                                    valign: "middle",
                                    text: "炮倍已达\\n彩金门槛",
                                    strokeColor: "#0b3170",
                                    stroke: 3.5,
                                    leading: 3,
                                    height: 74,
                                    fontSize: 25,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true
                                },
                                compId: 10
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: 75,
                                width: 254,
                                visible: false,
                                var: "img_fail",
                                skin: "jackpotPool/img_jackpot_6.png",
                                sizeGrid: "17,20,17,20",
                                mouseEnabled: false,
                                height: 82,
                                centerX: 0,
                                anchorY: -.1,
                                anchorX: .5
                            },
                            compId: 15,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: -15,
                                    skin: "jackpotPool/img_jackpot_5.png",
                                    centerX: 0
                                },
                                compId: 16
                            }, {
                                type: "Image",
                                props: {
                                    x: 43,
                                    skin: "jackpotPool/img_jackpot_7.png",
                                    centerY: 0
                                },
                                compId: 17
                            }, {
                                type: "Label",
                                props: {
                                    y: 6,
                                    x: 73,
                                    width: 172,
                                    var: "text_failTips",
                                    valign: "middle",
                                    text: "50000炮倍以上\\n激活彩金",
                                    strokeColor: "#0b3170",
                                    stroke: 3.5,
                                    leading: 3,
                                    height: 74,
                                    fontSize: 25,
                                    font: "SimHei",
                                    color: "#ffffff",
                                    bold: true,
                                    align: "center"
                                },
                                compId: 18
                            } ]
                        }, {
                            type: "Image",
                            props: {
                                y: -14,
                                width: 300,
                                var: "img_listBg",
                                skin: "noZip/img_bg_17.png",
                                sizeGrid: "10,10,10,10",
                                height: 100,
                                centerX: 0,
                                alpha: 0
                            },
                            compId: 20,
                            child: [ {
                                type: "List",
                                props: {
                                    x: 156,
                                    width: 268,
                                    var: "playerRanking",
                                    vScrollBarSkin: "comp/vscrollbar_slider.png",
                                    height: 189,
                                    bottom: 11,
                                    anchorY: 1,
                                    anchorX: .5
                                },
                                compId: 22,
                                child: [ {
                                    type: "Box",
                                    props: {
                                        y: 0,
                                        x: 0,
                                        width: 252,
                                        renderType: "render",
                                        height: 63
                                    },
                                    compId: 23,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 3,
                                            x: 0,
                                            width: 252,
                                            skin: "jackpotPool/img_jackpot_1.png",
                                            sizeGrid: "12,14,12,14",
                                            height: 58
                                        },
                                        compId: 24
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 6,
                                            x: 4,
                                            skin: "firstPic/img_item_bg.png",
                                            scaleY: .5,
                                            scaleX: .5
                                        },
                                        compId: 25,
                                        child: [ {
                                            type: "Image",
                                            props: {
                                                y: 51,
                                                x: 53,
                                                width: 77,
                                                skin: "common/img_toux.png",
                                                scaleY: 1.2,
                                                scaleX: 1.2,
                                                name: "img_playerHead",
                                                height: 76,
                                                anchorY: .5,
                                                anchorX: .5
                                            },
                                            compId: 26,
                                            child: [ {
                                                type: "Sprite",
                                                props: {
                                                    y: 0,
                                                    x: 0,
                                                    width: 77,
                                                    texture: "firstPic/img_mask_0.png",
                                                    renderType: "mask",
                                                    height: 76
                                                },
                                                compId: 28
                                            } ]
                                        } ]
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 11,
                                            x: 65,
                                            text: "玩家新号",
                                            strokeColor: "#0b3170",
                                            stroke: 3,
                                            name: "text_playerName",
                                            fontSize: 18,
                                            font: "SimHei",
                                            color: "#ffffff",
                                            bold: true
                                        },
                                        compId: 30
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 30,
                                            x: 62,
                                            skin: "firstPic/icon_goldCoin.png",
                                            scaleY: .38,
                                            scaleX: .38
                                        },
                                        compId: 31
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 32,
                                            x: 87,
                                            width: 156,
                                            valign: "middle",
                                            text: "12,598,000",
                                            strokeColor: "#351674",
                                            stroke: 2,
                                            name: "text_playerNum",
                                            height: 20,
                                            fontSize: 20,
                                            font: "SimHei",
                                            color: "#ffec4c",
                                            bold: true,
                                            align: "left"
                                        },
                                        compId: 32
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 11,
                                            x: 195,
                                            width: 146,
                                            skin: "common/img_vip.png",
                                            scaleY: .22,
                                            scaleX: .22,
                                            rotation: 0,
                                            height: 86
                                        },
                                        compId: 33
                                    }, {
                                        type: "Label",
                                        props: {
                                            y: 11,
                                            x: 226,
                                            width: 100,
                                            text: "2",
                                            scaleY: .22,
                                            scaleX: .22,
                                            name: "text_vipGrade",
                                            height: 80,
                                            font: "numberFont1",
                                            align: "center"
                                        },
                                        compId: 35
                                    } ]
                                } ]
                            } ]
                        }, {
                            type: "Button",
                            props: {
                                zOrder: 10,
                                y: 0,
                                width: 264,
                                var: "btn_jackpot",
                                stateNum: 1,
                                skin: "jackpotPool/img_jackpot_9.png",
                                sizeGrid: "0,50,0,50",
                                mouseEnabled: true,
                                hitTestPrior: true,
                                height: 54,
                                centerX: 0
                            },
                            compId: 3,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 39,
                                    x: 112,
                                    skin: "jackpotPool/img_jackpot_8.png",
                                    centerX: 0
                                },
                                compId: 5
                            }, {
                                type: "Label",
                                props: {
                                    width: 444,
                                    var: "text_jackpotNum",
                                    text: "89,000,000",
                                    scaleY: .34,
                                    scaleX: .34,
                                    height: 87,
                                    font: "numberFont1",
                                    centerY: -4,
                                    centerX: 0,
                                    align: "center"
                                },
                                compId: 6
                            } ]
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "jackpotPool/img_jackpot_3.png", "jackpotPool/img_jackpot_2.png", "jackpotPool/img_jackpot_4.png", "jackpotPool/img_jackpot_6.png", "jackpotPool/img_jackpot_5.png", "jackpotPool/img_jackpot_7.png", "noZip/img_bg_17.png", "comp/vscrollbar_slider.png", "jackpotPool/img_jackpot_1.png", "firstPic/img_item_bg.png", "common/img_toux.png", "firstPic/img_mask_0.png", "firstPic/icon_goldCoin.png", "common/img_vip.png", "jackpotPool/img_jackpot_9.png", "jackpotPool/img_jackpot_8.png" ],
                        loadList3D: []
                    };
                    return RoomJackpotNodeUI;
                }(Laya.View);
                roomScene.RoomJackpotNodeUI = RoomJackpotNodeUI;
                REG("ui.roomScene.RoomJackpotNodeUI", RoomJackpotNodeUI);
                var TreasureBoxDialogUI = function(_super) {
                    __extends(TreasureBoxDialogUI, _super);
                    function TreasureBoxDialogUI() {
                        return _super.call(this) || this;
                    }
                    TreasureBoxDialogUI.prototype.createChildren = function() {
                        _super.prototype.createChildren.call(this);
                        this.createView(TreasureBoxDialogUI.uiView);
                    };
                    TreasureBoxDialogUI.uiView = {
                        type: "Dialog",
                        props: {
                            width: 1630,
                            height: 750
                        },
                        compId: 2,
                        child: [ {
                            type: "Image",
                            props: {
                                width: 5e3,
                                var: "black_bg",
                                skin: "basePic/img_black_bg.png",
                                height: 1e3,
                                centerY: 0,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5,
                                alpha: .7
                            },
                            compId: 3
                        }, {
                            type: "Box",
                            props: {
                                width: 1630,
                                visible: true,
                                var: "box_dialog",
                                height: 750,
                                centerY: 1,
                                centerX: 0,
                                anchorY: .5,
                                anchorX: .5
                            },
                            compId: 4,
                            child: [ {
                                type: "Image",
                                props: {
                                    y: 641,
                                    x: -300,
                                    var: "img_tipText",
                                    skin: "treasureBox/img_clickTips.png",
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 6
                            }, {
                                type: "Image",
                                props: {
                                    var: "img_topLight",
                                    skin: "treasureBox/img_topLight.png",
                                    centerY: -315,
                                    centerX: 0,
                                    alpha: 0
                                },
                                compId: 14
                            }, {
                                type: "Box",
                                props: {
                                    y: 437,
                                    width: 400,
                                    var: "box_treasureBox",
                                    height: 400,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 15
                            }, {
                                type: "Box",
                                props: {
                                    y: 218,
                                    width: 400,
                                    visible: false,
                                    var: "box_guide",
                                    mouseEnabled: false,
                                    height: 400,
                                    centerX: 0
                                },
                                compId: 9,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        y: 234,
                                        x: 244,
                                        skin: "firstPic/img_xins_1.png"
                                    },
                                    compId: 10
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    y: 0,
                                    width: 789,
                                    var: "box_effectCoin",
                                    scaleY: .4,
                                    scaleX: .4,
                                    height: 297,
                                    centerX: 0
                                },
                                compId: 13
                            }, {
                                type: "Image",
                                props: {
                                    y: 116,
                                    x: 630,
                                    width: 370,
                                    var: "img_scoreBg",
                                    skin: "treasureBox/img_topBg.png",
                                    sizeGrid: "0,61,0,64",
                                    height: 67,
                                    centerX: 0,
                                    alpha: 0
                                },
                                compId: 7,
                                child: [ {
                                    type: "Label",
                                    props: {
                                        y: 31,
                                        x: 184,
                                        width: 620,
                                        var: "text_score",
                                        valign: "top",
                                        text: "0",
                                        scaleY: .45,
                                        scaleX: .45,
                                        height: 88,
                                        font: "numberFont1",
                                        anchorY: .5,
                                        anchorX: .5,
                                        align: "center"
                                    },
                                    compId: 11
                                }, {
                                    type: "Label",
                                    props: {
                                        y: 79,
                                        x: 36,
                                        width: 296,
                                        var: "text_time",
                                        valign: "middle",
                                        text: "倒计时 10 秒",
                                        strokeColor: "#0b3170",
                                        stroke: 4,
                                        height: 30,
                                        fontSize: 30,
                                        font: "SimHei",
                                        color: "#75e0ff",
                                        bold: true,
                                        align: "center"
                                    },
                                    compId: 19
                                } ]
                            }, {
                                type: "Box",
                                props: {
                                    width: 500,
                                    height: 240,
                                    centerY: -256,
                                    centerX: 0,
                                    anchorY: .5,
                                    anchorX: .5
                                },
                                compId: 16,
                                child: [ {
                                    type: "Image",
                                    props: {
                                        visible: false,
                                        skin: "treasureBox/img_start.png",
                                        scaleY: 0,
                                        scaleX: 0,
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 0
                                    },
                                    compId: 17
                                }, {
                                    type: "Label",
                                    props: {
                                        width: 50,
                                        visible: false,
                                        valign: "top",
                                        text: "3",
                                        scaleY: 2.220446049250313e-16,
                                        scaleX: 2.220446049250313e-16,
                                        height: 84,
                                        font: "numberFont1",
                                        centerY: 0,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5,
                                        alpha: 1,
                                        align: "center"
                                    },
                                    compId: 18
                                }, {
                                    type: "Box",
                                    props: {
                                        width: 458,
                                        var: "box_tipName",
                                        scaleY: 0,
                                        scaleX: 0,
                                        height: 105,
                                        centerY: 30,
                                        centerX: 0,
                                        anchorY: .5,
                                        anchorX: .5
                                    },
                                    compId: 24,
                                    child: [ {
                                        type: "Image",
                                        props: {
                                            y: 13,
                                            x: 0,
                                            skin: "common/img_title_4.png"
                                        },
                                        compId: 23
                                    }, {
                                        type: "Image",
                                        props: {
                                            y: 53,
                                            x: 229,
                                            visible: true,
                                            skin: "treasureBox/img_boxName.png",
                                            centerY: 0,
                                            centerX: 0,
                                            anchorY: .5,
                                            anchorX: .5,
                                            alpha: 1
                                        },
                                        compId: 21
                                    } ]
                                } ]
                            } ]
                        } ],
                        animations: [ {
                            nodes: [ {
                                target: 10,
                                keyframes: {
                                    y: [ {
                                        value: 215,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 0
                                    }, {
                                        value: 200,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 5
                                    }, {
                                        value: 215,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "y",
                                        index: 10
                                    } ],
                                    x: [ {
                                        value: 215,
                                        tweenMethod: "quadIn",
                                        tween: true,
                                        target: 10,
                                        key: "x",
                                        index: 0
                                    }, {
                                        value: 200,
                                        tweenMethod: "quadOut",
                                        tween: true,
                                        target: 10,
                                        key: "x",
                                        index: 5
                                    }, {
                                        value: 215,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 10,
                                        key: "x",
                                        index: 10
                                    } ]
                                }
                            }, {
                                target: 9,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 9,
                                        key: "visible",
                                        index: 0
                                    } ]
                                }
                            } ],
                            name: "guideClick",
                            id: 1,
                            frameRate: 48,
                            action: 0
                        }, {
                            nodes: [ {
                                target: 17,
                                keyframes: {
                                    visible: [ {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 17,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 17,
                                        key: "visible",
                                        index: 24
                                    } ],
                                    scaleY: [ {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 17,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 17,
                                        key: "scaleY",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleY",
                                        index: 11
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleY",
                                        index: 23
                                    } ],
                                    scaleX: [ {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 17,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 17,
                                        key: "scaleX",
                                        index: 8
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleX",
                                        index: 11
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "scaleX",
                                        index: 23
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 17,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "strongOut",
                                        tween: true,
                                        target: 17,
                                        key: "alpha",
                                        index: 13
                                    }, {
                                        value: .02,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 17,
                                        key: "alpha",
                                        index: 23
                                    } ]
                                }
                            }, {
                                target: 18,
                                keyframes: {
                                    visible: [ {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "visible",
                                        index: 0
                                    }, {
                                        value: true,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "visible",
                                        index: 30
                                    }, {
                                        value: false,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "visible",
                                        index: 114
                                    } ],
                                    text: [ {
                                        value: "3",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "text",
                                        index: 0
                                    }, {
                                        value: "3",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "text",
                                        index: 30
                                    }, {
                                        value: "3",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        label: "playSound",
                                        key: "text",
                                        index: 35
                                    }, {
                                        value: "2",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "text",
                                        index: 60
                                    }, {
                                        value: "2",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        label: "playSound",
                                        key: "text",
                                        index: 65
                                    }, {
                                        value: "1",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "text",
                                        index: 90
                                    }, {
                                        value: "1",
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        label: "playSound",
                                        key: "text",
                                        index: 95
                                    } ],
                                    scaleY: [ {
                                        value: 2.220446049250313e-16,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleY",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 18,
                                        key: "scaleY",
                                        index: 30
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleY",
                                        index: 38
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleY",
                                        index: 41
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleY",
                                        index: 53
                                    }, {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 18,
                                        key: "scaleY",
                                        index: 60
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleY",
                                        index: 68
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleY",
                                        index: 71
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleY",
                                        index: 83
                                    }, {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 18,
                                        key: "scaleY",
                                        index: 90
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleY",
                                        index: 98
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleY",
                                        index: 101
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleY",
                                        index: 113
                                    } ],
                                    scaleX: [ {
                                        value: 2.220446049250313e-16,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleX",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 18,
                                        key: "scaleX",
                                        index: 30
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleX",
                                        index: 38
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleX",
                                        index: 41
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleX",
                                        index: 53
                                    }, {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 18,
                                        key: "scaleX",
                                        index: 60
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleX",
                                        index: 68
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleX",
                                        index: 71
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleX",
                                        index: 83
                                    }, {
                                        value: 0,
                                        tweenMethod: "backOut",
                                        tween: true,
                                        target: 18,
                                        key: "scaleX",
                                        index: 90
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "scaleX",
                                        index: 98
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleX",
                                        index: 101
                                    }, {
                                        value: 3,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "scaleX",
                                        index: 113
                                    } ],
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "alpha",
                                        index: 30
                                    }, {
                                        value: 1,
                                        tweenMethod: "strongOut",
                                        tween: true,
                                        target: 18,
                                        key: "alpha",
                                        index: 43
                                    }, {
                                        value: .03,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "alpha",
                                        index: 53
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "alpha",
                                        index: 54
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "alpha",
                                        index: 60
                                    }, {
                                        value: 1,
                                        tweenMethod: "quintOut",
                                        tween: true,
                                        target: 18,
                                        key: "alpha",
                                        index: 73
                                    }, {
                                        value: .03,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "alpha",
                                        index: 83
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "alpha",
                                        index: 84
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "alpha",
                                        index: 90
                                    }, {
                                        value: 1,
                                        tweenMethod: "quintOut",
                                        tween: true,
                                        target: 18,
                                        key: "alpha",
                                        index: 103
                                    }, {
                                        value: .03,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 18,
                                        key: "alpha",
                                        index: 113
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 18,
                                        key: "alpha",
                                        index: 114
                                    } ]
                                }
                            }, {
                                target: 7,
                                keyframes: {
                                    alpha: [ {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: false,
                                        target: 7,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 118
                                    }, {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 7,
                                        key: "alpha",
                                        index: 120
                                    } ]
                                }
                            }, {
                                target: 24,
                                keyframes: {
                                    alpha: [ {
                                        value: 1,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 24,
                                        key: "alpha",
                                        index: 0
                                    }, {
                                        value: 0,
                                        tweenMethod: "linearNone",
                                        tween: true,
                                        target: 24,
                                        key: "alpha",
                                        index: 2
                                    } ]
                                }
                            } ],
                            name: "readyStart",
                            id: 2,
                            frameRate: 30,
                            action: 0
                        } ],
                        loadList: [ "basePic/img_black_bg.png", "treasureBox/img_clickTips.png", "treasureBox/img_topLight.png", "firstPic/img_xins_1.png", "treasureBox/img_topBg.png", "treasureBox/img_start.png", "common/img_title_4.png", "treasureBox/img_boxName.png" ],
                        loadList3D: []
                    };
                    return TreasureBoxDialogUI;
                }(Laya.Dialog);
                roomScene.TreasureBoxDialogUI = TreasureBoxDialogUI;
                REG("ui.roomScene.TreasureBoxDialogUI", TreasureBoxDialogUI);
            })(roomScene = ui.roomScene || (ui.roomScene = {}));
        })(ui = exports.ui || (exports.ui = {}));
    }, {} ]
}, {}, [ 2 ]);